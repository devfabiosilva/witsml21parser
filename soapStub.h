/* soapStub.h
   Generated by gSOAP 2.8.129 for testh.h

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.energistics.org/energyml/data/witsmlv2"
#define SOAP_NAMESPACE_OF_ns2	"http://www.energistics.org/energyml/data/commonv2"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208129
# error "GSOAP VERSION 208129 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* testh.h:161 */
#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (11)
/* xsd:boolean */
enum xsd__boolean {
	xsd__boolean__false_ = 0,
	xsd__boolean__true_ = 1
};
#endif

/* testh.h:1079 */
#ifndef SOAP_TYPE_ns2__LegacyUnitOfMeasure
#define SOAP_TYPE_ns2__LegacyUnitOfMeasure (280)
/* ns2:LegacyUnitOfMeasure */
enum ns2__LegacyUnitOfMeasure {
	ns2__LegacyUnitOfMeasure__1000scf_x002fd = 0,
	ns2__LegacyUnitOfMeasure__1000scf_x002fmo = 1,
	ns2__LegacyUnitOfMeasure__1000scf_x002fstb = 2,
	ns2__LegacyUnitOfMeasure__1000scm = 3,
	ns2__LegacyUnitOfMeasure__1000scm_x002fd = 4,
	ns2__LegacyUnitOfMeasure__1000scm_x002fmo = 5,
	ns2__LegacyUnitOfMeasure__1000stb = 6,
	ns2__LegacyUnitOfMeasure__1000stb_x002fd = 7,
	ns2__LegacyUnitOfMeasure__1000stb_x002fmo = 8,
	ns2__LegacyUnitOfMeasure__1E6scf = 9,
	ns2__LegacyUnitOfMeasure__1E6scf_x002fd = 10,
	ns2__LegacyUnitOfMeasure__1E6scf_x002fmo = 11,
	ns2__LegacyUnitOfMeasure__1E6scf_x002fstb = 12,
	ns2__LegacyUnitOfMeasure__1E6scm = 13,
	ns2__LegacyUnitOfMeasure__1E6scm_x002fd = 14,
	ns2__LegacyUnitOfMeasure__1E6scm_x002fmo = 15,
	ns2__LegacyUnitOfMeasure__1E6stb = 16,
	ns2__LegacyUnitOfMeasure__1E6stb_x002facre = 17,
	ns2__LegacyUnitOfMeasure__1E6stb_x002facre_x002eft = 18,
	ns2__LegacyUnitOfMeasure__1E6stb_x002fd = 19,
	ns2__LegacyUnitOfMeasure__1E6stb_x002fmo = 20,
	ns2__LegacyUnitOfMeasure__1E9scf = 21,
	ns2__LegacyUnitOfMeasure__acre_x002eft_x002f1E6stb = 22,
	ns2__LegacyUnitOfMeasure__bbl_x002f1000scf = 23,
	ns2__LegacyUnitOfMeasure__bbl_x002f1E6scf = 24,
	ns2__LegacyUnitOfMeasure__bbl_x002fscf = 25,
	ns2__LegacyUnitOfMeasure__bbl_x002fstb = 26,
	ns2__LegacyUnitOfMeasure__ft3_x002fscf = 27,
	ns2__LegacyUnitOfMeasure__ft3_x002fstb = 28,
	ns2__LegacyUnitOfMeasure__galUS_x002f1000scf = 29,
	ns2__LegacyUnitOfMeasure__kg_x002fscm = 30,
	ns2__LegacyUnitOfMeasure__kscf = 31,
	ns2__LegacyUnitOfMeasure__lbm_x002f1000scf = 32,
	ns2__LegacyUnitOfMeasure__lbm_x002f1E6scf = 33,
	ns2__LegacyUnitOfMeasure__m3_x002fscm = 34,
	ns2__LegacyUnitOfMeasure__ml_x002fscm = 35,
	ns2__LegacyUnitOfMeasure__Pa_x002fscm = 36,
	ns2__LegacyUnitOfMeasure__psi_x002f1000scf = 37,
	ns2__LegacyUnitOfMeasure__psi_x002f1E6scf = 38,
	ns2__LegacyUnitOfMeasure__psia = 39,
	ns2__LegacyUnitOfMeasure__psig = 40,
	ns2__LegacyUnitOfMeasure__scf = 41,
	ns2__LegacyUnitOfMeasure__scf_x002fbbl = 42,
	ns2__LegacyUnitOfMeasure__scf_x002fd = 43,
	ns2__LegacyUnitOfMeasure__scf_x002fft2 = 44,
	ns2__LegacyUnitOfMeasure__scf_x002fft3 = 45,
	ns2__LegacyUnitOfMeasure__scf_x002fscf = 46,
	ns2__LegacyUnitOfMeasure__scf_x002fstb = 47,
	ns2__LegacyUnitOfMeasure__scm = 48,
	ns2__LegacyUnitOfMeasure__scm_x002fd = 49,
	ns2__LegacyUnitOfMeasure__scm_x002fh = 50,
	ns2__LegacyUnitOfMeasure__scm_x002fm2 = 51,
	ns2__LegacyUnitOfMeasure__scm_x002fm3 = 52,
	ns2__LegacyUnitOfMeasure__scm_x002fmo = 53,
	ns2__LegacyUnitOfMeasure__scm_x002fs = 54,
	ns2__LegacyUnitOfMeasure__scm_x002fscm = 55,
	ns2__LegacyUnitOfMeasure__scm_x002fstb = 56,
	ns2__LegacyUnitOfMeasure__stb = 57,
	ns2__LegacyUnitOfMeasure__stb_x002f1000scf = 58,
	ns2__LegacyUnitOfMeasure__stb_x002f1000scm = 59,
	ns2__LegacyUnitOfMeasure__stb_x002f1E6scf = 60,
	ns2__LegacyUnitOfMeasure__stb_x002f1E6scm = 61,
	ns2__LegacyUnitOfMeasure__stb_x002facre = 62,
	ns2__LegacyUnitOfMeasure__stb_x002fbbl = 63,
	ns2__LegacyUnitOfMeasure__stb_x002fd = 64,
	ns2__LegacyUnitOfMeasure__stb_x002fmo = 'A',
	ns2__LegacyUnitOfMeasure__stb_x002fscm = 'B',
	ns2__LegacyUnitOfMeasure__stb_x002fstb = 'C'
};
#endif

/* testh.h:1158 */
#ifndef SOAP_TYPE_ns2__UnitOfMeasure
#define SOAP_TYPE_ns2__UnitOfMeasure (281)
/* ns2:UnitOfMeasure */
enum ns2__UnitOfMeasure {
	ns2__UnitOfMeasure__A = 'A',
	ns2__UnitOfMeasure__a = 'a',
	ns2__UnitOfMeasure__B = 'B',
	ns2__UnitOfMeasure__b = 'b',
	ns2__UnitOfMeasure__C = 'C',
	ns2__UnitOfMeasure__d = 'd',
	ns2__UnitOfMeasure__D = 'D',
	ns2__UnitOfMeasure__F = 'F',
	ns2__UnitOfMeasure__g = 'g',
	ns2__UnitOfMeasure__H = 'H',
	ns2__UnitOfMeasure__h = 'h',
	ns2__UnitOfMeasure__J = 'J',
	ns2__UnitOfMeasure__K = 'K',
	ns2__UnitOfMeasure__L = 'L',
	ns2__UnitOfMeasure__m = 'm',
	ns2__UnitOfMeasure__N = 'N',
	ns2__UnitOfMeasure__O = 'O',
	ns2__UnitOfMeasure__P = 'P',
	ns2__UnitOfMeasure__S = 'S',
	ns2__UnitOfMeasure__s = 's',
	ns2__UnitOfMeasure__t = 't',
	ns2__UnitOfMeasure__T = 'T',
	ns2__UnitOfMeasure__V = 'V',
	ns2__UnitOfMeasure__W = 'W',
	ns2__UnitOfMeasure___x0025 = 'u',
	ns2__UnitOfMeasure___x0025_x005barea_x005d = 'v',
	ns2__UnitOfMeasure___x0025_x005bmass_x005d = 'w',
	ns2__UnitOfMeasure___x0025_x005bmolar_x005d = 'x',
	ns2__UnitOfMeasure___x0025_x005bvol_x005d = 'y',
	ns2__UnitOfMeasure___x0028bbl_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 'z',
	ns2__UnitOfMeasure___x0028m3_x002fd_x0029_x002f_x0028m3_x002fd_x0029 = 123,
	ns2__UnitOfMeasure___x0028m3_x002fs_x0029_x002f_x0028m3_x002fs_x0029 = 124,
	ns2__UnitOfMeasure__0_x002e001_x0020bbl_x002fft3 = 125,
	ns2__UnitOfMeasure__0_x002e001_x0020bbl_x002fm3 = 126,
	ns2__UnitOfMeasure__0_x002e001_x0020d_x002fft3 = 127,
	ns2__UnitOfMeasure__0_x002e001_x0020gal_x005bUK_x005d_x002fbbl = 128,
	ns2__UnitOfMeasure__0_x002e001_x0020gal_x005bUK_x005d_x002fgal_x005bUK_x005d = 129,
	ns2__UnitOfMeasure__0_x002e001_x0020gal_x005bUS_x005d_x002fbbl = 130,
	ns2__UnitOfMeasure__0_x002e001_x0020gal_x005bUS_x005d_x002fft3 = 131,
	ns2__UnitOfMeasure__0_x002e001_x0020gal_x005bUS_x005d_x002fgal_x005bUS_x005d = 132,
	ns2__UnitOfMeasure__0_x002e001_x0020h_x002fft = 133,
	ns2__UnitOfMeasure__0_x002e001_x0020kPa2_x002fcP = 134,
	ns2__UnitOfMeasure__0_x002e001_x0020lbm_x002fbbl = 135,
	ns2__UnitOfMeasure__0_x002e001_x0020lbm_x002fgal_x005bUK_x005d = 136,
	ns2__UnitOfMeasure__0_x002e001_x0020lbm_x002fgal_x005bUS_x005d = 137,
	ns2__UnitOfMeasure__0_x002e001_x0020psi_x002fft = 138,
	ns2__UnitOfMeasure__0_x002e001_x0020pt_x005bUK_x005d_x002fbbl = 139,
	ns2__UnitOfMeasure__0_x002e001_x0020seca = 140,
	ns2__UnitOfMeasure__0_x002e01_x0020bbl_x002fbbl = 141,
	ns2__UnitOfMeasure__0_x002e01_x0020dega_x002fft = 142,
	ns2__UnitOfMeasure__0_x002e01_x0020degF_x002fft = 143,
	ns2__UnitOfMeasure__0_x002e01_x0020dm3_x002fkm = 144,
	ns2__UnitOfMeasure__0_x002e01_x0020ft_x002fft = 145,
	ns2__UnitOfMeasure__0_x002e01_x0020grain_x002fft3 = 146,
	ns2__UnitOfMeasure__0_x002e01_x0020L_x002fkg = 147,
	ns2__UnitOfMeasure__0_x002e01_x0020L_x002fkm = 148,
	ns2__UnitOfMeasure__0_x002e01_x0020lbf_x002fft = 149,
	ns2__UnitOfMeasure__0_x002e01_x0020lbf_x002fft2 = 150,
	ns2__UnitOfMeasure__0_x002e01_x0020lbm_x002fft2 = 151,
	ns2__UnitOfMeasure__0_x002e01_x0020psi_x002fft = 152,
	ns2__UnitOfMeasure__0_x002e1_x0020ft = 153,
	ns2__UnitOfMeasure__0_x002e1_x0020ft_x005bUS_x005d = 154,
	ns2__UnitOfMeasure__0_x002e1_x0020gal_x005bUS_x005d_x002fbbl = 155,
	ns2__UnitOfMeasure__0_x002e1_x0020in = 156,
	ns2__UnitOfMeasure__0_x002e1_x0020L_x002fbbl = 157,
	ns2__UnitOfMeasure__0_x002e1_x0020lbm_x002fbbl = 158,
	ns2__UnitOfMeasure__0_x002e1_x0020pt_x005bUS_x005d_x002fbbl = 159,
	ns2__UnitOfMeasure__0_x002e1_x0020yd = 160,
	ns2__UnitOfMeasure__1_x002f_x0028kg_x002es_x0029 = 161,
	ns2__UnitOfMeasure__1_x002f16_x0020in = 162,
	ns2__UnitOfMeasure__1_x002f2_x0020ft = 163,
	ns2__UnitOfMeasure__1_x002f2_x0020ms = 164,
	ns2__UnitOfMeasure__1_x002f30_x0020cm3_x002fmin = 165,
	ns2__UnitOfMeasure__1_x002f30_x0020dega_x002fft = 166,
	ns2__UnitOfMeasure__1_x002f30_x0020dega_x002fm = 167,
	ns2__UnitOfMeasure__1_x002f30_x0020lbf_x002fm = 168,
	ns2__UnitOfMeasure__1_x002f30_x0020m_x002fm = 169,
	ns2__UnitOfMeasure__1_x002f30_x0020N_x002fm = 170,
	ns2__UnitOfMeasure__1_x002f32_x0020in = 171,
	ns2__UnitOfMeasure__1_x002f64_x0020in = 172,
	ns2__UnitOfMeasure__1_x002fa = 173,
	ns2__UnitOfMeasure__1_x002fangstrom = 174,
	ns2__UnitOfMeasure__1_x002fbar = 175,
	ns2__UnitOfMeasure__1_x002fbbl = 176,
	ns2__UnitOfMeasure__1_x002fcm = 177,
	ns2__UnitOfMeasure__1_x002fd = 178,
	ns2__UnitOfMeasure__1_x002fdegC = 179,
	ns2__UnitOfMeasure__1_x002fdegF = 180,
	ns2__UnitOfMeasure__1_x002fdegR = 181,
	ns2__UnitOfMeasure__1_x002fft = 182,
	ns2__UnitOfMeasure__1_x002fft2 = 183,
	ns2__UnitOfMeasure__1_x002fft3 = 184,
	ns2__UnitOfMeasure__1_x002fg = 185,
	ns2__UnitOfMeasure__1_x002fgal_x005bUK_x005d = 186,
	ns2__UnitOfMeasure__1_x002fgal_x005bUS_x005d = 187,
	ns2__UnitOfMeasure__1_x002fH = 188,
	ns2__UnitOfMeasure__1_x002fh = 189,
	ns2__UnitOfMeasure__1_x002fin = 190,
	ns2__UnitOfMeasure__1_x002fK = 191,
	ns2__UnitOfMeasure__1_x002fkg = 192,
	ns2__UnitOfMeasure__1_x002fkm2 = 193,
	ns2__UnitOfMeasure__1_x002fkPa = 194,
	ns2__UnitOfMeasure__1_x002fL = 195,
	ns2__UnitOfMeasure__1_x002flbf = 196,
	ns2__UnitOfMeasure__1_x002flbm = 197,
	ns2__UnitOfMeasure__1_x002fm = 198,
	ns2__UnitOfMeasure__1_x002fm2 = 199,
	ns2__UnitOfMeasure__1_x002fm3 = 200,
	ns2__UnitOfMeasure__1_x002fmi = 201,
	ns2__UnitOfMeasure__1_x002fmi2 = 202,
	ns2__UnitOfMeasure__1_x002fmin = 203,
	ns2__UnitOfMeasure__1_x002fmm = 204,
	ns2__UnitOfMeasure__1_x002fms = 205,
	ns2__UnitOfMeasure__1_x002fN = 206,
	ns2__UnitOfMeasure__1_x002fnm = 207,
	ns2__UnitOfMeasure__1_x002fPa = 208,
	ns2__UnitOfMeasure__1_x002fpPa = 209,
	ns2__UnitOfMeasure__1_x002fpsi = 210,
	ns2__UnitOfMeasure__1_x002fs = 211,
	ns2__UnitOfMeasure__1_x002fupsi = 212,
	ns2__UnitOfMeasure__1_x002fus = 213,
	ns2__UnitOfMeasure__1_x002fuV = 214,
	ns2__UnitOfMeasure__1_x002fV = 215,
	ns2__UnitOfMeasure__1_x002fwk = 216,
	ns2__UnitOfMeasure__1_x002fyd = 217,
	ns2__UnitOfMeasure__10_x0020ft = 218,
	ns2__UnitOfMeasure__10_x0020in = 219,
	ns2__UnitOfMeasure__10_x0020km = 220,
	ns2__UnitOfMeasure__10_x0020kN = 221,
	ns2__UnitOfMeasure__10_x0020Mg_x002fm3 = 222,
	ns2__UnitOfMeasure__100_x0020ft = 223,
	ns2__UnitOfMeasure__100_x0020ft_x002fdega = 224,
	ns2__UnitOfMeasure__100_x0020ka_x005bt_x005d = 225,
	ns2__UnitOfMeasure__100_x0020km = 226,
	ns2__UnitOfMeasure__1000_x0020bbl = 227,
	ns2__UnitOfMeasure__1000_x0020bbl_x002eft_x002fd = 228,
	ns2__UnitOfMeasure__1000_x0020bbl_x002fd = 229,
	ns2__UnitOfMeasure__1000_x0020ft = 230,
	ns2__UnitOfMeasure__1000_x0020ft_x002fh = 231,
	ns2__UnitOfMeasure__1000_x0020ft_x002fs = 232,
	ns2__UnitOfMeasure__1000_x0020ft3 = 233,
	ns2__UnitOfMeasure__1000_x0020ft3_x002f_x0028d_x002eft_x0029 = 234,
	ns2__UnitOfMeasure__1000_x0020ft3_x002f_x0028psi_x002ed_x0029 = 235,
	ns2__UnitOfMeasure__1000_x0020ft3_x002fbbl = 236,
	ns2__UnitOfMeasure__1000_x0020ft3_x002fd = 237,
	ns2__UnitOfMeasure__1000_x0020gal_x005bUK_x005d = 238,
	ns2__UnitOfMeasure__1000_x0020gal_x005bUS_x005d = 239,
	ns2__UnitOfMeasure__1000_x0020lbf_x002eft = 240,
	ns2__UnitOfMeasure__1000_x0020m3 = 241,
	ns2__UnitOfMeasure__1000_x0020m3_x002f_x0028d_x002em_x0029 = 242,
	ns2__UnitOfMeasure__1000_x0020m3_x002f_x0028h_x002em_x0029 = 243,
	ns2__UnitOfMeasure__1000_x0020m3_x002fd = 244,
	ns2__UnitOfMeasure__1000_x0020m3_x002fh = 245,
	ns2__UnitOfMeasure__1000_x0020m3_x002fm3 = 246,
	ns2__UnitOfMeasure__1000_x0020m4_x002fd = 247,
	ns2__UnitOfMeasure__1E12_x0020ft3 = 248,
	ns2__UnitOfMeasure__1E6_x0020_x0028ft3_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 249,
	ns2__UnitOfMeasure__1E_6_x0020acre_x002eft_x002fbbl = 250,
	ns2__UnitOfMeasure__1E6_x0020bbl = 251,
	ns2__UnitOfMeasure__1E6_x0020bbl_x002f_x0028acre_x002eft_x0029 = 252,
	ns2__UnitOfMeasure__1E6_x0020bbl_x002facre = 253,
	ns2__UnitOfMeasure__1E6_x0020bbl_x002fd = 254,
	ns2__UnitOfMeasure__1E_6_x0020bbl_x002fft3 = 255,
	ns2__UnitOfMeasure__1E_6_x0020bbl_x002fm3 = 256,
	ns2__UnitOfMeasure__1E6_x0020Btu_x005bIT_x005d = 257,
	ns2__UnitOfMeasure__1E6_x0020Btu_x005bIT_x005d_x002fh = 258,
	ns2__UnitOfMeasure__1E6_x0020ft3 = 259,
	ns2__UnitOfMeasure__1E6_x0020ft3_x002f_x0028acre_x002eft_x0029 = 260,
	ns2__UnitOfMeasure__1E6_x0020ft3_x002fbbl = 261,
	ns2__UnitOfMeasure__1E6_x0020ft3_x002fd = 262,
	ns2__UnitOfMeasure__1E_6_x0020gal_x005bUS_x005d = 263,
	ns2__UnitOfMeasure__1E6_x0020lbm_x002fa = 264,
	ns2__UnitOfMeasure__1E6_x0020m3 = 265,
	ns2__UnitOfMeasure__1E_6_x0020m3_x002f_x0028m3_x002edegC_x0029 = 266,
	ns2__UnitOfMeasure__1E_6_x0020m3_x002f_x0028m3_x002edegF_x0029 = 267,
	ns2__UnitOfMeasure__1E6_x0020m3_x002fd = 268,
	ns2__UnitOfMeasure__1E_9_x00201_x002fft = 269,
	ns2__UnitOfMeasure__1E9_x0020bbl = 270,
	ns2__UnitOfMeasure__1E9_x0020ft3 = 271,
	ns2__UnitOfMeasure__30_x0020ft = 272,
	ns2__UnitOfMeasure__30_x0020ft_x002fdega = 273,
	ns2__UnitOfMeasure__30_x0020m = 274,
	ns2__UnitOfMeasure__30_x0020m_x002fdega = 275,
	ns2__UnitOfMeasure__A_x002eh = 276,
	ns2__UnitOfMeasure__A_x002em2 = 277,
	ns2__UnitOfMeasure__A_x002es = 278,
	ns2__UnitOfMeasure__A_x002es_x002fkg = 279,
	ns2__UnitOfMeasure__A_x002es_x002fm3 = 280,
	ns2__UnitOfMeasure__A_x002fcm2 = 281,
	ns2__UnitOfMeasure__A_x002fft2 = 282,
	ns2__UnitOfMeasure__A_x002fm = 283,
	ns2__UnitOfMeasure__A_x002fm2 = 284,
	ns2__UnitOfMeasure__A_x002fmm = 285,
	ns2__UnitOfMeasure__A_x002fmm2 = 286,
	ns2__UnitOfMeasure__a_x005bt_x005d = 287,
	ns2__UnitOfMeasure__acre = 288,
	ns2__UnitOfMeasure__acre_x002eft = 289,
	ns2__UnitOfMeasure__ag = 290,
	ns2__UnitOfMeasure__aJ = 291,
	ns2__UnitOfMeasure__angstrom = 292,
	ns2__UnitOfMeasure__at = 293,
	ns2__UnitOfMeasure__atm = 294,
	ns2__UnitOfMeasure__atm_x002fft = 295,
	ns2__UnitOfMeasure__atm_x002fh = 296,
	ns2__UnitOfMeasure__atm_x002fhm = 297,
	ns2__UnitOfMeasure__atm_x002fm = 298,
	ns2__UnitOfMeasure__B_x002eW = 299,
	ns2__UnitOfMeasure__b_x002fcm3 = 300,
	ns2__UnitOfMeasure__B_x002fm = 301,
	ns2__UnitOfMeasure__B_x002fO = 302,
	ns2__UnitOfMeasure__bar = 303,
	ns2__UnitOfMeasure__bar_x002f_x00281000m3_x002fday_x0029 = 304,
	ns2__UnitOfMeasure__bar_x002f_x00281000m3_x002fday_x00292 = 305,
	ns2__UnitOfMeasure__bar_x002f_x0028m3_x002fday_x0029 = 306,
	ns2__UnitOfMeasure__bar_x002f_x0028m3_x002fday_x00292 = 307,
	ns2__UnitOfMeasure__bar_x002fh = 308,
	ns2__UnitOfMeasure__bar_x002fkm = 309,
	ns2__UnitOfMeasure__bar_x002fm = 310,
	ns2__UnitOfMeasure__bar2 = 311,
	ns2__UnitOfMeasure__bar2_x002fcP = 312,
	ns2__UnitOfMeasure__bbl = 313,
	ns2__UnitOfMeasure__bbl_x002f_x0028acre_x002eft_x0029 = 314,
	ns2__UnitOfMeasure__bbl_x002f_x0028d_x002eacre_x002eft_x0029 = 315,
	ns2__UnitOfMeasure__bbl_x002f_x0028d_x002eft_x0029 = 316,
	ns2__UnitOfMeasure__bbl_x002f_x0028ft_x002epsi_x002ed_x0029 = 317,
	ns2__UnitOfMeasure__bbl_x002f_x0028kPa_x002ed_x0029 = 318,
	ns2__UnitOfMeasure__bbl_x002f_x0028psi_x002ed_x0029 = 319,
	ns2__UnitOfMeasure__bbl_x002facre = 320,
	ns2__UnitOfMeasure__bbl_x002fbbl = 321,
	ns2__UnitOfMeasure__bbl_x002fd = 322,
	ns2__UnitOfMeasure__bbl_x002fd2 = 323,
	ns2__UnitOfMeasure__bbl_x002fft = 324,
	ns2__UnitOfMeasure__bbl_x002fft3 = 325,
	ns2__UnitOfMeasure__bbl_x002fh = 326,
	ns2__UnitOfMeasure__bbl_x002fh2 = 327,
	ns2__UnitOfMeasure__bbl_x002fin = 328,
	ns2__UnitOfMeasure__bbl_x002fm3 = 329,
	ns2__UnitOfMeasure__bbl_x002fmi = 330,
	ns2__UnitOfMeasure__bbl_x002fmin = 331,
	ns2__UnitOfMeasure__bbl_x002fpsi = 332,
	ns2__UnitOfMeasure__bbl_x002fton_x005bUK_x005d = 333,
	ns2__UnitOfMeasure__bbl_x002fton_x005bUS_x005d = 334,
	ns2__UnitOfMeasure__Bd = 335,
	ns2__UnitOfMeasure__bit = 336,
	ns2__UnitOfMeasure__bit_x002fs = 337,
	ns2__UnitOfMeasure__Bq = 338,
	ns2__UnitOfMeasure__Bq_x002fkg = 339,
	ns2__UnitOfMeasure__Bq_x002fm3 = 340,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d = 341,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002ein_x002f_x0028h_x002eft2_x002edegF_x0029 = 342,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft_x002edegF_x0029 = 343,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x0029 = 344,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edegF_x0029 = 345,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edegR_x0029 = 346,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x0029 = 347,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x002edegF_x0029 = 348,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028h_x002em2_x002edegC_x0029 = 349,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028hp_x002eh_x0029 = 350,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028lbm_x002edegF_x0029 = 351,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028lbm_x002edegR_x0029 = 352,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028lbmol_x002edegF_x0029 = 353,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x0029 = 354,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x002edegF_x0029 = 355,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x0029 = 356,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x002edegF_x0029 = 357,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fbbl = 358,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fft3 = 359,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fgal_x005bUK_x005d = 360,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fgal_x005bUS_x005d = 361,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fh = 362,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002flbm = 363,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002flbmol = 364,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fmin = 365,
	ns2__UnitOfMeasure__Btu_x005bIT_x005d_x002fs = 366,
	ns2__UnitOfMeasure__Btu_x005bth_x005d = 367,
	ns2__UnitOfMeasure__Btu_x005bUK_x005d = 368,
	ns2__UnitOfMeasure__byte = 369,
	ns2__UnitOfMeasure__byte_x002fs = 370,
	ns2__UnitOfMeasure__C_x002em = 371,
	ns2__UnitOfMeasure__C_x002fcm2 = 372,
	ns2__UnitOfMeasure__C_x002fcm3 = 373,
	ns2__UnitOfMeasure__C_x002fg = 374,
	ns2__UnitOfMeasure__C_x002fkg = 375,
	ns2__UnitOfMeasure__C_x002fm2 = 376,
	ns2__UnitOfMeasure__C_x002fm3 = 377,
	ns2__UnitOfMeasure__C_x002fmm2 = 378,
	ns2__UnitOfMeasure__C_x002fmm3 = 379,
	ns2__UnitOfMeasure__ca = 380,
	ns2__UnitOfMeasure__cA = 381,
	ns2__UnitOfMeasure__cal_x005bIT_x005d = 382,
	ns2__UnitOfMeasure__cal_x005bth_x005d = 383,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028g_x002eK_x0029 = 384,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028h_x002ecm_x002edegC_x0029 = 385,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x0029 = 386,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x002edegC_x0029 = 387,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028h_x002ecm3_x0029 = 388,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028mol_x002edegC_x0029 = 389,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028s_x002ecm_x002edegC_x0029 = 390,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028s_x002ecm2_x002edegC_x0029 = 391,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002f_x0028s_x002ecm3_x0029 = 392,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fcm3 = 393,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fg = 394,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fh = 395,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fkg = 396,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002flbm = 397,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fmL = 398,
	ns2__UnitOfMeasure__cal_x005bth_x005d_x002fmm3 = 399,
	ns2__UnitOfMeasure__cC = 400,
	ns2__UnitOfMeasure__ccal_x005bth_x005d = 401,
	ns2__UnitOfMeasure__ccgr = 402,
	ns2__UnitOfMeasure__cd = 403,
	ns2__UnitOfMeasure__cd_x002fm2 = 404,
	ns2__UnitOfMeasure__cEuc = 405,
	ns2__UnitOfMeasure__ceV = 406,
	ns2__UnitOfMeasure__cF = 407,
	ns2__UnitOfMeasure__cg = 408,
	ns2__UnitOfMeasure__cgauss = 409,
	ns2__UnitOfMeasure__cgr = 410,
	ns2__UnitOfMeasure__cGy = 411,
	ns2__UnitOfMeasure__cH = 412,
	ns2__UnitOfMeasure__chain = 413,
	ns2__UnitOfMeasure__chain_x005bBnA_x005d = 414,
	ns2__UnitOfMeasure__chain_x005bBnB_x005d = 415,
	ns2__UnitOfMeasure__chain_x005bCla_x005d = 416,
	ns2__UnitOfMeasure__chain_x005bInd37_x005d = 417,
	ns2__UnitOfMeasure__chain_x005bSe_x005d = 418,
	ns2__UnitOfMeasure__chain_x005bSeT_x005d = 419,
	ns2__UnitOfMeasure__chain_x005bUS_x005d = 420,
	ns2__UnitOfMeasure__cHz = 421,
	ns2__UnitOfMeasure__Ci = 422,
	ns2__UnitOfMeasure__cJ = 423,
	ns2__UnitOfMeasure__cm = 424,
	ns2__UnitOfMeasure__cm_x002fa = 425,
	ns2__UnitOfMeasure__cm_x002fs = 426,
	ns2__UnitOfMeasure__cm_x002fs2 = 427,
	ns2__UnitOfMeasure__cm2 = 428,
	ns2__UnitOfMeasure__cm2_x002fg = 429,
	ns2__UnitOfMeasure__cm2_x002fs = 430,
	ns2__UnitOfMeasure__cm3 = 431,
	ns2__UnitOfMeasure__cm3_x002fcm3 = 432,
	ns2__UnitOfMeasure__cm3_x002fg = 433,
	ns2__UnitOfMeasure__cm3_x002fh = 434,
	ns2__UnitOfMeasure__cm3_x002fL = 435,
	ns2__UnitOfMeasure__cm3_x002fm3 = 436,
	ns2__UnitOfMeasure__cm3_x002fmin = 437,
	ns2__UnitOfMeasure__cm3_x002fs = 438,
	ns2__UnitOfMeasure__cm4 = 439,
	ns2__UnitOfMeasure__cmH2O_x005b4degC_x005d = 440,
	ns2__UnitOfMeasure__cN = 441,
	ns2__UnitOfMeasure__cohm = 442,
	ns2__UnitOfMeasure__cP = 443,
	ns2__UnitOfMeasure__cPa = 444,
	ns2__UnitOfMeasure__crd = 445,
	ns2__UnitOfMeasure__cS = 446,
	ns2__UnitOfMeasure__cs = 447,
	ns2__UnitOfMeasure__cSt = 448,
	ns2__UnitOfMeasure__cT = 449,
	ns2__UnitOfMeasure__ct = 450,
	ns2__UnitOfMeasure__cu = 451,
	ns2__UnitOfMeasure__cV = 452,
	ns2__UnitOfMeasure__cW = 453,
	ns2__UnitOfMeasure__cWb = 454,
	ns2__UnitOfMeasure__cwt_x005bUK_x005d = 455,
	ns2__UnitOfMeasure__cwt_x005bUS_x005d = 456,
	ns2__UnitOfMeasure__D_x002eft = 457,
	ns2__UnitOfMeasure__D_x002em = 458,
	ns2__UnitOfMeasure__D_x002f_x0028Pa_x002es_x0029 = 459,
	ns2__UnitOfMeasure__d_x002fbbl = 460,
	ns2__UnitOfMeasure__D_x002fcP = 461,
	ns2__UnitOfMeasure__d_x002fft3 = 462,
	ns2__UnitOfMeasure__d_x002fm3 = 463,
	ns2__UnitOfMeasure__D_x005bAPI_x005d = 464,
	ns2__UnitOfMeasure__dA = 465,
	ns2__UnitOfMeasure__dam = 466,
	ns2__UnitOfMeasure__daN = 467,
	ns2__UnitOfMeasure__daN_x002em = 468,
	ns2__UnitOfMeasure__dAPI = 469,
	ns2__UnitOfMeasure__dB = 470,
	ns2__UnitOfMeasure__dB_x002emW = 471,
	ns2__UnitOfMeasure__dB_x002eMW = 472,
	ns2__UnitOfMeasure__dB_x002eW = 473,
	ns2__UnitOfMeasure__dB_x002fft = 474,
	ns2__UnitOfMeasure__dB_x002fkm = 475,
	ns2__UnitOfMeasure__dB_x002fm = 476,
	ns2__UnitOfMeasure__dB_x002fO = 477,
	ns2__UnitOfMeasure__dC = 478,
	ns2__UnitOfMeasure__dcal_x005bth_x005d = 479,
	ns2__UnitOfMeasure__dega = 480,
	ns2__UnitOfMeasure__dega_x002fft = 481,
	ns2__UnitOfMeasure__dega_x002fh = 482,
	ns2__UnitOfMeasure__dega_x002fm = 483,
	ns2__UnitOfMeasure__dega_x002fmin = 484,
	ns2__UnitOfMeasure__dega_x002fs = 485,
	ns2__UnitOfMeasure__degC = 486,
	ns2__UnitOfMeasure__degC_x002em2_x002eh_x002fkcal_x005bth_x005d = 487,
	ns2__UnitOfMeasure__degC_x002fft = 488,
	ns2__UnitOfMeasure__degC_x002fh = 489,
	ns2__UnitOfMeasure__degC_x002fhm = 490,
	ns2__UnitOfMeasure__degC_x002fkm = 491,
	ns2__UnitOfMeasure__degC_x002fkPa = 492,
	ns2__UnitOfMeasure__degC_x002fm = 493,
	ns2__UnitOfMeasure__degC_x002fmin = 494,
	ns2__UnitOfMeasure__degC_x002fs = 495,
	ns2__UnitOfMeasure__degF = 496,
	ns2__UnitOfMeasure__degF_x002eft2_x002eh_x002fBtu_x005bIT_x005d = 497,
	ns2__UnitOfMeasure__degF_x002fft = 498,
	ns2__UnitOfMeasure__degF_x002fh = 499,
	ns2__UnitOfMeasure__degF_x002fm = 500,
	ns2__UnitOfMeasure__degF_x002fmin = 501,
	ns2__UnitOfMeasure__degF_x002fpsi = 502,
	ns2__UnitOfMeasure__degF_x002fs = 503,
	ns2__UnitOfMeasure__degR = 504,
	ns2__UnitOfMeasure__dEuc = 505,
	ns2__UnitOfMeasure__deV = 506,
	ns2__UnitOfMeasure__dF = 507,
	ns2__UnitOfMeasure__dgauss = 508,
	ns2__UnitOfMeasure__dGy = 509,
	ns2__UnitOfMeasure__dH = 510,
	ns2__UnitOfMeasure__dHz = 511,
	ns2__UnitOfMeasure__dJ = 512,
	ns2__UnitOfMeasure__dm = 513,
	ns2__UnitOfMeasure__dm_x002fs = 514,
	ns2__UnitOfMeasure__dm3 = 515,
	ns2__UnitOfMeasure__dm3_x002f_x0028kW_x002eh_x0029 = 516,
	ns2__UnitOfMeasure__dm3_x002fkg = 517,
	ns2__UnitOfMeasure__dm3_x002fkmol = 518,
	ns2__UnitOfMeasure__dm3_x002fm = 519,
	ns2__UnitOfMeasure__dm3_x002fm3 = 520,
	ns2__UnitOfMeasure__dm3_x002fMJ = 521,
	ns2__UnitOfMeasure__dm3_x002fs = 522,
	ns2__UnitOfMeasure__dm3_x002fs2 = 523,
	ns2__UnitOfMeasure__dm3_x002ft = 524,
	ns2__UnitOfMeasure__dN = 525,
	ns2__UnitOfMeasure__dN_x002em = 526,
	ns2__UnitOfMeasure__dohm = 527,
	ns2__UnitOfMeasure__dP = 528,
	ns2__UnitOfMeasure__dPa = 529,
	ns2__UnitOfMeasure__drd = 530,
	ns2__UnitOfMeasure__dS = 531,
	ns2__UnitOfMeasure__ds = 532,
	ns2__UnitOfMeasure__dT = 533,
	ns2__UnitOfMeasure__dV = 534,
	ns2__UnitOfMeasure__dW = 535,
	ns2__UnitOfMeasure__dWb = 536,
	ns2__UnitOfMeasure__dyne = 537,
	ns2__UnitOfMeasure__dyne_x002ecm2 = 538,
	ns2__UnitOfMeasure__dyne_x002es_x002fcm2 = 539,
	ns2__UnitOfMeasure__dyne_x002fcm = 540,
	ns2__UnitOfMeasure__dyne_x002fcm2 = 541,
	ns2__UnitOfMeasure__EA = 542,
	ns2__UnitOfMeasure__Ea_x005bt_x005d = 543,
	ns2__UnitOfMeasure__EC = 544,
	ns2__UnitOfMeasure__Ecal_x005bth_x005d = 545,
	ns2__UnitOfMeasure__EEuc = 546,
	ns2__UnitOfMeasure__EeV = 547,
	ns2__UnitOfMeasure__EF = 548,
	ns2__UnitOfMeasure__Eg = 549,
	ns2__UnitOfMeasure__Egauss = 550,
	ns2__UnitOfMeasure__EGy = 551,
	ns2__UnitOfMeasure__EH = 552,
	ns2__UnitOfMeasure__EHz = 553,
	ns2__UnitOfMeasure__EJ = 554,
	ns2__UnitOfMeasure__EJ_x002fa = 555,
	ns2__UnitOfMeasure__Em = 556,
	ns2__UnitOfMeasure__EN = 557,
	ns2__UnitOfMeasure__Eohm = 558,
	ns2__UnitOfMeasure__EP = 559,
	ns2__UnitOfMeasure__EPa = 560,
	ns2__UnitOfMeasure__Erd = 561,
	ns2__UnitOfMeasure__erg = 562,
	ns2__UnitOfMeasure__erg_x002fa = 563,
	ns2__UnitOfMeasure__erg_x002fcm2 = 564,
	ns2__UnitOfMeasure__erg_x002fcm3 = 565,
	ns2__UnitOfMeasure__erg_x002fg = 566,
	ns2__UnitOfMeasure__erg_x002fkg = 567,
	ns2__UnitOfMeasure__erg_x002fm3 = 568,
	ns2__UnitOfMeasure__ES = 569,
	ns2__UnitOfMeasure__ET = 570,
	ns2__UnitOfMeasure__Euc = 571,
	ns2__UnitOfMeasure__eV = 572,
	ns2__UnitOfMeasure__EW = 573,
	ns2__UnitOfMeasure__EWb = 574,
	ns2__UnitOfMeasure__F_x002fm = 575,
	ns2__UnitOfMeasure__fa = 576,
	ns2__UnitOfMeasure__fA = 577,
	ns2__UnitOfMeasure__fathom = 578,
	ns2__UnitOfMeasure__fC = 579,
	ns2__UnitOfMeasure__fcal_x005bth_x005d = 580,
	ns2__UnitOfMeasure__fEuc = 581,
	ns2__UnitOfMeasure__feV = 582,
	ns2__UnitOfMeasure__fF = 583,
	ns2__UnitOfMeasure__fg = 584,
	ns2__UnitOfMeasure__fgauss = 585,
	ns2__UnitOfMeasure__fGy = 586,
	ns2__UnitOfMeasure__fH = 587,
	ns2__UnitOfMeasure__fHz = 588,
	ns2__UnitOfMeasure__fJ = 589,
	ns2__UnitOfMeasure__floz_x005bUK_x005d = 590,
	ns2__UnitOfMeasure__floz_x005bUS_x005d = 591,
	ns2__UnitOfMeasure__fm = 592,
	ns2__UnitOfMeasure__fN = 593,
	ns2__UnitOfMeasure__fohm = 594,
	ns2__UnitOfMeasure__footcandle = 595,
	ns2__UnitOfMeasure__footcandle_x002es = 596,
	ns2__UnitOfMeasure__fP = 597,
	ns2__UnitOfMeasure__fPa = 598,
	ns2__UnitOfMeasure__frd = 599,
	ns2__UnitOfMeasure__fS = 600,
	ns2__UnitOfMeasure__ft = 601,
	ns2__UnitOfMeasure__fT = 602,
	ns2__UnitOfMeasure__ft_x002fbbl = 603,
	ns2__UnitOfMeasure__ft_x002fd = 604,
	ns2__UnitOfMeasure__ft_x002fdega = 605,
	ns2__UnitOfMeasure__ft_x002fdegF = 606,
	ns2__UnitOfMeasure__ft_x002fft = 607,
	ns2__UnitOfMeasure__ft_x002fft3 = 608,
	ns2__UnitOfMeasure__ft_x002fgal_x005bUS_x005d = 609,
	ns2__UnitOfMeasure__ft_x002fh = 610,
	ns2__UnitOfMeasure__ft_x002fin = 611,
	ns2__UnitOfMeasure__ft_x002flbm = 612,
	ns2__UnitOfMeasure__ft_x002fm = 613,
	ns2__UnitOfMeasure__ft_x002fmi = 614,
	ns2__UnitOfMeasure__ft_x002fmin = 615,
	ns2__UnitOfMeasure__ft_x002fms = 616,
	ns2__UnitOfMeasure__ft_x002fpsi = 617,
	ns2__UnitOfMeasure__ft_x002frad = 618,
	ns2__UnitOfMeasure__ft_x002frev = 619,
	ns2__UnitOfMeasure__ft_x002fs = 620,
	ns2__UnitOfMeasure__ft_x002fs2 = 621,
	ns2__UnitOfMeasure__ft_x002fus = 622,
	ns2__UnitOfMeasure__ft_x005bBnA_x005d = 623,
	ns2__UnitOfMeasure__ft_x005bBnB_x005d = 624,
	ns2__UnitOfMeasure__ft_x005bBr36_x005d = 625,
	ns2__UnitOfMeasure__ft_x005bBr65_x005d = 626,
	ns2__UnitOfMeasure__ft_x005bCla_x005d = 627,
	ns2__UnitOfMeasure__ft_x005bGC_x005d = 628,
	ns2__UnitOfMeasure__ft_x005bInd_x005d = 629,
	ns2__UnitOfMeasure__ft_x005bInd37_x005d = 630,
	ns2__UnitOfMeasure__ft_x005bInd62_x005d = 631,
	ns2__UnitOfMeasure__ft_x005bInd75_x005d = 632,
	ns2__UnitOfMeasure__ft_x005bSe_x005d = 633,
	ns2__UnitOfMeasure__ft_x005bSeT_x005d = 634,
	ns2__UnitOfMeasure__ft_x005bUS_x005d = 635,
	ns2__UnitOfMeasure__ft2 = 636,
	ns2__UnitOfMeasure__ft2_x002fh = 637,
	ns2__UnitOfMeasure__ft2_x002fin3 = 638,
	ns2__UnitOfMeasure__ft2_x002flbm = 639,
	ns2__UnitOfMeasure__ft2_x002fs = 640,
	ns2__UnitOfMeasure__ft3 = 641,
	ns2__UnitOfMeasure__ft3_x002f_x0028d_x002eft_x0029 = 642,
	ns2__UnitOfMeasure__ft3_x002f_x0028ft_x002epsi_x002ed_x0029 = 643,
	ns2__UnitOfMeasure__ft3_x002f_x0028min_x002eft2_x0029 = 644,
	ns2__UnitOfMeasure__ft3_x002f_x0028s_x002eft2_x0029 = 645,
	ns2__UnitOfMeasure__ft3_x002fbbl = 646,
	ns2__UnitOfMeasure__ft3_x002fd = 647,
	ns2__UnitOfMeasure__ft3_x002fd2 = 648,
	ns2__UnitOfMeasure__ft3_x002fft = 649,
	ns2__UnitOfMeasure__ft3_x002fft2 = 650,
	ns2__UnitOfMeasure__ft3_x002fft3 = 651,
	ns2__UnitOfMeasure__ft3_x002fh = 652,
	ns2__UnitOfMeasure__ft3_x002fh2 = 653,
	ns2__UnitOfMeasure__ft3_x002fkg = 654,
	ns2__UnitOfMeasure__ft3_x002flbm = 655,
	ns2__UnitOfMeasure__ft3_x002flbmol = 656,
	ns2__UnitOfMeasure__ft3_x002fmin = 657,
	ns2__UnitOfMeasure__ft3_x002fmin2 = 658,
	ns2__UnitOfMeasure__ft3_x002frad = 659,
	ns2__UnitOfMeasure__ft3_x002fs = 660,
	ns2__UnitOfMeasure__ft3_x002fs2 = 661,
	ns2__UnitOfMeasure__ft3_x002fsack_x005b94lbm_x005d = 662,
	ns2__UnitOfMeasure__fur_x005bUS_x005d = 663,
	ns2__UnitOfMeasure__fV = 664,
	ns2__UnitOfMeasure__fW = 665,
	ns2__UnitOfMeasure__fWb = 666,
	ns2__UnitOfMeasure__g_x002eft_x002f_x0028cm3_x002es_x0029 = 667,
	ns2__UnitOfMeasure__g_x002em_x002f_x0028cm3_x002es_x0029 = 668,
	ns2__UnitOfMeasure__g_x002fcm3 = 669,
	ns2__UnitOfMeasure__g_x002fcm4 = 670,
	ns2__UnitOfMeasure__g_x002fdm3 = 671,
	ns2__UnitOfMeasure__g_x002fgal_x005bUK_x005d = 672,
	ns2__UnitOfMeasure__g_x002fgal_x005bUS_x005d = 673,
	ns2__UnitOfMeasure__g_x002fkg = 674,
	ns2__UnitOfMeasure__g_x002fL = 675,
	ns2__UnitOfMeasure__g_x002fm3 = 676,
	ns2__UnitOfMeasure__g_x002fmol = 677,
	ns2__UnitOfMeasure__g_x002fs = 678,
	ns2__UnitOfMeasure__g_x002ft = 679,
	ns2__UnitOfMeasure__GA = 680,
	ns2__UnitOfMeasure__Ga_x005bt_x005d = 681,
	ns2__UnitOfMeasure__Gal = 682,
	ns2__UnitOfMeasure__gal_x005bUK_x005d = 683,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028h_x002eft_x0029 = 684,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028h_x002eft2_x0029 = 685,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028h_x002ein_x0029 = 686,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028h_x002ein2_x0029 = 687,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028min_x002eft_x0029 = 688,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002f_x0028min_x002eft2_x0029 = 689,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fd = 690,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fft3 = 691,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fh = 692,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fh2 = 693,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002flbm = 694,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fmi = 695,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fmin = 696,
	ns2__UnitOfMeasure__gal_x005bUK_x005d_x002fmin2 = 697,
	ns2__UnitOfMeasure__gal_x005bUS_x005d = 698,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028h_x002eft_x0029 = 699,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028h_x002eft2_x0029 = 700,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028h_x002ein_x0029 = 701,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028h_x002ein2_x0029 = 702,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028min_x002eft_x0029 = 703,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002f_x0028min_x002eft2_x0029 = 704,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fbbl = 705,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fd = 706,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fft = 707,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fft3 = 708,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fh = 709,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fh2 = 710,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002flbm = 711,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fmi = 712,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fmin = 713,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fmin2 = 714,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fsack_x005b94lbm_x005d = 715,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fton_x005bUK_x005d = 716,
	ns2__UnitOfMeasure__gal_x005bUS_x005d_x002fton_x005bUS_x005d = 717,
	ns2__UnitOfMeasure__gAPI = 718,
	ns2__UnitOfMeasure__gauss = 719,
	ns2__UnitOfMeasure__gauss_x002fcm = 720,
	ns2__UnitOfMeasure__GBq = 721,
	ns2__UnitOfMeasure__GC = 722,
	ns2__UnitOfMeasure__Gcal_x005bth_x005d = 723,
	ns2__UnitOfMeasure__GEuc = 724,
	ns2__UnitOfMeasure__GeV = 725,
	ns2__UnitOfMeasure__gf = 726,
	ns2__UnitOfMeasure__GF = 727,
	ns2__UnitOfMeasure__Gg = 728,
	ns2__UnitOfMeasure__Ggauss = 729,
	ns2__UnitOfMeasure__GGy = 730,
	ns2__UnitOfMeasure__GH = 731,
	ns2__UnitOfMeasure__GHz = 732,
	ns2__UnitOfMeasure__GJ = 733,
	ns2__UnitOfMeasure__Gm = 734,
	ns2__UnitOfMeasure__GN = 735,
	ns2__UnitOfMeasure__gn = 736,
	ns2__UnitOfMeasure__Gohm = 737,
	ns2__UnitOfMeasure__gon = 738,
	ns2__UnitOfMeasure__GP = 739,
	ns2__UnitOfMeasure__GPa = 740,
	ns2__UnitOfMeasure__GPa_x002fcm = 741,
	ns2__UnitOfMeasure__GPa2 = 742,
	ns2__UnitOfMeasure__grain = 743,
	ns2__UnitOfMeasure__grain_x002fft3 = 744,
	ns2__UnitOfMeasure__grain_x002fgal_x005bUS_x005d = 745,
	ns2__UnitOfMeasure__Grd = 746,
	ns2__UnitOfMeasure__GS = 747,
	ns2__UnitOfMeasure__GT = 748,
	ns2__UnitOfMeasure__GV = 749,
	ns2__UnitOfMeasure__GW = 750,
	ns2__UnitOfMeasure__GW_x002eh = 751,
	ns2__UnitOfMeasure__GWb = 752,
	ns2__UnitOfMeasure__Gy = 753,
	ns2__UnitOfMeasure__h_x002fft3 = 754,
	ns2__UnitOfMeasure__h_x002fkm = 755,
	ns2__UnitOfMeasure__H_x002fm = 756,
	ns2__UnitOfMeasure__h_x002fm3 = 757,
	ns2__UnitOfMeasure__ha = 758,
	ns2__UnitOfMeasure__ha_x002em = 759,
	ns2__UnitOfMeasure__hbar = 760,
	ns2__UnitOfMeasure__hg = 761,
	ns2__UnitOfMeasure__hL = 762,
	ns2__UnitOfMeasure__hm = 763,
	ns2__UnitOfMeasure__hN = 764,
	ns2__UnitOfMeasure__hp = 765,
	ns2__UnitOfMeasure__hp_x002eh = 766,
	ns2__UnitOfMeasure__hp_x002eh_x002fbbl = 767,
	ns2__UnitOfMeasure__hp_x002eh_x002flbm = 768,
	ns2__UnitOfMeasure__hp_x002fft3 = 769,
	ns2__UnitOfMeasure__hp_x002fin2 = 770,
	ns2__UnitOfMeasure__hp_x005belec_x005d = 771,
	ns2__UnitOfMeasure__hp_x005bhyd_x005d = 772,
	ns2__UnitOfMeasure__hp_x005bhyd_x005d_x002fin2 = 773,
	ns2__UnitOfMeasure__hp_x005bmetric_x005d = 774,
	ns2__UnitOfMeasure__hp_x005bmetric_x005d_x002eh = 775,
	ns2__UnitOfMeasure__hs = 776,
	ns2__UnitOfMeasure__Hz = 777,
	ns2__UnitOfMeasure__in = 778,
	ns2__UnitOfMeasure__in_x002f_x0028in_x002edegF_x0029 = 779,
	ns2__UnitOfMeasure__in_x002fa = 780,
	ns2__UnitOfMeasure__in_x002fmin = 781,
	ns2__UnitOfMeasure__in_x002fs = 782,
	ns2__UnitOfMeasure__in_x002fs2 = 783,
	ns2__UnitOfMeasure__in_x005bUS_x005d = 784,
	ns2__UnitOfMeasure__in2 = 785,
	ns2__UnitOfMeasure__in2_x002fft2 = 786,
	ns2__UnitOfMeasure__in2_x002fin2 = 787,
	ns2__UnitOfMeasure__in2_x002fs = 788,
	ns2__UnitOfMeasure__in3 = 789,
	ns2__UnitOfMeasure__in3_x002fft = 790,
	ns2__UnitOfMeasure__in4 = 791,
	ns2__UnitOfMeasure__inH2O_x005b39degF_x005d = 792,
	ns2__UnitOfMeasure__inH2O_x005b60degF_x005d = 793,
	ns2__UnitOfMeasure__inHg_x005b32degF_x005d = 794,
	ns2__UnitOfMeasure__inHg_x005b60degF_x005d = 795,
	ns2__UnitOfMeasure__J_x002em_x002f_x0028s_x002em2_x002eK_x0029 = 796,
	ns2__UnitOfMeasure__J_x002em_x002fm2 = 797,
	ns2__UnitOfMeasure__J_x002f_x0028g_x002eK_x0029 = 798,
	ns2__UnitOfMeasure__J_x002f_x0028kg_x002eK_x0029 = 799,
	ns2__UnitOfMeasure__J_x002f_x0028mol_x002eK_x0029 = 800,
	ns2__UnitOfMeasure__J_x002f_x0028s_x002em2_x002edegC_x0029 = 801,
	ns2__UnitOfMeasure__J_x002fcm2 = 802,
	ns2__UnitOfMeasure__J_x002fdm3 = 803,
	ns2__UnitOfMeasure__J_x002fg = 804,
	ns2__UnitOfMeasure__J_x002fK = 805,
	ns2__UnitOfMeasure__J_x002fkg = 806,
	ns2__UnitOfMeasure__J_x002fm = 807,
	ns2__UnitOfMeasure__J_x002fm2 = 808,
	ns2__UnitOfMeasure__J_x002fm3 = 809,
	ns2__UnitOfMeasure__J_x002fmol = 810,
	ns2__UnitOfMeasure__J_x002fs = 811,
	ns2__UnitOfMeasure__K_x002em2_x002fkW = 812,
	ns2__UnitOfMeasure__K_x002em2_x002fW = 813,
	ns2__UnitOfMeasure__K_x002fkm = 814,
	ns2__UnitOfMeasure__K_x002fm = 815,
	ns2__UnitOfMeasure__K_x002fPa = 816,
	ns2__UnitOfMeasure__K_x002fs = 817,
	ns2__UnitOfMeasure__K_x002fW = 818,
	ns2__UnitOfMeasure__kA = 819,
	ns2__UnitOfMeasure__ka_x005bt_x005d = 820,
	ns2__UnitOfMeasure__kC = 821,
	ns2__UnitOfMeasure__kcal_x005bth_x005d = 822,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002em_x002fcm2 = 823,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002f_x0028h_x002em_x002edegC_x0029 = 824,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002f_x0028h_x002em2_x002edegC_x0029 = 825,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002f_x0028kg_x002edegC_x0029 = 826,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fcm3 = 827,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fg = 828,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fh = 829,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fkg = 830,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fm3 = 831,
	ns2__UnitOfMeasure__kcal_x005bth_x005d_x002fmol = 832,
	ns2__UnitOfMeasure__kcd = 833,
	ns2__UnitOfMeasure__kdyne = 834,
	ns2__UnitOfMeasure__kEuc = 835,
	ns2__UnitOfMeasure__keV = 836,
	ns2__UnitOfMeasure__kF = 837,
	ns2__UnitOfMeasure__kg = 838,
	ns2__UnitOfMeasure__kg_x002em = 839,
	ns2__UnitOfMeasure__kg_x002em_x002fcm2 = 840,
	ns2__UnitOfMeasure__kg_x002em_x002fs = 841,
	ns2__UnitOfMeasure__kg_x002em2 = 842,
	ns2__UnitOfMeasure__kg_x002f_x0028kW_x002eh_x0029 = 843,
	ns2__UnitOfMeasure__kg_x002f_x0028m_x002es_x0029 = 844,
	ns2__UnitOfMeasure__kg_x002f_x0028m2_x002es_x0029 = 845,
	ns2__UnitOfMeasure__kg_x002fd = 846,
	ns2__UnitOfMeasure__kg_x002fdm3 = 847,
	ns2__UnitOfMeasure__kg_x002fdm4 = 848,
	ns2__UnitOfMeasure__kg_x002fh = 849,
	ns2__UnitOfMeasure__kg_x002fJ = 850,
	ns2__UnitOfMeasure__kg_x002fkg = 851,
	ns2__UnitOfMeasure__kg_x002fL = 852,
	ns2__UnitOfMeasure__kg_x002fm = 853,
	ns2__UnitOfMeasure__kg_x002fm2 = 854,
	ns2__UnitOfMeasure__kg_x002fm3 = 855,
	ns2__UnitOfMeasure__kg_x002fm4 = 856,
	ns2__UnitOfMeasure__kg_x002fmin = 857,
	ns2__UnitOfMeasure__kg_x002fMJ = 858,
	ns2__UnitOfMeasure__kg_x002fmol = 859,
	ns2__UnitOfMeasure__kg_x002fs = 860,
	ns2__UnitOfMeasure__kg_x002fsack_x005b94lbm_x005d = 861,
	ns2__UnitOfMeasure__kg_x002ft = 862,
	ns2__UnitOfMeasure__kgauss = 863,
	ns2__UnitOfMeasure__kgf = 864,
	ns2__UnitOfMeasure__kgf_x002em = 865,
	ns2__UnitOfMeasure__kgf_x002em_x002fcm2 = 866,
	ns2__UnitOfMeasure__kgf_x002em_x002fm = 867,
	ns2__UnitOfMeasure__kgf_x002em2 = 868,
	ns2__UnitOfMeasure__kgf_x002es_x002fm2 = 869,
	ns2__UnitOfMeasure__kgf_x002fcm = 870,
	ns2__UnitOfMeasure__kgf_x002fcm2 = 871,
	ns2__UnitOfMeasure__kgf_x002fkgf = 872,
	ns2__UnitOfMeasure__kgf_x002fm2 = 873,
	ns2__UnitOfMeasure__kgf_x002fmm2 = 874,
	ns2__UnitOfMeasure__kGy = 875,
	ns2__UnitOfMeasure__kH = 876,
	ns2__UnitOfMeasure__kHz = 877,
	ns2__UnitOfMeasure__Kibyte = 878,
	ns2__UnitOfMeasure__kJ = 879,
	ns2__UnitOfMeasure__kJ_x002em_x002f_x0028h_x002em2_x002eK_x0029 = 880,
	ns2__UnitOfMeasure__kJ_x002f_x0028h_x002em2_x002eK_x0029 = 881,
	ns2__UnitOfMeasure__kJ_x002f_x0028kg_x002eK_x0029 = 882,
	ns2__UnitOfMeasure__kJ_x002f_x0028kmol_x002eK_x0029 = 883,
	ns2__UnitOfMeasure__kJ_x002fdm3 = 884,
	ns2__UnitOfMeasure__kJ_x002fkg = 885,
	ns2__UnitOfMeasure__kJ_x002fkmol = 886,
	ns2__UnitOfMeasure__kJ_x002fm3 = 887,
	ns2__UnitOfMeasure__klbf = 888,
	ns2__UnitOfMeasure__klbm = 889,
	ns2__UnitOfMeasure__klbm_x002fin = 890,
	ns2__UnitOfMeasure__klx = 891,
	ns2__UnitOfMeasure__km = 892,
	ns2__UnitOfMeasure__km_x002fcm = 893,
	ns2__UnitOfMeasure__km_x002fdm3 = 894,
	ns2__UnitOfMeasure__km_x002fh = 895,
	ns2__UnitOfMeasure__km_x002fL = 896,
	ns2__UnitOfMeasure__km_x002fs = 897,
	ns2__UnitOfMeasure__km2 = 898,
	ns2__UnitOfMeasure__km3 = 899,
	ns2__UnitOfMeasure__kmol = 900,
	ns2__UnitOfMeasure__kmol_x002fh = 901,
	ns2__UnitOfMeasure__kmol_x002fm3 = 902,
	ns2__UnitOfMeasure__kmol_x002fs = 903,
	ns2__UnitOfMeasure__kN = 904,
	ns2__UnitOfMeasure__kN_x002em = 905,
	ns2__UnitOfMeasure__kN_x002em2 = 906,
	ns2__UnitOfMeasure__kN_x002fm = 907,
	ns2__UnitOfMeasure__kN_x002fm2 = 908,
	ns2__UnitOfMeasure__knot = 909,
	ns2__UnitOfMeasure__kohm = 910,
	ns2__UnitOfMeasure__kohm_x002em = 911,
	ns2__UnitOfMeasure__kP = 912,
	ns2__UnitOfMeasure__kPa = 913,
	ns2__UnitOfMeasure__kPa_x002es_x002fm = 914,
	ns2__UnitOfMeasure__kPa_x002fh = 915,
	ns2__UnitOfMeasure__kPa_x002fhm = 916,
	ns2__UnitOfMeasure__kPa_x002fm = 917,
	ns2__UnitOfMeasure__kPa_x002fmin = 918,
	ns2__UnitOfMeasure__kPa2 = 919,
	ns2__UnitOfMeasure__kPa2_x002fcP = 920,
	ns2__UnitOfMeasure__kpsi = 921,
	ns2__UnitOfMeasure__kpsi2 = 922,
	ns2__UnitOfMeasure__krad = 923,
	ns2__UnitOfMeasure__krd = 924,
	ns2__UnitOfMeasure__kS = 925,
	ns2__UnitOfMeasure__kS_x002fm = 926,
	ns2__UnitOfMeasure__kT = 927,
	ns2__UnitOfMeasure__kV = 928,
	ns2__UnitOfMeasure__kW = 929,
	ns2__UnitOfMeasure__kW_x002eh = 930,
	ns2__UnitOfMeasure__kW_x002eh_x002f_x0028kg_x002edegC_x0029 = 931,
	ns2__UnitOfMeasure__kW_x002eh_x002fdm3 = 932,
	ns2__UnitOfMeasure__kW_x002eh_x002fkg = 933,
	ns2__UnitOfMeasure__kW_x002eh_x002fm3 = 934,
	ns2__UnitOfMeasure__kW_x002f_x0028m2_x002eK_x0029 = 935,
	ns2__UnitOfMeasure__kW_x002f_x0028m3_x002eK_x0029 = 936,
	ns2__UnitOfMeasure__kW_x002fcm2 = 937,
	ns2__UnitOfMeasure__kW_x002fm2 = 938,
	ns2__UnitOfMeasure__kW_x002fm3 = 939,
	ns2__UnitOfMeasure__kWb = 940,
	ns2__UnitOfMeasure__L_x002f_x0028bar_x002emin_x0029 = 941,
	ns2__UnitOfMeasure__L_x002fh = 942,
	ns2__UnitOfMeasure__L_x002fkg = 943,
	ns2__UnitOfMeasure__L_x002fkmol = 944,
	ns2__UnitOfMeasure__L_x002fm = 945,
	ns2__UnitOfMeasure__L_x002fm3 = 946,
	ns2__UnitOfMeasure__L_x002fmin = 947,
	ns2__UnitOfMeasure__L_x002fmol = 948,
	ns2__UnitOfMeasure__L_x002fs = 949,
	ns2__UnitOfMeasure__L_x002fs2 = 950,
	ns2__UnitOfMeasure__L_x002ft = 951,
	ns2__UnitOfMeasure__L_x002fton_x005bUK_x005d = 952,
	ns2__UnitOfMeasure__lbf = 953,
	ns2__UnitOfMeasure__lbf_x002eft = 954,
	ns2__UnitOfMeasure__lbf_x002eft_x002fbbl = 955,
	ns2__UnitOfMeasure__lbf_x002eft_x002fgal_x005bUS_x005d = 956,
	ns2__UnitOfMeasure__lbf_x002eft_x002fin = 957,
	ns2__UnitOfMeasure__lbf_x002eft_x002fin2 = 958,
	ns2__UnitOfMeasure__lbf_x002eft_x002flbm = 959,
	ns2__UnitOfMeasure__lbf_x002eft_x002fmin = 960,
	ns2__UnitOfMeasure__lbf_x002eft_x002fs = 961,
	ns2__UnitOfMeasure__lbf_x002ein = 962,
	ns2__UnitOfMeasure__lbf_x002ein_x002fin = 963,
	ns2__UnitOfMeasure__lbf_x002ein2 = 964,
	ns2__UnitOfMeasure__lbf_x002es_x002fft2 = 965,
	ns2__UnitOfMeasure__lbf_x002es_x002fin2 = 966,
	ns2__UnitOfMeasure__lbf_x002fft = 967,
	ns2__UnitOfMeasure__lbf_x002fft2 = 968,
	ns2__UnitOfMeasure__lbf_x002fft3 = 969,
	ns2__UnitOfMeasure__lbf_x002fgal_x005bUS_x005d = 970,
	ns2__UnitOfMeasure__lbf_x002fin = 971,
	ns2__UnitOfMeasure__lbf_x002flbf = 972,
	ns2__UnitOfMeasure__lbm = 973,
	ns2__UnitOfMeasure__lbm_x002eft = 974,
	ns2__UnitOfMeasure__lbm_x002eft_x002fs = 975,
	ns2__UnitOfMeasure__lbm_x002eft2 = 976,
	ns2__UnitOfMeasure__lbm_x002eft2_x002fs2 = 977,
	ns2__UnitOfMeasure__lbm_x002f_x0028ft_x002eh_x0029 = 978,
	ns2__UnitOfMeasure__lbm_x002f_x0028ft_x002es_x0029 = 979,
	ns2__UnitOfMeasure__lbm_x002f_x0028ft2_x002eh_x0029 = 980,
	ns2__UnitOfMeasure__lbm_x002f_x0028ft2_x002es_x0029 = 981,
	ns2__UnitOfMeasure__lbm_x002f_x0028gal_x005bUK_x005d_x002eft_x0029 = 982,
	ns2__UnitOfMeasure__lbm_x002f_x0028gal_x005bUS_x005d_x002eft_x0029 = 983,
	ns2__UnitOfMeasure__lbm_x002f_x0028hp_x002eh_x0029 = 984,
	ns2__UnitOfMeasure__lbm_x002fbbl = 985,
	ns2__UnitOfMeasure__lbm_x002fd = 986,
	ns2__UnitOfMeasure__lbm_x002fft = 987,
	ns2__UnitOfMeasure__lbm_x002fft2 = 988,
	ns2__UnitOfMeasure__lbm_x002fft3 = 989,
	ns2__UnitOfMeasure__lbm_x002fft4 = 990,
	ns2__UnitOfMeasure__lbm_x002fgal_x005bUK_x005d = 991,
	ns2__UnitOfMeasure__lbm_x002fgal_x005bUS_x005d = 992,
	ns2__UnitOfMeasure__lbm_x002fh = 993,
	ns2__UnitOfMeasure__lbm_x002fin3 = 994,
	ns2__UnitOfMeasure__lbm_x002flbmol = 995,
	ns2__UnitOfMeasure__lbm_x002fmin = 996,
	ns2__UnitOfMeasure__lbm_x002fs = 997,
	ns2__UnitOfMeasure__lbmol = 998,
	ns2__UnitOfMeasure__lbmol_x002f_x0028h_x002eft2_x0029 = 999,
	ns2__UnitOfMeasure__lbmol_x002f_x0028s_x002eft2_x0029 = 1000,
	ns2__UnitOfMeasure__lbmol_x002fft3 = 1001,
	ns2__UnitOfMeasure__lbmol_x002fgal_x005bUK_x005d = 1002,
	ns2__UnitOfMeasure__lbmol_x002fgal_x005bUS_x005d = 1003,
	ns2__UnitOfMeasure__lbmol_x002fh = 1004,
	ns2__UnitOfMeasure__lbmol_x002fs = 1005,
	ns2__UnitOfMeasure__link = 1006,
	ns2__UnitOfMeasure__link_x005bBnA_x005d = 1007,
	ns2__UnitOfMeasure__link_x005bBnB_x005d = 1008,
	ns2__UnitOfMeasure__link_x005bCla_x005d = 1009,
	ns2__UnitOfMeasure__link_x005bSe_x005d = 1010,
	ns2__UnitOfMeasure__link_x005bSeT_x005d = 1011,
	ns2__UnitOfMeasure__link_x005bUS_x005d = 1012,
	ns2__UnitOfMeasure__lm = 1013,
	ns2__UnitOfMeasure__lm_x002es = 1014,
	ns2__UnitOfMeasure__lm_x002fm2 = 1015,
	ns2__UnitOfMeasure__lm_x002fW = 1016,
	ns2__UnitOfMeasure__lx = 1017,
	ns2__UnitOfMeasure__lx_x002es = 1018,
	ns2__UnitOfMeasure__m_x002f_x0028m_x002eK_x0029 = 1019,
	ns2__UnitOfMeasure__m_x002fcm = 1020,
	ns2__UnitOfMeasure__m_x002fd = 1021,
	ns2__UnitOfMeasure__m_x002fdega = 1022,
	ns2__UnitOfMeasure__m_x002fh = 1023,
	ns2__UnitOfMeasure__m_x002fK = 1024,
	ns2__UnitOfMeasure__m_x002fkg = 1025,
	ns2__UnitOfMeasure__m_x002fkm = 1026,
	ns2__UnitOfMeasure__m_x002fkPa = 1027,
	ns2__UnitOfMeasure__m_x002fm = 1028,
	ns2__UnitOfMeasure__m_x002fm3 = 1029,
	ns2__UnitOfMeasure__m_x002fmin = 1030,
	ns2__UnitOfMeasure__m_x002fms = 1031,
	ns2__UnitOfMeasure__m_x002fPa = 1032,
	ns2__UnitOfMeasure__m_x002frad = 1033,
	ns2__UnitOfMeasure__m_x002frev = 1034,
	ns2__UnitOfMeasure__m_x002fs = 1035,
	ns2__UnitOfMeasure__m_x002fs2 = 1036,
	ns2__UnitOfMeasure__m_x005bGer_x005d = 1037,
	ns2__UnitOfMeasure__m2 = 1038,
	ns2__UnitOfMeasure__m2_x002f_x0028kPa_x002ed_x0029 = 1039,
	ns2__UnitOfMeasure__m2_x002f_x0028Pa_x002es_x0029 = 1040,
	ns2__UnitOfMeasure__m2_x002fcm3 = 1041,
	ns2__UnitOfMeasure__m2_x002fd = 1042,
	ns2__UnitOfMeasure__m2_x002fg = 1043,
	ns2__UnitOfMeasure__m2_x002fh = 1044,
	ns2__UnitOfMeasure__m2_x002fkg = 1045,
	ns2__UnitOfMeasure__m2_x002fm2 = 1046,
	ns2__UnitOfMeasure__m2_x002fm3 = 1047,
	ns2__UnitOfMeasure__m2_x002fmol = 1048,
	ns2__UnitOfMeasure__m2_x002fs = 1049,
	ns2__UnitOfMeasure__m3 = 1050,
	ns2__UnitOfMeasure__m3_x002f_x0028bar_x002ed_x0029 = 1051,
	ns2__UnitOfMeasure__m3_x002f_x0028bar_x002eh_x0029 = 1052,
	ns2__UnitOfMeasure__m3_x002f_x0028bar_x002emin_x0029 = 1053,
	ns2__UnitOfMeasure__m3_x002f_x0028d_x002em_x0029 = 1054,
	ns2__UnitOfMeasure__m3_x002f_x0028h_x002em_x0029 = 1055,
	ns2__UnitOfMeasure__m3_x002f_x0028ha_x002em_x0029 = 1056,
	ns2__UnitOfMeasure__m3_x002f_x0028kPa_x002ed_x0029 = 1057,
	ns2__UnitOfMeasure__m3_x002f_x0028kPa_x002eh_x0029 = 1058,
	ns2__UnitOfMeasure__m3_x002f_x0028kW_x002eh_x0029 = 1059,
	ns2__UnitOfMeasure__m3_x002f_x0028m3_x002eK_x0029 = 1060,
	ns2__UnitOfMeasure__m3_x002f_x0028Pa_x002es_x0029 = 1061,
	ns2__UnitOfMeasure__m3_x002f_x0028psi_x002ed_x0029 = 1062,
	ns2__UnitOfMeasure__m3_x002f_x0028s_x002eft_x0029 = 1063,
	ns2__UnitOfMeasure__m3_x002f_x0028s_x002em_x0029 = 1064,
	ns2__UnitOfMeasure__m3_x002f_x0028s_x002em2_x0029 = 1065,
	ns2__UnitOfMeasure__m3_x002f_x0028s_x002em3_x0029 = 1066,
	ns2__UnitOfMeasure__m3_x002fbbl = 1067,
	ns2__UnitOfMeasure__m3_x002fd = 1068,
	ns2__UnitOfMeasure__m3_x002fd2 = 1069,
	ns2__UnitOfMeasure__m3_x002fg = 1070,
	ns2__UnitOfMeasure__m3_x002fh = 1071,
	ns2__UnitOfMeasure__m3_x002fJ = 1072,
	ns2__UnitOfMeasure__m3_x002fkg = 1073,
	ns2__UnitOfMeasure__m3_x002fkm = 1074,
	ns2__UnitOfMeasure__m3_x002fkmol = 1075,
	ns2__UnitOfMeasure__m3_x002fkPa = 1076,
	ns2__UnitOfMeasure__m3_x002fm = 1077,
	ns2__UnitOfMeasure__m3_x002fm2 = 1078,
	ns2__UnitOfMeasure__m3_x002fm3 = 1079,
	ns2__UnitOfMeasure__m3_x002fmin = 1080,
	ns2__UnitOfMeasure__m3_x002fmol = 1081,
	ns2__UnitOfMeasure__m3_x002fPa = 1082,
	ns2__UnitOfMeasure__m3_x002frad = 1083,
	ns2__UnitOfMeasure__m3_x002frev = 1084,
	ns2__UnitOfMeasure__m3_x002fs = 1085,
	ns2__UnitOfMeasure__m3_x002fs2 = 1086,
	ns2__UnitOfMeasure__m3_x002ft = 1087,
	ns2__UnitOfMeasure__m3_x002fton_x005bUK_x005d = 1088,
	ns2__UnitOfMeasure__m3_x002fton_x005bUS_x005d = 1089,
	ns2__UnitOfMeasure__m4 = 1090,
	ns2__UnitOfMeasure__m4_x002fs = 1091,
	ns2__UnitOfMeasure__MA = 1092,
	ns2__UnitOfMeasure__mA = 1093,
	ns2__UnitOfMeasure__mA_x002fcm2 = 1094,
	ns2__UnitOfMeasure__mA_x002fft2 = 1095,
	ns2__UnitOfMeasure__Ma_x005bt_x005d = 1096,
	ns2__UnitOfMeasure__mbar = 1097,
	ns2__UnitOfMeasure__MBq = 1098,
	ns2__UnitOfMeasure__MC = 1099,
	ns2__UnitOfMeasure__mC = 1100,
	ns2__UnitOfMeasure__mC_x002fm2 = 1101,
	ns2__UnitOfMeasure__Mcal_x005bth_x005d = 1102,
	ns2__UnitOfMeasure__mcal_x005bth_x005d = 1103,
	ns2__UnitOfMeasure__mCi = 1104,
	ns2__UnitOfMeasure__mD = 1105,
	ns2__UnitOfMeasure__mD_x002eft = 1106,
	ns2__UnitOfMeasure__mD_x002eft2_x002f_x0028lbf_x002es_x0029 = 1107,
	ns2__UnitOfMeasure__mD_x002ein2_x002f_x0028lbf_x002es_x0029 = 1108,
	ns2__UnitOfMeasure__mD_x002em = 1109,
	ns2__UnitOfMeasure__mD_x002f_x0028Pa_x002es_x0029 = 1110,
	ns2__UnitOfMeasure__mD_x002fcP = 1111,
	ns2__UnitOfMeasure__mEuc = 1112,
	ns2__UnitOfMeasure__MEuc = 1113,
	ns2__UnitOfMeasure__MeV = 1114,
	ns2__UnitOfMeasure__meV = 1115,
	ns2__UnitOfMeasure__MF = 1116,
	ns2__UnitOfMeasure__mF = 1117,
	ns2__UnitOfMeasure__mg = 1118,
	ns2__UnitOfMeasure__Mg = 1119,
	ns2__UnitOfMeasure__Mg_x002fa = 1120,
	ns2__UnitOfMeasure__Mg_x002fd = 1121,
	ns2__UnitOfMeasure__mg_x002fdm3 = 1122,
	ns2__UnitOfMeasure__mg_x002fg = 1123,
	ns2__UnitOfMeasure__mg_x002fgal_x005bUS_x005d = 1124,
	ns2__UnitOfMeasure__Mg_x002fh = 1125,
	ns2__UnitOfMeasure__Mg_x002fin = 1126,
	ns2__UnitOfMeasure__mg_x002fJ = 1127,
	ns2__UnitOfMeasure__mg_x002fkg = 1128,
	ns2__UnitOfMeasure__mg_x002fL = 1129,
	ns2__UnitOfMeasure__Mg_x002fm2 = 1130,
	ns2__UnitOfMeasure__mg_x002fm3 = 1131,
	ns2__UnitOfMeasure__Mg_x002fm3 = 1132,
	ns2__UnitOfMeasure__Mg_x002fmin = 1133,
	ns2__UnitOfMeasure__mGal = 1134,
	ns2__UnitOfMeasure__mgauss = 1135,
	ns2__UnitOfMeasure__Mgauss = 1136,
	ns2__UnitOfMeasure__Mgf = 1137,
	ns2__UnitOfMeasure__mgn = 1138,
	ns2__UnitOfMeasure__MGy = 1139,
	ns2__UnitOfMeasure__mGy = 1140,
	ns2__UnitOfMeasure__MH = 1141,
	ns2__UnitOfMeasure__mH = 1142,
	ns2__UnitOfMeasure__MHz = 1143,
	ns2__UnitOfMeasure__mHz = 1144,
	ns2__UnitOfMeasure__mi = 1145,
	ns2__UnitOfMeasure__mi_x002fgal_x005bUK_x005d = 1146,
	ns2__UnitOfMeasure__mi_x002fgal_x005bUS_x005d = 1147,
	ns2__UnitOfMeasure__mi_x002fh = 1148,
	ns2__UnitOfMeasure__mi_x002fin = 1149,
	ns2__UnitOfMeasure__mi_x005bnaut_x005d = 1150,
	ns2__UnitOfMeasure__mi_x005bnautUK_x005d = 1151,
	ns2__UnitOfMeasure__mi_x005bUS_x005d = 1152,
	ns2__UnitOfMeasure__mi_x005bUS_x005d2 = 1153,
	ns2__UnitOfMeasure__mi2 = 1154,
	ns2__UnitOfMeasure__mi3 = 1155,
	ns2__UnitOfMeasure__Mibyte = 1156,
	ns2__UnitOfMeasure__mil = 1157,
	ns2__UnitOfMeasure__mil_x002fa = 1158,
	ns2__UnitOfMeasure__mila = 1159,
	ns2__UnitOfMeasure__min_ = 1160,
	ns2__UnitOfMeasure__min_x002fft = 1161,
	ns2__UnitOfMeasure__min_x002fm = 1162,
	ns2__UnitOfMeasure__mina = 1163,
	ns2__UnitOfMeasure__MJ = 1164,
	ns2__UnitOfMeasure__mJ = 1165,
	ns2__UnitOfMeasure__MJ_x002fa = 1166,
	ns2__UnitOfMeasure__mJ_x002fcm2 = 1167,
	ns2__UnitOfMeasure__MJ_x002fkg = 1168,
	ns2__UnitOfMeasure__MJ_x002fkmol = 1169,
	ns2__UnitOfMeasure__MJ_x002fm = 1170,
	ns2__UnitOfMeasure__mJ_x002fm2 = 1171,
	ns2__UnitOfMeasure__MJ_x002fm3 = 1172,
	ns2__UnitOfMeasure__mL = 1173,
	ns2__UnitOfMeasure__mL_x002fgal_x005bUK_x005d = 1174,
	ns2__UnitOfMeasure__mL_x002fgal_x005bUS_x005d = 1175,
	ns2__UnitOfMeasure__mL_x002fmL = 1176,
	ns2__UnitOfMeasure__mm = 1177,
	ns2__UnitOfMeasure__Mm = 1178,
	ns2__UnitOfMeasure__mm_x002f_x0028mm_x002eK_x0029 = 1179,
	ns2__UnitOfMeasure__mm_x002fa = 1180,
	ns2__UnitOfMeasure__mm_x002fs = 1181,
	ns2__UnitOfMeasure__mm2 = 1182,
	ns2__UnitOfMeasure__mm2_x002fmm2 = 1183,
	ns2__UnitOfMeasure__mm2_x002fs = 1184,
	ns2__UnitOfMeasure__mm3 = 1185,
	ns2__UnitOfMeasure__mm3_x002fJ = 1186,
	ns2__UnitOfMeasure__mmHg_x005b0degC_x005d = 1187,
	ns2__UnitOfMeasure__mmol = 1188,
	ns2__UnitOfMeasure__MN = 1189,
	ns2__UnitOfMeasure__mN = 1190,
	ns2__UnitOfMeasure__mN_x002em2 = 1191,
	ns2__UnitOfMeasure__mN_x002fkm = 1192,
	ns2__UnitOfMeasure__mN_x002fm = 1193,
	ns2__UnitOfMeasure__Mohm = 1194,
	ns2__UnitOfMeasure__mohm = 1195,
	ns2__UnitOfMeasure__mol = 1196,
	ns2__UnitOfMeasure__mol_x002em2_x002f_x0028mol_x002es_x0029 = 1197,
	ns2__UnitOfMeasure__mol_x002f_x0028s_x002em2_x0029 = 1198,
	ns2__UnitOfMeasure__mol_x002fm2 = 1199,
	ns2__UnitOfMeasure__mol_x002fm3 = 1200,
	ns2__UnitOfMeasure__mol_x002fmol = 1201,
	ns2__UnitOfMeasure__mol_x002fs = 1202,
	ns2__UnitOfMeasure__MP = 1203,
	ns2__UnitOfMeasure__mP = 1204,
	ns2__UnitOfMeasure__MPa = 1205,
	ns2__UnitOfMeasure__mPa = 1206,
	ns2__UnitOfMeasure__mPa_x002es = 1207,
	ns2__UnitOfMeasure__MPa_x002es_x002fm = 1208,
	ns2__UnitOfMeasure__MPa_x002fh = 1209,
	ns2__UnitOfMeasure__MPa_x002fm = 1210,
	ns2__UnitOfMeasure__Mpsi = 1211,
	ns2__UnitOfMeasure__mrad = 1212,
	ns2__UnitOfMeasure__Mrad = 1213,
	ns2__UnitOfMeasure__Mrd = 1214,
	ns2__UnitOfMeasure__mrd = 1215,
	ns2__UnitOfMeasure__mrem = 1216,
	ns2__UnitOfMeasure__mrem_x002fh = 1217,
	ns2__UnitOfMeasure__ms = 1218,
	ns2__UnitOfMeasure__MS = 1219,
	ns2__UnitOfMeasure__mS = 1220,
	ns2__UnitOfMeasure__ms_x002fcm = 1221,
	ns2__UnitOfMeasure__mS_x002fcm = 1222,
	ns2__UnitOfMeasure__ms_x002fft = 1223,
	ns2__UnitOfMeasure__ms_x002fin = 1224,
	ns2__UnitOfMeasure__mS_x002fm = 1225,
	ns2__UnitOfMeasure__ms_x002fm = 1226,
	ns2__UnitOfMeasure__ms_x002fs = 1227,
	ns2__UnitOfMeasure__mSv = 1228,
	ns2__UnitOfMeasure__mSv_x002fh = 1229,
	ns2__UnitOfMeasure__mT = 1230,
	ns2__UnitOfMeasure__mT_x002fdm = 1231,
	ns2__UnitOfMeasure__mV = 1232,
	ns2__UnitOfMeasure__MV = 1233,
	ns2__UnitOfMeasure__mV_x002fft = 1234,
	ns2__UnitOfMeasure__mV_x002fm = 1235,
	ns2__UnitOfMeasure__mW = 1236,
	ns2__UnitOfMeasure__MW = 1237,
	ns2__UnitOfMeasure__MW_x002eh = 1238,
	ns2__UnitOfMeasure__MW_x002eh_x002fkg = 1239,
	ns2__UnitOfMeasure__MW_x002eh_x002fm3 = 1240,
	ns2__UnitOfMeasure__mW_x002fm2 = 1241,
	ns2__UnitOfMeasure__mWb = 1242,
	ns2__UnitOfMeasure__MWb = 1243,
	ns2__UnitOfMeasure__N_x002em = 1244,
	ns2__UnitOfMeasure__N_x002em_x002fm = 1245,
	ns2__UnitOfMeasure__N_x002em2 = 1246,
	ns2__UnitOfMeasure__N_x002es_x002fm2 = 1247,
	ns2__UnitOfMeasure__N_x002fm = 1248,
	ns2__UnitOfMeasure__N_x002fm2 = 1249,
	ns2__UnitOfMeasure__N_x002fm3 = 1250,
	ns2__UnitOfMeasure__N_x002fmm2 = 1251,
	ns2__UnitOfMeasure__N_x002fN = 1252,
	ns2__UnitOfMeasure__nA = 1253,
	ns2__UnitOfMeasure__na = 1254,
	ns2__UnitOfMeasure__nAPI = 1255,
	ns2__UnitOfMeasure__nC = 1256,
	ns2__UnitOfMeasure__ncal_x005bth_x005d = 1257,
	ns2__UnitOfMeasure__nCi = 1258,
	ns2__UnitOfMeasure__nEuc = 1259,
	ns2__UnitOfMeasure__neV = 1260,
	ns2__UnitOfMeasure__nF = 1261,
	ns2__UnitOfMeasure__ng = 1262,
	ns2__UnitOfMeasure__ng_x002fg = 1263,
	ns2__UnitOfMeasure__ng_x002fl = 1264,
	ns2__UnitOfMeasure__ng_x002fm3 = 1265,
	ns2__UnitOfMeasure__ng_x002fmg = 1266,
	ns2__UnitOfMeasure__ng_x002fml = 1267,
	ns2__UnitOfMeasure__ngauss = 1268,
	ns2__UnitOfMeasure__nGy = 1269,
	ns2__UnitOfMeasure__nH = 1270,
	ns2__UnitOfMeasure__nHz = 1271,
	ns2__UnitOfMeasure__nJ = 1272,
	ns2__UnitOfMeasure__nm = 1273,
	ns2__UnitOfMeasure__nm_x002fs = 1274,
	ns2__UnitOfMeasure__nN = 1275,
	ns2__UnitOfMeasure__nohm = 1276,
	ns2__UnitOfMeasure__nohm_x002emil2_x002fft = 1277,
	ns2__UnitOfMeasure__nohm_x002emm2_x002fm = 1278,
	ns2__UnitOfMeasure__nP = 1279,
	ns2__UnitOfMeasure__nPa = 1280,
	ns2__UnitOfMeasure__nrd = 1281,
	ns2__UnitOfMeasure__nS = 1282,
	ns2__UnitOfMeasure__ns = 1283,
	ns2__UnitOfMeasure__ns_x002fft = 1284,
	ns2__UnitOfMeasure__ns_x002fm = 1285,
	ns2__UnitOfMeasure__nT = 1286,
	ns2__UnitOfMeasure__nV = 1287,
	ns2__UnitOfMeasure__nW = 1288,
	ns2__UnitOfMeasure__nWb = 1289,
	ns2__UnitOfMeasure__Oe = 1290,
	ns2__UnitOfMeasure__ohm = 1291,
	ns2__UnitOfMeasure__ohm_x002ecm = 1292,
	ns2__UnitOfMeasure__ohm_x002em = 1293,
	ns2__UnitOfMeasure__ohm_x002em2_x002fm = 1294,
	ns2__UnitOfMeasure__ohm_x002fm = 1295,
	ns2__UnitOfMeasure__ozf = 1296,
	ns2__UnitOfMeasure__ozm = 1297,
	ns2__UnitOfMeasure__ozm_x005btroy_x005d = 1298,
	ns2__UnitOfMeasure__pA = 1299,
	ns2__UnitOfMeasure__Pa = 1300,
	ns2__UnitOfMeasure__Pa_x002es = 1301,
	ns2__UnitOfMeasure__Pa_x002es_x002em3_x002fkg = 1302,
	ns2__UnitOfMeasure__Pa_x002es_x002fm3 = 1303,
	ns2__UnitOfMeasure__Pa_x002es2_x002fm3 = 1304,
	ns2__UnitOfMeasure__Pa_x002f_x00281000m3_x002fday_x0029 = 1305,
	ns2__UnitOfMeasure__Pa_x002f_x00281000m3_x002fday_x00292 = 1306,
	ns2__UnitOfMeasure__Pa_x002f_x0028m3_x002fday_x0029 = 1307,
	ns2__UnitOfMeasure__Pa_x002f_x0028m3_x002fday_x00292 = 1308,
	ns2__UnitOfMeasure__Pa_x002fh = 1309,
	ns2__UnitOfMeasure__Pa_x002fm = 1310,
	ns2__UnitOfMeasure__Pa_x002fm3 = 1311,
	ns2__UnitOfMeasure__Pa_x002fs = 1312,
	ns2__UnitOfMeasure__Pa2 = 1313,
	ns2__UnitOfMeasure__Pa2_x002f_x0028Pa_x002es_x0029 = 1314,
	ns2__UnitOfMeasure__pC = 1315,
	ns2__UnitOfMeasure__pcal_x005bth_x005d = 1316,
	ns2__UnitOfMeasure__pCi = 1317,
	ns2__UnitOfMeasure__pCi_x002fg = 1318,
	ns2__UnitOfMeasure__pdl = 1319,
	ns2__UnitOfMeasure__pdl_x002ecm2 = 1320,
	ns2__UnitOfMeasure__pdl_x002eft = 1321,
	ns2__UnitOfMeasure__pdl_x002fcm = 1322,
	ns2__UnitOfMeasure__pEuc = 1323,
	ns2__UnitOfMeasure__peV = 1324,
	ns2__UnitOfMeasure__pF = 1325,
	ns2__UnitOfMeasure__pg = 1326,
	ns2__UnitOfMeasure__pgauss = 1327,
	ns2__UnitOfMeasure__pGy = 1328,
	ns2__UnitOfMeasure__pHz = 1329,
	ns2__UnitOfMeasure__pJ = 1330,
	ns2__UnitOfMeasure__pm = 1331,
	ns2__UnitOfMeasure__pN = 1332,
	ns2__UnitOfMeasure__pohm = 1333,
	ns2__UnitOfMeasure__pP = 1334,
	ns2__UnitOfMeasure__pPa = 1335,
	ns2__UnitOfMeasure__ppk = 1336,
	ns2__UnitOfMeasure__ppm = 1337,
	ns2__UnitOfMeasure__ppm_x005bmass_x005d = 1338,
	ns2__UnitOfMeasure__ppm_x005bvol_x005d = 1339,
	ns2__UnitOfMeasure__ppm_x005bvol_x005d_x002fdegC = 1340,
	ns2__UnitOfMeasure__ppm_x005bvol_x005d_x002fdegF = 1341,
	ns2__UnitOfMeasure__prd = 1342,
	ns2__UnitOfMeasure__pS = 1343,
	ns2__UnitOfMeasure__ps = 1344,
	ns2__UnitOfMeasure__psi = 1345,
	ns2__UnitOfMeasure__psi_x002ed_x002fbbl = 1346,
	ns2__UnitOfMeasure__psi_x002es = 1347,
	ns2__UnitOfMeasure__psi_x002f_x00281000000ft3_x002fday_x0029 = 1348,
	ns2__UnitOfMeasure__psi_x002f_x00281000000ft3_x002fday_x00292 = 1349,
	ns2__UnitOfMeasure__psi_x002f_x00281000ft3_x002fday_x0029 = 1350,
	ns2__UnitOfMeasure__psi_x002f_x00281000ft3_x002fday_x00292 = 1351,
	ns2__UnitOfMeasure__psi_x002f_x0028bbl_x002fday_x0029 = 1352,
	ns2__UnitOfMeasure__psi_x002f_x0028bbl_x002fday_x00292 = 1353,
	ns2__UnitOfMeasure__psi_x002fft = 1354,
	ns2__UnitOfMeasure__psi_x002fh = 1355,
	ns2__UnitOfMeasure__psi_x002fm = 1356,
	ns2__UnitOfMeasure__psi_x002fmin = 1357,
	ns2__UnitOfMeasure__psi2 = 1358,
	ns2__UnitOfMeasure__psi2_x002ed_x002f_x0028cP_x002eft3_x0029 = 1359,
	ns2__UnitOfMeasure__psi2_x002fcP = 1360,
	ns2__UnitOfMeasure__pT = 1361,
	ns2__UnitOfMeasure__pt_x005bUK_x005d = 1362,
	ns2__UnitOfMeasure__pt_x005bUK_x005d_x002f_x0028hp_x002eh_x0029 = 1363,
	ns2__UnitOfMeasure__pt_x005bUS_x005d = 1364,
	ns2__UnitOfMeasure__pV = 1365,
	ns2__UnitOfMeasure__pW = 1366,
	ns2__UnitOfMeasure__pWb = 1367,
	ns2__UnitOfMeasure__qt_x005bUK_x005d = 1368,
	ns2__UnitOfMeasure__qt_x005bUS_x005d = 1369,
	ns2__UnitOfMeasure__quad = 1370,
	ns2__UnitOfMeasure__quad_x002fa = 1371,
	ns2__UnitOfMeasure__rad = 1372,
	ns2__UnitOfMeasure__rad_x002fft = 1373,
	ns2__UnitOfMeasure__rad_x002fft3 = 1374,
	ns2__UnitOfMeasure__rad_x002fm = 1375,
	ns2__UnitOfMeasure__rad_x002fm3 = 1376,
	ns2__UnitOfMeasure__rad_x002fs = 1377,
	ns2__UnitOfMeasure__rad_x002fs2 = 1378,
	ns2__UnitOfMeasure__rd = 1379,
	ns2__UnitOfMeasure__rem = 1380,
	ns2__UnitOfMeasure__rem_x002fh = 1381,
	ns2__UnitOfMeasure__rev = 1382,
	ns2__UnitOfMeasure__rev_x002fft = 1383,
	ns2__UnitOfMeasure__rev_x002fm = 1384,
	ns2__UnitOfMeasure__rev_x002fs = 1385,
	ns2__UnitOfMeasure__rod_x005bUS_x005d = 1386,
	ns2__UnitOfMeasure__rpm = 1387,
	ns2__UnitOfMeasure__rpm_x002fs = 1388,
	ns2__UnitOfMeasure__s_x002fcm = 1389,
	ns2__UnitOfMeasure__s_x002fft = 1390,
	ns2__UnitOfMeasure__s_x002fft3 = 1391,
	ns2__UnitOfMeasure__s_x002fin = 1392,
	ns2__UnitOfMeasure__s_x002fkg = 1393,
	ns2__UnitOfMeasure__s_x002fL = 1394,
	ns2__UnitOfMeasure__S_x002fm = 1395,
	ns2__UnitOfMeasure__s_x002fm = 1396,
	ns2__UnitOfMeasure__s_x002fm3 = 1397,
	ns2__UnitOfMeasure__s_x002fqt_x005bUK_x005d = 1398,
	ns2__UnitOfMeasure__s_x002fqt_x005bUS_x005d = 1399,
	ns2__UnitOfMeasure__s_x002fs = 1400,
	ns2__UnitOfMeasure__sack_x005b94lbm_x005d = 1401,
	ns2__UnitOfMeasure__seca = 1402,
	ns2__UnitOfMeasure__section = 1403,
	ns2__UnitOfMeasure__sr = 1404,
	ns2__UnitOfMeasure__St = 1405,
	ns2__UnitOfMeasure__Sv = 1406,
	ns2__UnitOfMeasure__Sv_x002fh = 1407,
	ns2__UnitOfMeasure__Sv_x002fs = 1408,
	ns2__UnitOfMeasure__t_x002fa = 1409,
	ns2__UnitOfMeasure__t_x002fd = 1410,
	ns2__UnitOfMeasure__t_x002fh = 1411,
	ns2__UnitOfMeasure__T_x002fm = 1412,
	ns2__UnitOfMeasure__t_x002fm3 = 1413,
	ns2__UnitOfMeasure__t_x002fmin = 1414,
	ns2__UnitOfMeasure__TA = 1415,
	ns2__UnitOfMeasure__Ta_x005bt_x005d = 1416,
	ns2__UnitOfMeasure__TBq = 1417,
	ns2__UnitOfMeasure__TC = 1418,
	ns2__UnitOfMeasure__Tcal_x005bth_x005d = 1419,
	ns2__UnitOfMeasure__TD_x005bAPI_x005d = 1420,
	ns2__UnitOfMeasure__TD_x005bAPI_x005d_x002em = 1421,
	ns2__UnitOfMeasure__TD_x005bAPI_x005d_x002f_x0028Pa_x002es_x0029 = 1422,
	ns2__UnitOfMeasure__TEuc = 1423,
	ns2__UnitOfMeasure__TeV = 1424,
	ns2__UnitOfMeasure__TF = 1425,
	ns2__UnitOfMeasure__Tg = 1426,
	ns2__UnitOfMeasure__Tgauss = 1427,
	ns2__UnitOfMeasure__TGy = 1428,
	ns2__UnitOfMeasure__TH = 1429,
	ns2__UnitOfMeasure__therm_x005bEC_x005d = 1430,
	ns2__UnitOfMeasure__therm_x005bUK_x005d = 1431,
	ns2__UnitOfMeasure__therm_x005bUS_x005d = 1432,
	ns2__UnitOfMeasure__THz = 1433,
	ns2__UnitOfMeasure__TJ = 1434,
	ns2__UnitOfMeasure__TJ_x002fa = 1435,
	ns2__UnitOfMeasure__Tm = 1436,
	ns2__UnitOfMeasure__TN = 1437,
	ns2__UnitOfMeasure__Tohm = 1438,
	ns2__UnitOfMeasure__ton_x005bUK_x005d = 1439,
	ns2__UnitOfMeasure__ton_x005bUK_x005d_x002fa = 1440,
	ns2__UnitOfMeasure__ton_x005bUK_x005d_x002fd = 1441,
	ns2__UnitOfMeasure__ton_x005bUK_x005d_x002fh = 1442,
	ns2__UnitOfMeasure__ton_x005bUK_x005d_x002fmin = 1443,
	ns2__UnitOfMeasure__ton_x005bUS_x005d = 1444,
	ns2__UnitOfMeasure__ton_x005bUS_x005d_x002fa = 1445,
	ns2__UnitOfMeasure__ton_x005bUS_x005d_x002fd = 1446,
	ns2__UnitOfMeasure__ton_x005bUS_x005d_x002fft2 = 1447,
	ns2__UnitOfMeasure__ton_x005bUS_x005d_x002fh = 1448,
	ns2__UnitOfMeasure__ton_x005bUS_x005d_x002fmin = 1449,
	ns2__UnitOfMeasure__tonf_x005bUK_x005d = 1450,
	ns2__UnitOfMeasure__tonf_x005bUK_x005d_x002eft2 = 1451,
	ns2__UnitOfMeasure__tonf_x005bUK_x005d_x002fft = 1452,
	ns2__UnitOfMeasure__tonf_x005bUK_x005d_x002fft2 = 1453,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d = 1454,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002eft = 1455,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002eft2 = 1456,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002emi = 1457,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002emi_x002fbbl = 1458,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002emi_x002fft = 1459,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002fft = 1460,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002fft2 = 1461,
	ns2__UnitOfMeasure__tonf_x005bUS_x005d_x002fin2 = 1462,
	ns2__UnitOfMeasure__tonRefrig = 1463,
	ns2__UnitOfMeasure__torr = 1464,
	ns2__UnitOfMeasure__TP = 1465,
	ns2__UnitOfMeasure__TPa = 1466,
	ns2__UnitOfMeasure__Trd = 1467,
	ns2__UnitOfMeasure__TS = 1468,
	ns2__UnitOfMeasure__TT = 1469,
	ns2__UnitOfMeasure__TV = 1470,
	ns2__UnitOfMeasure__TW = 1471,
	ns2__UnitOfMeasure__TW_x002eh = 1472,
	ns2__UnitOfMeasure__TWb = 1473,
	ns2__UnitOfMeasure__uA = 1474,
	ns2__UnitOfMeasure__uA_x002fcm2 = 1475,
	ns2__UnitOfMeasure__uA_x002fin2 = 1476,
	ns2__UnitOfMeasure__ubar = 1477,
	ns2__UnitOfMeasure__uC = 1478,
	ns2__UnitOfMeasure__ucal_x005bth_x005d = 1479,
	ns2__UnitOfMeasure__ucal_x005bth_x005d_x002f_x0028s_x002ecm2_x0029 = 1480,
	ns2__UnitOfMeasure__ucal_x005bth_x005d_x002fs = 1481,
	ns2__UnitOfMeasure__uCi = 1482,
	ns2__UnitOfMeasure__uEuc = 1483,
	ns2__UnitOfMeasure__ueV = 1484,
	ns2__UnitOfMeasure__uF = 1485,
	ns2__UnitOfMeasure__uF_x002fm = 1486,
	ns2__UnitOfMeasure__ug = 1487,
	ns2__UnitOfMeasure__ug_x002fcm3 = 1488,
	ns2__UnitOfMeasure__ug_x002fg = 1489,
	ns2__UnitOfMeasure__ug_x002fmg = 1490,
	ns2__UnitOfMeasure__ugauss = 1491,
	ns2__UnitOfMeasure__uGy = 1492,
	ns2__UnitOfMeasure__uH = 1493,
	ns2__UnitOfMeasure__uH_x002fm = 1494,
	ns2__UnitOfMeasure__uHz = 1495,
	ns2__UnitOfMeasure__uJ = 1496,
	ns2__UnitOfMeasure__um = 1497,
	ns2__UnitOfMeasure__um_x002fs = 1498,
	ns2__UnitOfMeasure__um2 = 1499,
	ns2__UnitOfMeasure__um2_x002em = 1500,
	ns2__UnitOfMeasure__umHg_x005b0degC_x005d = 1501,
	ns2__UnitOfMeasure__umol = 1502,
	ns2__UnitOfMeasure__uN = 1503,
	ns2__UnitOfMeasure__unitless = 1504,
	ns2__UnitOfMeasure__uohm = 1505,
	ns2__UnitOfMeasure__uohm_x002fft = 1506,
	ns2__UnitOfMeasure__uohm_x002fm = 1507,
	ns2__UnitOfMeasure__uP = 1508,
	ns2__UnitOfMeasure__uPa = 1509,
	ns2__UnitOfMeasure__upsi = 1510,
	ns2__UnitOfMeasure__urad = 1511,
	ns2__UnitOfMeasure__urd = 1512,
	ns2__UnitOfMeasure__us = 1513,
	ns2__UnitOfMeasure__uS = 1514,
	ns2__UnitOfMeasure__us_x002fft = 1515,
	ns2__UnitOfMeasure__us_x002fin = 1516,
	ns2__UnitOfMeasure__us_x002fm = 1517,
	ns2__UnitOfMeasure__uT = 1518,
	ns2__UnitOfMeasure__uV = 1519,
	ns2__UnitOfMeasure__uV_x002fft = 1520,
	ns2__UnitOfMeasure__uV_x002fm = 1521,
	ns2__UnitOfMeasure__uW = 1522,
	ns2__UnitOfMeasure__uW_x002fm3 = 1523,
	ns2__UnitOfMeasure__uWb = 1524,
	ns2__UnitOfMeasure__V_x002fB = 1525,
	ns2__UnitOfMeasure__V_x002fdB = 1526,
	ns2__UnitOfMeasure__V_x002fm = 1527,
	ns2__UnitOfMeasure__W_x002em2_x002eK_x002f_x0028J_x002eK_x0029 = 1528,
	ns2__UnitOfMeasure__W_x002f_x0028m_x002eK_x0029 = 1529,
	ns2__UnitOfMeasure__W_x002f_x0028m2_x002eK_x0029 = 1530,
	ns2__UnitOfMeasure__W_x002f_x0028m2_x002esr_x0029 = 1531,
	ns2__UnitOfMeasure__W_x002f_x0028m3_x002eK_x0029 = 1532,
	ns2__UnitOfMeasure__W_x002fcm2 = 1533,
	ns2__UnitOfMeasure__W_x002fK = 1534,
	ns2__UnitOfMeasure__W_x002fkW = 1535,
	ns2__UnitOfMeasure__W_x002fm2 = 1536,
	ns2__UnitOfMeasure__W_x002fm3 = 1537,
	ns2__UnitOfMeasure__W_x002fmm2 = 1538,
	ns2__UnitOfMeasure__W_x002fsr = 1539,
	ns2__UnitOfMeasure__W_x002fW = 1540,
	ns2__UnitOfMeasure__Wb = 1541,
	ns2__UnitOfMeasure__Wb_x002em = 1542,
	ns2__UnitOfMeasure__Wb_x002fm = 1543,
	ns2__UnitOfMeasure__Wb_x002fmm = 1544,
	ns2__UnitOfMeasure__wk = 1545,
	ns2__UnitOfMeasure__yd = 1546,
	ns2__UnitOfMeasure__yd_x005bBnA_x005d = 1547,
	ns2__UnitOfMeasure__yd_x005bBnB_x005d = 1548,
	ns2__UnitOfMeasure__yd_x005bCla_x005d = 1549,
	ns2__UnitOfMeasure__yd_x005bInd_x005d = 1550,
	ns2__UnitOfMeasure__yd_x005bInd37_x005d = 1551,
	ns2__UnitOfMeasure__yd_x005bInd62_x005d = 1552,
	ns2__UnitOfMeasure__yd_x005bInd75_x005d = 1553,
	ns2__UnitOfMeasure__yd_x005bSe_x005d = 1554,
	ns2__UnitOfMeasure__yd_x005bSeT_x005d = 1555,
	ns2__UnitOfMeasure__yd_x005bUS_x005d = 1556,
	ns2__UnitOfMeasure__yd2 = 1557,
	ns2__UnitOfMeasure__yd3 = 1558
};
#endif

/* testh.h:2658 */
#ifndef SOAP_TYPE_ns2__LegacyMassPerVolumeUom
#define SOAP_TYPE_ns2__LegacyMassPerVolumeUom (285)
/* ns2:LegacyMassPerVolumeUom */
enum ns2__LegacyMassPerVolumeUom {
	ns2__LegacyMassPerVolumeUom__kg_x002fscm = 0,
	ns2__LegacyMassPerVolumeUom__lbm_x002f1000scf = 1,
	ns2__LegacyMassPerVolumeUom__lbm_x002f1E6scf = 2
};
#endif

/* testh.h:2668 */
#ifndef SOAP_TYPE_ns2__LegacyPressurePerVolumeUom
#define SOAP_TYPE_ns2__LegacyPressurePerVolumeUom (286)
/* ns2:LegacyPressurePerVolumeUom */
enum ns2__LegacyPressurePerVolumeUom {
	ns2__LegacyPressurePerVolumeUom__Pa_x002fscm = 0,
	ns2__LegacyPressurePerVolumeUom__psi_x002f1000scf = 1,
	ns2__LegacyPressurePerVolumeUom__psi_x002f1E6scf = 2
};
#endif

/* testh.h:2678 */
#ifndef SOAP_TYPE_ns2__LegacyPressureUom
#define SOAP_TYPE_ns2__LegacyPressureUom (287)
/* ns2:LegacyPressureUom */
enum ns2__LegacyPressureUom {
	ns2__LegacyPressureUom__psia = 0,
	ns2__LegacyPressureUom__psig = 1
};
#endif

/* testh.h:2687 */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerAreaUom
#define SOAP_TYPE_ns2__LegacyVolumePerAreaUom (288)
/* ns2:LegacyVolumePerAreaUom */
enum ns2__LegacyVolumePerAreaUom {
	ns2__LegacyVolumePerAreaUom__1E6stb_x002facre = 0,
	ns2__LegacyVolumePerAreaUom__scf_x002fft2 = 1,
	ns2__LegacyVolumePerAreaUom__scm_x002fm2 = 2,
	ns2__LegacyVolumePerAreaUom__stb_x002facre = 3
};
#endif

/* testh.h:2698 */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerTimeUom
#define SOAP_TYPE_ns2__LegacyVolumePerTimeUom (289)
/* ns2:LegacyVolumePerTimeUom */
enum ns2__LegacyVolumePerTimeUom {
	ns2__LegacyVolumePerTimeUom__1000scf_x002fd = 0,
	ns2__LegacyVolumePerTimeUom__1000scf_x002fmo = 1,
	ns2__LegacyVolumePerTimeUom__1000scm_x002fd = 2,
	ns2__LegacyVolumePerTimeUom__1000scm_x002fmo = 3,
	ns2__LegacyVolumePerTimeUom__1000stb_x002fd = 4,
	ns2__LegacyVolumePerTimeUom__1000stb_x002fmo = 5,
	ns2__LegacyVolumePerTimeUom__1E6scf_x002fd = 6,
	ns2__LegacyVolumePerTimeUom__1E6scf_x002fmo = 7,
	ns2__LegacyVolumePerTimeUom__1E6scm_x002fd = 8,
	ns2__LegacyVolumePerTimeUom__1E6scm_x002fmo = 9,
	ns2__LegacyVolumePerTimeUom__1E6stb_x002fd = 10,
	ns2__LegacyVolumePerTimeUom__1E6stb_x002fmo = 11,
	ns2__LegacyVolumePerTimeUom__scf_x002fd = 12,
	ns2__LegacyVolumePerTimeUom__scm_x002fd = 13,
	ns2__LegacyVolumePerTimeUom__scm_x002fh = 14,
	ns2__LegacyVolumePerTimeUom__scm_x002fmo = 15,
	ns2__LegacyVolumePerTimeUom__scm_x002fs = 16,
	ns2__LegacyVolumePerTimeUom__stb_x002fd = 17,
	ns2__LegacyVolumePerTimeUom__stb_x002fmo = 18
};
#endif

/* testh.h:2724 */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerVolumeUom
#define SOAP_TYPE_ns2__LegacyVolumePerVolumeUom (290)
/* ns2:LegacyVolumePerVolumeUom */
enum ns2__LegacyVolumePerVolumeUom {
	ns2__LegacyVolumePerVolumeUom__1000scf_x002fstb = 0,
	ns2__LegacyVolumePerVolumeUom__1E6scf_x002fstb = 1,
	ns2__LegacyVolumePerVolumeUom__1E6stb_x002facre_x002eft = 2,
	ns2__LegacyVolumePerVolumeUom__acre_x002eft_x002f1E6stb = 3,
	ns2__LegacyVolumePerVolumeUom__bbl_x002f1000scf = 4,
	ns2__LegacyVolumePerVolumeUom__bbl_x002f1E6scf = 5,
	ns2__LegacyVolumePerVolumeUom__bbl_x002fscf = 6,
	ns2__LegacyVolumePerVolumeUom__bbl_x002fstb = 7,
	ns2__LegacyVolumePerVolumeUom__ft3_x002fscf = 8,
	ns2__LegacyVolumePerVolumeUom__ft3_x002fstb = 9,
	ns2__LegacyVolumePerVolumeUom__galUS_x002f1000scf = 10,
	ns2__LegacyVolumePerVolumeUom__m3_x002fscm = 11,
	ns2__LegacyVolumePerVolumeUom__ml_x002fscm = 12,
	ns2__LegacyVolumePerVolumeUom__scf_x002fbbl = 13,
	ns2__LegacyVolumePerVolumeUom__scf_x002fft3 = 14,
	ns2__LegacyVolumePerVolumeUom__scf_x002fscf = 15,
	ns2__LegacyVolumePerVolumeUom__scf_x002fstb = 16,
	ns2__LegacyVolumePerVolumeUom__scm_x002fm3 = 17,
	ns2__LegacyVolumePerVolumeUom__scm_x002fscm = 18,
	ns2__LegacyVolumePerVolumeUom__scm_x002fstb = 19,
	ns2__LegacyVolumePerVolumeUom__stb_x002f1000scf = 20,
	ns2__LegacyVolumePerVolumeUom__stb_x002f1000scm = 21,
	ns2__LegacyVolumePerVolumeUom__stb_x002f1E6scf = 22,
	ns2__LegacyVolumePerVolumeUom__stb_x002f1E6scm = 23,
	ns2__LegacyVolumePerVolumeUom__stb_x002fbbl = 24,
	ns2__LegacyVolumePerVolumeUom__stb_x002fscm = 25,
	ns2__LegacyVolumePerVolumeUom__stb_x002fstb = 26
};
#endif

/* testh.h:2758 */
#ifndef SOAP_TYPE_ns2__LegacyVolumeUom
#define SOAP_TYPE_ns2__LegacyVolumeUom (291)
/* ns2:LegacyVolumeUom */
enum ns2__LegacyVolumeUom {
	ns2__LegacyVolumeUom__1000scm = 0,
	ns2__LegacyVolumeUom__1000stb = 1,
	ns2__LegacyVolumeUom__1E6scf = 2,
	ns2__LegacyVolumeUom__1E6scm = 3,
	ns2__LegacyVolumeUom__1E6stb = 4,
	ns2__LegacyVolumeUom__1E9scf = 5,
	ns2__LegacyVolumeUom__kscf = 6,
	ns2__LegacyVolumeUom__scf = 7,
	ns2__LegacyVolumeUom__scm = 8,
	ns2__LegacyVolumeUom__stb = 9
};
#endif

/* testh.h:2775 */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseUom
#define SOAP_TYPE_ns2__AbsorbedDoseUom (292)
/* ns2:AbsorbedDoseUom */
enum ns2__AbsorbedDoseUom {
	ns2__AbsorbedDoseUom__cGy = 0,
	ns2__AbsorbedDoseUom__crd = 1,
	ns2__AbsorbedDoseUom__dGy = 2,
	ns2__AbsorbedDoseUom__drd = 3,
	ns2__AbsorbedDoseUom__EGy = 4,
	ns2__AbsorbedDoseUom__Erd = 5,
	ns2__AbsorbedDoseUom__fGy = 6,
	ns2__AbsorbedDoseUom__frd = 7,
	ns2__AbsorbedDoseUom__GGy = 8,
	ns2__AbsorbedDoseUom__Grd = 9,
	ns2__AbsorbedDoseUom__Gy = 10,
	ns2__AbsorbedDoseUom__kGy = 11,
	ns2__AbsorbedDoseUom__krd = 12,
	ns2__AbsorbedDoseUom__mGy = 13,
	ns2__AbsorbedDoseUom__MGy = 14,
	ns2__AbsorbedDoseUom__Mrd = 15,
	ns2__AbsorbedDoseUom__mrd = 16,
	ns2__AbsorbedDoseUom__nGy = 17,
	ns2__AbsorbedDoseUom__nrd = 18,
	ns2__AbsorbedDoseUom__pGy = 19,
	ns2__AbsorbedDoseUom__prd = 20,
	ns2__AbsorbedDoseUom__rd = 21,
	ns2__AbsorbedDoseUom__TGy = 22,
	ns2__AbsorbedDoseUom__Trd = 23,
	ns2__AbsorbedDoseUom__uGy = 24,
	ns2__AbsorbedDoseUom__urd = 25
};
#endif

/* testh.h:2912 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUom
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUom (293)
/* ns2:ActivityOfRadioactivityPerVolumeUom */
enum ns2__ActivityOfRadioactivityPerVolumeUom {
	ns2__ActivityOfRadioactivityPerVolumeUom__Bq_x002fm3 = 0
};
#endif

/* testh.h:2920 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityUom
#define SOAP_TYPE_ns2__ActivityOfRadioactivityUom (294)
/* ns2:ActivityOfRadioactivityUom */
enum ns2__ActivityOfRadioactivityUom {
	ns2__ActivityOfRadioactivityUom__Bq = 0,
	ns2__ActivityOfRadioactivityUom__Ci = 1,
	ns2__ActivityOfRadioactivityUom__GBq = 2,
	ns2__ActivityOfRadioactivityUom__MBq = 3,
	ns2__ActivityOfRadioactivityUom__mCi = 4,
	ns2__ActivityOfRadioactivityUom__nCi = 5,
	ns2__ActivityOfRadioactivityUom__pCi = 6,
	ns2__ActivityOfRadioactivityUom__TBq = 7,
	ns2__ActivityOfRadioactivityUom__uCi = 8
};
#endif

/* testh.h:2972 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUom (295)
/* ns2:AmountOfSubstancePerAmountOfSubstanceUom */
enum ns2__AmountOfSubstancePerAmountOfSubstanceUom {
	ns2__AmountOfSubstancePerAmountOfSubstanceUom___x0025 = 0,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom___x0025_x005bmolar_x005d = 1,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom__Euc = 2,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom__mol_x002fmol = 3,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom__nEuc = 4,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom__ppk = 5,
	ns2__AmountOfSubstancePerAmountOfSubstanceUom__ppm = 6
};
#endif

/* testh.h:3014 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaUom (296)
/* ns2:AmountOfSubstancePerAreaUom */
enum ns2__AmountOfSubstancePerAreaUom {
	ns2__AmountOfSubstancePerAreaUom__mol_x002fm2 = 0
};
#endif

/* testh.h:3026 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUom (297)
/* ns2:AmountOfSubstancePerTimePerAreaUom */
enum ns2__AmountOfSubstancePerTimePerAreaUom {
	ns2__AmountOfSubstancePerTimePerAreaUom__lbmol_x002f_x0028h_x002eft2_x0029 = 0,
	ns2__AmountOfSubstancePerTimePerAreaUom__lbmol_x002f_x0028s_x002eft2_x0029 = 1,
	ns2__AmountOfSubstancePerTimePerAreaUom__mol_x002f_x0028s_x002em2_x0029 = 2
};
#endif

/* testh.h:3048 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeUom (298)
/* ns2:AmountOfSubstancePerTimeUom */
enum ns2__AmountOfSubstancePerTimeUom {
	ns2__AmountOfSubstancePerTimeUom__kat = 0,
	ns2__AmountOfSubstancePerTimeUom__kmol_x002fh = 1,
	ns2__AmountOfSubstancePerTimeUom__kmol_x002fs = 2,
	ns2__AmountOfSubstancePerTimeUom__lbmol_x002fh = 3,
	ns2__AmountOfSubstancePerTimeUom__lbmol_x002fs = 4,
	ns2__AmountOfSubstancePerTimeUom__mol_x002fs = 5
};
#endif

/* testh.h:3085 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUom (299)
/* ns2:AmountOfSubstancePerVolumeUom */
enum ns2__AmountOfSubstancePerVolumeUom {
	ns2__AmountOfSubstancePerVolumeUom__kmol_x002fm3 = 0,
	ns2__AmountOfSubstancePerVolumeUom__lbmol_x002fft3 = 1,
	ns2__AmountOfSubstancePerVolumeUom__lbmol_x002fgal_x005bUK_x005d = 2,
	ns2__AmountOfSubstancePerVolumeUom__lbmol_x002fgal_x005bUS_x005d = 3,
	ns2__AmountOfSubstancePerVolumeUom__mol_x002fm3 = 4
};
#endif

/* testh.h:3117 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceUom
#define SOAP_TYPE_ns2__AmountOfSubstanceUom (300)
/* ns2:AmountOfSubstanceUom */
enum ns2__AmountOfSubstanceUom {
	ns2__AmountOfSubstanceUom__kmol = 0,
	ns2__AmountOfSubstanceUom__lbmol = 1,
	ns2__AmountOfSubstanceUom__mmol = 2,
	ns2__AmountOfSubstanceUom__mol = 3,
	ns2__AmountOfSubstanceUom__umol = 4
};
#endif

/* testh.h:3149 */
#ifndef SOAP_TYPE_ns2__AnglePerLengthUom
#define SOAP_TYPE_ns2__AnglePerLengthUom (301)
/* ns2:AnglePerLengthUom */
enum ns2__AnglePerLengthUom {
	ns2__AnglePerLengthUom__0_x002e01_x0020dega_x002fft = 0,
	ns2__AnglePerLengthUom__1_x002f30_x0020dega_x002fft = 1,
	ns2__AnglePerLengthUom__1_x002f30_x0020dega_x002fm = 2,
	ns2__AnglePerLengthUom__dega_x002fft = 3,
	ns2__AnglePerLengthUom__dega_x002fm = 4,
	ns2__AnglePerLengthUom__rad_x002fft = 5,
	ns2__AnglePerLengthUom__rad_x002fm = 6,
	ns2__AnglePerLengthUom__rev_x002fft = 7,
	ns2__AnglePerLengthUom__rev_x002fm = 8
};
#endif

/* testh.h:3201 */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeUom
#define SOAP_TYPE_ns2__AnglePerVolumeUom (302)
/* ns2:AnglePerVolumeUom */
enum ns2__AnglePerVolumeUom {
	ns2__AnglePerVolumeUom__rad_x002fft3 = 0,
	ns2__AnglePerVolumeUom__rad_x002fm3 = 1
};
#endif

/* testh.h:3218 */
#ifndef SOAP_TYPE_ns2__AngularAccelerationUom
#define SOAP_TYPE_ns2__AngularAccelerationUom (303)
/* ns2:AngularAccelerationUom */
enum ns2__AngularAccelerationUom {
	ns2__AngularAccelerationUom__rad_x002fs2 = 0,
	ns2__AngularAccelerationUom__rpm_x002fs = 1
};
#endif

/* testh.h:3235 */
#ifndef SOAP_TYPE_ns2__AngularVelocityUom
#define SOAP_TYPE_ns2__AngularVelocityUom (304)
/* ns2:AngularVelocityUom */
enum ns2__AngularVelocityUom {
	ns2__AngularVelocityUom__dega_x002fh = 0,
	ns2__AngularVelocityUom__dega_x002fmin = 1,
	ns2__AngularVelocityUom__dega_x002fs = 2,
	ns2__AngularVelocityUom__rad_x002fs = 3,
	ns2__AngularVelocityUom__rev_x002fs = 4,
	ns2__AngularVelocityUom__rpm = 5
};
#endif

/* testh.h:3272 */
#ifndef SOAP_TYPE_ns2__APIGammaRayUom
#define SOAP_TYPE_ns2__APIGammaRayUom (305)
/* ns2:APIGammaRayUom */
enum ns2__APIGammaRayUom {
	ns2__APIGammaRayUom__gAPI = 0
};
#endif

/* testh.h:3284 */
#ifndef SOAP_TYPE_ns2__APIGravityUom
#define SOAP_TYPE_ns2__APIGravityUom (306)
/* ns2:APIGravityUom */
enum ns2__APIGravityUom {
	ns2__APIGravityUom__dAPI = 0
};
#endif

/* testh.h:3296 */
#ifndef SOAP_TYPE_ns2__APINeutronUom
#define SOAP_TYPE_ns2__APINeutronUom (307)
/* ns2:APINeutronUom */
enum ns2__APINeutronUom {
	ns2__APINeutronUom__nAPI = 0
};
#endif

/* testh.h:3308 */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUom
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUom (308)
/* ns2:AreaPerAmountOfSubstanceUom */
enum ns2__AreaPerAmountOfSubstanceUom {
	ns2__AreaPerAmountOfSubstanceUom__m2_x002fmol = 0
};
#endif

/* testh.h:3320 */
#ifndef SOAP_TYPE_ns2__AreaPerAreaUom
#define SOAP_TYPE_ns2__AreaPerAreaUom (309)
/* ns2:AreaPerAreaUom */
enum ns2__AreaPerAreaUom {
	ns2__AreaPerAreaUom___x0025 = 0,
	ns2__AreaPerAreaUom___x0025_x005barea_x005d = 1,
	ns2__AreaPerAreaUom__cEuc = 2,
	ns2__AreaPerAreaUom__Euc = 3,
	ns2__AreaPerAreaUom__in2_x002fft2 = 4,
	ns2__AreaPerAreaUom__in2_x002fin2 = 5,
	ns2__AreaPerAreaUom__m2_x002fm2 = 6,
	ns2__AreaPerAreaUom__mm2_x002fmm2 = 7
};
#endif

/* testh.h:3367 */
#ifndef SOAP_TYPE_ns2__AreaPerCountUom
#define SOAP_TYPE_ns2__AreaPerCountUom (310)
/* ns2:AreaPerCountUom */
enum ns2__AreaPerCountUom {
	ns2__AreaPerCountUom__b_x002felectron = 0
};
#endif

/* testh.h:3375 */
#ifndef SOAP_TYPE_ns2__AreaPerMassUom
#define SOAP_TYPE_ns2__AreaPerMassUom (311)
/* ns2:AreaPerMassUom */
enum ns2__AreaPerMassUom {
	ns2__AreaPerMassUom__cm2_x002fg = 0,
	ns2__AreaPerMassUom__ft2_x002flbm = 1,
	ns2__AreaPerMassUom__m2_x002fg = 2,
	ns2__AreaPerMassUom__m2_x002fkg = 3
};
#endif

/* testh.h:3402 */
#ifndef SOAP_TYPE_ns2__AreaPerTimeUom
#define SOAP_TYPE_ns2__AreaPerTimeUom (312)
/* ns2:AreaPerTimeUom */
enum ns2__AreaPerTimeUom {
	ns2__AreaPerTimeUom__cm2_x002fs = 0,
	ns2__AreaPerTimeUom__ft2_x002fh = 1,
	ns2__AreaPerTimeUom__ft2_x002fs = 2,
	ns2__AreaPerTimeUom__in2_x002fs = 3,
	ns2__AreaPerTimeUom__m2_x002fd = 4,
	ns2__AreaPerTimeUom__m2_x002fh = 5,
	ns2__AreaPerTimeUom__m2_x002fs = 6,
	ns2__AreaPerTimeUom__mm2_x002fs = 7
};
#endif

/* testh.h:3449 */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeUom
#define SOAP_TYPE_ns2__AreaPerVolumeUom (313)
/* ns2:AreaPerVolumeUom */
enum ns2__AreaPerVolumeUom {
	ns2__AreaPerVolumeUom__1_x002fm = 0,
	ns2__AreaPerVolumeUom__b_x002fcm3 = 1,
	ns2__AreaPerVolumeUom__cu = 2,
	ns2__AreaPerVolumeUom__ft2_x002fin3 = 3,
	ns2__AreaPerVolumeUom__m2_x002fcm3 = 4,
	ns2__AreaPerVolumeUom__m2_x002fm3 = 5
};
#endif

/* testh.h:3486 */
#ifndef SOAP_TYPE_ns2__AreaUom
#define SOAP_TYPE_ns2__AreaUom (314)
/* ns2:AreaUom */
enum ns2__AreaUom {
	ns2__AreaUom__b = 'b',
	ns2__AreaUom__acre = 'c',
	ns2__AreaUom__cm2 = 'd',
	ns2__AreaUom__ft2 = 'e',
	ns2__AreaUom__ha = 'f',
	ns2__AreaUom__in2 = 'g',
	ns2__AreaUom__km2 = 'h',
	ns2__AreaUom__m2 = 'i',
	ns2__AreaUom__mi_x005bUS_x005d2 = 'j',
	ns2__AreaUom__mi2 = 'k',
	ns2__AreaUom__mm2 = 'l',
	ns2__AreaUom__section = 'm',
	ns2__AreaUom__um2 = 'n',
	ns2__AreaUom__yd2 = 'o'
};
#endif

/* testh.h:3563 */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUom
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUom (315)
/* ns2:AttenuationPerFrequencyIntervalUom */
enum ns2__AttenuationPerFrequencyIntervalUom {
	ns2__AttenuationPerFrequencyIntervalUom__B_x002fO = 0,
	ns2__AttenuationPerFrequencyIntervalUom__dB_x002fO = 1
};
#endif

/* testh.h:3580 */
#ifndef SOAP_TYPE_ns2__CapacitanceUom
#define SOAP_TYPE_ns2__CapacitanceUom (316)
/* ns2:CapacitanceUom */
enum ns2__CapacitanceUom {
	ns2__CapacitanceUom__F = 'F',
	ns2__CapacitanceUom__cF = 'G',
	ns2__CapacitanceUom__dF = 'H',
	ns2__CapacitanceUom__EF = 'I',
	ns2__CapacitanceUom__fF = 'J',
	ns2__CapacitanceUom__GF = 'K',
	ns2__CapacitanceUom__kF = 'L',
	ns2__CapacitanceUom__mF = 'M',
	ns2__CapacitanceUom__MF = 'N',
	ns2__CapacitanceUom__nF = 'O',
	ns2__CapacitanceUom__pF = 'P',
	ns2__CapacitanceUom__TF = 'Q',
	ns2__CapacitanceUom__uF = 'R'
};
#endif

/* testh.h:3652 */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityUom
#define SOAP_TYPE_ns2__CationExchangeCapacityUom (317)
/* ns2:CationExchangeCapacityUom */
enum ns2__CationExchangeCapacityUom {
	ns2__CationExchangeCapacityUom___x002e01_x0020meq_x002fg = 0
};
#endif

/* testh.h:3660 */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedUom
#define SOAP_TYPE_ns2__DataTransferSpeedUom (318)
/* ns2:DataTransferSpeedUom */
enum ns2__DataTransferSpeedUom {
	ns2__DataTransferSpeedUom__bit_x002fs = 0,
	ns2__DataTransferSpeedUom__byte_x002fs = 1
};
#endif

/* testh.h:3677 */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientUom
#define SOAP_TYPE_ns2__DiffusionCoefficientUom (319)
/* ns2:DiffusionCoefficientUom */
enum ns2__DiffusionCoefficientUom {
	ns2__DiffusionCoefficientUom__m2_x002fs = 0
};
#endif

/* testh.h:3689 */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightUom
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightUom (320)
/* ns2:DiffusiveTimeOfFlightUom */
enum ns2__DiffusiveTimeOfFlightUom {
	ns2__DiffusiveTimeOfFlightUom__h_x00280_x002e5_x0029 = 0,
	ns2__DiffusiveTimeOfFlightUom__s_x00280_x002e5_x0029 = 1
};
#endif

/* testh.h:3702 */
#ifndef SOAP_TYPE_ns2__DigitalStorageUom
#define SOAP_TYPE_ns2__DigitalStorageUom (321)
/* ns2:DigitalStorageUom */
enum ns2__DigitalStorageUom {
	ns2__DigitalStorageUom__bit = 0,
	ns2__DigitalStorageUom__byte = 1,
	ns2__DigitalStorageUom__Kibyte = 2,
	ns2__DigitalStorageUom__Mibyte = 3
};
#endif

/* testh.h:3729 */
#ifndef SOAP_TYPE_ns2__DimensionlessUom
#define SOAP_TYPE_ns2__DimensionlessUom (322)
/* ns2:DimensionlessUom */
enum ns2__DimensionlessUom {
	ns2__DimensionlessUom___x0025 = 0,
	ns2__DimensionlessUom__cEuc = 1,
	ns2__DimensionlessUom__dEuc = 2,
	ns2__DimensionlessUom__EEuc = 3,
	ns2__DimensionlessUom__Euc = 4,
	ns2__DimensionlessUom__fEuc = 5,
	ns2__DimensionlessUom__GEuc = 6,
	ns2__DimensionlessUom__kEuc = 7,
	ns2__DimensionlessUom__MEuc = 8,
	ns2__DimensionlessUom__mEuc = 9,
	ns2__DimensionlessUom__nEuc = 10,
	ns2__DimensionlessUom__pEuc = 11,
	ns2__DimensionlessUom__ppk = 12,
	ns2__DimensionlessUom__ppm = 13,
	ns2__DimensionlessUom__TEuc = 14,
	ns2__DimensionlessUom__uEuc = 15
};
#endif

/* testh.h:3816 */
#ifndef SOAP_TYPE_ns2__DipoleMomentUom
#define SOAP_TYPE_ns2__DipoleMomentUom (323)
/* ns2:DipoleMomentUom */
enum ns2__DipoleMomentUom {
	ns2__DipoleMomentUom__C_x002em = 0
};
#endif

/* testh.h:3828 */
#ifndef SOAP_TYPE_ns2__DoseEquivalentUom
#define SOAP_TYPE_ns2__DoseEquivalentUom (324)
/* ns2:DoseEquivalentUom */
enum ns2__DoseEquivalentUom {
	ns2__DoseEquivalentUom__mrem = 0,
	ns2__DoseEquivalentUom__mSv = 1,
	ns2__DoseEquivalentUom__rem = 2,
	ns2__DoseEquivalentUom__Sv = 3
};
#endif

/* testh.h:3855 */
#ifndef SOAP_TYPE_ns2__DynamicViscosityUom
#define SOAP_TYPE_ns2__DynamicViscosityUom (325)
/* ns2:DynamicViscosityUom */
enum ns2__DynamicViscosityUom {
	ns2__DynamicViscosityUom__P = 'P',
	ns2__DynamicViscosityUom__cP = 'Q',
	ns2__DynamicViscosityUom__dP = 'R',
	ns2__DynamicViscosityUom__dyne_x002es_x002fcm2 = 'S',
	ns2__DynamicViscosityUom__EP = 'T',
	ns2__DynamicViscosityUom__fP = 'U',
	ns2__DynamicViscosityUom__GP = 'V',
	ns2__DynamicViscosityUom__kgf_x002es_x002fm2 = 'W',
	ns2__DynamicViscosityUom__kP = 'X',
	ns2__DynamicViscosityUom__lbf_x002es_x002fft2 = 'Y',
	ns2__DynamicViscosityUom__lbf_x002es_x002fin2 = 'Z',
	ns2__DynamicViscosityUom__mP = 91,
	ns2__DynamicViscosityUom__MP = 92,
	ns2__DynamicViscosityUom__mPa_x002es = 93,
	ns2__DynamicViscosityUom__N_x002es_x002fm2 = 94,
	ns2__DynamicViscosityUom__nP = 95,
	ns2__DynamicViscosityUom__Pa_x002es = 96,
	ns2__DynamicViscosityUom__pP = 'a',
	ns2__DynamicViscosityUom__psi_x002es = 'b',
	ns2__DynamicViscosityUom__TP = 'c',
	ns2__DynamicViscosityUom__uP = 'd'
};
#endif

/* testh.h:3967 */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityUom
#define SOAP_TYPE_ns2__ElectricalResistivityUom (326)
/* ns2:ElectricalResistivityUom */
enum ns2__ElectricalResistivityUom {
	ns2__ElectricalResistivityUom__kohm_x002em = 0,
	ns2__ElectricalResistivityUom__nohm_x002emil2_x002fft = 1,
	ns2__ElectricalResistivityUom__nohm_x002emm2_x002fm = 2,
	ns2__ElectricalResistivityUom__ohm_x002ecm = 3,
	ns2__ElectricalResistivityUom__ohm_x002em = 4,
	ns2__ElectricalResistivityUom__ohm_x002em2_x002fm = 5
};
#endif

/* testh.h:4004 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaUom
#define SOAP_TYPE_ns2__ElectricChargePerAreaUom (327)
/* ns2:ElectricChargePerAreaUom */
enum ns2__ElectricChargePerAreaUom {
	ns2__ElectricChargePerAreaUom__C_x002fcm2 = 0,
	ns2__ElectricChargePerAreaUom__C_x002fm2 = 1,
	ns2__ElectricChargePerAreaUom__C_x002fmm2 = 2,
	ns2__ElectricChargePerAreaUom__mC_x002fm2 = 3
};
#endif

/* testh.h:4031 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassUom
#define SOAP_TYPE_ns2__ElectricChargePerMassUom (328)
/* ns2:ElectricChargePerMassUom */
enum ns2__ElectricChargePerMassUom {
	ns2__ElectricChargePerMassUom__A_x002es_x002fkg = 0,
	ns2__ElectricChargePerMassUom__C_x002fg = 1,
	ns2__ElectricChargePerMassUom__C_x002fkg = 2
};
#endif

/* testh.h:4053 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeUom
#define SOAP_TYPE_ns2__ElectricChargePerVolumeUom (329)
/* ns2:ElectricChargePerVolumeUom */
enum ns2__ElectricChargePerVolumeUom {
	ns2__ElectricChargePerVolumeUom__A_x002es_x002fm3 = 0,
	ns2__ElectricChargePerVolumeUom__C_x002fcm3 = 1,
	ns2__ElectricChargePerVolumeUom__C_x002fm3 = 2,
	ns2__ElectricChargePerVolumeUom__C_x002fmm3 = 3
};
#endif

/* testh.h:4080 */
#ifndef SOAP_TYPE_ns2__ElectricChargeUom
#define SOAP_TYPE_ns2__ElectricChargeUom (330)
/* ns2:ElectricChargeUom */
enum ns2__ElectricChargeUom {
	ns2__ElectricChargeUom__C = 'C',
	ns2__ElectricChargeUom__A_x002eh = 'D',
	ns2__ElectricChargeUom__A_x002es = 'E',
	ns2__ElectricChargeUom__cC = 'F',
	ns2__ElectricChargeUom__dC = 'G',
	ns2__ElectricChargeUom__EC = 'H',
	ns2__ElectricChargeUom__fC = 'I',
	ns2__ElectricChargeUom__GC = 'J',
	ns2__ElectricChargeUom__kC = 'K',
	ns2__ElectricChargeUom__MC = 'L',
	ns2__ElectricChargeUom__mC = 'M',
	ns2__ElectricChargeUom__nC = 'N',
	ns2__ElectricChargeUom__pC = 'O',
	ns2__ElectricChargeUom__TC = 'P',
	ns2__ElectricChargeUom__uC = 'Q'
};
#endif

/* testh.h:4162 */
#ifndef SOAP_TYPE_ns2__ElectricConductanceUom
#define SOAP_TYPE_ns2__ElectricConductanceUom (331)
/* ns2:ElectricConductanceUom */
enum ns2__ElectricConductanceUom {
	ns2__ElectricConductanceUom__S = 'S',
	ns2__ElectricConductanceUom__cS = 'T',
	ns2__ElectricConductanceUom__dS = 'U',
	ns2__ElectricConductanceUom__ES = 'V',
	ns2__ElectricConductanceUom__fS = 'W',
	ns2__ElectricConductanceUom__GS = 'X',
	ns2__ElectricConductanceUom__kS = 'Y',
	ns2__ElectricConductanceUom__mS = 'Z',
	ns2__ElectricConductanceUom__MS = 91,
	ns2__ElectricConductanceUom__nS = 92,
	ns2__ElectricConductanceUom__pS = 93,
	ns2__ElectricConductanceUom__TS = 94,
	ns2__ElectricConductanceUom__uS = 95
};
#endif

/* testh.h:4234 */
#ifndef SOAP_TYPE_ns2__ElectricConductivityUom
#define SOAP_TYPE_ns2__ElectricConductivityUom (332)
/* ns2:ElectricConductivityUom */
enum ns2__ElectricConductivityUom {
	ns2__ElectricConductivityUom__kS_x002fm = 0,
	ns2__ElectricConductivityUom__mS_x002fcm = 1,
	ns2__ElectricConductivityUom__mS_x002fm = 2,
	ns2__ElectricConductivityUom__S_x002fm = 3
};
#endif

/* testh.h:4261 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityUom
#define SOAP_TYPE_ns2__ElectricCurrentDensityUom (333)
/* ns2:ElectricCurrentDensityUom */
enum ns2__ElectricCurrentDensityUom {
	ns2__ElectricCurrentDensityUom__A_x002fcm2 = 0,
	ns2__ElectricCurrentDensityUom__A_x002fft2 = 1,
	ns2__ElectricCurrentDensityUom__A_x002fm2 = 2,
	ns2__ElectricCurrentDensityUom__A_x002fmm2 = 3,
	ns2__ElectricCurrentDensityUom__mA_x002fcm2 = 4,
	ns2__ElectricCurrentDensityUom__mA_x002fft2 = 5,
	ns2__ElectricCurrentDensityUom__uA_x002fcm2 = 6,
	ns2__ElectricCurrentDensityUom__uA_x002fin2 = 7
};
#endif

/* testh.h:4308 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentUom
#define SOAP_TYPE_ns2__ElectricCurrentUom (334)
/* ns2:ElectricCurrentUom */
enum ns2__ElectricCurrentUom {
	ns2__ElectricCurrentUom__A = 'A',
	ns2__ElectricCurrentUom__cA = 'B',
	ns2__ElectricCurrentUom__dA = 'C',
	ns2__ElectricCurrentUom__EA = 'D',
	ns2__ElectricCurrentUom__fA = 'E',
	ns2__ElectricCurrentUom__GA = 'F',
	ns2__ElectricCurrentUom__kA = 'G',
	ns2__ElectricCurrentUom__MA = 'H',
	ns2__ElectricCurrentUom__mA = 'I',
	ns2__ElectricCurrentUom__nA = 'J',
	ns2__ElectricCurrentUom__pA = 'K',
	ns2__ElectricCurrentUom__TA = 'L',
	ns2__ElectricCurrentUom__uA = 'M'
};
#endif

/* testh.h:4380 */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthUom
#define SOAP_TYPE_ns2__ElectricFieldStrengthUom (335)
/* ns2:ElectricFieldStrengthUom */
enum ns2__ElectricFieldStrengthUom {
	ns2__ElectricFieldStrengthUom__mV_x002fft = 0,
	ns2__ElectricFieldStrengthUom__mV_x002fm = 1,
	ns2__ElectricFieldStrengthUom__uV_x002fft = 2,
	ns2__ElectricFieldStrengthUom__uV_x002fm = 3,
	ns2__ElectricFieldStrengthUom__V_x002fm = 4
};
#endif

/* testh.h:4412 */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceUom
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceUom (336)
/* ns2:ElectricPotentialDifferenceUom */
enum ns2__ElectricPotentialDifferenceUom {
	ns2__ElectricPotentialDifferenceUom__V = 'V',
	ns2__ElectricPotentialDifferenceUom__cV = 'W',
	ns2__ElectricPotentialDifferenceUom__dV = 'X',
	ns2__ElectricPotentialDifferenceUom__fV = 'Y',
	ns2__ElectricPotentialDifferenceUom__GV = 'Z',
	ns2__ElectricPotentialDifferenceUom__kV = 91,
	ns2__ElectricPotentialDifferenceUom__mV = 92,
	ns2__ElectricPotentialDifferenceUom__MV = 93,
	ns2__ElectricPotentialDifferenceUom__nV = 94,
	ns2__ElectricPotentialDifferenceUom__pV = 95,
	ns2__ElectricPotentialDifferenceUom__TV = 96,
	ns2__ElectricPotentialDifferenceUom__uV = 'a'
};
#endif

/* testh.h:4479 */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthUom
#define SOAP_TYPE_ns2__ElectricResistancePerLengthUom (337)
/* ns2:ElectricResistancePerLengthUom */
enum ns2__ElectricResistancePerLengthUom {
	ns2__ElectricResistancePerLengthUom__ohm_x002fm = 0,
	ns2__ElectricResistancePerLengthUom__uohm_x002fft = 1,
	ns2__ElectricResistancePerLengthUom__uohm_x002fm = 2
};
#endif

/* testh.h:4501 */
#ifndef SOAP_TYPE_ns2__ElectricResistanceUom
#define SOAP_TYPE_ns2__ElectricResistanceUom (338)
/* ns2:ElectricResistanceUom */
enum ns2__ElectricResistanceUom {
	ns2__ElectricResistanceUom__cohm = 0,
	ns2__ElectricResistanceUom__dohm = 1,
	ns2__ElectricResistanceUom__Eohm = 2,
	ns2__ElectricResistanceUom__fohm = 3,
	ns2__ElectricResistanceUom__Gohm = 4,
	ns2__ElectricResistanceUom__kohm = 5,
	ns2__ElectricResistanceUom__Mohm = 6,
	ns2__ElectricResistanceUom__mohm = 7,
	ns2__ElectricResistanceUom__nohm = 8,
	ns2__ElectricResistanceUom__ohm = 9,
	ns2__ElectricResistanceUom__pohm = 10,
	ns2__ElectricResistanceUom__Tohm = 11,
	ns2__ElectricResistanceUom__uohm = 12
};
#endif

/* testh.h:4573 */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentUom
#define SOAP_TYPE_ns2__ElectromagneticMomentUom (339)
/* ns2:ElectromagneticMomentUom */
enum ns2__ElectromagneticMomentUom {
	ns2__ElectromagneticMomentUom__A_x002em2 = 0
};
#endif

/* testh.h:4585 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaUom
#define SOAP_TYPE_ns2__EnergyLengthPerAreaUom (340)
/* ns2:EnergyLengthPerAreaUom */
enum ns2__EnergyLengthPerAreaUom {
	ns2__EnergyLengthPerAreaUom__J_x002em_x002fm2 = 0,
	ns2__EnergyLengthPerAreaUom__kcal_x005bth_x005d_x002em_x002fcm2 = 1
};
#endif

/* testh.h:4602 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUom
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUom (341)
/* ns2:EnergyLengthPerTimeAreaTemperatureUom */
enum ns2__EnergyLengthPerTimeAreaTemperatureUom {
	ns2__EnergyLengthPerTimeAreaTemperatureUom__Btu_x005bIT_x005d_x002ein_x002f_x0028h_x002eft2_x002edeltaF_x0029 = 0,
	ns2__EnergyLengthPerTimeAreaTemperatureUom__J_x002em_x002f_x0028s_x002em2_x002edeltaK_x0029 = 1,
	ns2__EnergyLengthPerTimeAreaTemperatureUom__kJ_x002em_x002f_x0028h_x002em2_x002edeltaK_x0029 = 2,
	ns2__EnergyLengthPerTimeAreaTemperatureUom__W_x002f_x0028m_x002edeltaK_x0029 = 3
};
#endif

/* testh.h:4629 */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaUom
#define SOAP_TYPE_ns2__EnergyPerAreaUom (342)
/* ns2:EnergyPerAreaUom */
enum ns2__EnergyPerAreaUom {
	ns2__EnergyPerAreaUom__erg_x002fcm2 = 0,
	ns2__EnergyPerAreaUom__J_x002fcm2 = 1,
	ns2__EnergyPerAreaUom__J_x002fm2 = 2,
	ns2__EnergyPerAreaUom__kgf_x002em_x002fcm2 = 3,
	ns2__EnergyPerAreaUom__lbf_x002eft_x002fin2 = 4,
	ns2__EnergyPerAreaUom__mJ_x002fcm2 = 5,
	ns2__EnergyPerAreaUom__mJ_x002fm2 = 6,
	ns2__EnergyPerAreaUom__N_x002fm = 7
};
#endif

/* testh.h:4676 */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthUom
#define SOAP_TYPE_ns2__EnergyPerLengthUom (343)
/* ns2:EnergyPerLengthUom */
enum ns2__EnergyPerLengthUom {
	ns2__EnergyPerLengthUom__J_x002fm = 0,
	ns2__EnergyPerLengthUom__MJ_x002fm = 1
};
#endif

/* testh.h:4693 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeUom
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeUom (344)
/* ns2:EnergyPerMassPerTimeUom */
enum ns2__EnergyPerMassPerTimeUom {
	ns2__EnergyPerMassPerTimeUom__mrem_x002fh = 0,
	ns2__EnergyPerMassPerTimeUom__mSv_x002fh = 1,
	ns2__EnergyPerMassPerTimeUom__rem_x002fh = 2,
	ns2__EnergyPerMassPerTimeUom__Sv_x002fh = 3,
	ns2__EnergyPerMassPerTimeUom__Sv_x002fs = 4
};
#endif

/* testh.h:4725 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassUom
#define SOAP_TYPE_ns2__EnergyPerMassUom (345)
/* ns2:EnergyPerMassUom */
enum ns2__EnergyPerMassUom {
	ns2__EnergyPerMassUom__Btu_x005bIT_x005d_x002flbm = 0,
	ns2__EnergyPerMassUom__cal_x005bth_x005d_x002fg = 1,
	ns2__EnergyPerMassUom__cal_x005bth_x005d_x002fkg = 2,
	ns2__EnergyPerMassUom__cal_x005bth_x005d_x002flbm = 3,
	ns2__EnergyPerMassUom__erg_x002fg = 4,
	ns2__EnergyPerMassUom__erg_x002fkg = 5,
	ns2__EnergyPerMassUom__hp_x002eh_x002flbm = 6,
	ns2__EnergyPerMassUom__J_x002fg = 7,
	ns2__EnergyPerMassUom__J_x002fkg = 8,
	ns2__EnergyPerMassUom__kcal_x005bth_x005d_x002fg = 9,
	ns2__EnergyPerMassUom__kcal_x005bth_x005d_x002fkg = 10,
	ns2__EnergyPerMassUom__kJ_x002fkg = 11,
	ns2__EnergyPerMassUom__kW_x002eh_x002fkg = 12,
	ns2__EnergyPerMassUom__lbf_x002eft_x002flbm = 13,
	ns2__EnergyPerMassUom__MJ_x002fkg = 14,
	ns2__EnergyPerMassUom__MW_x002eh_x002fkg = 15
};
#endif

/* testh.h:4812 */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeUom
#define SOAP_TYPE_ns2__EnergyPerVolumeUom (346)
/* ns2:EnergyPerVolumeUom */
enum ns2__EnergyPerVolumeUom {
	ns2__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fbbl = 0,
	ns2__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fft3 = 1,
	ns2__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fgal_x005bUK_x005d = 2,
	ns2__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fgal_x005bUS_x005d = 3,
	ns2__EnergyPerVolumeUom__cal_x005bth_x005d_x002fcm3 = 4,
	ns2__EnergyPerVolumeUom__cal_x005bth_x005d_x002fmL = 5,
	ns2__EnergyPerVolumeUom__cal_x005bth_x005d_x002fmm3 = 6,
	ns2__EnergyPerVolumeUom__erg_x002fcm3 = 7,
	ns2__EnergyPerVolumeUom__erg_x002fm3 = 8,
	ns2__EnergyPerVolumeUom__hp_x002eh_x002fbbl = 9,
	ns2__EnergyPerVolumeUom__J_x002fdm3 = 10,
	ns2__EnergyPerVolumeUom__J_x002fm3 = 11,
	ns2__EnergyPerVolumeUom__kcal_x005bth_x005d_x002fcm3 = 12,
	ns2__EnergyPerVolumeUom__kcal_x005bth_x005d_x002fm3 = 13,
	ns2__EnergyPerVolumeUom__kJ_x002fdm3 = 14,
	ns2__EnergyPerVolumeUom__kJ_x002fm3 = 15,
	ns2__EnergyPerVolumeUom__kW_x002eh_x002fdm3 = 16,
	ns2__EnergyPerVolumeUom__kW_x002eh_x002fm3 = 17,
	ns2__EnergyPerVolumeUom__lbf_x002eft_x002fbbl = 18,
	ns2__EnergyPerVolumeUom__lbf_x002eft_x002fgal_x005bUS_x005d = 19,
	ns2__EnergyPerVolumeUom__MJ_x002fm3 = 20,
	ns2__EnergyPerVolumeUom__MW_x002eh_x002fm3 = 21,
	ns2__EnergyPerVolumeUom__tonf_x005bUS_x005d_x002emi_x002fbbl = 22
};
#endif

/* testh.h:4934 */
#ifndef SOAP_TYPE_ns2__EnergyUom
#define SOAP_TYPE_ns2__EnergyUom (347)
/* ns2:EnergyUom */
enum ns2__EnergyUom {
	ns2__EnergyUom__J = 'J',
	ns2__EnergyUom__1E6_x0020Btu_x005bIT_x005d = 'K',
	ns2__EnergyUom__aJ = 'L',
	ns2__EnergyUom__Btu_x005bIT_x005d = 'M',
	ns2__EnergyUom__Btu_x005bth_x005d = 'N',
	ns2__EnergyUom__Btu_x005bUK_x005d = 'O',
	ns2__EnergyUom__cal_x005bIT_x005d = 'P',
	ns2__EnergyUom__cal_x005bth_x005d = 'Q',
	ns2__EnergyUom__ccal_x005bth_x005d = 'R',
	ns2__EnergyUom__ceV = 'S',
	ns2__EnergyUom__cJ = 'T',
	ns2__EnergyUom__dcal_x005bth_x005d = 'U',
	ns2__EnergyUom__deV = 'V',
	ns2__EnergyUom__dJ = 'W',
	ns2__EnergyUom__Ecal_x005bth_x005d = 'X',
	ns2__EnergyUom__EeV = 'Y',
	ns2__EnergyUom__EJ = 'Z',
	ns2__EnergyUom__erg = 91,
	ns2__EnergyUom__eV = 92,
	ns2__EnergyUom__fcal_x005bth_x005d = 93,
	ns2__EnergyUom__feV = 94,
	ns2__EnergyUom__fJ = 95,
	ns2__EnergyUom__Gcal_x005bth_x005d = 96,
	ns2__EnergyUom__GeV = 'a',
	ns2__EnergyUom__GJ = 'b',
	ns2__EnergyUom__GW_x002eh = 'c',
	ns2__EnergyUom__hp_x002eh = 'd',
	ns2__EnergyUom__hp_x005bmetric_x005d_x002eh = 'e',
	ns2__EnergyUom__kcal_x005bth_x005d = 'f',
	ns2__EnergyUom__keV = 'g',
	ns2__EnergyUom__kJ = 'h',
	ns2__EnergyUom__kW_x002eh = 'i',
	ns2__EnergyUom__mcal_x005bth_x005d = 'j',
	ns2__EnergyUom__Mcal_x005bth_x005d = 'k',
	ns2__EnergyUom__meV = 'l',
	ns2__EnergyUom__MeV = 'm',
	ns2__EnergyUom__MJ = 'n',
	ns2__EnergyUom__mJ = 'o',
	ns2__EnergyUom__MW_x002eh = 'p',
	ns2__EnergyUom__ncal_x005bth_x005d = 'q',
	ns2__EnergyUom__neV = 'r',
	ns2__EnergyUom__nJ = 's',
	ns2__EnergyUom__pcal_x005bth_x005d = 't',
	ns2__EnergyUom__peV = 'u',
	ns2__EnergyUom__pJ = 'v',
	ns2__EnergyUom__quad = 'w',
	ns2__EnergyUom__Tcal_x005bth_x005d = 'x',
	ns2__EnergyUom__TeV = 'y',
	ns2__EnergyUom__therm_x005bEC_x005d = 'z',
	ns2__EnergyUom__therm_x005bUK_x005d = 123,
	ns2__EnergyUom__therm_x005bUS_x005d = 124,
	ns2__EnergyUom__TJ = 125,
	ns2__EnergyUom__TW_x002eh = 126,
	ns2__EnergyUom__ucal_x005bth_x005d = 127,
	ns2__EnergyUom__ueV = 128,
	ns2__EnergyUom__uJ = 129
};
#endif

/* testh.h:5221 */
#ifndef SOAP_TYPE_ns2__ForceAreaUom
#define SOAP_TYPE_ns2__ForceAreaUom (348)
/* ns2:ForceAreaUom */
enum ns2__ForceAreaUom {
	ns2__ForceAreaUom__dyne_x002ecm2 = 0,
	ns2__ForceAreaUom__kgf_x002em2 = 1,
	ns2__ForceAreaUom__kN_x002em2 = 2,
	ns2__ForceAreaUom__lbf_x002ein2 = 3,
	ns2__ForceAreaUom__mN_x002em2 = 4,
	ns2__ForceAreaUom__N_x002em2 = 5,
	ns2__ForceAreaUom__pdl_x002ecm2 = 6,
	ns2__ForceAreaUom__tonf_x005bUK_x005d_x002eft2 = 7,
	ns2__ForceAreaUom__tonf_x005bUS_x005d_x002eft2 = 8
};
#endif

/* testh.h:5273 */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthUom
#define SOAP_TYPE_ns2__ForceLengthPerLengthUom (349)
/* ns2:ForceLengthPerLengthUom */
enum ns2__ForceLengthPerLengthUom {
	ns2__ForceLengthPerLengthUom__kgf_x002em_x002fm = 0,
	ns2__ForceLengthPerLengthUom__lbf_x002eft_x002fin = 1,
	ns2__ForceLengthPerLengthUom__lbf_x002ein_x002fin = 2,
	ns2__ForceLengthPerLengthUom__N_x002em_x002fm = 3,
	ns2__ForceLengthPerLengthUom__tonf_x005bUS_x005d_x002emi_x002fft = 4
};
#endif

/* testh.h:5305 */
#ifndef SOAP_TYPE_ns2__ForcePerForceUom
#define SOAP_TYPE_ns2__ForcePerForceUom (350)
/* ns2:ForcePerForceUom */
enum ns2__ForcePerForceUom {
	ns2__ForcePerForceUom___x0025 = 0,
	ns2__ForcePerForceUom__Euc = 1,
	ns2__ForcePerForceUom__kgf_x002fkgf = 2,
	ns2__ForcePerForceUom__lbf_x002flbf = 3,
	ns2__ForcePerForceUom__N_x002fN = 4
};
#endif

/* testh.h:5337 */
#ifndef SOAP_TYPE_ns2__ForcePerLengthUom
#define SOAP_TYPE_ns2__ForcePerLengthUom (351)
/* ns2:ForcePerLengthUom */
enum ns2__ForcePerLengthUom {
	ns2__ForcePerLengthUom__0_x002e01_x0020lbf_x002fft = 0,
	ns2__ForcePerLengthUom__1_x002f30_x0020lbf_x002fm = 1,
	ns2__ForcePerLengthUom__1_x002f30_x0020N_x002fm = 2,
	ns2__ForcePerLengthUom__dyne_x002fcm = 3,
	ns2__ForcePerLengthUom__kgf_x002fcm = 4,
	ns2__ForcePerLengthUom__kN_x002fm = 5,
	ns2__ForcePerLengthUom__lbf_x002fft = 6,
	ns2__ForcePerLengthUom__lbf_x002fin = 7,
	ns2__ForcePerLengthUom__mN_x002fkm = 8,
	ns2__ForcePerLengthUom__mN_x002fm = 9,
	ns2__ForcePerLengthUom__N_x002fm = 10,
	ns2__ForcePerLengthUom__pdl_x002fcm = 11,
	ns2__ForcePerLengthUom__tonf_x005bUK_x005d_x002fft = 12,
	ns2__ForcePerLengthUom__tonf_x005bUS_x005d_x002fft = 13
};
#endif

/* testh.h:5414 */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeUom
#define SOAP_TYPE_ns2__ForcePerVolumeUom (352)
/* ns2:ForcePerVolumeUom */
enum ns2__ForcePerVolumeUom {
	ns2__ForcePerVolumeUom__0_x002e001_x0020psi_x002fft = 0,
	ns2__ForcePerVolumeUom__0_x002e01_x0020psi_x002fft = 1,
	ns2__ForcePerVolumeUom__atm_x002fft = 2,
	ns2__ForcePerVolumeUom__atm_x002fhm = 3,
	ns2__ForcePerVolumeUom__atm_x002fm = 4,
	ns2__ForcePerVolumeUom__bar_x002fkm = 5,
	ns2__ForcePerVolumeUom__bar_x002fm = 6,
	ns2__ForcePerVolumeUom__GPa_x002fcm = 7,
	ns2__ForcePerVolumeUom__kPa_x002fhm = 8,
	ns2__ForcePerVolumeUom__kPa_x002fm = 9,
	ns2__ForcePerVolumeUom__lbf_x002fft3 = 10,
	ns2__ForcePerVolumeUom__lbf_x002fgal_x005bUS_x005d = 11,
	ns2__ForcePerVolumeUom__MPa_x002fm = 12,
	ns2__ForcePerVolumeUom__N_x002fm3 = 13,
	ns2__ForcePerVolumeUom__Pa_x002fm = 14,
	ns2__ForcePerVolumeUom__psi_x002fft = 15,
	ns2__ForcePerVolumeUom__psi_x002fm = 16
};
#endif

/* testh.h:5506 */
#ifndef SOAP_TYPE_ns2__ForceUom
#define SOAP_TYPE_ns2__ForceUom (353)
/* ns2:ForceUom */
enum ns2__ForceUom {
	ns2__ForceUom__N = 'N',
	ns2__ForceUom__10_x0020kN = 'O',
	ns2__ForceUom__cN = 'P',
	ns2__ForceUom__daN = 'Q',
	ns2__ForceUom__dN = 'R',
	ns2__ForceUom__dyne = 'S',
	ns2__ForceUom__EN = 'T',
	ns2__ForceUom__fN = 'U',
	ns2__ForceUom__gf = 'V',
	ns2__ForceUom__GN = 'W',
	ns2__ForceUom__hN = 'X',
	ns2__ForceUom__kdyne = 'Y',
	ns2__ForceUom__kgf = 'Z',
	ns2__ForceUom__klbf = 91,
	ns2__ForceUom__kN = 92,
	ns2__ForceUom__lbf = 93,
	ns2__ForceUom__Mgf = 94,
	ns2__ForceUom__mN = 95,
	ns2__ForceUom__MN = 96,
	ns2__ForceUom__nN = 'a',
	ns2__ForceUom__ozf = 'b',
	ns2__ForceUom__pdl = 'c',
	ns2__ForceUom__pN = 'd',
	ns2__ForceUom__TN = 'e',
	ns2__ForceUom__tonf_x005bUK_x005d = 'f',
	ns2__ForceUom__tonf_x005bUS_x005d = 'g',
	ns2__ForceUom__uN = 'h'
};
#endif

/* testh.h:5648 */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalUom
#define SOAP_TYPE_ns2__FrequencyIntervalUom (354)
/* ns2:FrequencyIntervalUom */
enum ns2__FrequencyIntervalUom {
	ns2__FrequencyIntervalUom__O = 'O'
};
#endif

/* testh.h:5660 */
#ifndef SOAP_TYPE_ns2__FrequencyUom
#define SOAP_TYPE_ns2__FrequencyUom (355)
/* ns2:FrequencyUom */
enum ns2__FrequencyUom {
	ns2__FrequencyUom__cHz = 0,
	ns2__FrequencyUom__dHz = 1,
	ns2__FrequencyUom__EHz = 2,
	ns2__FrequencyUom__fHz = 3,
	ns2__FrequencyUom__GHz = 4,
	ns2__FrequencyUom__Hz = 5,
	ns2__FrequencyUom__kHz = 6,
	ns2__FrequencyUom__mHz = 7,
	ns2__FrequencyUom__MHz = 8,
	ns2__FrequencyUom__nHz = 9,
	ns2__FrequencyUom__pHz = 10,
	ns2__FrequencyUom__THz = 11,
	ns2__FrequencyUom__uHz = 12
};
#endif

/* testh.h:5732 */
#ifndef SOAP_TYPE_ns2__HeatCapacityUom
#define SOAP_TYPE_ns2__HeatCapacityUom (356)
/* ns2:HeatCapacityUom */
enum ns2__HeatCapacityUom {
	ns2__HeatCapacityUom__J_x002fdeltaK = 0
};
#endif

/* testh.h:5744 */
#ifndef SOAP_TYPE_ns2__HeatFlowRateUom
#define SOAP_TYPE_ns2__HeatFlowRateUom (357)
/* ns2:HeatFlowRateUom */
enum ns2__HeatFlowRateUom {
	ns2__HeatFlowRateUom__W = 'W',
	ns2__HeatFlowRateUom__1E6_x0020Btu_x005bIT_x005d_x002fh = 'X',
	ns2__HeatFlowRateUom__Btu_x005bIT_x005d_x002fh = 'Y',
	ns2__HeatFlowRateUom__Btu_x005bIT_x005d_x002fmin = 'Z',
	ns2__HeatFlowRateUom__Btu_x005bIT_x005d_x002fs = 91,
	ns2__HeatFlowRateUom__cal_x005bth_x005d_x002fh = 92,
	ns2__HeatFlowRateUom__EJ_x002fa = 93,
	ns2__HeatFlowRateUom__erg_x002fa = 94,
	ns2__HeatFlowRateUom__GW = 95,
	ns2__HeatFlowRateUom__J_x002fs = 96,
	ns2__HeatFlowRateUom__kcal_x005bth_x005d_x002fh = 'a',
	ns2__HeatFlowRateUom__kW = 'b',
	ns2__HeatFlowRateUom__lbf_x002eft_x002fmin = 'c',
	ns2__HeatFlowRateUom__lbf_x002eft_x002fs = 'd',
	ns2__HeatFlowRateUom__MJ_x002fa = 'e',
	ns2__HeatFlowRateUom__mW = 'f',
	ns2__HeatFlowRateUom__MW = 'g',
	ns2__HeatFlowRateUom__nW = 'h',
	ns2__HeatFlowRateUom__quad_x002fa = 'i',
	ns2__HeatFlowRateUom__TJ_x002fa = 'j',
	ns2__HeatFlowRateUom__TW = 'k',
	ns2__HeatFlowRateUom__ucal_x005bth_x005d_x002fs = 'l',
	ns2__HeatFlowRateUom__uW = 'm'
};
#endif

/* testh.h:5866 */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientUom
#define SOAP_TYPE_ns2__HeatTransferCoefficientUom (358)
/* ns2:HeatTransferCoefficientUom */
enum ns2__HeatTransferCoefficientUom {
	ns2__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edeltaF_x0029 = 0,
	ns2__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edeltaR_x0029 = 1,
	ns2__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002em2_x002edeltaC_x0029 = 2,
	ns2__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x002edeltaF_x0029 = 3,
	ns2__HeatTransferCoefficientUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x002edeltaC_x0029 = 4,
	ns2__HeatTransferCoefficientUom__cal_x005bth_x005d_x002f_x0028s_x002ecm2_x002edeltaC_x0029 = 5,
	ns2__HeatTransferCoefficientUom__J_x002f_x0028s_x002em2_x002edeltaC_x0029 = 6,
	ns2__HeatTransferCoefficientUom__kcal_x005bth_x005d_x002f_x0028h_x002em2_x002edeltaC_x0029 = 7,
	ns2__HeatTransferCoefficientUom__kJ_x002f_x0028h_x002em2_x002edeltaK_x0029 = 8,
	ns2__HeatTransferCoefficientUom__kW_x002f_x0028m2_x002edeltaK_x0029 = 9,
	ns2__HeatTransferCoefficientUom__W_x002f_x0028m2_x002edeltaK_x0029 = 10
};
#endif

/* testh.h:5928 */
#ifndef SOAP_TYPE_ns2__IlluminanceUom
#define SOAP_TYPE_ns2__IlluminanceUom (359)
/* ns2:IlluminanceUom */
enum ns2__IlluminanceUom {
	ns2__IlluminanceUom__footcandle = 0,
	ns2__IlluminanceUom__klx = 1,
	ns2__IlluminanceUom__lm_x002fm2 = 2,
	ns2__IlluminanceUom__lx = 3
};
#endif

/* testh.h:5955 */
#ifndef SOAP_TYPE_ns2__InductanceUom
#define SOAP_TYPE_ns2__InductanceUom (360)
/* ns2:InductanceUom */
enum ns2__InductanceUom {
	ns2__InductanceUom__H = 'H',
	ns2__InductanceUom__cH = 'I',
	ns2__InductanceUom__dH = 'J',
	ns2__InductanceUom__EH = 'K',
	ns2__InductanceUom__fH = 'L',
	ns2__InductanceUom__GH = 'M',
	ns2__InductanceUom__kH = 'N',
	ns2__InductanceUom__MH = 'O',
	ns2__InductanceUom__mH = 'P',
	ns2__InductanceUom__nH = 'Q',
	ns2__InductanceUom__TH = 'R',
	ns2__InductanceUom__uH = 'S'
};
#endif

/* testh.h:6022 */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityUom
#define SOAP_TYPE_ns2__IsothermalCompressibilityUom (361)
/* ns2:IsothermalCompressibilityUom */
enum ns2__IsothermalCompressibilityUom {
	ns2__IsothermalCompressibilityUom__dm3_x002f_x0028kW_x002eh_x0029 = 0,
	ns2__IsothermalCompressibilityUom__dm3_x002fMJ = 1,
	ns2__IsothermalCompressibilityUom__m3_x002f_x0028kW_x002eh_x0029 = 2,
	ns2__IsothermalCompressibilityUom__m3_x002fJ = 3,
	ns2__IsothermalCompressibilityUom__mm3_x002fJ = 4,
	ns2__IsothermalCompressibilityUom__pt_x005bUK_x005d_x002f_x0028hp_x002eh_x0029 = 5
};
#endif

/* testh.h:6059 */
#ifndef SOAP_TYPE_ns2__KinematicViscosityUom
#define SOAP_TYPE_ns2__KinematicViscosityUom (362)
/* ns2:KinematicViscosityUom */
enum ns2__KinematicViscosityUom {
	ns2__KinematicViscosityUom__cm2_x002fs = 0,
	ns2__KinematicViscosityUom__cSt = 1,
	ns2__KinematicViscosityUom__ft2_x002fh = 2,
	ns2__KinematicViscosityUom__ft2_x002fs = 3,
	ns2__KinematicViscosityUom__in2_x002fs = 4,
	ns2__KinematicViscosityUom__m2_x002fh = 5,
	ns2__KinematicViscosityUom__m2_x002fs = 6,
	ns2__KinematicViscosityUom__mm2_x002fs = 7,
	ns2__KinematicViscosityUom__Pa_x002es_x002em3_x002fkg = 8,
	ns2__KinematicViscosityUom__St = 9
};
#endif

/* testh.h:6116 */
#ifndef SOAP_TYPE_ns2__LengthPerAngleUom
#define SOAP_TYPE_ns2__LengthPerAngleUom (363)
/* ns2:LengthPerAngleUom */
enum ns2__LengthPerAngleUom {
	ns2__LengthPerAngleUom__m_x002frad = 0,
	ns2__LengthPerAngleUom__100_x0020ft_x002fdega = 1,
	ns2__LengthPerAngleUom__30_x0020ft_x002fdega = 2,
	ns2__LengthPerAngleUom__30_x0020m_x002fdega = 3,
	ns2__LengthPerAngleUom__ft_x002fdega = 4,
	ns2__LengthPerAngleUom__m_x002fdega = 5,
	ns2__LengthPerAngleUom__ft_x002frad = 6,
	ns2__LengthPerAngleUom__ft_x002frev = 7,
	ns2__LengthPerAngleUom__m_x002frev = 8
};
#endif

/* testh.h:6168 */
#ifndef SOAP_TYPE_ns2__LengthPerLengthUom
#define SOAP_TYPE_ns2__LengthPerLengthUom (364)
/* ns2:LengthPerLengthUom */
enum ns2__LengthPerLengthUom {
	ns2__LengthPerLengthUom___x0025 = 0,
	ns2__LengthPerLengthUom__0_x002e01_x0020ft_x002fft = 1,
	ns2__LengthPerLengthUom__1_x002f30_x0020m_x002fm = 2,
	ns2__LengthPerLengthUom__Euc = 3,
	ns2__LengthPerLengthUom__ft_x002fft = 4,
	ns2__LengthPerLengthUom__ft_x002fin = 5,
	ns2__LengthPerLengthUom__ft_x002fm = 6,
	ns2__LengthPerLengthUom__ft_x002fmi = 7,
	ns2__LengthPerLengthUom__km_x002fcm = 8,
	ns2__LengthPerLengthUom__m_x002fcm = 9,
	ns2__LengthPerLengthUom__m_x002fkm = 10,
	ns2__LengthPerLengthUom__m_x002fm = 11,
	ns2__LengthPerLengthUom__mi_x002fin = 12
};
#endif

/* testh.h:6240 */
#ifndef SOAP_TYPE_ns2__LengthPerMassUom
#define SOAP_TYPE_ns2__LengthPerMassUom (365)
/* ns2:LengthPerMassUom */
enum ns2__LengthPerMassUom {
	ns2__LengthPerMassUom__ft_x002flbm = 0,
	ns2__LengthPerMassUom__m_x002fkg = 1
};
#endif

/* testh.h:6257 */
#ifndef SOAP_TYPE_ns2__LengthPerPressureUom
#define SOAP_TYPE_ns2__LengthPerPressureUom (366)
/* ns2:LengthPerPressureUom */
enum ns2__LengthPerPressureUom {
	ns2__LengthPerPressureUom__ft_x002fpsi = 0,
	ns2__LengthPerPressureUom__m_x002fkPa = 1,
	ns2__LengthPerPressureUom__m_x002fPa = 2
};
#endif

/* testh.h:6279 */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureUom
#define SOAP_TYPE_ns2__LengthPerTemperatureUom (367)
/* ns2:LengthPerTemperatureUom */
enum ns2__LengthPerTemperatureUom {
	ns2__LengthPerTemperatureUom__ft_x002fdeltaF = 0,
	ns2__LengthPerTemperatureUom__m_x002fdeltaK = 1
};
#endif

/* testh.h:6296 */
#ifndef SOAP_TYPE_ns2__LengthPerTimeUom
#define SOAP_TYPE_ns2__LengthPerTimeUom (368)
/* ns2:LengthPerTimeUom */
enum ns2__LengthPerTimeUom {
	ns2__LengthPerTimeUom__1000_x0020ft_x002fh = 0,
	ns2__LengthPerTimeUom__1000_x0020ft_x002fs = 1,
	ns2__LengthPerTimeUom__cm_x002fa = 2,
	ns2__LengthPerTimeUom__cm_x002fs = 3,
	ns2__LengthPerTimeUom__dm_x002fs = 4,
	ns2__LengthPerTimeUom__ft_x002fd = 5,
	ns2__LengthPerTimeUom__ft_x002fh = 6,
	ns2__LengthPerTimeUom__ft_x002fmin = 7,
	ns2__LengthPerTimeUom__ft_x002fms = 8,
	ns2__LengthPerTimeUom__ft_x002fs = 9,
	ns2__LengthPerTimeUom__ft_x002fus = 10,
	ns2__LengthPerTimeUom__in_x002fa = 11,
	ns2__LengthPerTimeUom__in_x002fmin = 12,
	ns2__LengthPerTimeUom__in_x002fs = 13,
	ns2__LengthPerTimeUom__km_x002fh = 14,
	ns2__LengthPerTimeUom__km_x002fs = 15,
	ns2__LengthPerTimeUom__knot = 16,
	ns2__LengthPerTimeUom__m_x002fd = 17,
	ns2__LengthPerTimeUom__m_x002fh = 18,
	ns2__LengthPerTimeUom__m_x002fmin = 19,
	ns2__LengthPerTimeUom__m_x002fms = 20,
	ns2__LengthPerTimeUom__m_x002fs = 21,
	ns2__LengthPerTimeUom__mi_x002fh = 22,
	ns2__LengthPerTimeUom__mil_x002fa = 23,
	ns2__LengthPerTimeUom__mm_x002fa = 24,
	ns2__LengthPerTimeUom__mm_x002fs = 25,
	ns2__LengthPerTimeUom__nm_x002fs = 26,
	ns2__LengthPerTimeUom__um_x002fs = 27
};
#endif

/* testh.h:6443 */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeUom
#define SOAP_TYPE_ns2__LengthPerVolumeUom (369)
/* ns2:LengthPerVolumeUom */
enum ns2__LengthPerVolumeUom {
	ns2__LengthPerVolumeUom__ft_x002fbbl = 0,
	ns2__LengthPerVolumeUom__ft_x002fft3 = 1,
	ns2__LengthPerVolumeUom__ft_x002fgal_x005bUS_x005d = 2,
	ns2__LengthPerVolumeUom__km_x002fdm3 = 3,
	ns2__LengthPerVolumeUom__km_x002fL = 4,
	ns2__LengthPerVolumeUom__m_x002fm3 = 5,
	ns2__LengthPerVolumeUom__mi_x002fgal_x005bUK_x005d = 6,
	ns2__LengthPerVolumeUom__mi_x002fgal_x005bUS_x005d = 7
};
#endif

/* testh.h:6490 */
#ifndef SOAP_TYPE_ns2__LengthUom
#define SOAP_TYPE_ns2__LengthUom (370)
/* ns2:LengthUom */
enum ns2__LengthUom {
	ns2__LengthUom__m = 'm',
	ns2__LengthUom__0_x002e1_x0020ft = 'n',
	ns2__LengthUom__0_x002e1_x0020ft_x005bUS_x005d = 'o',
	ns2__LengthUom__0_x002e1_x0020in = 'p',
	ns2__LengthUom__0_x002e1_x0020yd = 'q',
	ns2__LengthUom__1_x002f16_x0020in = 'r',
	ns2__LengthUom__1_x002f2_x0020ft = 's',
	ns2__LengthUom__1_x002f32_x0020in = 't',
	ns2__LengthUom__1_x002f64_x0020in = 'u',
	ns2__LengthUom__10_x0020ft = 'v',
	ns2__LengthUom__10_x0020in = 'w',
	ns2__LengthUom__10_x0020km = 'x',
	ns2__LengthUom__100_x0020ft = 'y',
	ns2__LengthUom__100_x0020km = 'z',
	ns2__LengthUom__1000_x0020ft = 123,
	ns2__LengthUom__30_x0020ft = 124,
	ns2__LengthUom__30_x0020m = 125,
	ns2__LengthUom__angstrom = 126,
	ns2__LengthUom__chain = 127,
	ns2__LengthUom__chain_x005bBnA_x005d = 128,
	ns2__LengthUom__chain_x005bBnB_x005d = 129,
	ns2__LengthUom__chain_x005bCla_x005d = 130,
	ns2__LengthUom__chain_x005bInd37_x005d = 131,
	ns2__LengthUom__chain_x005bSe_x005d = 132,
	ns2__LengthUom__chain_x005bSeT_x005d = 133,
	ns2__LengthUom__chain_x005bUS_x005d = 134,
	ns2__LengthUom__cm = 135,
	ns2__LengthUom__dam = 136,
	ns2__LengthUom__dm = 137,
	ns2__LengthUom__Em = 138,
	ns2__LengthUom__fathom = 139,
	ns2__LengthUom__fm = 140,
	ns2__LengthUom__ft = 141,
	ns2__LengthUom__ft_x005bBnA_x005d = 142,
	ns2__LengthUom__ft_x005bBnB_x005d = 143,
	ns2__LengthUom__ft_x005bBr36_x005d = 144,
	ns2__LengthUom__ft_x005bBr65_x005d = 145,
	ns2__LengthUom__ft_x005bCla_x005d = 146,
	ns2__LengthUom__ft_x005bGC_x005d = 147,
	ns2__LengthUom__ft_x005bInd_x005d = 148,
	ns2__LengthUom__ft_x005bInd37_x005d = 149,
	ns2__LengthUom__ft_x005bInd62_x005d = 150,
	ns2__LengthUom__ft_x005bInd75_x005d = 151,
	ns2__LengthUom__ft_x005bSe_x005d = 152,
	ns2__LengthUom__ft_x005bSeT_x005d = 153,
	ns2__LengthUom__ft_x005bUS_x005d = 154,
	ns2__LengthUom__fur_x005bUS_x005d = 155,
	ns2__LengthUom__Gm = 156,
	ns2__LengthUom__hm = 157,
	ns2__LengthUom__in = 158,
	ns2__LengthUom__in_x005bUS_x005d = 159,
	ns2__LengthUom__km = 160,
	ns2__LengthUom__link = 161,
	ns2__LengthUom__link_x005bBnA_x005d = 162,
	ns2__LengthUom__link_x005bBnB_x005d = 163,
	ns2__LengthUom__link_x005bCla_x005d = 164,
	ns2__LengthUom__link_x005bSe_x005d = 165,
	ns2__LengthUom__link_x005bSeT_x005d = 166,
	ns2__LengthUom__link_x005bUS_x005d = 167,
	ns2__LengthUom__m_x005bGer_x005d = 168,
	ns2__LengthUom__mi = 169,
	ns2__LengthUom__mi_x005bnaut_x005d = 170,
	ns2__LengthUom__mi_x005bnautUK_x005d = 171,
	ns2__LengthUom__mi_x005bUS_x005d = 172,
	ns2__LengthUom__mil = 173,
	ns2__LengthUom__mm = 174,
	ns2__LengthUom__Mm = 175,
	ns2__LengthUom__nm = 176,
	ns2__LengthUom__pm = 177,
	ns2__LengthUom__rod_x005bUS_x005d = 178,
	ns2__LengthUom__Tm = 179,
	ns2__LengthUom__um = 180,
	ns2__LengthUom__yd = 181,
	ns2__LengthUom__yd_x005bBnA_x005d = 182,
	ns2__LengthUom__yd_x005bBnB_x005d = 183,
	ns2__LengthUom__yd_x005bCla_x005d = 184,
	ns2__LengthUom__yd_x005bInd_x005d = 185,
	ns2__LengthUom__yd_x005bInd37_x005d = 186,
	ns2__LengthUom__yd_x005bInd62_x005d = 187,
	ns2__LengthUom__yd_x005bInd75_x005d = 188,
	ns2__LengthUom__yd_x005bSe_x005d = 189,
	ns2__LengthUom__yd_x005bSeT_x005d = 190,
	ns2__LengthUom__yd_x005bUS_x005d = 191
};
#endif

/* testh.h:6912 */
#ifndef SOAP_TYPE_ns2__LightExposureUom
#define SOAP_TYPE_ns2__LightExposureUom (371)
/* ns2:LightExposureUom */
enum ns2__LightExposureUom {
	ns2__LightExposureUom__footcandle_x002es = 0,
	ns2__LightExposureUom__lx_x002es = 1
};
#endif

/* testh.h:6929 */
#ifndef SOAP_TYPE_ns2__LinearAccelerationUom
#define SOAP_TYPE_ns2__LinearAccelerationUom (372)
/* ns2:LinearAccelerationUom */
enum ns2__LinearAccelerationUom {
	ns2__LinearAccelerationUom__cm_x002fs2 = 0,
	ns2__LinearAccelerationUom__ft_x002fs2 = 1,
	ns2__LinearAccelerationUom__Gal = 2,
	ns2__LinearAccelerationUom__gn = 3,
	ns2__LinearAccelerationUom__in_x002fs2 = 4,
	ns2__LinearAccelerationUom__m_x002fs2 = 5,
	ns2__LinearAccelerationUom__mGal = 6,
	ns2__LinearAccelerationUom__mgn = 7
};
#endif

/* testh.h:6976 */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionUom
#define SOAP_TYPE_ns2__LinearThermalExpansionUom (373)
/* ns2:LinearThermalExpansionUom */
enum ns2__LinearThermalExpansionUom {
	ns2__LinearThermalExpansionUom__1_x002fdeltaK = 0,
	ns2__LinearThermalExpansionUom__in_x002f_x0028in_x002edeltaF_x0029 = 1,
	ns2__LinearThermalExpansionUom__m_x002f_x0028m_x002edeltaK_x0029 = 2,
	ns2__LinearThermalExpansionUom__mm_x002f_x0028mm_x002edeltaK_x0029 = 3
};
#endif

/* testh.h:7003 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUom
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUom (374)
/* ns2:LogarithmicPowerRatioPerLengthUom */
enum ns2__LogarithmicPowerRatioPerLengthUom {
	ns2__LogarithmicPowerRatioPerLengthUom__B_x002fm = 0,
	ns2__LogarithmicPowerRatioPerLengthUom__dB_x002fft = 1,
	ns2__LogarithmicPowerRatioPerLengthUom__dB_x002fkm = 2,
	ns2__LogarithmicPowerRatioPerLengthUom__dB_x002fm = 3
};
#endif

/* testh.h:7030 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioUom
#define SOAP_TYPE_ns2__LogarithmicPowerRatioUom (375)
/* ns2:LogarithmicPowerRatioUom */
enum ns2__LogarithmicPowerRatioUom {
	ns2__LogarithmicPowerRatioUom__B = 'B',
	ns2__LogarithmicPowerRatioUom__dB = 'C'
};
#endif

/* testh.h:7047 */
#ifndef SOAP_TYPE_ns2__LuminanceUom
#define SOAP_TYPE_ns2__LuminanceUom (376)
/* ns2:LuminanceUom */
enum ns2__LuminanceUom {
	ns2__LuminanceUom__cd_x002fm2 = 0
};
#endif

/* testh.h:7059 */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyUom
#define SOAP_TYPE_ns2__LuminousEfficacyUom (377)
/* ns2:LuminousEfficacyUom */
enum ns2__LuminousEfficacyUom {
	ns2__LuminousEfficacyUom__lm_x002fW = 0
};
#endif

/* testh.h:7071 */
#ifndef SOAP_TYPE_ns2__LuminousFluxUom
#define SOAP_TYPE_ns2__LuminousFluxUom (378)
/* ns2:LuminousFluxUom */
enum ns2__LuminousFluxUom {
	ns2__LuminousFluxUom__lm = 0
};
#endif

/* testh.h:7083 */
#ifndef SOAP_TYPE_ns2__LuminousIntensityUom
#define SOAP_TYPE_ns2__LuminousIntensityUom (379)
/* ns2:LuminousIntensityUom */
enum ns2__LuminousIntensityUom {
	ns2__LuminousIntensityUom__cd = 0,
	ns2__LuminousIntensityUom__kcd = 1
};
#endif

/* testh.h:7100 */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentUom
#define SOAP_TYPE_ns2__MagneticDipoleMomentUom (380)
/* ns2:MagneticDipoleMomentUom */
enum ns2__MagneticDipoleMomentUom {
	ns2__MagneticDipoleMomentUom__Wb_x002em = 0
};
#endif

/* testh.h:7112 */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthUom
#define SOAP_TYPE_ns2__MagneticFieldStrengthUom (381)
/* ns2:MagneticFieldStrengthUom */
enum ns2__MagneticFieldStrengthUom {
	ns2__MagneticFieldStrengthUom__A_x002fm = 0,
	ns2__MagneticFieldStrengthUom__A_x002fmm = 1,
	ns2__MagneticFieldStrengthUom__Oe = 2
};
#endif

/* testh.h:7134 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUom
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUom (382)
/* ns2:MagneticFluxDensityPerLengthUom */
enum ns2__MagneticFluxDensityPerLengthUom {
	ns2__MagneticFluxDensityPerLengthUom__gauss_x002fcm = 0,
	ns2__MagneticFluxDensityPerLengthUom__mT_x002fdm = 1,
	ns2__MagneticFluxDensityPerLengthUom__T_x002fm = 2
};
#endif

/* testh.h:7156 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityUom
#define SOAP_TYPE_ns2__MagneticFluxDensityUom (383)
/* ns2:MagneticFluxDensityUom */
enum ns2__MagneticFluxDensityUom {
	ns2__MagneticFluxDensityUom__T = 'T',
	ns2__MagneticFluxDensityUom__cgauss = 'U',
	ns2__MagneticFluxDensityUom__cT = 'V',
	ns2__MagneticFluxDensityUom__dgauss = 'W',
	ns2__MagneticFluxDensityUom__dT = 'X',
	ns2__MagneticFluxDensityUom__Egauss = 'Y',
	ns2__MagneticFluxDensityUom__ET = 'Z',
	ns2__MagneticFluxDensityUom__fgauss = 91,
	ns2__MagneticFluxDensityUom__fT = 92,
	ns2__MagneticFluxDensityUom__gauss = 93,
	ns2__MagneticFluxDensityUom__Ggauss = 94,
	ns2__MagneticFluxDensityUom__GT = 95,
	ns2__MagneticFluxDensityUom__kgauss = 96,
	ns2__MagneticFluxDensityUom__kT = 'a',
	ns2__MagneticFluxDensityUom__mgauss = 'b',
	ns2__MagneticFluxDensityUom__Mgauss = 'c',
	ns2__MagneticFluxDensityUom__mT = 'd',
	ns2__MagneticFluxDensityUom__ngauss = 'e',
	ns2__MagneticFluxDensityUom__nT = 'f',
	ns2__MagneticFluxDensityUom__pgauss = 'g',
	ns2__MagneticFluxDensityUom__pT = 'h',
	ns2__MagneticFluxDensityUom__Tgauss = 'i',
	ns2__MagneticFluxDensityUom__TT = 'j',
	ns2__MagneticFluxDensityUom__ugauss = 'k',
	ns2__MagneticFluxDensityUom__uT = 'l'
};
#endif

/* testh.h:7288 */
#ifndef SOAP_TYPE_ns2__MagneticFluxUom
#define SOAP_TYPE_ns2__MagneticFluxUom (384)
/* ns2:MagneticFluxUom */
enum ns2__MagneticFluxUom {
	ns2__MagneticFluxUom__cWb = 0,
	ns2__MagneticFluxUom__dWb = 1,
	ns2__MagneticFluxUom__EWb = 2,
	ns2__MagneticFluxUom__fWb = 3,
	ns2__MagneticFluxUom__GWb = 4,
	ns2__MagneticFluxUom__kWb = 5,
	ns2__MagneticFluxUom__mWb = 6,
	ns2__MagneticFluxUom__MWb = 7,
	ns2__MagneticFluxUom__nWb = 8,
	ns2__MagneticFluxUom__pWb = 9,
	ns2__MagneticFluxUom__TWb = 10,
	ns2__MagneticFluxUom__uWb = 11,
	ns2__MagneticFluxUom__Wb = 12
};
#endif

/* testh.h:7360 */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityUom
#define SOAP_TYPE_ns2__MagneticPermeabilityUom (385)
/* ns2:MagneticPermeabilityUom */
enum ns2__MagneticPermeabilityUom {
	ns2__MagneticPermeabilityUom__H_x002fm = 0,
	ns2__MagneticPermeabilityUom__uH_x002fm = 1
};
#endif

/* testh.h:7377 */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialUom
#define SOAP_TYPE_ns2__MagneticVectorPotentialUom (386)
/* ns2:MagneticVectorPotentialUom */
enum ns2__MagneticVectorPotentialUom {
	ns2__MagneticVectorPotentialUom__Wb_x002fm = 0,
	ns2__MagneticVectorPotentialUom__Wb_x002fmm = 1
};
#endif

/* testh.h:7394 */
#ifndef SOAP_TYPE_ns2__MassLengthUom
#define SOAP_TYPE_ns2__MassLengthUom (387)
/* ns2:MassLengthUom */
enum ns2__MassLengthUom {
	ns2__MassLengthUom__kg_x002em = 0,
	ns2__MassLengthUom__lbm_x002eft = 1
};
#endif

/* testh.h:7411 */
#ifndef SOAP_TYPE_ns2__MassPerAreaUom
#define SOAP_TYPE_ns2__MassPerAreaUom (388)
/* ns2:MassPerAreaUom */
enum ns2__MassPerAreaUom {
	ns2__MassPerAreaUom__0_x002e01_x0020lbm_x002fft2 = 0,
	ns2__MassPerAreaUom__kg_x002fm2 = 1,
	ns2__MassPerAreaUom__lbm_x002fft2 = 2,
	ns2__MassPerAreaUom__Mg_x002fm2 = 3,
	ns2__MassPerAreaUom__ton_x005bUS_x005d_x002fft2 = 4
};
#endif

/* testh.h:7443 */
#ifndef SOAP_TYPE_ns2__MassPerEnergyUom
#define SOAP_TYPE_ns2__MassPerEnergyUom (389)
/* ns2:MassPerEnergyUom */
enum ns2__MassPerEnergyUom {
	ns2__MassPerEnergyUom__kg_x002f_x0028kW_x002eh_x0029 = 0,
	ns2__MassPerEnergyUom__kg_x002fJ = 1,
	ns2__MassPerEnergyUom__kg_x002fMJ = 2,
	ns2__MassPerEnergyUom__lbm_x002f_x0028hp_x002eh_x0029 = 3,
	ns2__MassPerEnergyUom__mg_x002fJ = 4
};
#endif

/* testh.h:7475 */
#ifndef SOAP_TYPE_ns2__MassPerLengthUom
#define SOAP_TYPE_ns2__MassPerLengthUom (390)
/* ns2:MassPerLengthUom */
enum ns2__MassPerLengthUom {
	ns2__MassPerLengthUom__kg_x002em_x002fcm2 = 0,
	ns2__MassPerLengthUom__kg_x002fm = 1,
	ns2__MassPerLengthUom__klbm_x002fin = 2,
	ns2__MassPerLengthUom__lbm_x002fft = 3,
	ns2__MassPerLengthUom__Mg_x002fin = 4
};
#endif

/* testh.h:7507 */
#ifndef SOAP_TYPE_ns2__MassPerMassUom
#define SOAP_TYPE_ns2__MassPerMassUom (391)
/* ns2:MassPerMassUom */
enum ns2__MassPerMassUom {
	ns2__MassPerMassUom___x0025 = 0,
	ns2__MassPerMassUom___x0025_x005bmass_x005d = 1,
	ns2__MassPerMassUom__Euc = 2,
	ns2__MassPerMassUom__g_x002fkg = 3,
	ns2__MassPerMassUom__g_x002ft = 4,
	ns2__MassPerMassUom__kg_x002fkg = 5,
	ns2__MassPerMassUom__kg_x002fsack_x005b94lbm_x005d = 6,
	ns2__MassPerMassUom__kg_x002ft = 7,
	ns2__MassPerMassUom__mg_x002fg = 8,
	ns2__MassPerMassUom__mg_x002fkg = 9,
	ns2__MassPerMassUom__ng_x002fg = 10,
	ns2__MassPerMassUom__ng_x002fmg = 11,
	ns2__MassPerMassUom__ppk = 12,
	ns2__MassPerMassUom__ppm = 13,
	ns2__MassPerMassUom__ppm_x005bmass_x005d = 14,
	ns2__MassPerMassUom__ug_x002fg = 15,
	ns2__MassPerMassUom__ug_x002fmg = 16
};
#endif

/* testh.h:7599 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaUom
#define SOAP_TYPE_ns2__MassPerTimePerAreaUom (392)
/* ns2:MassPerTimePerAreaUom */
enum ns2__MassPerTimePerAreaUom {
	ns2__MassPerTimePerAreaUom__g_x002eft_x002f_x0028cm3_x002es_x0029 = 0,
	ns2__MassPerTimePerAreaUom__g_x002em_x002f_x0028cm3_x002es_x0029 = 1,
	ns2__MassPerTimePerAreaUom__kg_x002f_x0028m2_x002es_x0029 = 2,
	ns2__MassPerTimePerAreaUom__kPa_x002es_x002fm = 3,
	ns2__MassPerTimePerAreaUom__lbm_x002f_x0028ft2_x002eh_x0029 = 4,
	ns2__MassPerTimePerAreaUom__lbm_x002f_x0028ft2_x002es_x0029 = 5,
	ns2__MassPerTimePerAreaUom__MPa_x002es_x002fm = 6
};
#endif

/* testh.h:7641 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthUom
#define SOAP_TYPE_ns2__MassPerTimePerLengthUom (393)
/* ns2:MassPerTimePerLengthUom */
enum ns2__MassPerTimePerLengthUom {
	ns2__MassPerTimePerLengthUom__kg_x002f_x0028m_x002es_x0029 = 0,
	ns2__MassPerTimePerLengthUom__lbm_x002f_x0028ft_x002eh_x0029 = 1,
	ns2__MassPerTimePerLengthUom__lbm_x002f_x0028ft_x002es_x0029 = 2,
	ns2__MassPerTimePerLengthUom__Pa_x002es = 3
};
#endif

/* testh.h:7668 */
#ifndef SOAP_TYPE_ns2__MassPerTimeUom
#define SOAP_TYPE_ns2__MassPerTimeUom (394)
/* ns2:MassPerTimeUom */
enum ns2__MassPerTimeUom {
	ns2__MassPerTimeUom__1E6_x0020lbm_x002fa = 0,
	ns2__MassPerTimeUom__g_x002fs = 1,
	ns2__MassPerTimeUom__kg_x002fd = 2,
	ns2__MassPerTimeUom__kg_x002fh = 3,
	ns2__MassPerTimeUom__kg_x002fmin = 4,
	ns2__MassPerTimeUom__kg_x002fs = 5,
	ns2__MassPerTimeUom__lbm_x002fd = 6,
	ns2__MassPerTimeUom__lbm_x002fh = 7,
	ns2__MassPerTimeUom__lbm_x002fmin = 8,
	ns2__MassPerTimeUom__lbm_x002fs = 9,
	ns2__MassPerTimeUom__Mg_x002fa = 10,
	ns2__MassPerTimeUom__Mg_x002fd = 11,
	ns2__MassPerTimeUom__Mg_x002fh = 12,
	ns2__MassPerTimeUom__Mg_x002fmin = 13,
	ns2__MassPerTimeUom__t_x002fa = 14,
	ns2__MassPerTimeUom__t_x002fd = 15,
	ns2__MassPerTimeUom__t_x002fh = 16,
	ns2__MassPerTimeUom__t_x002fmin = 17,
	ns2__MassPerTimeUom__ton_x005bUK_x005d_x002fa = 18,
	ns2__MassPerTimeUom__ton_x005bUK_x005d_x002fd = 19,
	ns2__MassPerTimeUom__ton_x005bUK_x005d_x002fh = 20,
	ns2__MassPerTimeUom__ton_x005bUK_x005d_x002fmin = 21,
	ns2__MassPerTimeUom__ton_x005bUS_x005d_x002fa = 22,
	ns2__MassPerTimeUom__ton_x005bUS_x005d_x002fd = 23,
	ns2__MassPerTimeUom__ton_x005bUS_x005d_x002fh = 24,
	ns2__MassPerTimeUom__ton_x005bUS_x005d_x002fmin = 25
};
#endif

/* testh.h:7805 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthUom
#define SOAP_TYPE_ns2__MassPerVolumePerLengthUom (395)
/* ns2:MassPerVolumePerLengthUom */
enum ns2__MassPerVolumePerLengthUom {
	ns2__MassPerVolumePerLengthUom__g_x002fcm4 = 0,
	ns2__MassPerVolumePerLengthUom__kg_x002fdm4 = 1,
	ns2__MassPerVolumePerLengthUom__kg_x002fm4 = 2,
	ns2__MassPerVolumePerLengthUom__lbm_x002f_x0028gal_x005bUK_x005d_x002eft_x0029 = 3,
	ns2__MassPerVolumePerLengthUom__lbm_x002f_x0028gal_x005bUS_x005d_x002eft_x0029 = 4,
	ns2__MassPerVolumePerLengthUom__lbm_x002fft4 = 5,
	ns2__MassPerVolumePerLengthUom__Pa_x002es2_x002fm3 = 6
};
#endif

/* testh.h:7847 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureUom
#define SOAP_TYPE_ns2__MassPerVolumePerPressureUom (396)
/* ns2:MassPerVolumePerPressureUom */
enum ns2__MassPerVolumePerPressureUom {
	ns2__MassPerVolumePerPressureUom__kg_x002fm3_x002ekPa = 0,
	ns2__MassPerVolumePerPressureUom__lb_x002fft_x002epsi = 1
};
#endif

/* testh.h:7856 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureUom
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureUom (397)
/* ns2:MassPerVolumePerTemperatureUom */
enum ns2__MassPerVolumePerTemperatureUom {
	ns2__MassPerVolumePerTemperatureUom__kg_x002fm3_x002edegC = 0,
	ns2__MassPerVolumePerTemperatureUom__kg_x002fm3_x002eK = 1,
	ns2__MassPerVolumePerTemperatureUom__lb_x002fft_x002edegF = 2
};
#endif

/* testh.h:7866 */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUom
#define SOAP_TYPE_ns2__MassPerVolumeUom (398)
/* ns2:MassPerVolumeUom */
enum ns2__MassPerVolumeUom {
	ns2__MassPerVolumeUom__0_x002e001_x0020lbm_x002fbbl = 0,
	ns2__MassPerVolumeUom__0_x002e001_x0020lbm_x002fgal_x005bUK_x005d = 1,
	ns2__MassPerVolumeUom__0_x002e001_x0020lbm_x002fgal_x005bUS_x005d = 2,
	ns2__MassPerVolumeUom__0_x002e01_x0020grain_x002fft3 = 3,
	ns2__MassPerVolumeUom__0_x002e1_x0020lbm_x002fbbl = 4,
	ns2__MassPerVolumeUom__10_x0020Mg_x002fm3 = 5,
	ns2__MassPerVolumeUom__g_x002fcm3 = 6,
	ns2__MassPerVolumeUom__g_x002fdm3 = 7,
	ns2__MassPerVolumeUom__g_x002fgal_x005bUK_x005d = 8,
	ns2__MassPerVolumeUom__g_x002fgal_x005bUS_x005d = 9,
	ns2__MassPerVolumeUom__g_x002fL = 10,
	ns2__MassPerVolumeUom__g_x002fm3 = 11,
	ns2__MassPerVolumeUom__grain_x002fft3 = 12,
	ns2__MassPerVolumeUom__grain_x002fgal_x005bUS_x005d = 13,
	ns2__MassPerVolumeUom__kg_x002fdm3 = 14,
	ns2__MassPerVolumeUom__kg_x002fL = 15,
	ns2__MassPerVolumeUom__kg_x002fm3 = 16,
	ns2__MassPerVolumeUom__lbm_x002fbbl = 17,
	ns2__MassPerVolumeUom__lbm_x002fft3 = 18,
	ns2__MassPerVolumeUom__lbm_x002fgal_x005bUK_x005d = 19,
	ns2__MassPerVolumeUom__lbm_x002fgal_x005bUS_x005d = 20,
	ns2__MassPerVolumeUom__lbm_x002fin3 = 21,
	ns2__MassPerVolumeUom__mg_x002fdm3 = 22,
	ns2__MassPerVolumeUom__mg_x002fgal_x005bUS_x005d = 23,
	ns2__MassPerVolumeUom__mg_x002fL = 24,
	ns2__MassPerVolumeUom__mg_x002fm3 = 25,
	ns2__MassPerVolumeUom__Mg_x002fm3 = 26,
	ns2__MassPerVolumeUom__ng_x002fl = 27,
	ns2__MassPerVolumeUom__ng_x002fm3 = 28,
	ns2__MassPerVolumeUom__ng_x002fml = 29,
	ns2__MassPerVolumeUom__t_x002fm3 = 30,
	ns2__MassPerVolumeUom__ug_x002fcm3 = 31
};
#endif

/* testh.h:8021 */
#ifndef SOAP_TYPE_ns2__MassUom
#define SOAP_TYPE_ns2__MassUom (399)
/* ns2:MassUom */
enum ns2__MassUom {
	ns2__MassUom__g = 'g',
	ns2__MassUom__t = 't',
	ns2__MassUom__ag = 'u',
	ns2__MassUom__cg = 'v',
	ns2__MassUom__ct = 'w',
	ns2__MassUom__cwt_x005bUK_x005d = 'x',
	ns2__MassUom__cwt_x005bUS_x005d = 'y',
	ns2__MassUom__Eg = 'z',
	ns2__MassUom__fg = 123,
	ns2__MassUom__Gg = 124,
	ns2__MassUom__grain = 125,
	ns2__MassUom__hg = 126,
	ns2__MassUom__kg = 127,
	ns2__MassUom__klbm = 128,
	ns2__MassUom__lbm = 129,
	ns2__MassUom__mg = 130,
	ns2__MassUom__Mg = 131,
	ns2__MassUom__ng = 132,
	ns2__MassUom__ozm = 133,
	ns2__MassUom__ozm_x005btroy_x005d = 134,
	ns2__MassUom__pg = 135,
	ns2__MassUom__sack_x005b94lbm_x005d = 136,
	ns2__MassUom__Tg = 137,
	ns2__MassUom__ton_x005bUK_x005d = 138,
	ns2__MassUom__ton_x005bUS_x005d = 139,
	ns2__MassUom__ug = 140
};
#endif

/* testh.h:8158 */
#ifndef SOAP_TYPE_ns2__MobilityUom
#define SOAP_TYPE_ns2__MobilityUom (400)
/* ns2:MobilityUom */
enum ns2__MobilityUom {
	ns2__MobilityUom__D_x002f_x0028Pa_x002es_x0029 = 0,
	ns2__MobilityUom__D_x002fcP = 1,
	ns2__MobilityUom__mD_x002eft2_x002f_x0028lbf_x002es_x0029 = 2,
	ns2__MobilityUom__mD_x002ein2_x002f_x0028lbf_x002es_x0029 = 3,
	ns2__MobilityUom__mD_x002f_x0028Pa_x002es_x0029 = 4,
	ns2__MobilityUom__mD_x002fcP = 5,
	ns2__MobilityUom__TD_x005bAPI_x005d_x002f_x0028Pa_x002es_x0029 = 6
};
#endif

/* testh.h:8200 */
#ifndef SOAP_TYPE_ns2__MolarEnergyUom
#define SOAP_TYPE_ns2__MolarEnergyUom (401)
/* ns2:MolarEnergyUom */
enum ns2__MolarEnergyUom {
	ns2__MolarEnergyUom__Btu_x005bIT_x005d_x002flbmol = 0,
	ns2__MolarEnergyUom__J_x002fmol = 1,
	ns2__MolarEnergyUom__kcal_x005bth_x005d_x002fmol = 2,
	ns2__MolarEnergyUom__kJ_x002fkmol = 3,
	ns2__MolarEnergyUom__MJ_x002fkmol = 4
};
#endif

/* testh.h:8232 */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityUom
#define SOAP_TYPE_ns2__MolarHeatCapacityUom (402)
/* ns2:MolarHeatCapacityUom */
enum ns2__MolarHeatCapacityUom {
	ns2__MolarHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbmol_x002edeltaF_x0029 = 0,
	ns2__MolarHeatCapacityUom__cal_x005bth_x005d_x002f_x0028mol_x002edeltaC_x0029 = 1,
	ns2__MolarHeatCapacityUom__J_x002f_x0028mol_x002edeltaK_x0029 = 2,
	ns2__MolarHeatCapacityUom__kJ_x002f_x0028kmol_x002edeltaK_x0029 = 3
};
#endif

/* testh.h:8259 */
#ifndef SOAP_TYPE_ns2__MolarVolumeUom
#define SOAP_TYPE_ns2__MolarVolumeUom (403)
/* ns2:MolarVolumeUom */
enum ns2__MolarVolumeUom {
	ns2__MolarVolumeUom__dm3_x002fkmol = 0,
	ns2__MolarVolumeUom__ft3_x002flbmol = 1,
	ns2__MolarVolumeUom__L_x002fkmol = 2,
	ns2__MolarVolumeUom__L_x002fmol = 3,
	ns2__MolarVolumeUom__m3_x002fkmol = 4,
	ns2__MolarVolumeUom__m3_x002fmol = 5
};
#endif

/* testh.h:8296 */
#ifndef SOAP_TYPE_ns2__MolecularWeightUom
#define SOAP_TYPE_ns2__MolecularWeightUom (404)
/* ns2:MolecularWeightUom */
enum ns2__MolecularWeightUom {
	ns2__MolecularWeightUom__g_x002fmol = 0,
	ns2__MolecularWeightUom__kg_x002fmol = 1,
	ns2__MolecularWeightUom__lbm_x002flbmol = 2
};
#endif

/* testh.h:8318 */
#ifndef SOAP_TYPE_ns2__MomentOfForceUom
#define SOAP_TYPE_ns2__MomentOfForceUom (405)
/* ns2:MomentOfForceUom */
enum ns2__MomentOfForceUom {
	ns2__MomentOfForceUom__J = 'J',
	ns2__MomentOfForceUom__1000_x0020lbf_x002eft = 'K',
	ns2__MomentOfForceUom__daN_x002em = 'L',
	ns2__MomentOfForceUom__dN_x002em = 'M',
	ns2__MomentOfForceUom__kgf_x002em = 'N',
	ns2__MomentOfForceUom__kN_x002em = 'O',
	ns2__MomentOfForceUom__lbf_x002eft = 'P',
	ns2__MomentOfForceUom__lbf_x002ein = 'Q',
	ns2__MomentOfForceUom__lbm_x002eft2_x002fs2 = 'R',
	ns2__MomentOfForceUom__N_x002em = 'S',
	ns2__MomentOfForceUom__pdl_x002eft = 'T',
	ns2__MomentOfForceUom__tonf_x005bUS_x005d_x002eft = 'U',
	ns2__MomentOfForceUom__tonf_x005bUS_x005d_x002emi = 'V'
};
#endif

/* testh.h:8390 */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaUom
#define SOAP_TYPE_ns2__MomentOfInertiaUom (406)
/* ns2:MomentOfInertiaUom */
enum ns2__MomentOfInertiaUom {
	ns2__MomentOfInertiaUom__kg_x002em2 = 0,
	ns2__MomentOfInertiaUom__lbm_x002eft2 = 1
};
#endif

/* testh.h:8407 */
#ifndef SOAP_TYPE_ns2__MomentumUom
#define SOAP_TYPE_ns2__MomentumUom (407)
/* ns2:MomentumUom */
enum ns2__MomentumUom {
	ns2__MomentumUom__kg_x002em_x002fs = 0,
	ns2__MomentumUom__lbm_x002eft_x002fs = 1
};
#endif

/* testh.h:8424 */
#ifndef SOAP_TYPE_ns2__NormalizedPowerUom
#define SOAP_TYPE_ns2__NormalizedPowerUom (408)
/* ns2:NormalizedPowerUom */
enum ns2__NormalizedPowerUom {
	ns2__NormalizedPowerUom__B_x002eW = 0,
	ns2__NormalizedPowerUom__dB_x002emW = 1,
	ns2__NormalizedPowerUom__dB_x002eMW = 2,
	ns2__NormalizedPowerUom__dB_x002eW = 3
};
#endif

/* testh.h:8451 */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthUom
#define SOAP_TYPE_ns2__PermeabilityLengthUom (409)
/* ns2:PermeabilityLengthUom */
enum ns2__PermeabilityLengthUom {
	ns2__PermeabilityLengthUom__D_x002eft = 0,
	ns2__PermeabilityLengthUom__D_x002em = 1,
	ns2__PermeabilityLengthUom__mD_x002eft = 2,
	ns2__PermeabilityLengthUom__mD_x002em = 3,
	ns2__PermeabilityLengthUom__TD_x005bAPI_x005d_x002em = 4
};
#endif

/* testh.h:8483 */
#ifndef SOAP_TYPE_ns2__PermeabilityRockUom
#define SOAP_TYPE_ns2__PermeabilityRockUom (410)
/* ns2:PermeabilityRockUom */
enum ns2__PermeabilityRockUom {
	ns2__PermeabilityRockUom__D = 'D',
	ns2__PermeabilityRockUom__D_x005bAPI_x005d = 'E',
	ns2__PermeabilityRockUom__mD = 'F',
	ns2__PermeabilityRockUom__TD_x005bAPI_x005d = 'G'
};
#endif

/* testh.h:8510 */
#ifndef SOAP_TYPE_ns2__PermittivityUom
#define SOAP_TYPE_ns2__PermittivityUom (411)
/* ns2:PermittivityUom */
enum ns2__PermittivityUom {
	ns2__PermittivityUom__F_x002fm = 0,
	ns2__PermittivityUom__uF_x002fm = 1
};
#endif

/* testh.h:8527 */
#ifndef SOAP_TYPE_ns2__PlaneAngleUom
#define SOAP_TYPE_ns2__PlaneAngleUom (412)
/* ns2:PlaneAngleUom */
enum ns2__PlaneAngleUom {
	ns2__PlaneAngleUom__0_x002e001_x0020seca = 0,
	ns2__PlaneAngleUom__ccgr = 1,
	ns2__PlaneAngleUom__cgr = 2,
	ns2__PlaneAngleUom__dega = 3,
	ns2__PlaneAngleUom__gon = 4,
	ns2__PlaneAngleUom__krad = 5,
	ns2__PlaneAngleUom__mila = 6,
	ns2__PlaneAngleUom__mina = 7,
	ns2__PlaneAngleUom__Mrad = 8,
	ns2__PlaneAngleUom__mrad = 9,
	ns2__PlaneAngleUom__rad = 10,
	ns2__PlaneAngleUom__rev = 11,
	ns2__PlaneAngleUom__seca = 12,
	ns2__PlaneAngleUom__urad = 13
};
#endif

/* testh.h:8604 */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUom
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUom (413)
/* ns2:PotentialDifferencePerPowerDropUom */
enum ns2__PotentialDifferencePerPowerDropUom {
	ns2__PotentialDifferencePerPowerDropUom__V_x002fB = 0,
	ns2__PotentialDifferencePerPowerDropUom__V_x002fdB = 1
};
#endif

/* testh.h:8621 */
#ifndef SOAP_TYPE_ns2__PowerPerAreaUom
#define SOAP_TYPE_ns2__PowerPerAreaUom (414)
/* ns2:PowerPerAreaUom */
enum ns2__PowerPerAreaUom {
	ns2__PowerPerAreaUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x0029 = 0,
	ns2__PowerPerAreaUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x0029 = 1,
	ns2__PowerPerAreaUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x0029 = 2,
	ns2__PowerPerAreaUom__hp_x002fin2 = 3,
	ns2__PowerPerAreaUom__hp_x005bhyd_x005d_x002fin2 = 4,
	ns2__PowerPerAreaUom__kW_x002fcm2 = 5,
	ns2__PowerPerAreaUom__kW_x002fm2 = 6,
	ns2__PowerPerAreaUom__mW_x002fm2 = 7,
	ns2__PowerPerAreaUom__ucal_x005bth_x005d_x002f_x0028s_x002ecm2_x0029 = 8,
	ns2__PowerPerAreaUom__W_x002fcm2 = 9,
	ns2__PowerPerAreaUom__W_x002fm2 = 10,
	ns2__PowerPerAreaUom__W_x002fmm2 = 11
};
#endif

/* testh.h:8688 */
#ifndef SOAP_TYPE_ns2__PowerPerPowerUom
#define SOAP_TYPE_ns2__PowerPerPowerUom (415)
/* ns2:PowerPerPowerUom */
enum ns2__PowerPerPowerUom {
	ns2__PowerPerPowerUom___x0025 = 0,
	ns2__PowerPerPowerUom__Btu_x005bIT_x005d_x002f_x0028hp_x002eh_x0029 = 1,
	ns2__PowerPerPowerUom__Euc = 2,
	ns2__PowerPerPowerUom__W_x002fkW = 3,
	ns2__PowerPerPowerUom__W_x002fW = 4
};
#endif

/* testh.h:8720 */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeUom
#define SOAP_TYPE_ns2__PowerPerVolumeUom (416)
/* ns2:PowerPerVolumeUom */
enum ns2__PowerPerVolumeUom {
	ns2__PowerPerVolumeUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x0029 = 0,
	ns2__PowerPerVolumeUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x0029 = 1,
	ns2__PowerPerVolumeUom__cal_x005bth_x005d_x002f_x0028h_x002ecm3_x0029 = 2,
	ns2__PowerPerVolumeUom__cal_x005bth_x005d_x002f_x0028s_x002ecm3_x0029 = 3,
	ns2__PowerPerVolumeUom__hp_x002fft3 = 4,
	ns2__PowerPerVolumeUom__kW_x002fm3 = 5,
	ns2__PowerPerVolumeUom__uW_x002fm3 = 6,
	ns2__PowerPerVolumeUom__W_x002fm3 = 7
};
#endif

/* testh.h:8767 */
#ifndef SOAP_TYPE_ns2__PowerUom
#define SOAP_TYPE_ns2__PowerUom (417)
/* ns2:PowerUom */
enum ns2__PowerUom {
	ns2__PowerUom__W = 'W',
	ns2__PowerUom__cW = 'X',
	ns2__PowerUom__dW = 'Y',
	ns2__PowerUom__EW = 'Z',
	ns2__PowerUom__fW = 91,
	ns2__PowerUom__GW = 92,
	ns2__PowerUom__hp = 93,
	ns2__PowerUom__hp_x005belec_x005d = 94,
	ns2__PowerUom__hp_x005bhyd_x005d = 95,
	ns2__PowerUom__hp_x005bmetric_x005d = 96,
	ns2__PowerUom__kW = 'a',
	ns2__PowerUom__MW = 'b',
	ns2__PowerUom__mW = 'c',
	ns2__PowerUom__nW = 'd',
	ns2__PowerUom__pW = 'e',
	ns2__PowerUom__tonRefrig = 'f',
	ns2__PowerUom__TW = 'g',
	ns2__PowerUom__uW = 'h'
};
#endif

/* testh.h:8864 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredUom
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredUom (418)
/* ns2:PressurePerFlowrateSquaredUom */
enum ns2__PressurePerFlowrateSquaredUom {
	ns2__PressurePerFlowrateSquaredUom__bar_x002f_x00281000m3_x002fday_x00292 = 0,
	ns2__PressurePerFlowrateSquaredUom__bar_x002f_x0028m3_x002fday_x00292 = 1,
	ns2__PressurePerFlowrateSquaredUom__Pa_x002f_x00281000m3_x002fday_x00292 = 2,
	ns2__PressurePerFlowrateSquaredUom__Pa_x002f_x0028m3_x002fday_x00292 = 3,
	ns2__PressurePerFlowrateSquaredUom__psi_x002f_x00281000000ft3_x002fday_x00292 = 4,
	ns2__PressurePerFlowrateSquaredUom__psi_x002f_x00281000ft3_x002fday_x00292 = 5,
	ns2__PressurePerFlowrateSquaredUom__psi_x002f_x0028bbl_x002fday_x00292 = 6
};
#endif

/* testh.h:8878 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateUom
#define SOAP_TYPE_ns2__PressurePerFlowrateUom (419)
/* ns2:PressurePerFlowrateUom */
enum ns2__PressurePerFlowrateUom {
	ns2__PressurePerFlowrateUom__bar_x002f_x00281000m3_x002fday_x0029 = 0,
	ns2__PressurePerFlowrateUom__bar_x002f_x0028m3_x002fday_x0029 = 1,
	ns2__PressurePerFlowrateUom__Pa_x002f_x00281000m3_x002fday_x0029 = 2,
	ns2__PressurePerFlowrateUom__Pa_x002f_x0028m3_x002fday_x0029 = 3,
	ns2__PressurePerFlowrateUom__psi_x002f_x00281000000ft3_x002fday_x0029 = 4,
	ns2__PressurePerFlowrateUom__psi_x002f_x00281000ft3_x002fday_x0029 = 5,
	ns2__PressurePerFlowrateUom__psi_x002f_x0028bbl_x002fday_x0029 = 6
};
#endif

/* testh.h:8892 */
#ifndef SOAP_TYPE_ns2__PressurePerPressureUom
#define SOAP_TYPE_ns2__PressurePerPressureUom (420)
/* ns2:PressurePerPressureUom */
enum ns2__PressurePerPressureUom {
	ns2__PressurePerPressureUom__atm_x002fatm = 0,
	ns2__PressurePerPressureUom__bar_x002fbar = 1,
	ns2__PressurePerPressureUom__Euc = 2,
	ns2__PressurePerPressureUom__kPa_x002fkPa = 3,
	ns2__PressurePerPressureUom__MPa_x002fMPa = 4,
	ns2__PressurePerPressureUom__Pa_x002fPa = 5,
	ns2__PressurePerPressureUom__psi_x002fpsi = 6
};
#endif

/* testh.h:8934 */
#ifndef SOAP_TYPE_ns2__PressurePerTimeUom
#define SOAP_TYPE_ns2__PressurePerTimeUom (421)
/* ns2:PressurePerTimeUom */
enum ns2__PressurePerTimeUom {
	ns2__PressurePerTimeUom__atm_x002fh = 0,
	ns2__PressurePerTimeUom__bar_x002fh = 1,
	ns2__PressurePerTimeUom__kPa_x002fh = 2,
	ns2__PressurePerTimeUom__kPa_x002fmin = 3,
	ns2__PressurePerTimeUom__MPa_x002fh = 4,
	ns2__PressurePerTimeUom__Pa_x002fh = 5,
	ns2__PressurePerTimeUom__Pa_x002fs = 6,
	ns2__PressurePerTimeUom__psi_x002fh = 7,
	ns2__PressurePerTimeUom__psi_x002fmin = 8
};
#endif

/* testh.h:8986 */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUom
#define SOAP_TYPE_ns2__PressurePerVolumeUom (422)
/* ns2:PressurePerVolumeUom */
enum ns2__PressurePerVolumeUom {
	ns2__PressurePerVolumeUom__Pa_x002fm3 = 0,
	ns2__PressurePerVolumeUom__psi2_x002ed_x002f_x0028cP_x002eft3_x0029 = 1
};
#endif

/* testh.h:9003 */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUom
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUom (423)
/* ns2:PressureSquaredPerForceTimePerAreaUom */
enum ns2__PressureSquaredPerForceTimePerAreaUom {
	ns2__PressureSquaredPerForceTimePerAreaUom__0_x002e001_x0020kPa2_x002fcP = 0,
	ns2__PressureSquaredPerForceTimePerAreaUom__bar2_x002fcP = 1,
	ns2__PressureSquaredPerForceTimePerAreaUom__kPa2_x002fcP = 2,
	ns2__PressureSquaredPerForceTimePerAreaUom__Pa2_x002f_x0028Pa_x002es_x0029 = 3,
	ns2__PressureSquaredPerForceTimePerAreaUom__psi2_x002fcP = 4
};
#endif

/* testh.h:9035 */
#ifndef SOAP_TYPE_ns2__PressureSquaredUom
#define SOAP_TYPE_ns2__PressureSquaredUom (424)
/* ns2:PressureSquaredUom */
enum ns2__PressureSquaredUom {
	ns2__PressureSquaredUom__bar2 = 0,
	ns2__PressureSquaredUom__GPa2 = 1,
	ns2__PressureSquaredUom__kPa2 = 2,
	ns2__PressureSquaredUom__kpsi2 = 3,
	ns2__PressureSquaredUom__Pa2 = 4,
	ns2__PressureSquaredUom__psi2 = 5
};
#endif

/* testh.h:9072 */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeUom
#define SOAP_TYPE_ns2__PressureTimePerVolumeUom (425)
/* ns2:PressureTimePerVolumeUom */
enum ns2__PressureTimePerVolumeUom {
	ns2__PressureTimePerVolumeUom__Pa_x002es_x002fm3 = 0,
	ns2__PressureTimePerVolumeUom__psi_x002ed_x002fbbl = 1
};
#endif

/* testh.h:9089 */
#ifndef SOAP_TYPE_ns2__PressureUom
#define SOAP_TYPE_ns2__PressureUom (426)
/* ns2:PressureUom */
enum ns2__PressureUom {
	ns2__PressureUom__0_x002e01_x0020lbf_x002fft2 = 0,
	ns2__PressureUom__at = 1,
	ns2__PressureUom__atm = 2,
	ns2__PressureUom__bar = 3,
	ns2__PressureUom__cmH2O_x005b4degC_x005d = 4,
	ns2__PressureUom__cPa = 5,
	ns2__PressureUom__dPa = 6,
	ns2__PressureUom__dyne_x002fcm2 = 7,
	ns2__PressureUom__EPa = 8,
	ns2__PressureUom__fPa = 9,
	ns2__PressureUom__GPa = 10,
	ns2__PressureUom__hbar = 11,
	ns2__PressureUom__inH2O_x005b39degF_x005d = 12,
	ns2__PressureUom__inH2O_x005b60degF_x005d = 13,
	ns2__PressureUom__inHg_x005b32degF_x005d = 14,
	ns2__PressureUom__inHg_x005b60degF_x005d = 15,
	ns2__PressureUom__kgf_x002fcm2 = 16,
	ns2__PressureUom__kgf_x002fm2 = 17,
	ns2__PressureUom__kgf_x002fmm2 = 18,
	ns2__PressureUom__kN_x002fm2 = 19,
	ns2__PressureUom__kPa = 20,
	ns2__PressureUom__kpsi = 21,
	ns2__PressureUom__lbf_x002fft2 = 22,
	ns2__PressureUom__mbar = 23,
	ns2__PressureUom__mmHg_x005b0degC_x005d = 24,
	ns2__PressureUom__mPa = 25,
	ns2__PressureUom__MPa = 26,
	ns2__PressureUom__Mpsi = 27,
	ns2__PressureUom__N_x002fm2 = 28,
	ns2__PressureUom__N_x002fmm2 = 29,
	ns2__PressureUom__nPa = 30,
	ns2__PressureUom__Pa = 31,
	ns2__PressureUom__pPa = 32,
	ns2__PressureUom__psi = 33,
	ns2__PressureUom__tonf_x005bUK_x005d_x002fft2 = 34,
	ns2__PressureUom__tonf_x005bUS_x005d_x002fft2 = 35,
	ns2__PressureUom__tonf_x005bUS_x005d_x002fin2 = 36,
	ns2__PressureUom__torr = 37,
	ns2__PressureUom__TPa = 38,
	ns2__PressureUom__ubar = 39,
	ns2__PressureUom__umHg_x005b0degC_x005d = 40,
	ns2__PressureUom__uPa = 41,
	ns2__PressureUom__upsi = 42
};
#endif

/* testh.h:9311 */
#ifndef SOAP_TYPE_ns2__QuantityOfLightUom
#define SOAP_TYPE_ns2__QuantityOfLightUom (427)
/* ns2:QuantityOfLightUom */
enum ns2__QuantityOfLightUom {
	ns2__QuantityOfLightUom__lm_x002es = 0
};
#endif

/* testh.h:9323 */
#ifndef SOAP_TYPE_ns2__RadianceUom
#define SOAP_TYPE_ns2__RadianceUom (428)
/* ns2:RadianceUom */
enum ns2__RadianceUom {
	ns2__RadianceUom__W_x002f_x0028m2_x002esr_x0029 = 0
};
#endif

/* testh.h:9335 */
#ifndef SOAP_TYPE_ns2__RadiantIntensityUom
#define SOAP_TYPE_ns2__RadiantIntensityUom (429)
/* ns2:RadiantIntensityUom */
enum ns2__RadiantIntensityUom {
	ns2__RadiantIntensityUom__W_x002fsr = 0
};
#endif

/* testh.h:9347 */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaUom
#define SOAP_TYPE_ns2__ReciprocalAreaUom (430)
/* ns2:ReciprocalAreaUom */
enum ns2__ReciprocalAreaUom {
	ns2__ReciprocalAreaUom__1_x002fft2 = 0,
	ns2__ReciprocalAreaUom__1_x002fkm2 = 1,
	ns2__ReciprocalAreaUom__1_x002fm2 = 2,
	ns2__ReciprocalAreaUom__1_x002fmi2 = 3
};
#endif

/* testh.h:9374 */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUom
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUom (431)
/* ns2:ReciprocalElectricPotentialDifferenceUom */
enum ns2__ReciprocalElectricPotentialDifferenceUom {
	ns2__ReciprocalElectricPotentialDifferenceUom__1_x002fuV = 0,
	ns2__ReciprocalElectricPotentialDifferenceUom__1_x002fV = 1
};
#endif

/* testh.h:9391 */
#ifndef SOAP_TYPE_ns2__ReciprocalForceUom
#define SOAP_TYPE_ns2__ReciprocalForceUom (432)
/* ns2:ReciprocalForceUom */
enum ns2__ReciprocalForceUom {
	ns2__ReciprocalForceUom__1_x002flbf = 0,
	ns2__ReciprocalForceUom__1_x002fN = 1
};
#endif

/* testh.h:9408 */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthUom
#define SOAP_TYPE_ns2__ReciprocalLengthUom (433)
/* ns2:ReciprocalLengthUom */
enum ns2__ReciprocalLengthUom {
	ns2__ReciprocalLengthUom__1_x002fangstrom = 0,
	ns2__ReciprocalLengthUom__1_x002fcm = 1,
	ns2__ReciprocalLengthUom__1_x002fft = 2,
	ns2__ReciprocalLengthUom__1_x002fin = 3,
	ns2__ReciprocalLengthUom__1_x002fm = 4,
	ns2__ReciprocalLengthUom__1_x002fmi = 5,
	ns2__ReciprocalLengthUom__1_x002fmm = 6,
	ns2__ReciprocalLengthUom__1_x002fnm = 7,
	ns2__ReciprocalLengthUom__1_x002fyd = 8,
	ns2__ReciprocalLengthUom__1E_9_x00201_x002fft = 9
};
#endif

/* testh.h:9465 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeUom
#define SOAP_TYPE_ns2__ReciprocalMassTimeUom (434)
/* ns2:ReciprocalMassTimeUom */
enum ns2__ReciprocalMassTimeUom {
	ns2__ReciprocalMassTimeUom__1_x002f_x0028kg_x002es_x0029 = 0,
	ns2__ReciprocalMassTimeUom__Bq_x002fkg = 1,
	ns2__ReciprocalMassTimeUom__pCi_x002fg = 2
};
#endif

/* testh.h:9487 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassUom
#define SOAP_TYPE_ns2__ReciprocalMassUom (435)
/* ns2:ReciprocalMassUom */
enum ns2__ReciprocalMassUom {
	ns2__ReciprocalMassUom__1_x002fg = 0,
	ns2__ReciprocalMassUom__1_x002fkg = 1,
	ns2__ReciprocalMassUom__1_x002flbm = 2
};
#endif

/* testh.h:9509 */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureUom
#define SOAP_TYPE_ns2__ReciprocalPressureUom (436)
/* ns2:ReciprocalPressureUom */
enum ns2__ReciprocalPressureUom {
	ns2__ReciprocalPressureUom__1_x002fbar = 0,
	ns2__ReciprocalPressureUom__1_x002fkPa = 1,
	ns2__ReciprocalPressureUom__1_x002fPa = 2,
	ns2__ReciprocalPressureUom__1_x002fpPa = 3,
	ns2__ReciprocalPressureUom__1_x002fpsi = 4,
	ns2__ReciprocalPressureUom__1_x002fupsi = 5
};
#endif

/* testh.h:9546 */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeUom
#define SOAP_TYPE_ns2__ReciprocalTimeUom (437)
/* ns2:ReciprocalTimeUom */
enum ns2__ReciprocalTimeUom {
	ns2__ReciprocalTimeUom__1_x002fa = 0,
	ns2__ReciprocalTimeUom__1_x002fd = 1,
	ns2__ReciprocalTimeUom__1_x002fh = 2,
	ns2__ReciprocalTimeUom__1_x002fmin = 3,
	ns2__ReciprocalTimeUom__1_x002fms = 4,
	ns2__ReciprocalTimeUom__1_x002fs = 5,
	ns2__ReciprocalTimeUom__1_x002fus = 6,
	ns2__ReciprocalTimeUom__1_x002fwk = 7
};
#endif

/* testh.h:9593 */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeUom
#define SOAP_TYPE_ns2__ReciprocalVolumeUom (438)
/* ns2:ReciprocalVolumeUom */
enum ns2__ReciprocalVolumeUom {
	ns2__ReciprocalVolumeUom__1_x002fbbl = 0,
	ns2__ReciprocalVolumeUom__1_x002fft3 = 1,
	ns2__ReciprocalVolumeUom__1_x002fgal_x005bUK_x005d = 2,
	ns2__ReciprocalVolumeUom__1_x002fgal_x005bUS_x005d = 3,
	ns2__ReciprocalVolumeUom__1_x002fL = 4,
	ns2__ReciprocalVolumeUom__1_x002fm3 = 5
};
#endif

/* testh.h:9630 */
#ifndef SOAP_TYPE_ns2__ReluctanceUom
#define SOAP_TYPE_ns2__ReluctanceUom (439)
/* ns2:ReluctanceUom */
enum ns2__ReluctanceUom {
	ns2__ReluctanceUom__1_x002fH = 0
};
#endif

/* testh.h:9642 */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaUom
#define SOAP_TYPE_ns2__SecondMomentOfAreaUom (440)
/* ns2:SecondMomentOfAreaUom */
enum ns2__SecondMomentOfAreaUom {
	ns2__SecondMomentOfAreaUom__cm4 = 0,
	ns2__SecondMomentOfAreaUom__in4 = 1,
	ns2__SecondMomentOfAreaUom__m4 = 2
};
#endif

/* testh.h:9664 */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeUom
#define SOAP_TYPE_ns2__SignalingEventPerTimeUom (441)
/* ns2:SignalingEventPerTimeUom */
enum ns2__SignalingEventPerTimeUom {
	ns2__SignalingEventPerTimeUom__Bd = 0
};
#endif

/* testh.h:9676 */
#ifndef SOAP_TYPE_ns2__SolidAngleUom
#define SOAP_TYPE_ns2__SolidAngleUom (442)
/* ns2:SolidAngleUom */
enum ns2__SolidAngleUom {
	ns2__SolidAngleUom__sr = 0
};
#endif

/* testh.h:9688 */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityUom
#define SOAP_TYPE_ns2__SpecificHeatCapacityUom (443)
/* ns2:SpecificHeatCapacityUom */
enum ns2__SpecificHeatCapacityUom {
	ns2__SpecificHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edeltaF_x0029 = 0,
	ns2__SpecificHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edeltaR_x0029 = 1,
	ns2__SpecificHeatCapacityUom__cal_x005bth_x005d_x002f_x0028g_x002edeltaK_x0029 = 2,
	ns2__SpecificHeatCapacityUom__J_x002f_x0028g_x002edeltaK_x0029 = 3,
	ns2__SpecificHeatCapacityUom__J_x002f_x0028kg_x002edeltaK_x0029 = 4,
	ns2__SpecificHeatCapacityUom__kcal_x005bth_x005d_x002f_x0028kg_x002edeltaC_x0029 = 5,
	ns2__SpecificHeatCapacityUom__kJ_x002f_x0028kg_x002edeltaK_x0029 = 6,
	ns2__SpecificHeatCapacityUom__kW_x002eh_x002f_x0028kg_x002edeltaC_x0029 = 7
};
#endif

/* testh.h:9735 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthUom (444)
/* ns2:TemperatureIntervalPerLengthUom */
enum ns2__TemperatureIntervalPerLengthUom {
	ns2__TemperatureIntervalPerLengthUom__0_x002e01_x0020deltaF_x002fft = 0,
	ns2__TemperatureIntervalPerLengthUom__deltaC_x002fft = 1,
	ns2__TemperatureIntervalPerLengthUom__deltaC_x002fhm = 2,
	ns2__TemperatureIntervalPerLengthUom__deltaC_x002fkm = 3,
	ns2__TemperatureIntervalPerLengthUom__deltaC_x002fm = 4,
	ns2__TemperatureIntervalPerLengthUom__deltaF_x002fft = 5,
	ns2__TemperatureIntervalPerLengthUom__deltaF_x002fm = 6,
	ns2__TemperatureIntervalPerLengthUom__deltaK_x002fkm = 7,
	ns2__TemperatureIntervalPerLengthUom__deltaK_x002fm = 8
};
#endif

/* testh.h:9787 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureUom (445)
/* ns2:TemperatureIntervalPerPressureUom */
enum ns2__TemperatureIntervalPerPressureUom {
	ns2__TemperatureIntervalPerPressureUom__deltaC_x002fkPa = 0,
	ns2__TemperatureIntervalPerPressureUom__deltaF_x002fpsi = 1,
	ns2__TemperatureIntervalPerPressureUom__deltaK_x002fPa = 2
};
#endif

/* testh.h:9809 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeUom (446)
/* ns2:TemperatureIntervalPerTimeUom */
enum ns2__TemperatureIntervalPerTimeUom {
	ns2__TemperatureIntervalPerTimeUom__deltaC_x002fh = 0,
	ns2__TemperatureIntervalPerTimeUom__deltaC_x002fmin = 1,
	ns2__TemperatureIntervalPerTimeUom__deltaC_x002fs = 2,
	ns2__TemperatureIntervalPerTimeUom__deltaF_x002fh = 3,
	ns2__TemperatureIntervalPerTimeUom__deltaF_x002fmin = 4,
	ns2__TemperatureIntervalPerTimeUom__deltaF_x002fs = 5,
	ns2__TemperatureIntervalPerTimeUom__deltaK_x002fs = 6
};
#endif

/* testh.h:9851 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalUom
#define SOAP_TYPE_ns2__TemperatureIntervalUom (447)
/* ns2:TemperatureIntervalUom */
enum ns2__TemperatureIntervalUom {
	ns2__TemperatureIntervalUom__deltaC = 0,
	ns2__TemperatureIntervalUom__deltaF = 1,
	ns2__TemperatureIntervalUom__deltaK = 2,
	ns2__TemperatureIntervalUom__deltaR = 3
};
#endif

/* testh.h:9878 */
#ifndef SOAP_TYPE_ns2__ThermalConductanceUom
#define SOAP_TYPE_ns2__ThermalConductanceUom (448)
/* ns2:ThermalConductanceUom */
enum ns2__ThermalConductanceUom {
	ns2__ThermalConductanceUom__W_x002fdeltaK = 0
};
#endif

/* testh.h:9890 */
#ifndef SOAP_TYPE_ns2__ThermalConductivityUom
#define SOAP_TYPE_ns2__ThermalConductivityUom (449)
/* ns2:ThermalConductivityUom */
enum ns2__ThermalConductivityUom {
	ns2__ThermalConductivityUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft_x002edeltaF_x0029 = 0,
	ns2__ThermalConductivityUom__cal_x005bth_x005d_x002f_x0028h_x002ecm_x002edeltaC_x0029 = 1,
	ns2__ThermalConductivityUom__cal_x005bth_x005d_x002f_x0028s_x002ecm_x002edeltaC_x0029 = 2,
	ns2__ThermalConductivityUom__kcal_x005bth_x005d_x002f_x0028h_x002em_x002edeltaC_x0029 = 3,
	ns2__ThermalConductivityUom__W_x002f_x0028m_x002edeltaK_x0029 = 4
};
#endif

/* testh.h:9922 */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityUom
#define SOAP_TYPE_ns2__ThermalDiffusivityUom (450)
/* ns2:ThermalDiffusivityUom */
enum ns2__ThermalDiffusivityUom {
	ns2__ThermalDiffusivityUom__cm2_x002fs = 0,
	ns2__ThermalDiffusivityUom__ft2_x002fh = 1,
	ns2__ThermalDiffusivityUom__ft2_x002fs = 2,
	ns2__ThermalDiffusivityUom__in2_x002fs = 3,
	ns2__ThermalDiffusivityUom__m2_x002fh = 4,
	ns2__ThermalDiffusivityUom__m2_x002fs = 5,
	ns2__ThermalDiffusivityUom__mm2_x002fs = 6
};
#endif

/* testh.h:9964 */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceUom
#define SOAP_TYPE_ns2__ThermalInsulanceUom (451)
/* ns2:ThermalInsulanceUom */
enum ns2__ThermalInsulanceUom {
	ns2__ThermalInsulanceUom__deltaC_x002em2_x002eh_x002fkcal_x005bth_x005d = 0,
	ns2__ThermalInsulanceUom__deltaF_x002eft2_x002eh_x002fBtu_x005bIT_x005d = 1,
	ns2__ThermalInsulanceUom__deltaK_x002em2_x002fkW = 2,
	ns2__ThermalInsulanceUom__deltaK_x002em2_x002fW = 3
};
#endif

/* testh.h:9991 */
#ifndef SOAP_TYPE_ns2__ThermalResistanceUom
#define SOAP_TYPE_ns2__ThermalResistanceUom (452)
/* ns2:ThermalResistanceUom */
enum ns2__ThermalResistanceUom {
	ns2__ThermalResistanceUom__deltaK_x002fW = 0
};
#endif

/* testh.h:10003 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom (453)
/* ns2:ThermodynamicTemperaturePerThermodynamicTemperatureUom */
enum ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom {
	ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom__degC_x002fdegC = 0,
	ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom__degF_x002fdegF = 1,
	ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom__degR_x002fdegR = 2,
	ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom__Euc = 3,
	ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom__K_x002fK = 4
};
#endif

/* testh.h:10035 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureUom
#define SOAP_TYPE_ns2__ThermodynamicTemperatureUom (454)
/* ns2:ThermodynamicTemperatureUom */
enum ns2__ThermodynamicTemperatureUom {
	ns2__ThermodynamicTemperatureUom__K = 'K',
	ns2__ThermodynamicTemperatureUom__degC = 'L',
	ns2__ThermodynamicTemperatureUom__degF = 'M',
	ns2__ThermodynamicTemperatureUom__degR = 'N'
};
#endif

/* testh.h:10062 */
#ifndef SOAP_TYPE_ns2__TimePerLengthUom
#define SOAP_TYPE_ns2__TimePerLengthUom (455)
/* ns2:TimePerLengthUom */
enum ns2__TimePerLengthUom {
	ns2__TimePerLengthUom__0_x002e001_x0020h_x002fft = 0,
	ns2__TimePerLengthUom__h_x002fkm = 1,
	ns2__TimePerLengthUom__min_x002fft = 2,
	ns2__TimePerLengthUom__min_x002fm = 3,
	ns2__TimePerLengthUom__ms_x002fcm = 4,
	ns2__TimePerLengthUom__ms_x002fft = 5,
	ns2__TimePerLengthUom__ms_x002fin = 6,
	ns2__TimePerLengthUom__ms_x002fm = 7,
	ns2__TimePerLengthUom__ns_x002fft = 8,
	ns2__TimePerLengthUom__ns_x002fm = 9,
	ns2__TimePerLengthUom__s_x002fcm = 10,
	ns2__TimePerLengthUom__s_x002fft = 11,
	ns2__TimePerLengthUom__s_x002fin = 12,
	ns2__TimePerLengthUom__s_x002fm = 13,
	ns2__TimePerLengthUom__us_x002fft = 14,
	ns2__TimePerLengthUom__us_x002fin = 15,
	ns2__TimePerLengthUom__us_x002fm = 16
};
#endif

/* testh.h:10154 */
#ifndef SOAP_TYPE_ns2__TimePerMassUom
#define SOAP_TYPE_ns2__TimePerMassUom (456)
/* ns2:TimePerMassUom */
enum ns2__TimePerMassUom {
	ns2__TimePerMassUom__s_x002fkg = 0
};
#endif

/* testh.h:10166 */
#ifndef SOAP_TYPE_ns2__TimePerTimeUom
#define SOAP_TYPE_ns2__TimePerTimeUom (457)
/* ns2:TimePerTimeUom */
enum ns2__TimePerTimeUom {
	ns2__TimePerTimeUom___x0025 = 0,
	ns2__TimePerTimeUom__Euc = 1,
	ns2__TimePerTimeUom__ms_x002fs = 2,
	ns2__TimePerTimeUom__s_x002fs = 3
};
#endif

/* testh.h:10193 */
#ifndef SOAP_TYPE_ns2__TimePerVolumeUom
#define SOAP_TYPE_ns2__TimePerVolumeUom (458)
/* ns2:TimePerVolumeUom */
enum ns2__TimePerVolumeUom {
	ns2__TimePerVolumeUom__0_x002e001_x0020d_x002fft3 = 0,
	ns2__TimePerVolumeUom__d_x002fbbl = 1,
	ns2__TimePerVolumeUom__d_x002fft3 = 2,
	ns2__TimePerVolumeUom__d_x002fm3 = 3,
	ns2__TimePerVolumeUom__h_x002fft3 = 4,
	ns2__TimePerVolumeUom__h_x002fm3 = 5,
	ns2__TimePerVolumeUom__s_x002fft3 = 6,
	ns2__TimePerVolumeUom__s_x002fL = 7,
	ns2__TimePerVolumeUom__s_x002fm3 = 8,
	ns2__TimePerVolumeUom__s_x002fqt_x005bUK_x005d = 9,
	ns2__TimePerVolumeUom__s_x002fqt_x005bUS_x005d = 10
};
#endif

/* testh.h:10255 */
#ifndef SOAP_TYPE_ns2__TimeUom
#define SOAP_TYPE_ns2__TimeUom (459)
/* ns2:TimeUom */
enum ns2__TimeUom {
	ns2__TimeUom__a = 'a',
	ns2__TimeUom__d = 'd',
	ns2__TimeUom__h = 'h',
	ns2__TimeUom__s = 's',
	ns2__TimeUom__1_x002f2_x0020ms = 't',
	ns2__TimeUom__100_x0020ka_x005bt_x005d = 'u',
	ns2__TimeUom__a_x005bt_x005d = 'v',
	ns2__TimeUom__ca = 'w',
	ns2__TimeUom__cs = 'x',
	ns2__TimeUom__ds = 'y',
	ns2__TimeUom__Ea_x005bt_x005d = 'z',
	ns2__TimeUom__fa = 123,
	ns2__TimeUom__Ga_x005bt_x005d = 124,
	ns2__TimeUom__hs = 125,
	ns2__TimeUom__ka_x005bt_x005d = 126,
	ns2__TimeUom__Ma_x005bt_x005d = 127,
	ns2__TimeUom__min_ = 128,
	ns2__TimeUom__ms = 129,
	ns2__TimeUom__na = 130,
	ns2__TimeUom__ns = 131,
	ns2__TimeUom__ps = 132,
	ns2__TimeUom__Ta_x005bt_x005d = 133,
	ns2__TimeUom__us = 134,
	ns2__TimeUom__wk = 135
};
#endif

/* testh.h:10386 */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateUom
#define SOAP_TYPE_ns2__VerticalCoordinateUom (460)
/* ns2:VerticalCoordinateUom */
enum ns2__VerticalCoordinateUom {
	ns2__VerticalCoordinateUom__m = 'm',
	ns2__VerticalCoordinateUom__ft = 'n',
	ns2__VerticalCoordinateUom__ftUS = 'o',
	ns2__VerticalCoordinateUom__ftBr_x002865_x0029 = 'p'
};
#endif

/* testh.h:10413 */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUom
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUom (461)
/* ns2:VolumeFlowRatePerVolumeFlowRateUom */
enum ns2__VolumeFlowRatePerVolumeFlowRateUom {
	ns2__VolumeFlowRatePerVolumeFlowRateUom___x0025 = 0,
	ns2__VolumeFlowRatePerVolumeFlowRateUom___x0028bbl_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 1,
	ns2__VolumeFlowRatePerVolumeFlowRateUom___x0028m3_x002fd_x0029_x002f_x0028m3_x002fd_x0029 = 2,
	ns2__VolumeFlowRatePerVolumeFlowRateUom___x0028m3_x002fs_x0029_x002f_x0028m3_x002fs_x0029 = 3,
	ns2__VolumeFlowRatePerVolumeFlowRateUom__1E6_x0020_x0028ft3_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 4,
	ns2__VolumeFlowRatePerVolumeFlowRateUom__Euc = 5
};
#endif

/* testh.h:10450 */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUom
#define SOAP_TYPE_ns2__VolumePerAreaUom (462)
/* ns2:VolumePerAreaUom */
enum ns2__VolumePerAreaUom {
	ns2__VolumePerAreaUom__1E6_x0020bbl_x002facre = 0,
	ns2__VolumePerAreaUom__bbl_x002facre = 1,
	ns2__VolumePerAreaUom__ft3_x002fft2 = 2,
	ns2__VolumePerAreaUom__m3_x002fm2 = 3
};
#endif

/* testh.h:10477 */
#ifndef SOAP_TYPE_ns2__VolumePerLengthUom
#define SOAP_TYPE_ns2__VolumePerLengthUom (463)
/* ns2:VolumePerLengthUom */
enum ns2__VolumePerLengthUom {
	ns2__VolumePerLengthUom__0_x002e01_x0020dm3_x002fkm = 0,
	ns2__VolumePerLengthUom__0_x002e01_x0020L_x002fkm = 1,
	ns2__VolumePerLengthUom__bbl_x002fft = 2,
	ns2__VolumePerLengthUom__bbl_x002fin = 3,
	ns2__VolumePerLengthUom__bbl_x002fmi = 4,
	ns2__VolumePerLengthUom__dm3_x002fm = 5,
	ns2__VolumePerLengthUom__ft3_x002fft = 6,
	ns2__VolumePerLengthUom__gal_x005bUK_x005d_x002fmi = 7,
	ns2__VolumePerLengthUom__gal_x005bUS_x005d_x002fft = 8,
	ns2__VolumePerLengthUom__gal_x005bUS_x005d_x002fmi = 9,
	ns2__VolumePerLengthUom__in3_x002fft = 10,
	ns2__VolumePerLengthUom__L_x002fm = 11,
	ns2__VolumePerLengthUom__m3_x002fkm = 12,
	ns2__VolumePerLengthUom__m3_x002fm = 13
};
#endif

/* testh.h:10554 */
#ifndef SOAP_TYPE_ns2__VolumePerMassUom
#define SOAP_TYPE_ns2__VolumePerMassUom (464)
/* ns2:VolumePerMassUom */
enum ns2__VolumePerMassUom {
	ns2__VolumePerMassUom__0_x002e01_x0020L_x002fkg = 0,
	ns2__VolumePerMassUom__bbl_x002fton_x005bUK_x005d = 1,
	ns2__VolumePerMassUom__bbl_x002fton_x005bUS_x005d = 2,
	ns2__VolumePerMassUom__cm3_x002fg = 3,
	ns2__VolumePerMassUom__dm3_x002fkg = 4,
	ns2__VolumePerMassUom__dm3_x002ft = 5,
	ns2__VolumePerMassUom__ft3_x002fkg = 6,
	ns2__VolumePerMassUom__ft3_x002flbm = 7,
	ns2__VolumePerMassUom__ft3_x002fsack_x005b94lbm_x005d = 8,
	ns2__VolumePerMassUom__gal_x005bUK_x005d_x002flbm = 9,
	ns2__VolumePerMassUom__gal_x005bUS_x005d_x002flbm = 10,
	ns2__VolumePerMassUom__gal_x005bUS_x005d_x002fsack_x005b94lbm_x005d = 11,
	ns2__VolumePerMassUom__gal_x005bUS_x005d_x002fton_x005bUK_x005d = 12,
	ns2__VolumePerMassUom__gal_x005bUS_x005d_x002fton_x005bUS_x005d = 13,
	ns2__VolumePerMassUom__L_x002fkg = 14,
	ns2__VolumePerMassUom__L_x002ft = 15,
	ns2__VolumePerMassUom__L_x002fton_x005bUK_x005d = 16,
	ns2__VolumePerMassUom__m3_x002fg = 17,
	ns2__VolumePerMassUom__m3_x002fkg = 18,
	ns2__VolumePerMassUom__m3_x002ft = 19,
	ns2__VolumePerMassUom__m3_x002fton_x005bUK_x005d = 20,
	ns2__VolumePerMassUom__m3_x002fton_x005bUS_x005d = 21
};
#endif

/* testh.h:10671 */
#ifndef SOAP_TYPE_ns2__VolumePerPressureUom
#define SOAP_TYPE_ns2__VolumePerPressureUom (465)
/* ns2:VolumePerPressureUom */
enum ns2__VolumePerPressureUom {
	ns2__VolumePerPressureUom__bbl_x002fpsi = 0,
	ns2__VolumePerPressureUom__m3_x002fkPa = 1,
	ns2__VolumePerPressureUom__m3_x002fPa = 2
};
#endif

/* testh.h:10693 */
#ifndef SOAP_TYPE_ns2__VolumePerRotationUom
#define SOAP_TYPE_ns2__VolumePerRotationUom (466)
/* ns2:VolumePerRotationUom */
enum ns2__VolumePerRotationUom {
	ns2__VolumePerRotationUom__ft3_x002frad = 0,
	ns2__VolumePerRotationUom__m3_x002frad = 1,
	ns2__VolumePerRotationUom__m3_x002frev = 2
};
#endif

/* testh.h:10715 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthUom
#define SOAP_TYPE_ns2__VolumePerTimeLengthUom (467)
/* ns2:VolumePerTimeLengthUom */
enum ns2__VolumePerTimeLengthUom {
	ns2__VolumePerTimeLengthUom__1000_x0020bbl_x002eft_x002fd = 0,
	ns2__VolumePerTimeLengthUom__1000_x0020m4_x002fd = 1,
	ns2__VolumePerTimeLengthUom__m4_x002fs = 2
};
#endif

/* testh.h:10737 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaUom
#define SOAP_TYPE_ns2__VolumePerTimePerAreaUom (468)
/* ns2:VolumePerTimePerAreaUom */
enum ns2__VolumePerTimePerAreaUom {
	ns2__VolumePerTimePerAreaUom__ft3_x002f_x0028min_x002eft2_x0029 = 0,
	ns2__VolumePerTimePerAreaUom__ft3_x002f_x0028s_x002eft2_x0029 = 1,
	ns2__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028h_x002eft2_x0029 = 2,
	ns2__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028h_x002ein2_x0029 = 3,
	ns2__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028min_x002eft2_x0029 = 4,
	ns2__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028h_x002eft2_x0029 = 5,
	ns2__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028h_x002ein2_x0029 = 6,
	ns2__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028min_x002eft2_x0029 = 7,
	ns2__VolumePerTimePerAreaUom__m3_x002f_x0028s_x002em2_x0029 = 8
};
#endif

/* testh.h:10789 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthUom
#define SOAP_TYPE_ns2__VolumePerTimePerLengthUom (469)
/* ns2:VolumePerTimePerLengthUom */
enum ns2__VolumePerTimePerLengthUom {
	ns2__VolumePerTimePerLengthUom__1000_x0020ft3_x002f_x0028d_x002eft_x0029 = 0,
	ns2__VolumePerTimePerLengthUom__1000_x0020m3_x002f_x0028d_x002em_x0029 = 1,
	ns2__VolumePerTimePerLengthUom__1000_x0020m3_x002f_x0028h_x002em_x0029 = 2,
	ns2__VolumePerTimePerLengthUom__bbl_x002f_x0028d_x002eft_x0029 = 3,
	ns2__VolumePerTimePerLengthUom__ft3_x002f_x0028d_x002eft_x0029 = 4,
	ns2__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028h_x002eft_x0029 = 5,
	ns2__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028h_x002ein_x0029 = 6,
	ns2__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028min_x002eft_x0029 = 7,
	ns2__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028h_x002eft_x0029 = 8,
	ns2__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028h_x002ein_x0029 = 9,
	ns2__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028min_x002eft_x0029 = 10,
	ns2__VolumePerTimePerLengthUom__m3_x002f_x0028d_x002em_x0029 = 11,
	ns2__VolumePerTimePerLengthUom__m3_x002f_x0028h_x002em_x0029 = 12,
	ns2__VolumePerTimePerLengthUom__m3_x002f_x0028s_x002eft_x0029 = 13,
	ns2__VolumePerTimePerLengthUom__m3_x002f_x0028s_x002em_x0029 = 14
};
#endif

/* testh.h:10871 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUom
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUom (470)
/* ns2:VolumePerTimePerPressureLengthUom */
enum ns2__VolumePerTimePerPressureLengthUom {
	ns2__VolumePerTimePerPressureLengthUom__bbl_x002f_x0028ft_x002epsi_x002ed_x0029 = 0,
	ns2__VolumePerTimePerPressureLengthUom__ft3_x002f_x0028ft_x002epsi_x002ed_x0029 = 1,
	ns2__VolumePerTimePerPressureLengthUom__m2_x002f_x0028kPa_x002ed_x0029 = 2,
	ns2__VolumePerTimePerPressureLengthUom__m2_x002f_x0028Pa_x002es_x0029 = 3
};
#endif

/* testh.h:10898 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureUom
#define SOAP_TYPE_ns2__VolumePerTimePerPressureUom (471)
/* ns2:VolumePerTimePerPressureUom */
enum ns2__VolumePerTimePerPressureUom {
	ns2__VolumePerTimePerPressureUom__1000_x0020ft3_x002f_x0028psi_x002ed_x0029 = 0,
	ns2__VolumePerTimePerPressureUom__bbl_x002f_x0028kPa_x002ed_x0029 = 1,
	ns2__VolumePerTimePerPressureUom__bbl_x002f_x0028psi_x002ed_x0029 = 2,
	ns2__VolumePerTimePerPressureUom__L_x002f_x0028bar_x002emin_x0029 = 3,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002ed_x0029 = 4,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002eh_x0029 = 5,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002emin_x0029 = 6,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028kPa_x002ed_x0029 = 7,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028kPa_x002eh_x0029 = 8,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028Pa_x002es_x0029 = 9,
	ns2__VolumePerTimePerPressureUom__m3_x002f_x0028psi_x002ed_x0029 = 10
};
#endif

/* testh.h:10960 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeUom
#define SOAP_TYPE_ns2__VolumePerTimePerTimeUom (472)
/* ns2:VolumePerTimePerTimeUom */
enum ns2__VolumePerTimePerTimeUom {
	ns2__VolumePerTimePerTimeUom__bbl_x002fd2 = 0,
	ns2__VolumePerTimePerTimeUom__bbl_x002fh2 = 1,
	ns2__VolumePerTimePerTimeUom__dm3_x002fs2 = 2,
	ns2__VolumePerTimePerTimeUom__ft3_x002fd2 = 3,
	ns2__VolumePerTimePerTimeUom__ft3_x002fh2 = 4,
	ns2__VolumePerTimePerTimeUom__ft3_x002fmin2 = 5,
	ns2__VolumePerTimePerTimeUom__ft3_x002fs2 = 6,
	ns2__VolumePerTimePerTimeUom__gal_x005bUK_x005d_x002fh2 = 7,
	ns2__VolumePerTimePerTimeUom__gal_x005bUK_x005d_x002fmin2 = 8,
	ns2__VolumePerTimePerTimeUom__gal_x005bUS_x005d_x002fh2 = 9,
	ns2__VolumePerTimePerTimeUom__gal_x005bUS_x005d_x002fmin2 = 10,
	ns2__VolumePerTimePerTimeUom__L_x002fs2 = 11,
	ns2__VolumePerTimePerTimeUom__m3_x002fd2 = 12,
	ns2__VolumePerTimePerTimeUom__m3_x002fs2 = 13
};
#endif

/* testh.h:11037 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeUom
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeUom (473)
/* ns2:VolumePerTimePerVolumeUom */
enum ns2__VolumePerTimePerVolumeUom {
	ns2__VolumePerTimePerVolumeUom__bbl_x002f_x0028d_x002eacre_x002eft_x0029 = 0,
	ns2__VolumePerTimePerVolumeUom__m3_x002f_x0028s_x002em3_x0029 = 1
};
#endif

/* testh.h:11054 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUom
#define SOAP_TYPE_ns2__VolumePerTimeUom (474)
/* ns2:VolumePerTimeUom */
enum ns2__VolumePerTimeUom {
	ns2__VolumePerTimeUom__1_x002f30_x0020cm3_x002fmin = 0,
	ns2__VolumePerTimeUom__1000_x0020bbl_x002fd = 1,
	ns2__VolumePerTimeUom__1000_x0020ft3_x002fd = 2,
	ns2__VolumePerTimeUom__1000_x0020m3_x002fd = 3,
	ns2__VolumePerTimeUom__1000_x0020m3_x002fh = 4,
	ns2__VolumePerTimeUom__1E6_x0020bbl_x002fd = 5,
	ns2__VolumePerTimeUom__1E6_x0020ft3_x002fd = 6,
	ns2__VolumePerTimeUom__1E6_x0020m3_x002fd = 7,
	ns2__VolumePerTimeUom__bbl_x002fd = 8,
	ns2__VolumePerTimeUom__bbl_x002fh = 9,
	ns2__VolumePerTimeUom__bbl_x002fmin = 10,
	ns2__VolumePerTimeUom__cm3_x002fh = 11,
	ns2__VolumePerTimeUom__cm3_x002fmin = 12,
	ns2__VolumePerTimeUom__cm3_x002fs = 13,
	ns2__VolumePerTimeUom__dm3_x002fs = 14,
	ns2__VolumePerTimeUom__ft3_x002fd = 15,
	ns2__VolumePerTimeUom__ft3_x002fh = 16,
	ns2__VolumePerTimeUom__ft3_x002fmin = 17,
	ns2__VolumePerTimeUom__ft3_x002fs = 18,
	ns2__VolumePerTimeUom__gal_x005bUK_x005d_x002fd = 19,
	ns2__VolumePerTimeUom__gal_x005bUK_x005d_x002fh = 20,
	ns2__VolumePerTimeUom__gal_x005bUK_x005d_x002fmin = 21,
	ns2__VolumePerTimeUom__gal_x005bUS_x005d_x002fd = 22,
	ns2__VolumePerTimeUom__gal_x005bUS_x005d_x002fh = 23,
	ns2__VolumePerTimeUom__gal_x005bUS_x005d_x002fmin = 24,
	ns2__VolumePerTimeUom__L_x002fh = 25,
	ns2__VolumePerTimeUom__L_x002fmin = 26,
	ns2__VolumePerTimeUom__L_x002fs = 27,
	ns2__VolumePerTimeUom__m3_x002fd = 28,
	ns2__VolumePerTimeUom__m3_x002fh = 29,
	ns2__VolumePerTimeUom__m3_x002fmin = 30,
	ns2__VolumePerTimeUom__m3_x002fs = 31
};
#endif

/* testh.h:11221 */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUom
#define SOAP_TYPE_ns2__VolumePerVolumeUom (475)
/* ns2:VolumePerVolumeUom */
enum ns2__VolumePerVolumeUom {
	ns2__VolumePerVolumeUom___x0025 = 0,
	ns2__VolumePerVolumeUom___x0025_x005bvol_x005d = 1,
	ns2__VolumePerVolumeUom__0_x002e001_x0020bbl_x002fft3 = 2,
	ns2__VolumePerVolumeUom__0_x002e001_x0020bbl_x002fm3 = 3,
	ns2__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUK_x005d_x002fbbl = 4,
	ns2__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUK_x005d_x002fgal_x005bUK_x005d = 5,
	ns2__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fbbl = 6,
	ns2__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fft3 = 7,
	ns2__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fgal_x005bUS_x005d = 8,
	ns2__VolumePerVolumeUom__0_x002e001_x0020pt_x005bUK_x005d_x002fbbl = 9,
	ns2__VolumePerVolumeUom__0_x002e01_x0020bbl_x002fbbl = 10,
	ns2__VolumePerVolumeUom__0_x002e1_x0020gal_x005bUS_x005d_x002fbbl = 11,
	ns2__VolumePerVolumeUom__0_x002e1_x0020L_x002fbbl = 12,
	ns2__VolumePerVolumeUom__0_x002e1_x0020pt_x005bUS_x005d_x002fbbl = 13,
	ns2__VolumePerVolumeUom__1000_x0020ft3_x002fbbl = 14,
	ns2__VolumePerVolumeUom__1000_x0020m3_x002fm3 = 15,
	ns2__VolumePerVolumeUom__1E_6_x0020acre_x002eft_x002fbbl = 16,
	ns2__VolumePerVolumeUom__1E_6_x0020bbl_x002fft3 = 17,
	ns2__VolumePerVolumeUom__1E_6_x0020bbl_x002fm3 = 18,
	ns2__VolumePerVolumeUom__1E6_x0020bbl_x002f_x0028acre_x002eft_x0029 = 19,
	ns2__VolumePerVolumeUom__1E6_x0020ft3_x002f_x0028acre_x002eft_x0029 = 20,
	ns2__VolumePerVolumeUom__1E6_x0020ft3_x002fbbl = 21,
	ns2__VolumePerVolumeUom__bbl_x002f_x0028acre_x002eft_x0029 = 22,
	ns2__VolumePerVolumeUom__bbl_x002fbbl = 23,
	ns2__VolumePerVolumeUom__bbl_x002fft3 = 24,
	ns2__VolumePerVolumeUom__bbl_x002fm3 = 25,
	ns2__VolumePerVolumeUom__cEuc = 26,
	ns2__VolumePerVolumeUom__cm3_x002fcm3 = 27,
	ns2__VolumePerVolumeUom__cm3_x002fL = 28,
	ns2__VolumePerVolumeUom__cm3_x002fm3 = 29,
	ns2__VolumePerVolumeUom__dm3_x002fm3 = 30,
	ns2__VolumePerVolumeUom__Euc = 31,
	ns2__VolumePerVolumeUom__ft3_x002fbbl = 32,
	ns2__VolumePerVolumeUom__ft3_x002fft3 = 33,
	ns2__VolumePerVolumeUom__gal_x005bUK_x005d_x002fft3 = 34,
	ns2__VolumePerVolumeUom__gal_x005bUS_x005d_x002fbbl = 35,
	ns2__VolumePerVolumeUom__gal_x005bUS_x005d_x002fft3 = 36,
	ns2__VolumePerVolumeUom__L_x002fm3 = 37,
	ns2__VolumePerVolumeUom__m3_x002f_x0028ha_x002em_x0029 = 38,
	ns2__VolumePerVolumeUom__m3_x002fbbl = 39,
	ns2__VolumePerVolumeUom__m3_x002fm3 = 40,
	ns2__VolumePerVolumeUom__mL_x002fgal_x005bUK_x005d = 41,
	ns2__VolumePerVolumeUom__mL_x002fgal_x005bUS_x005d = 42,
	ns2__VolumePerVolumeUom__mL_x002fmL = 43,
	ns2__VolumePerVolumeUom__ppk = 44,
	ns2__VolumePerVolumeUom__ppm = 45,
	ns2__VolumePerVolumeUom__ppm_x005bvol_x005d = 46
};
#endif

/* testh.h:11463 */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUom
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUom (476)
/* ns2:VolumetricHeatTransferCoefficientUom */
enum ns2__VolumetricHeatTransferCoefficientUom {
	ns2__VolumetricHeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x002edeltaF_x0029 = 0,
	ns2__VolumetricHeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x002edeltaF_x0029 = 1,
	ns2__VolumetricHeatTransferCoefficientUom__kW_x002f_x0028m3_x002edeltaK_x0029 = 2,
	ns2__VolumetricHeatTransferCoefficientUom__W_x002f_x0028m3_x002edeltaK_x0029 = 3
};
#endif

/* testh.h:11490 */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionUom
#define SOAP_TYPE_ns2__VolumetricThermalExpansionUom (477)
/* ns2:VolumetricThermalExpansionUom */
enum ns2__VolumetricThermalExpansionUom {
	ns2__VolumetricThermalExpansionUom__1_x002fdeltaC = 0,
	ns2__VolumetricThermalExpansionUom__1_x002fdeltaF = 1,
	ns2__VolumetricThermalExpansionUom__1_x002fdeltaK = 2,
	ns2__VolumetricThermalExpansionUom__1_x002fdeltaR = 3,
	ns2__VolumetricThermalExpansionUom__1E_6_x0020m3_x002f_x0028m3_x002edeltaC_x0029 = 4,
	ns2__VolumetricThermalExpansionUom__1E_6_x0020m3_x002f_x0028m3_x002edeltaF_x0029 = 5,
	ns2__VolumetricThermalExpansionUom__m3_x002f_x0028m3_x002edeltaK_x0029 = 6,
	ns2__VolumetricThermalExpansionUom__ppm_x005bvol_x005d_x002fdeltaC = 7,
	ns2__VolumetricThermalExpansionUom__ppm_x005bvol_x005d_x002fdeltaF = 8
};
#endif

/* testh.h:11542 */
#ifndef SOAP_TYPE_ns2__VolumeUom
#define SOAP_TYPE_ns2__VolumeUom (478)
/* ns2:VolumeUom */
enum ns2__VolumeUom {
	ns2__VolumeUom__L = 'L',
	ns2__VolumeUom__1000_x0020bbl = 'M',
	ns2__VolumeUom__1000_x0020ft3 = 'N',
	ns2__VolumeUom__1000_x0020gal_x005bUK_x005d = 'O',
	ns2__VolumeUom__1000_x0020gal_x005bUS_x005d = 'P',
	ns2__VolumeUom__1000_x0020m3 = 'Q',
	ns2__VolumeUom__1E_6_x0020gal_x005bUS_x005d = 'R',
	ns2__VolumeUom__1E12_x0020ft3 = 'S',
	ns2__VolumeUom__1E6_x0020bbl = 'T',
	ns2__VolumeUom__1E6_x0020ft3 = 'U',
	ns2__VolumeUom__1E6_x0020m3 = 'V',
	ns2__VolumeUom__1E9_x0020bbl = 'W',
	ns2__VolumeUom__1E9_x0020ft3 = 'X',
	ns2__VolumeUom__acre_x002eft = 'Y',
	ns2__VolumeUom__bbl = 'Z',
	ns2__VolumeUom__cm3 = 91,
	ns2__VolumeUom__dm3 = 92,
	ns2__VolumeUom__floz_x005bUK_x005d = 93,
	ns2__VolumeUom__floz_x005bUS_x005d = 94,
	ns2__VolumeUom__ft3 = 95,
	ns2__VolumeUom__gal_x005bUK_x005d = 96,
	ns2__VolumeUom__gal_x005bUS_x005d = 'a',
	ns2__VolumeUom__ha_x002em = 'b',
	ns2__VolumeUom__hL = 'c',
	ns2__VolumeUom__in3 = 'd',
	ns2__VolumeUom__km3 = 'e',
	ns2__VolumeUom__m3 = 'f',
	ns2__VolumeUom__mi3 = 'g',
	ns2__VolumeUom__mL = 'h',
	ns2__VolumeUom__mm3 = 'i',
	ns2__VolumeUom__pt_x005bUK_x005d = 'j',
	ns2__VolumeUom__pt_x005bUS_x005d = 'k',
	ns2__VolumeUom__qt_x005bUK_x005d = 'l',
	ns2__VolumeUom__qt_x005bUS_x005d = 'm',
	ns2__VolumeUom__um2_x002em = 'n',
	ns2__VolumeUom__yd3 = 'o'
};
#endif

/* testh.h:11733 */
#ifndef SOAP_TYPE_ns1__BhaStatus
#define SOAP_TYPE_ns1__BhaStatus (479)
/* ns1:BhaStatus */
enum ns1__BhaStatus {
	ns1__BhaStatus__final_ = 0,
	ns1__BhaStatus__progress = 1,
	ns1__BhaStatus__plan = 2
};
#endif

/* testh.h:11759 */
#ifndef SOAP_TYPE_ns1__MudSubClass
#define SOAP_TYPE_ns1__MudSubClass (480)
/* ns1:MudSubClass */
enum ns1__MudSubClass {
	ns1__MudSubClass__aerated_x0020mud = 0,
	ns1__MudSubClass__air = 1,
	ns1__MudSubClass__brackish_x0020water = 2,
	ns1__MudSubClass__brine = 3,
	ns1__MudSubClass__caesium_x0020formate = 4,
	ns1__MudSubClass__diesel_x0020oil_based = 5,
	ns1__MudSubClass__ester_x0020synthetic_based = 6,
	ns1__MudSubClass__freshwater = 7,
	ns1__MudSubClass__glycol_x0020mud = 8,
	ns1__MudSubClass__gyp_x0020mud = 9,
	ns1__MudSubClass__internal_olefin_x0020synthetic_based = 10,
	ns1__MudSubClass__lightly_x0020treated_x0020non_dispersed = 11,
	ns1__MudSubClass__lignite_x002flignosulfonate_x0020mud = 12,
	ns1__MudSubClass__lime_x0020mud = 13,
	ns1__MudSubClass__linear_x0020paraffin_x0020synthetic_based = 14,
	ns1__MudSubClass__linear_alpha_olefin_x0020synthetic_based = 15,
	ns1__MudSubClass__low_x0020solids = 16,
	ns1__MudSubClass__low_x0020toxicity_x0020mineral_x0020oil_based = 17,
	ns1__MudSubClass__mineral_x0020oil_based = 18,
	ns1__MudSubClass__mist = 19,
	ns1__MudSubClass__mixed_metal_x0020oxide_x0020mud = 20,
	ns1__MudSubClass__native_x002fnatural_x0020mud = 21,
	ns1__MudSubClass__natural_x0020gas = 22,
	ns1__MudSubClass__nitrogen_aerated_x0020mud = 23,
	ns1__MudSubClass__non_aqueous_x0020_x0028invert_x0020emulsion_x0029_x0020drilling_x0020fluids = 24,
	ns1__MudSubClass__non_dispersed = 25,
	ns1__MudSubClass__pneumatic_x0020_x0028gaseous_x0029_x0020drilling_x0020fluids = 26,
	ns1__MudSubClass__polymer_x0020mud = 27,
	ns1__MudSubClass__potassium_x0020formate = 28,
	ns1__MudSubClass__potassium_treated_x0020mud = 29,
	ns1__MudSubClass__salt_x0020water_x0020mud = 30,
	ns1__MudSubClass__saturated_x0020salt_x0020mud = 31,
	ns1__MudSubClass__sea_x0020water = 32,
	ns1__MudSubClass__seawater_x0020mud = 33,
	ns1__MudSubClass__silicate_x0020mud = 34,
	ns1__MudSubClass__sodium_x0020formate = 35,
	ns1__MudSubClass__spud_x0020mud = 36,
	ns1__MudSubClass__stable_x0020foam = 37,
	ns1__MudSubClass__stiff_x0020foam = 38,
	ns1__MudSubClass__water_based_x0020drilling_x0020fluids = 39
};
#endif

/* testh.h:11810 */
#ifndef SOAP_TYPE_ns1__BrineClass
#define SOAP_TYPE_ns1__BrineClass (481)
/* ns1:BrineClass */
enum ns1__BrineClass {
	ns1__BrineClass__calcium_x0020bromide = 0,
	ns1__BrineClass__potassium_x0020bromide = 1,
	ns1__BrineClass__sodium_x0020bromide = 2,
	ns1__BrineClass__zinc_x0020dibromide = 3,
	ns1__BrineClass__ammonium_x0020chloride = 4,
	ns1__BrineClass__calcium_x0020chloride = 5,
	ns1__BrineClass__potassium_x0020chloride = 6,
	ns1__BrineClass__sodium_x0020chloride = 7,
	ns1__BrineClass__cesium_x0020formate = 8,
	ns1__BrineClass__potassium_x0020formate = 9,
	ns1__BrineClass__sodium_x0020formate = 10,
	ns1__BrineClass__blend = 11
};
#endif

/* testh.h:11833 */
#ifndef SOAP_TYPE_ns1__MudClass
#define SOAP_TYPE_ns1__MudClass (482)
/* ns1:MudClass */
enum ns1__MudClass {
	ns1__MudClass__oil_based = 0,
	ns1__MudClass__water_based = 1,
	ns1__MudClass__other = 2,
	ns1__MudClass__pneumatic = 3
};
#endif

/* testh.h:11856 */
#ifndef SOAP_TYPE_ns1__WellboreShape
#define SOAP_TYPE_ns1__WellboreShape (483)
/* ns1:WellboreShape */
enum ns1__WellboreShape {
	ns1__WellboreShape__build_x0020and_x0020hold = 0,
	ns1__WellboreShape__deviated = 1,
	ns1__WellboreShape__double_x0020kickoff = 2,
	ns1__WellboreShape__horizontal = 3,
	ns1__WellboreShape__S_shaped = 4,
	ns1__WellboreShape__vertical = 5
};
#endif

/* testh.h:11897 */
#ifndef SOAP_TYPE_ns1__WellboreType
#define SOAP_TYPE_ns1__WellboreType (484)
/* ns1:WellboreType */
enum ns1__WellboreType {
	ns1__WellboreType__bypass = 0,
	ns1__WellboreType__initial = 1,
	ns1__WellboreType__redrill = 2,
	ns1__WellboreType__reentry = 3,
	ns1__WellboreType__respud = 4,
	ns1__WellboreType__sidetrack = 5
};
#endif

/* testh.h:11938 */
#ifndef SOAP_TYPE_ns1__OperatingEnvironment
#define SOAP_TYPE_ns1__OperatingEnvironment (485)
/* ns1:OperatingEnvironment */
enum ns1__OperatingEnvironment {
	ns1__OperatingEnvironment__onshore = 0,
	ns1__OperatingEnvironment__midshore = 1,
	ns1__OperatingEnvironment__offshore = 2
};
#endif

/* testh.h:11964 */
#ifndef SOAP_TYPE_ns1__WellDirection
#define SOAP_TYPE_ns1__WellDirection (486)
/* ns1:WellDirection */
enum ns1__WellDirection {
	ns1__WellDirection__huff_n_puff = 0,
	ns1__WellDirection__injector = 1,
	ns1__WellDirection__producer = 2,
	ns1__WellDirection__uncertain = 3
};
#endif

/* testh.h:11995 */
#ifndef SOAP_TYPE_ns1__WellFluid
#define SOAP_TYPE_ns1__WellFluid (487)
/* ns1:WellFluid */
enum ns1__WellFluid {
	ns1__WellFluid__air = 0,
	ns1__WellFluid__condensate = 1,
	ns1__WellFluid__dry = 2,
	ns1__WellFluid__gas = 3,
	ns1__WellFluid__gas_water = 4,
	ns1__WellFluid__non_x0020HC_x0020gas = 5,
	ns1__WellFluid__non_x0020HC_x0020gas_x0020_x002d__x0020CO2 = 6,
	ns1__WellFluid__oil = 7,
	ns1__WellFluid__oil_gas = 8,
	ns1__WellFluid__oil_water = 9,
	ns1__WellFluid__steam = 10,
	ns1__WellFluid__water = 11,
	ns1__WellFluid__water_x0020_x002d__x0020brine = 12,
	ns1__WellFluid__water_x0020_x002d__x0020fresh_x0020water = 13
};
#endif

/* testh.h:12076 */
#ifndef SOAP_TYPE_ns1__WellInterest
#define SOAP_TYPE_ns1__WellInterest (488)
/* ns1:WellInterest */
enum ns1__WellInterest {
	ns1__WellInterest__operated = 0,
	ns1__WellInterest__non_operated_x0020joint_x0020venture = 1,
	ns1__WellInterest__competitor = 2
};
#endif

/* testh.h:12090 */
#ifndef SOAP_TYPE_ns1__WellPurpose
#define SOAP_TYPE_ns1__WellPurpose (489)
/* ns1:WellPurpose */
enum ns1__WellPurpose {
	ns1__WellPurpose__appraisal = 0,
	ns1__WellPurpose__appraisal_x0020_x002d__x0020confirmation_x0020appraisal = 1,
	ns1__WellPurpose__appraisal_x0020_x002d__x0020exploratory_x0020appraisal = 2,
	ns1__WellPurpose__exploration = 3,
	ns1__WellPurpose__exploration_x0020_x002d__x0020deeper_pool_x0020wildcat = 4,
	ns1__WellPurpose__exploration_x0020_x002d__x0020new_field_x0020wildcat = 5,
	ns1__WellPurpose__exploration_x0020_x002d__x0020new_pool_x0020wildcat = 6,
	ns1__WellPurpose__exploration_x0020_x002d__x0020outpost_x0020wildcat = 7,
	ns1__WellPurpose__exploration_x0020_x002d__x0020shallower_pool_x0020wildcat = 8,
	ns1__WellPurpose__development = 9,
	ns1__WellPurpose__development_x0020_x002d__x0020infill_x0020development = 10,
	ns1__WellPurpose__development_x0020_x002d__x0020injector = 11,
	ns1__WellPurpose__development_x0020_x002d__x0020producer = 12,
	ns1__WellPurpose__fluid_x0020storage = 13,
	ns1__WellPurpose__fluid_x0020storage_x0020_x002d__x0020gas_x0020storage = 14,
	ns1__WellPurpose__general_x0020srvc = 15,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020borehole_x0020re_acquisition = 16,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020observation = 17,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020relief = 18,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research = 19,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020drill_x0020test = 20,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020strat_x0020test = 21,
	ns1__WellPurpose__general_x0020srvc_x0020_x002d__x0020waste_x0020disposal = 22,
	ns1__WellPurpose__mineral = 23
};
#endif

/* testh.h:12221 */
#ifndef SOAP_TYPE_ns1__BearingType
#define SOAP_TYPE_ns1__BearingType (490)
/* ns1:BearingType */
enum ns1__BearingType {
	ns1__BearingType__oil_x0020seal = 0,
	ns1__BearingType__mud_x0020lube = 1,
	ns1__BearingType__other = 2
};
#endif

/* testh.h:12235 */
#ifndef SOAP_TYPE_ns1__BitDullCode
#define SOAP_TYPE_ns1__BitDullCode (491)
/* ns1:BitDullCode */
enum ns1__BitDullCode {
	ns1__BitDullCode__BC = 0,
	ns1__BitDullCode__BF = 1,
	ns1__BitDullCode__BT = 2,
	ns1__BitDullCode__BU = 3,
	ns1__BitDullCode__CC = 4,
	ns1__BitDullCode__CD = 5,
	ns1__BitDullCode__CI = 6,
	ns1__BitDullCode__CR = 7,
	ns1__BitDullCode__CT = 8,
	ns1__BitDullCode__ER = 9,
	ns1__BitDullCode__FC = 10,
	ns1__BitDullCode__HC = 11,
	ns1__BitDullCode__JD = 12,
	ns1__BitDullCode__LC = 13,
	ns1__BitDullCode__LN = 14,
	ns1__BitDullCode__LT = 15,
	ns1__BitDullCode__NO = 16,
	ns1__BitDullCode__NR = 17,
	ns1__BitDullCode__OC = 18,
	ns1__BitDullCode__PB = 19,
	ns1__BitDullCode__PN = 20,
	ns1__BitDullCode__RG = 21,
	ns1__BitDullCode__RO = 22,
	ns1__BitDullCode__RR = 23,
	ns1__BitDullCode__SD = 24,
	ns1__BitDullCode__SS = 25,
	ns1__BitDullCode__TR = 26,
	ns1__BitDullCode__WO = 27,
	ns1__BitDullCode__WT = 28
};
#endif

/* testh.h:12391 */
#ifndef SOAP_TYPE_ns1__BitReasonPulled
#define SOAP_TYPE_ns1__BitReasonPulled (492)
/* ns1:BitReasonPulled */
enum ns1__BitReasonPulled {
	ns1__BitReasonPulled__BHA = 0,
	ns1__BitReasonPulled__CM = 1,
	ns1__BitReasonPulled__CP = 2,
	ns1__BitReasonPulled__DMF = 3,
	ns1__BitReasonPulled__DP = 4,
	ns1__BitReasonPulled__DST = 5,
	ns1__BitReasonPulled__DTF = 6,
	ns1__BitReasonPulled__FM = 7,
	ns1__BitReasonPulled__HP = 8,
	ns1__BitReasonPulled__HR = 9,
	ns1__BitReasonPulled__LOG = 10,
	ns1__BitReasonPulled__PP = 11,
	ns1__BitReasonPulled__PR = 12,
	ns1__BitReasonPulled__RIG = 13,
	ns1__BitReasonPulled__TD = 14,
	ns1__BitReasonPulled__TQ = 15,
	ns1__BitReasonPulled__TW = 16,
	ns1__BitReasonPulled__WC = 17
};
#endif

/* testh.h:12492 */
#ifndef SOAP_TYPE_ns1__BitType
#define SOAP_TYPE_ns1__BitType (493)
/* ns1:BitType */
enum ns1__BitType {
	ns1__BitType__diamond = 0,
	ns1__BitType__diamond_x0020core = 1,
	ns1__BitType__insert_x0020roller_x0020cone = 2,
	ns1__BitType__PDC = 3,
	ns1__BitType__PDC_x0020core = 4,
	ns1__BitType__roller_x0020cone = 5
};
#endif

/* testh.h:12533 */
#ifndef SOAP_TYPE_ns1__BladeShapeType
#define SOAP_TYPE_ns1__BladeShapeType (494)
/* ns1:BladeShapeType */
enum ns1__BladeShapeType {
	ns1__BladeShapeType__dynamic = 0,
	ns1__BladeShapeType__melon = 1,
	ns1__BladeShapeType__spiral = 2,
	ns1__BladeShapeType__straight = 3,
	ns1__BladeShapeType__variable = 4
};
#endif

/* testh.h:12549 */
#ifndef SOAP_TYPE_ns1__BladeType
#define SOAP_TYPE_ns1__BladeType (495)
/* ns1:BladeType */
enum ns1__BladeType {
	ns1__BladeType__clamp_on = 0,
	ns1__BladeType__integral = 1,
	ns1__BladeType__sleeve = 2,
	ns1__BladeType__welded = 3
};
#endif

/* testh.h:12564 */
#ifndef SOAP_TYPE_ns1__BoxPinConfig
#define SOAP_TYPE_ns1__BoxPinConfig (496)
/* ns1:BoxPinConfig */
enum ns1__BoxPinConfig {
	ns1__BoxPinConfig__bottom_x0020box_x0020top_x0020box = 0,
	ns1__BoxPinConfig__bottom_x0020box_x0020top_x0020pin = 1,
	ns1__BoxPinConfig__bottom_x0020pin_x0020top_x0020pin = 2,
	ns1__BoxPinConfig__bottom_x0020pin_x0020top_x0020box = 3
};
#endif

/* testh.h:12579 */
#ifndef SOAP_TYPE_ns1__ConnectionPosition
#define SOAP_TYPE_ns1__ConnectionPosition (497)
/* ns1:ConnectionPosition */
enum ns1__ConnectionPosition {
	ns1__ConnectionPosition__both = 0,
	ns1__ConnectionPosition__bottom = 1,
	ns1__ConnectionPosition__top = 2
};
#endif

/* testh.h:12605 */
#ifndef SOAP_TYPE_ns1__DeflectionMethod
#define SOAP_TYPE_ns1__DeflectionMethod (498)
/* ns1:DeflectionMethod */
enum ns1__DeflectionMethod {
	ns1__DeflectionMethod__hybrid = 0,
	ns1__DeflectionMethod__point_x0020bit = 1,
	ns1__DeflectionMethod__push_x0020bit = 2
};
#endif

/* testh.h:12631 */
#ifndef SOAP_TYPE_ns1__HoleOpenerType
#define SOAP_TYPE_ns1__HoleOpenerType (499)
/* ns1:HoleOpenerType */
enum ns1__HoleOpenerType {
	ns1__HoleOpenerType__under_reamer = 0,
	ns1__HoleOpenerType__fixed_x0020blade = 1
};
#endif

/* testh.h:12644 */
#ifndef SOAP_TYPE_ns1__IadcBearingWearCode
#define SOAP_TYPE_ns1__IadcBearingWearCode (500)
/* ns1:IadcBearingWearCode */
enum ns1__IadcBearingWearCode {
	ns1__IadcBearingWearCode__0 = 0,
	ns1__IadcBearingWearCode__1 = 1,
	ns1__IadcBearingWearCode__2 = 2,
	ns1__IadcBearingWearCode__3 = 3,
	ns1__IadcBearingWearCode__4 = 4,
	ns1__IadcBearingWearCode__5 = 5,
	ns1__IadcBearingWearCode__6 = 6,
	ns1__IadcBearingWearCode__7 = 7,
	ns1__IadcBearingWearCode__8 = 8,
	ns1__IadcBearingWearCode__E = 'E',
	ns1__IadcBearingWearCode__F = 'F',
	ns1__IadcBearingWearCode__N = 'N',
	ns1__IadcBearingWearCode__X = 'X'
};
#endif

/* testh.h:12668 */
#ifndef SOAP_TYPE_ns1__IadcIntegerCode
#define SOAP_TYPE_ns1__IadcIntegerCode (501)
/* ns1:IadcIntegerCode */
enum ns1__IadcIntegerCode {
	ns1__IadcIntegerCode__0 = 0,
	ns1__IadcIntegerCode__1 = 1,
	ns1__IadcIntegerCode__2 = 2,
	ns1__IadcIntegerCode__3 = 3,
	ns1__IadcIntegerCode__4 = 4,
	ns1__IadcIntegerCode__5 = 5,
	ns1__IadcIntegerCode__6 = 6,
	ns1__IadcIntegerCode__7 = 7,
	ns1__IadcIntegerCode__8 = 8
};
#endif

/* testh.h:12688 */
#ifndef SOAP_TYPE_ns1__JarAction
#define SOAP_TYPE_ns1__JarAction (502)
/* ns1:JarAction */
enum ns1__JarAction {
	ns1__JarAction__up = 0,
	ns1__JarAction__down = 1,
	ns1__JarAction__both = 2,
	ns1__JarAction__vibrating = 3
};
#endif

/* testh.h:12703 */
#ifndef SOAP_TYPE_ns1__JarType
#define SOAP_TYPE_ns1__JarType (503)
/* ns1:JarType */
enum ns1__JarType {
	ns1__JarType__mechanical = 0,
	ns1__JarType__hydraulic = 1,
	ns1__JarType__hydro_x0020mechanical = 2
};
#endif

/* testh.h:12717 */
#ifndef SOAP_TYPE_ns1__MaterialType
#define SOAP_TYPE_ns1__MaterialType (504)
/* ns1:MaterialType */
enum ns1__MaterialType {
	ns1__MaterialType__aluminum = 0,
	ns1__MaterialType__beryllium_x0020copper = 1,
	ns1__MaterialType__chrome_x0020alloy = 2,
	ns1__MaterialType__composite = 3,
	ns1__MaterialType__other = 4,
	ns1__MaterialType__non_magnetic_x0020steel = 5,
	ns1__MaterialType__plastic = 6,
	ns1__MaterialType__steel = 7,
	ns1__MaterialType__steel_x0020alloy = 8,
	ns1__MaterialType__titanium = 9
};
#endif

/* testh.h:12738 */
#ifndef SOAP_TYPE_ns1__MeasurementType
#define SOAP_TYPE_ns1__MeasurementType (505)
/* ns1:MeasurementType */
enum ns1__MeasurementType {
	ns1__MeasurementType__acceleration = 0,
	ns1__MeasurementType__acoustic_x0020caliper = 1,
	ns1__MeasurementType__acoustic_x0020casing_x0020collar_x0020locator = 2,
	ns1__MeasurementType__acoustic_x0020impedance = 3,
	ns1__MeasurementType__acoustic_x0020porosity = 4,
	ns1__MeasurementType__acoustic_x0020velocity = 5,
	ns1__MeasurementType__acoustic_x0020wave_x0020matrix_x0020travel_x0020time = 6,
	ns1__MeasurementType__acoustic_x0020wave_x0020travel_x0020time = 7,
	ns1__MeasurementType__amplitude = 8,
	ns1__MeasurementType__amplitude_x0020of_x0020acoustic_x0020wave = 9,
	ns1__MeasurementType__amplitude_x0020of_x0020E_M_x0020wave = 10,
	ns1__MeasurementType__amplitude_x0020ratio = 11,
	ns1__MeasurementType__area = 12,
	ns1__MeasurementType__attenuation = 13,
	ns1__MeasurementType__attenuation_x0020of_x0020acoustic_x0020wave = 14,
	ns1__MeasurementType__attenuation_x0020of_x0020E_M_x0020wave = 15,
	ns1__MeasurementType__auxiliary = 16,
	ns1__MeasurementType__average_x0020porosity = 17,
	ns1__MeasurementType__azimuth = 18,
	ns1__MeasurementType__barite_x0020mud_x0020correction = 19,
	ns1__MeasurementType__bed_x0020thickness_x0020correction = 20,
	ns1__MeasurementType__bit_x0020size = 21,
	ns1__MeasurementType__blocked = 22,
	ns1__MeasurementType__borehole_x0020environment_x0020correction = 23,
	ns1__MeasurementType__borehole_x0020fluid_x0020correction = 24,
	ns1__MeasurementType__borehole_x0020size_x0020correction = 25,
	ns1__MeasurementType__bromide_x0020mud_x0020correction = 26,
	ns1__MeasurementType__bulk_x0020compressibility = 27,
	ns1__MeasurementType__bulk_x0020density = 28,
	ns1__MeasurementType__bulk_x0020volume = 29,
	ns1__MeasurementType__bulk_x0020volume_x0020gas = 30,
	ns1__MeasurementType__bulk_x0020volume_x0020hydrocarbon = 31,
	ns1__MeasurementType__bulk_x0020volume_x0020oil = 32,
	ns1__MeasurementType__bulk_x0020volume_x0020water = 33,
	ns1__MeasurementType__C_x002fO_x0020ratio = 34,
	ns1__MeasurementType__caliper = 35,
	ns1__MeasurementType__cased_x0020hole_x0020correction = 36,
	ns1__MeasurementType__casing_x0020collar_x0020locator = 37,
	ns1__MeasurementType__casing_x0020correction = 38,
	ns1__MeasurementType__casing_x0020diameter_x0020correction = 39,
	ns1__MeasurementType__casing_x0020inspection = 40,
	ns1__MeasurementType__casing_x0020thickness_x0020correction = 41,
	ns1__MeasurementType__casing_x0020weight_x0020correction = 42,
	ns1__MeasurementType__cement_x0020correction = 43,
	ns1__MeasurementType__cement_x0020density_x0020correction = 44,
	ns1__MeasurementType__cement_x0020evaluation = 45,
	ns1__MeasurementType__cement_x0020thickness_x0020correction = 46,
	ns1__MeasurementType__cement_x0020type_x0020correction = 47,
	ns1__MeasurementType__CH_x0020density_x0020porosity = 48,
	ns1__MeasurementType__CH_x0020dolomite_x0020density_x0020porosity = 49,
	ns1__MeasurementType__CH_x0020dolomite_x0020neutron_x0020porosity = 50,
	ns1__MeasurementType__CH_x0020limestone_x0020density_x0020porosity = 51,
	ns1__MeasurementType__CH_x0020limestone_x0020neutron_x0020porosity = 52,
	ns1__MeasurementType__CH_x0020neutron_x0020porosity = 53,
	ns1__MeasurementType__CH_x0020sandstone_x0020density_x0020porosity = 54,
	ns1__MeasurementType__CH_x0020sandstone_x0020neutron_x0020porosity = 55,
	ns1__MeasurementType__compressional_x0020wave_x0020dolomite_x0020porosity = 56,
	ns1__MeasurementType__compressional_x0020wave_x0020limestone_x0020porosity = 57,
	ns1__MeasurementType__compressional_x0020wave_x0020matrix_x0020travel_x0020time = 58,
	ns1__MeasurementType__compressional_x0020wave_x0020sandstone_x0020porosity = 59,
	ns1__MeasurementType__compressional_x0020wave_x0020travel_x0020time = 60,
	ns1__MeasurementType__conductivity = 61,
	ns1__MeasurementType__conductivity_x0020from_x0020attenuation = 62,
	ns1__MeasurementType__conductivity_x0020from_x0020phase_x0020shift = 63,
	ns1__MeasurementType__connate_x0020water_x0020conductivity = 64,
	ns1__MeasurementType__connate_x0020water_x0020resistivity = 'A',
	ns1__MeasurementType__conventional_x0020core_x0020porosity = 'B',
	ns1__MeasurementType__core_x0020matrix_x0020density = 'C',
	ns1__MeasurementType__core_x0020permeability = 'D',
	ns1__MeasurementType__core_x0020porosity = 'E',
	ns1__MeasurementType__corrected = 'F',
	ns1__MeasurementType__count_x0020rate = 'G',
	ns1__MeasurementType__count_x0020rate_x0020ratio = 'H',
	ns1__MeasurementType__cross_x0020plot_x0020porosity = 'I',
	ns1__MeasurementType__decay_x0020time = 'J',
	ns1__MeasurementType__deep_x0020conductivity = 'K',
	ns1__MeasurementType__deep_x0020induction_x0020conductivity = 'L',
	ns1__MeasurementType__deep_x0020induction_x0020resistivity = 'M',
	ns1__MeasurementType__deep_x0020laterolog_x0020conductivity = 'N',
	ns1__MeasurementType__deep_x0020laterolog_x0020resistivity = 'O',
	ns1__MeasurementType__deep_x0020resistivity = 'P',
	ns1__MeasurementType__density = 'Q',
	ns1__MeasurementType__density_x0020porosity = 'R',
	ns1__MeasurementType__depth = 'S',
	ns1__MeasurementType__depth_x0020adjusted = 'T',
	ns1__MeasurementType__depth_x0020derived_x0020from_x0020velocity = 'U',
	ns1__MeasurementType__deviation = 'V',
	ns1__MeasurementType__dielectric = 'W',
	ns1__MeasurementType__diffusion_x0020correction = 'X',
	ns1__MeasurementType__dip = 'Y',
	ns1__MeasurementType__dipmeter = 'Z',
	ns1__MeasurementType__dipmeter_x0020conductivity = 91,
	ns1__MeasurementType__dipmeter_x0020resistivity = 92,
	ns1__MeasurementType__dolomite_x0020acoustic_x0020porosity = 93,
	ns1__MeasurementType__dolomite_x0020density_x0020porosity = 94,
	ns1__MeasurementType__dolomite_x0020neutron_x0020porosity = 95,
	ns1__MeasurementType__edited = 96,
	ns1__MeasurementType__effective_x0020porosity = 'a',
	ns1__MeasurementType__electric_x0020current = 'b',
	ns1__MeasurementType__electric_x0020potential = 'c',
	ns1__MeasurementType__electromagnetic_x0020wave_x0020matrix_x0020travel_x0020time = 'd',
	ns1__MeasurementType__electromagnetic_x0020wave_x0020travel_x0020time = 'e',
	ns1__MeasurementType__element = 'f',
	ns1__MeasurementType__elemental_x0020ratio = 'g',
	ns1__MeasurementType__enhanced = 'h',
	ns1__MeasurementType__filtered = 'i',
	ns1__MeasurementType__flowmeter = 'j',
	ns1__MeasurementType__fluid_x0020density = 'k',
	ns1__MeasurementType__fluid_x0020velocity = 'l',
	ns1__MeasurementType__fluid_x0020viscosity = 'm',
	ns1__MeasurementType__flushed_x0020zone_x0020conductivity = 'n',
	ns1__MeasurementType__flushed_x0020zone_x0020resistivity = 'o',
	ns1__MeasurementType__flushed_x0020zone_x0020saturation = 'p',
	ns1__MeasurementType__force = 'q',
	ns1__MeasurementType__formation_x0020density_x0020correction = 'r',
	ns1__MeasurementType__formation_x0020properties_x0020correction = 's',
	ns1__MeasurementType__formation_x0020salinity_x0020correction = 't',
	ns1__MeasurementType__formation_x0020saturation_x0020correction = 'u',
	ns1__MeasurementType__formation_x0020volume_x0020factor_x0020correction = 'v',
	ns1__MeasurementType__formation_x0020water_x0020density_x0020correction = 'w',
	ns1__MeasurementType__formation_x0020water_x0020saturation_x0020correction = 'x',
	ns1__MeasurementType__free_x0020fluid_x0020index = 'y',
	ns1__MeasurementType__friction_x0020effect_x0020correction = 'z',
	ns1__MeasurementType__gamma_x0020ray = 123,
	ns1__MeasurementType__gamma_x0020ray_x0020minus_x0020uranium = 124,
	ns1__MeasurementType__gas_x0020saturation = 125,
	ns1__MeasurementType__gradiomanometer = 126,
	ns1__MeasurementType__high_x0020frequency_x0020conductivity = 127,
	ns1__MeasurementType__high_x0020frequency_x0020electromagnetic = 128,
	ns1__MeasurementType__high_x0020frequency_x0020electromagnetic_x0020porosity = 129,
	ns1__MeasurementType__high_x0020frequency_x0020E_M_x0020phase_x0020shift = 130,
	ns1__MeasurementType__high_x0020frequency_x0020resistivity = 131,
	ns1__MeasurementType__hydrocarbon_x0020correction = 132,
	ns1__MeasurementType__hydrocarbon_x0020density_x0020correction = 133,
	ns1__MeasurementType__hydrocarbon_x0020gravity_x0020correction = 134,
	ns1__MeasurementType__hydrocarbon_x0020saturation = 135,
	ns1__MeasurementType__hydrocarbon_x0020viscosity_x0020correction = 136,
	ns1__MeasurementType__image = 137,
	ns1__MeasurementType__interpretation_x0020variable = 138,
	ns1__MeasurementType__iron_x0020mud_x0020correction = 139,
	ns1__MeasurementType__joined = 140,
	ns1__MeasurementType__KCl_x0020mud_x0020correction = 141,
	ns1__MeasurementType__length = 142,
	ns1__MeasurementType__limestone_x0020acoustic_x0020porosity = 143,
	ns1__MeasurementType__limestone_x0020density_x0020porosity = 144,
	ns1__MeasurementType__limestone_x0020neutron_x0020porosity = 145,
	ns1__MeasurementType__lithology_x0020correction = 146,
	ns1__MeasurementType__log_x0020derived_x0020permeability = 147,
	ns1__MeasurementType__log_x0020matrix_x0020density = 148,
	ns1__MeasurementType__magnetic_x0020casing_x0020collar_x0020locator = 149,
	ns1__MeasurementType__matrix_x0020density = 150,
	ns1__MeasurementType__matrix_x0020travel_x0020time = 151,
	ns1__MeasurementType__measured_x0020depth = 152,
	ns1__MeasurementType__mechanical_x0020caliper = 153,
	ns1__MeasurementType__mechanical_x0020casing_x0020collar_x0020locator = 154,
	ns1__MeasurementType__medium_x0020conductivity = 155,
	ns1__MeasurementType__medium_x0020induction_x0020conductivity = 156,
	ns1__MeasurementType__medium_x0020induction_x0020resistivity = 157,
	ns1__MeasurementType__medium_x0020laterolog_x0020conductivity = 158,
	ns1__MeasurementType__medium_x0020laterolog_x0020resistivity = 159,
	ns1__MeasurementType__medium_x0020resistivity = 160,
	ns1__MeasurementType__micro_x0020conductivity = 161,
	ns1__MeasurementType__micro_x0020inverse_x0020conductivity = 162,
	ns1__MeasurementType__micro_x0020inverse_x0020resistivity = 163,
	ns1__MeasurementType__micro_x0020laterolog_x0020conductivity = 164,
	ns1__MeasurementType__micro_x0020laterolog_x0020resistivity = 165,
	ns1__MeasurementType__micro_x0020normal_x0020conductivity = 166,
	ns1__MeasurementType__micro_x0020normal_x0020resistivity = 167,
	ns1__MeasurementType__micro_x0020resistivity = 168,
	ns1__MeasurementType__micro_x0020spherically_x0020focused_x0020conductivity = 169,
	ns1__MeasurementType__micro_x0020spherically_x0020focused_x0020resistivity = 170,
	ns1__MeasurementType__mineral = 171,
	ns1__MeasurementType__mud_x0020cake_x0020conductivity = 172,
	ns1__MeasurementType__mud_x0020cake_x0020correction = 173,
	ns1__MeasurementType__mud_x0020cake_x0020density_x0020correction = 174,
	ns1__MeasurementType__mud_x0020cake_x0020resistivity = 175,
	ns1__MeasurementType__mud_x0020cake_x0020resistivity_x0020correction = 176,
	ns1__MeasurementType__mud_x0020cake_x0020thickness_x0020correction = 177,
	ns1__MeasurementType__mud_x0020composition_x0020correction = 178,
	ns1__MeasurementType__mud_x0020conductivity = 179,
	ns1__MeasurementType__mud_x0020filtrate_x0020conductivity = 180,
	ns1__MeasurementType__mud_x0020filtrate_x0020correction = 181,
	ns1__MeasurementType__mud_x0020filtrate_x0020density_x0020correction = 182,
	ns1__MeasurementType__mud_x0020filtrate_x0020resistivity = 183,
	ns1__MeasurementType__mud_x0020filtrate_x0020resistivity_x0020correction = 184,
	ns1__MeasurementType__mud_x0020filtrate_x0020salinity_x0020correction = 185,
	ns1__MeasurementType__mud_x0020resistivity = 186,
	ns1__MeasurementType__mud_x0020salinity_x0020correction = 187,
	ns1__MeasurementType__mud_x0020viscosity_x0020correction = 188,
	ns1__MeasurementType__mud_x0020weight_x0020correction = 189,
	ns1__MeasurementType__neutron_x0020die_x0020away_x0020time = 190,
	ns1__MeasurementType__neutron_x0020porosity = 191,
	ns1__MeasurementType__nuclear_x0020caliper = 192,
	ns1__MeasurementType__nuclear_x0020magnetic_x0020decay_x0020time = 193,
	ns1__MeasurementType__nuclear_x0020magnetism_x0020log_x0020permeability = 194,
	ns1__MeasurementType__nuclear_x0020magnetism_x0020porosity = 195,
	ns1__MeasurementType__OH_x0020density_x0020porosity = 196,
	ns1__MeasurementType__OH_x0020dolomite_x0020density_x0020porosity = 197,
	ns1__MeasurementType__OH_x0020dolomite_x0020neutron_x0020porosity = 198,
	ns1__MeasurementType__OH_x0020limestone_x0020density_x0020porosity = 199,
	ns1__MeasurementType__OH_x0020limestone_x0020neutron_x0020porosity = 200,
	ns1__MeasurementType__OH_x0020neutron_x0020porosity = 201,
	ns1__MeasurementType__OH_x0020sandstone_x0020density_x0020porosity = 202,
	ns1__MeasurementType__OH_x0020sandstone_x0020neutron_x0020porosity = 203,
	ns1__MeasurementType__oil_x0020based_x0020mud_x0020correction = 204,
	ns1__MeasurementType__oil_x0020saturation = 205,
	ns1__MeasurementType__perforating = 206,
	ns1__MeasurementType__permeability = 207,
	ns1__MeasurementType__phase_x0020shift = 208,
	ns1__MeasurementType__photoelectric_x0020absorption = 209,
	ns1__MeasurementType__photoelectric_x0020absorption_x0020correction = 210,
	ns1__MeasurementType__physical_x0020measurement_x0020correction = 211,
	ns1__MeasurementType__plane_x0020angle = 212,
	ns1__MeasurementType__porosity = 213,
	ns1__MeasurementType__porosity_x0020correction = 214,
	ns1__MeasurementType__potassium = 215,
	ns1__MeasurementType__pressure = 216,
	ns1__MeasurementType__pressure_x0020correction = 217,
	ns1__MeasurementType__processed = 218,
	ns1__MeasurementType__pulsed_x0020neutron_x0020porosity = 219,
	ns1__MeasurementType__quality = 220,
	ns1__MeasurementType__ratio = 221,
	ns1__MeasurementType__raw = 222,
	ns1__MeasurementType__relative_x0020bearing = 223,
	ns1__MeasurementType__resistivity = 224,
	ns1__MeasurementType__resistivity_x0020factor_x0020correction = 225,
	ns1__MeasurementType__resistivity_x0020from_x0020attenuation = 226,
	ns1__MeasurementType__resistivity_x0020from_x0020phase_x0020shift = 227,
	ns1__MeasurementType__resistivity_x0020phase_x0020shift = 228,
	ns1__MeasurementType__resistivity_x0020ratio = 229,
	ns1__MeasurementType__salinity = 230,
	ns1__MeasurementType__sampling = 231,
	ns1__MeasurementType__sandstone_x0020acoustic_x0020porosity = 232,
	ns1__MeasurementType__sandstone_x0020density_x0020porosity = 233,
	ns1__MeasurementType__sandstone_x0020neutron_x0020porosity = 234,
	ns1__MeasurementType__saturation = 235,
	ns1__MeasurementType__shale_x0020volume = 236,
	ns1__MeasurementType__shallow_x0020conductivity = 237,
	ns1__MeasurementType__shallow_x0020induction_x0020conductivity = 238,
	ns1__MeasurementType__shallow_x0020induction_x0020resistivity = 239,
	ns1__MeasurementType__shallow_x0020laterolog_x0020conductivity = 240,
	ns1__MeasurementType__shallow_x0020laterolog_x0020resistivity = 241,
	ns1__MeasurementType__shallow_x0020resistivity = 242,
	ns1__MeasurementType__shear_x0020wave_x0020dolomite_x0020porosity = 243,
	ns1__MeasurementType__shear_x0020wave_x0020limestone_x0020porosity = 244,
	ns1__MeasurementType__shear_x0020wave_x0020matrix_x0020travel_x0020time = 245,
	ns1__MeasurementType__shear_x0020wave_x0020sandstone_x0020porosity = 246,
	ns1__MeasurementType__shear_x0020wave_x0020travel_x0020time = 247,
	ns1__MeasurementType__shifted = 248,
	ns1__MeasurementType__sidewall_x0020core_x0020porosity = 249,
	ns1__MeasurementType__sigma = 250,
	ns1__MeasurementType__sigma_x0020formation = 251,
	ns1__MeasurementType__sigma_x0020gas = 252,
	ns1__MeasurementType__sigma_x0020hydrocarbon = 253,
	ns1__MeasurementType__sigma_x0020matrix = 254,
	ns1__MeasurementType__sigma_x0020oil = 255,
	ns1__MeasurementType__sigma_x0020water = 256,
	ns1__MeasurementType__slippage_x0020velocity_x0020correction = 257,
	ns1__MeasurementType__smoothed = 258,
	ns1__MeasurementType__spectral_x0020gamma_x0020ray = 259,
	ns1__MeasurementType__spherically_x0020focused_x0020conductivity = 260,
	ns1__MeasurementType__spherically_x0020focused_x0020resistivity = 261,
	ns1__MeasurementType__spontaneous_x0020potential = 262,
	ns1__MeasurementType__spreading_x0020loss_x0020correction = 263,
	ns1__MeasurementType__synthetic_x0020well_x0020log_x0020trace = 264,
	ns1__MeasurementType__temperature = 265,
	ns1__MeasurementType__temperature_x0020correction = 266,
	ns1__MeasurementType__tension = 267,
	ns1__MeasurementType__Th_x002fK_x0020ratio = 268,
	ns1__MeasurementType__thorium = 269,
	ns1__MeasurementType__time = 270,
	ns1__MeasurementType__tool_x0020diameter_x0020correction = 271,
	ns1__MeasurementType__tool_x0020eccentricity_x0020correction = 272,
	ns1__MeasurementType__total_x0020gamma_x0020ray = 273,
	ns1__MeasurementType__total_x0020porosity = 274,
	ns1__MeasurementType__tracer_x0020survey = 275,
	ns1__MeasurementType__travel_x0020time = 276,
	ns1__MeasurementType__true_x0020conductivity = 277,
	ns1__MeasurementType__true_x0020resistivity = 278,
	ns1__MeasurementType__true_x0020vertical_x0020depth = 279,
	ns1__MeasurementType__tube_x0020wave_x0020dolomite_x0020porosity = 280,
	ns1__MeasurementType__tube_x0020wave_x0020limestone_x0020porosity = 281,
	ns1__MeasurementType__tube_x0020wave_x0020matrix_x0020travel_x0020time = 282,
	ns1__MeasurementType__tube_x0020wave_x0020sandstone_x0020porosity = 283,
	ns1__MeasurementType__tube_x0020wave_x0020travel_x0020time = 284,
	ns1__MeasurementType__uranium = 285,
	ns1__MeasurementType__velocity = 286,
	ns1__MeasurementType__volume = 287,
	ns1__MeasurementType__water_x0020based_x0020fluid_x0020correction = 288,
	ns1__MeasurementType__water_x0020holdup_x0020correction = 289,
	ns1__MeasurementType__water_x0020saturated_x0020conductivity = 290,
	ns1__MeasurementType__water_x0020saturated_x0020resistivity = 291,
	ns1__MeasurementType__water_x0020saturation = 292
};
#endif

/* testh.h:14198 */
#ifndef SOAP_TYPE_ns1__NozzleType
#define SOAP_TYPE_ns1__NozzleType (506)
/* ns1:NozzleType */
enum ns1__NozzleType {
	ns1__NozzleType__extended = 0,
	ns1__NozzleType__normal = 1
};
#endif

/* testh.h:14211 */
#ifndef SOAP_TYPE_ns1__TubularAssembly
#define SOAP_TYPE_ns1__TubularAssembly (507)
/* ns1:TubularAssembly */
enum ns1__TubularAssembly {
	ns1__TubularAssembly__drilling = 0,
	ns1__TubularAssembly__directional_x0020drilling = 1,
	ns1__TubularAssembly__fishing = 2,
	ns1__TubularAssembly__condition_x0020mud = 3,
	ns1__TubularAssembly__tubing_x0020conveyed_x0020logging = 4,
	ns1__TubularAssembly__cementing = 5,
	ns1__TubularAssembly__casing = 6,
	ns1__TubularAssembly__clean_x0020out = 7,
	ns1__TubularAssembly__completion_x0020or_x0020testing = 8,
	ns1__TubularAssembly__coring = 9,
	ns1__TubularAssembly__hole_x0020opening_x0020or_x0020underreaming = 10,
	ns1__TubularAssembly__milling_x0020or_x0020dressing_x0020or_x0020cutting = 11,
	ns1__TubularAssembly__wiper_x0020or_x0020check_x0020or_x0020reaming = 12,
	ns1__TubularAssembly__unknown = 13
};
#endif

/* testh.h:14240 */
#ifndef SOAP_TYPE_ns1__TubularComponentType
#define SOAP_TYPE_ns1__TubularComponentType (508)
/* ns1:TubularComponentType */
enum ns1__TubularComponentType {
	ns1__TubularComponentType__accelerator = 0,
	ns1__TubularComponentType__adjustable_x0020kickoff = 1,
	ns1__TubularComponentType__bit_x0020core_x0020diamond = 2,
	ns1__TubularComponentType__bit_x0020core_x0020PDC = 3,
	ns1__TubularComponentType__bit_x0020diamond_x0020fixed_x0020cut = 4,
	ns1__TubularComponentType__bit_x0020hole_x0020opener = 5,
	ns1__TubularComponentType__bit_x0020insert_x0020roller_x0020cone = 6,
	ns1__TubularComponentType__bit_x0020mill_x0020tooth_x0020roller_x0020cone = 7,
	ns1__TubularComponentType__bit_x0020PDC_x0020fixed_x0020cutter = 8,
	ns1__TubularComponentType__bit_x0020under_x0020reamer = 9,
	ns1__TubularComponentType__bridge_x0020plug = 10,
	ns1__TubularComponentType__bull_x0020plug = 11,
	ns1__TubularComponentType__bullnose = 12,
	ns1__TubularComponentType__casing = 13,
	ns1__TubularComponentType__casing_x0020crossover = 14,
	ns1__TubularComponentType__casing_x0020cutter = 15,
	ns1__TubularComponentType__casing_x0020head = 16,
	ns1__TubularComponentType__casing_x0020inflatable_x0020packer = 17,
	ns1__TubularComponentType__casing_x0020shoe_x0020screw_in = 18,
	ns1__TubularComponentType__catch_x0020assembly = 19,
	ns1__TubularComponentType__coiled_x0020tubing_x0020in_x0020hole = 20,
	ns1__TubularComponentType__coiled_x0020tubing_x0020on_x0020coil = 21,
	ns1__TubularComponentType__core_x0020barrel = 22,
	ns1__TubularComponentType__core_x0020orientation_x0020barrel = 23,
	ns1__TubularComponentType__die_x0020collar = 24,
	ns1__TubularComponentType__die_x0020collar_x0020LH = 25,
	ns1__TubularComponentType__directional_x0020guidance_x0020system = 26,
	ns1__TubularComponentType__drill_x0020collar = 27,
	ns1__TubularComponentType__drill_x0020collar_x0020short = 28,
	ns1__TubularComponentType__drill_x0020pipe = 29,
	ns1__TubularComponentType__drill_x0020pipe_x0020compressive = 30,
	ns1__TubularComponentType__drill_x0020pipe_x0020LH = 31,
	ns1__TubularComponentType__drill_x0020stem_x0020test_x0020BHA = 32,
	ns1__TubularComponentType__drive_x0020pipe = 33,
	ns1__TubularComponentType__dual_x0020catch_x0020assembly = 34,
	ns1__TubularComponentType__extension_x0020bowl_x0020overshot = 35,
	ns1__TubularComponentType__extension_x0020sub_overshot = 36,
	ns1__TubularComponentType__float_x0020collar = 37,
	ns1__TubularComponentType__float_x0020shoe = 38,
	ns1__TubularComponentType__flow_x0020head = 39,
	ns1__TubularComponentType__guide_x0020shoe = 40,
	ns1__TubularComponentType__hanger_x0020casing_x0020subsea = 41,
	ns1__TubularComponentType__hanger_x0020casing_x0020surface = 42,
	ns1__TubularComponentType__hanger_x0020liner = 43,
	ns1__TubularComponentType__hanger_x0020mud_x0020line = 44,
	ns1__TubularComponentType__hanger_x0020tubing = 45,
	ns1__TubularComponentType__heavy_x0020weight_x0020drill_x0020pipe = 46,
	ns1__TubularComponentType__heavy_x0020weight_x0020drill_x0020pipe_x0020LH = 47,
	ns1__TubularComponentType__jar = 48,
	ns1__TubularComponentType__junk_x0020basket = 49,
	ns1__TubularComponentType__junk_x0020basket_x0020reverse_x0020circulation = 50,
	ns1__TubularComponentType__kelly = 51,
	ns1__TubularComponentType__keyseat_x0020wiper_x0020tool = 52,
	ns1__TubularComponentType__landing_x0020float_x0020collar = 53,
	ns1__TubularComponentType__lead_x0020impression_x0020block = 54,
	ns1__TubularComponentType__liner = 55,
	ns1__TubularComponentType__logging_x0020while_x0020drilling_x0020tool = 56,
	ns1__TubularComponentType__magnet = 57,
	ns1__TubularComponentType__mill_x0020casing_x0020cutting = 58,
	ns1__TubularComponentType__mill_x0020dress = 59,
	ns1__TubularComponentType__mill_x0020flat_x0020bottom = 60,
	ns1__TubularComponentType__mill_x0020hollow = 61,
	ns1__TubularComponentType__mill_x0020packer_x0020picker_x0020assembly = 62,
	ns1__TubularComponentType__mill_x0020pilot = 63,
	ns1__TubularComponentType__mill_x0020polish = 64,
	ns1__TubularComponentType__mill_x0020section = 'A',
	ns1__TubularComponentType__mill_x0020taper = 'B',
	ns1__TubularComponentType__mill_x0020washover = 'C',
	ns1__TubularComponentType__mill_x0020watermelon = 'D',
	ns1__TubularComponentType__millout_x0020extension = 'E',
	ns1__TubularComponentType__motor = 'F',
	ns1__TubularComponentType__motor_x0020instrumented = 'G',
	ns1__TubularComponentType__motor_x0020steerable = 'H',
	ns1__TubularComponentType__mule_x0020shoe = 'I',
	ns1__TubularComponentType__multilateral_x0020hanger_x0020running_x0020tool = 'J',
	ns1__TubularComponentType__MWD_x0020hang_x0020off_x0020sub = 'K',
	ns1__TubularComponentType__MWD_x0020pulser = 'L',
	ns1__TubularComponentType__non_magnetic_x0020collar = 'M',
	ns1__TubularComponentType__non_magnetic_x0020stabilizer = 'N',
	ns1__TubularComponentType__other = 'O',
	ns1__TubularComponentType__overshot = 'P',
	ns1__TubularComponentType__overshot_x0020LH = 'Q',
	ns1__TubularComponentType__oversize_x0020lip_x0020guide_x0020overshot = 'R',
	ns1__TubularComponentType__packer = 'S',
	ns1__TubularComponentType__packer_x0020retrieve_x0020TT_x0020squeeze = 'T',
	ns1__TubularComponentType__packer_x0020RTTS = 'U',
	ns1__TubularComponentType__packer_x0020storm_x0020valve_x0020RTTS = 'V',
	ns1__TubularComponentType__pipe_x0020cutter = 'W',
	ns1__TubularComponentType__polished_x0020bore_x0020receptacle = 'X',
	ns1__TubularComponentType__ported_x0020stinger = 'Y',
	ns1__TubularComponentType__prepacked_x0020screens = 'Z',
	ns1__TubularComponentType__reamer = 91,
	ns1__TubularComponentType__reversing_x0020tool = 92,
	ns1__TubularComponentType__riser_x0020high_x0020pressure = 93,
	ns1__TubularComponentType__riser_x0020marine = 94,
	ns1__TubularComponentType__riser_x0020production = 95,
	ns1__TubularComponentType__rotary_x0020steering_x0020tool = 96,
	ns1__TubularComponentType__running_x0020tool = 'a',
	ns1__TubularComponentType__safety_x0020joint = 'b',
	ns1__TubularComponentType__safety_x0020joint_x0020LH = 'c',
	ns1__TubularComponentType__scab_x0020liner_x0020bit_x0020guide = 'd',
	ns1__TubularComponentType__scraper = 'e',
	ns1__TubularComponentType__scratchers = 'f',
	ns1__TubularComponentType__slotted_x0020liner = 'g',
	ns1__TubularComponentType__spear = 'h',
	ns1__TubularComponentType__stabilizer = 'i',
	ns1__TubularComponentType__stabilizer_x0020inline = 'j',
	ns1__TubularComponentType__stabilizer_x0020near_x0020bit = 'k',
	ns1__TubularComponentType__stabilizer_x0020near_x0020bit_x0020roller_x0020reamer = 'l',
	ns1__TubularComponentType__stabilizer_x0020non_rotating = 'm',
	ns1__TubularComponentType__stabilizer_x0020steerable = 'n',
	ns1__TubularComponentType__stabilizer_x0020string = 'o',
	ns1__TubularComponentType__stabilizer_x0020string_x0020roller_x0020reamer = 'p',
	ns1__TubularComponentType__stabilizer_x0020turbo_x0020back = 'q',
	ns1__TubularComponentType__stabilizer_x0020variable_x0020blade = 'r',
	ns1__TubularComponentType__stage_x0020cement_x0020collar = 's',
	ns1__TubularComponentType__sub_bar_x0020catcher = 't',
	ns1__TubularComponentType__sub_bent = 'u',
	ns1__TubularComponentType__sub_bit = 'v',
	ns1__TubularComponentType__sub_bumper = 'w',
	ns1__TubularComponentType__sub_catcher = 'x',
	ns1__TubularComponentType__sub_circulation = 'y',
	ns1__TubularComponentType__sub_cone = 'z',
	ns1__TubularComponentType__sub_crossover = 123,
	ns1__TubularComponentType__sub_dart = 124,
	ns1__TubularComponentType__sub_filter = 125,
	ns1__TubularComponentType__sub_float = 126,
	ns1__TubularComponentType__sub_jetting = 127,
	ns1__TubularComponentType__sub_junk = 128,
	ns1__TubularComponentType__sub_orienting = 129,
	ns1__TubularComponentType__sub_ported = 130,
	ns1__TubularComponentType__sub_pressure_x0020relief = 131,
	ns1__TubularComponentType__sub_pump_x0020out = 132,
	ns1__TubularComponentType__sub_restrictor = 133,
	ns1__TubularComponentType__sub_saver = 134,
	ns1__TubularComponentType__sub_shock = 135,
	ns1__TubularComponentType__sub_side_x0020entry = 136,
	ns1__TubularComponentType__sub_stop = 137,
	ns1__TubularComponentType__surface_x0020pipe = 138,
	ns1__TubularComponentType__taper_x0020tap = 139,
	ns1__TubularComponentType__taper_x0020tap_x0020LH = 140,
	ns1__TubularComponentType__thruster = 141,
	ns1__TubularComponentType__tieback_x0020polished_x0020bore_x0020receptacle = 142,
	ns1__TubularComponentType__tieback_x0020stinger = 143,
	ns1__TubularComponentType__tubing = 144,
	ns1__TubularComponentType__tubing_conveyed_x0020perforating_x0020gun = 145,
	ns1__TubularComponentType__turbine = 146,
	ns1__TubularComponentType__unknown = 147,
	ns1__TubularComponentType__washover_x0020pipe = 148,
	ns1__TubularComponentType__whipstock = 149,
	ns1__TubularComponentType__whipstock_x0020anchor = 150
};
#endif

/* testh.h:14402 */
#ifndef SOAP_TYPE_ns1__NameTagLocation
#define SOAP_TYPE_ns1__NameTagLocation (509)
/* ns1:NameTagLocation */
enum ns1__NameTagLocation {
	ns1__NameTagLocation__body = 0,
	ns1__NameTagLocation__box = 1,
	ns1__NameTagLocation__other = 2,
	ns1__NameTagLocation__pin = 3
};
#endif

/* testh.h:14417 */
#ifndef SOAP_TYPE_ns1__NameTagNumberingScheme
#define SOAP_TYPE_ns1__NameTagNumberingScheme (510)
/* ns1:NameTagNumberingScheme */
enum ns1__NameTagNumberingScheme {
	ns1__NameTagNumberingScheme__ANSI_x002fAIM_BC10 = 0,
	ns1__NameTagNumberingScheme__ANSI_x002fAIM_BC2 = 1,
	ns1__NameTagNumberingScheme__ANSI_x002fAIM_BC6 = 2,
	ns1__NameTagNumberingScheme__EAN_x002eUCC = 3,
	ns1__NameTagNumberingScheme__EPC64 = 4,
	ns1__NameTagNumberingScheme__EPC96 = 5,
	ns1__NameTagNumberingScheme__F2F = 6,
	ns1__NameTagNumberingScheme__MFM = 7,
	ns1__NameTagNumberingScheme__MSRCID = 8,
	ns1__NameTagNumberingScheme__serial_x0020number = 9
};
#endif

/* testh.h:14438 */
#ifndef SOAP_TYPE_ns1__NameTagTechnology
#define SOAP_TYPE_ns1__NameTagTechnology (511)
/* ns1:NameTagTechnology */
enum ns1__NameTagTechnology {
	ns1__NameTagTechnology__intrinsic = 0,
	ns1__NameTagTechnology__labeled = 1,
	ns1__NameTagTechnology__painted = 2,
	ns1__NameTagTechnology__stamped = 3,
	ns1__NameTagTechnology__tagged = 4,
	ns1__NameTagTechnology__temporary = 5
};
#endif

/* testh.h:14455 */
#ifndef SOAP_TYPE_ns1__CementJobType
#define SOAP_TYPE_ns1__CementJobType (512)
/* ns1:CementJobType */
enum ns1__CementJobType {
	ns1__CementJobType__primary = 0,
	ns1__CementJobType__plug = 1,
	ns1__CementJobType__squeeze = 2
};
#endif

/* testh.h:14469 */
#ifndef SOAP_TYPE_ns1__WellboreFluidLocation
#define SOAP_TYPE_ns1__WellboreFluidLocation (513)
/* ns1:WellboreFluidLocation */
enum ns1__WellboreFluidLocation {
	ns1__WellboreFluidLocation__annulus = 0,
	ns1__WellboreFluidLocation__deadend = 1,
	ns1__WellboreFluidLocation__in_x0020pipe = 2,
	ns1__WellboreFluidLocation__rat_x0020hole = 3
};
#endif

/* testh.h:14484 */
#ifndef SOAP_TYPE_ns1__HoleCasingType
#define SOAP_TYPE_ns1__HoleCasingType (514)
/* ns1:HoleCasingType */
enum ns1__HoleCasingType {
	ns1__HoleCasingType__blow_x0020out_x0020preventer = 0,
	ns1__HoleCasingType__casing = 1,
	ns1__HoleCasingType__conductor = 2,
	ns1__HoleCasingType__curved_x0020conductor = 3,
	ns1__HoleCasingType__liner = 4,
	ns1__HoleCasingType__open_x0020hole = 5,
	ns1__HoleCasingType__riser = 6,
	ns1__HoleCasingType__tubing = 7
};
#endif

/* testh.h:14503 */
#ifndef SOAP_TYPE_ns1__BackupScaleType
#define SOAP_TYPE_ns1__BackupScaleType (515)
/* ns1:BackupScaleType */
enum ns1__BackupScaleType {
	ns1__BackupScaleType__x10 = 0,
	ns1__BackupScaleType__offscale_x0020left_x002fright = 1,
	ns1__BackupScaleType__other = 2
};
#endif

/* testh.h:14517 */
#ifndef SOAP_TYPE_ns1__CalibrationPointRole
#define SOAP_TYPE_ns1__CalibrationPointRole (516)
/* ns1:CalibrationPointRole */
enum ns1__CalibrationPointRole {
	ns1__CalibrationPointRole__left_x0020edge = 0,
	ns1__CalibrationPointRole__right_x0020edge = 1,
	ns1__CalibrationPointRole__fraction = 2,
	ns1__CalibrationPointRole__other = 3
};
#endif

/* testh.h:14548 */
#ifndef SOAP_TYPE_ns1__FileNameType
#define SOAP_TYPE_ns1__FileNameType (517)
/* ns1:FileNameType */
enum ns1__FileNameType {
	ns1__FileNameType__file_x0020name = 0,
	ns1__FileNameType__path_x0020name = 1,
	ns1__FileNameType__universal_x0020resource_x0020locator = 2,
	ns1__FileNameType__other = 3
};
#endif

/* testh.h:14579 */
#ifndef SOAP_TYPE_ns1__LineStyle
#define SOAP_TYPE_ns1__LineStyle (518)
/* ns1:LineStyle */
enum ns1__LineStyle {
	ns1__LineStyle__dashed = 0,
	ns1__LineStyle__solid = 1,
	ns1__LineStyle__dotted = 2,
	ns1__LineStyle__short_x0020dashed = 3,
	ns1__LineStyle__long_x0020dashed = 4
};
#endif

/* testh.h:14595 */
#ifndef SOAP_TYPE_ns1__LogRectangleType
#define SOAP_TYPE_ns1__LogRectangleType (519)
/* ns1:LogRectangleType */
enum ns1__LogRectangleType {
	ns1__LogRectangleType__header = 0,
	ns1__LogRectangleType__alternate = 1
};
#endif

/* testh.h:14612 */
#ifndef SOAP_TYPE_ns1__LogSectionType
#define SOAP_TYPE_ns1__LogSectionType (520)
/* ns1:LogSectionType */
enum ns1__LogSectionType {
	ns1__LogSectionType__main = 0,
	ns1__LogSectionType__repeat = 1,
	ns1__LogSectionType__calibration = 2,
	ns1__LogSectionType__tie_x0020in = 3,
	ns1__LogSectionType__going_x0020in_x0020hole = 4,
	ns1__LogSectionType__other = 5
};
#endif

/* testh.h:14637 */
#ifndef SOAP_TYPE_ns1__LogTrackType
#define SOAP_TYPE_ns1__LogTrackType (521)
/* ns1:LogTrackType */
enum ns1__LogTrackType {
	ns1__LogTrackType__curves = 0,
	ns1__LogTrackType__data = 1,
	ns1__LogTrackType__depth = 2,
	ns1__LogTrackType__traces = 3,
	ns1__LogTrackType__other = 4
};
#endif

/* testh.h:14661 */
#ifndef SOAP_TYPE_ns1__MessageDigestType
#define SOAP_TYPE_ns1__MessageDigestType (522)
/* ns1:MessageDigestType */
enum ns1__MessageDigestType {
	ns1__MessageDigestType__MD5 = 0,
	ns1__MessageDigestType__SHA1 = 1,
	ns1__MessageDigestType__other = 2
};
#endif

/* testh.h:14683 */
#ifndef SOAP_TYPE_ns1__MimeType
#define SOAP_TYPE_ns1__MimeType (523)
/* ns1:MimeType */
enum ns1__MimeType {
	ns1__MimeType__image_x002ftiff = 0,
	ns1__MimeType__image_x002fgif = 1,
	ns1__MimeType__image_x002fpng = 2,
	ns1__MimeType__image_x002fxml_x002bsvg = 3,
	ns1__MimeType__other = 4
};
#endif

/* testh.h:14719 */
#ifndef SOAP_TYPE_ns1__ScaleType
#define SOAP_TYPE_ns1__ScaleType (524)
/* ns1:ScaleType */
enum ns1__ScaleType {
	ns1__ScaleType__linear = 0,
	ns1__ScaleType__logarithmic = 1
};
#endif

/* testh.h:14732 */
#ifndef SOAP_TYPE_ns1__ChannelDataKind
#define SOAP_TYPE_ns1__ChannelDataKind (525)
/* ns1:ChannelDataKind */
enum ns1__ChannelDataKind {
	ns1__ChannelDataKind__boolean = 0,
	ns1__ChannelDataKind__bytes = 1,
	ns1__ChannelDataKind__double_ = 2,
	ns1__ChannelDataKind__float_ = 3,
	ns1__ChannelDataKind__int_ = 4,
	ns1__ChannelDataKind__long_ = 5,
	ns1__ChannelDataKind__string = 6,
	ns1__ChannelDataKind__measured_x0020depth = 7,
	ns1__ChannelDataKind__true_x0020vertical_x0020depth = 8,
	ns1__ChannelDataKind__pass_x0020indexed_x0020depth = 9,
	ns1__ChannelDataKind__date_x0020time = 10,
	ns1__ChannelDataKind__elapsed_x0020time = 11
};
#endif

/* testh.h:14803 */
#ifndef SOAP_TYPE_ns1__ChannelDerivation
#define SOAP_TYPE_ns1__ChannelDerivation (526)
/* ns1:ChannelDerivation */
enum ns1__ChannelDerivation {
	ns1__ChannelDerivation__raw = 0,
	ns1__ChannelDerivation__simulated = 1,
	ns1__ChannelDerivation__spliced = 2,
	ns1__ChannelDerivation__sampled = 3,
	ns1__ChannelDerivation__model = 4,
	ns1__ChannelDerivation__interpreted = 5,
	ns1__ChannelDerivation__corrected = 6,
	ns1__ChannelDerivation__edited = 7
};
#endif

/* testh.h:14854 */
#ifndef SOAP_TYPE_ns1__ChannelState
#define SOAP_TYPE_ns1__ChannelState (527)
/* ns1:ChannelState */
enum ns1__ChannelState {
	ns1__ChannelState__calculated = 0,
	ns1__ChannelState__final_ = 1,
	ns1__ChannelState__memory = 2,
	ns1__ChannelState__processed = 3,
	ns1__ChannelState__real_x0020time = 4
};
#endif

/* testh.h:14890 */
#ifndef SOAP_TYPE_ns1__HoleLoggingStatus
#define SOAP_TYPE_ns1__HoleLoggingStatus (528)
/* ns1:HoleLoggingStatus */
enum ns1__HoleLoggingStatus {
	ns1__HoleLoggingStatus__open_x0020hole = 0,
	ns1__HoleLoggingStatus__cased_x0020hole = 1,
	ns1__HoleLoggingStatus__cemented_x0020hole = 2
};
#endif

/* testh.h:14912 */
#ifndef SOAP_TYPE_ns1__PassDirection
#define SOAP_TYPE_ns1__PassDirection (529)
/* ns1:PassDirection */
enum ns1__PassDirection {
	ns1__PassDirection__up = 0,
	ns1__PassDirection__holding_x0020steady = 1,
	ns1__PassDirection__down = 2
};
#endif

/* testh.h:14938 */
#ifndef SOAP_TYPE_ns1__LoggingMethod
#define SOAP_TYPE_ns1__LoggingMethod (530)
/* ns1:LoggingMethod */
enum ns1__LoggingMethod {
	ns1__LoggingMethod__coiled_x0020tubing = 0,
	ns1__LoggingMethod__computed = 1,
	ns1__LoggingMethod__distributed = 2,
	ns1__LoggingMethod__LWD = 3,
	ns1__LoggingMethod__mixed = 4,
	ns1__LoggingMethod__MWD = 5,
	ns1__LoggingMethod__subsea = 6,
	ns1__LoggingMethod__surface = 7,
	ns1__LoggingMethod__wireline = 8
};
#endif

/* testh.h:14990 */
#ifndef SOAP_TYPE_ns1__LoggingToolClass
#define SOAP_TYPE_ns1__LoggingToolClass (531)
/* ns1:LoggingToolClass */
enum ns1__LoggingToolClass {
	ns1__LoggingToolClass__AAC = 0,
	ns1__LoggingToolClass__AC = 1,
	ns1__LoggingToolClass__ADEN = 2,
	ns1__LoggingToolClass__AGR = 3,
	ns1__LoggingToolClass__ARIN = 4,
	ns1__LoggingToolClass__ARLL = 5,
	ns1__LoggingToolClass__AUX = 6,
	ns1__LoggingToolClass__DEN = 7,
	ns1__LoggingToolClass__DIP = 8,
	ns1__LoggingToolClass__DIR = 9,
	ns1__LoggingToolClass__DYN = 10,
	ns1__LoggingToolClass__FPR = 11,
	ns1__LoggingToolClass__GR = 12,
	ns1__LoggingToolClass__HDIA = 13,
	ns1__LoggingToolClass__INTERP = 14,
	ns1__LoggingToolClass__JOINED_USCOREGEOPH = 15,
	ns1__LoggingToolClass__JOINED_USCOREPETRO = 16,
	ns1__LoggingToolClass__NEU = 17,
	ns1__LoggingToolClass__NMR = 18,
	ns1__LoggingToolClass__REMP = 19,
	ns1__LoggingToolClass__RIN = 20,
	ns1__LoggingToolClass__RLL = 21,
	ns1__LoggingToolClass__RMIC = 22,
	ns1__LoggingToolClass__SAMP = 23,
	ns1__LoggingToolClass__SGR = 24,
	ns1__LoggingToolClass__SP = 25,
	ns1__LoggingToolClass__SURF = 26
};
#endif

/* testh.h:15136 */
#ifndef SOAP_TYPE_ns1__BoreholeType
#define SOAP_TYPE_ns1__BoreholeType (532)
/* ns1:BoreholeType */
enum ns1__BoreholeType {
	ns1__BoreholeType__cavern = 0,
	ns1__BoreholeType__cavity = 1,
	ns1__BoreholeType__normalborehole = 2,
	ns1__BoreholeType__underream = 3
};
#endif

/* testh.h:15151 */
#ifndef SOAP_TYPE_ns1__CasingConnectionTypes
#define SOAP_TYPE_ns1__CasingConnectionTypes (533)
/* ns1:CasingConnectionTypes */
enum ns1__CasingConnectionTypes {
	ns1__CasingConnectionTypes__landed = 0,
	ns1__CasingConnectionTypes__self_sealing_threaded = 1,
	ns1__CasingConnectionTypes__welded = 2
};
#endif

/* testh.h:15165 */
#ifndef SOAP_TYPE_ns1__Coating
#define SOAP_TYPE_ns1__Coating (534)
/* ns1:Coating */
enum ns1__Coating {
	ns1__Coating__bare = 0,
	ns1__Coating__carbonnitrided = 1,
	ns1__Coating__carburized = 2,
	ns1__Coating__carburized_hardened = 3,
	ns1__Coating__cementlined = 4,
	ns1__Coating__chrome = 5,
	ns1__Coating__chrome_plated = 6,
	ns1__Coating__chromeplated_grooved = 7,
	ns1__Coating__chromeplated_heavy = 8,
	ns1__Coating__corrosion_x0020coating = 9,
	ns1__Coating__dblgalv = 10,
	ns1__Coating__duolin20wr = 11,
	ns1__Coating__duoline = 12,
	ns1__Coating__duoline10 = 13,
	ns1__Coating__duoline20 = 14,
	ns1__Coating__epdm = 15,
	ns1__Coating__fiberglass_lined = 16,
	ns1__Coating__galvanized = 17,
	ns1__Coating__hardened = 18,
	ns1__Coating__hard_lined = 19,
	ns1__Coating__ins = 20,
	ns1__Coating__ipc = 21,
	ns1__Coating__ipc_epoxy = 22,
	ns1__Coating__ipc_epxthk = 23,
	ns1__Coating__ipc_epxthn = 24,
	ns1__Coating__ipc_nylon = 25,
	ns1__Coating__ipc_rwrap = 26,
	ns1__Coating__ipc_s505 = 27,
	ns1__Coating__ipc_s650 = 28,
	ns1__Coating__ipc_tk70 = 29,
	ns1__Coating__ipc_tk75 = 30,
	ns1__Coating__lp = 31,
	ns1__Coating__moly = 32,
	ns1__Coating__mtr = 33,
	ns1__Coating__n_x002fa = 34,
	ns1__Coating__nickel_carbide = 35,
	ns1__Coating__nickel_plated = 36,
	ns1__Coating__nitrided = 37,
	ns1__Coating__nitrile = 38,
	ns1__Coating__pap = 39,
	ns1__Coating__pelined = 40,
	ns1__Coating__phosphate = 41,
	ns1__Coating__phosphorus = 42,
	ns1__Coating__plastic = 43,
	ns1__Coating__plunger_lubricant = 44,
	ns1__Coating__polished_rodliner = 45,
	ns1__Coating__polypropylene = 46,
	ns1__Coating__ppw_x002fnitrl = 47,
	ns1__Coating__pvclined = 48,
	ns1__Coating__rodguide_1 = 49,
	ns1__Coating__rodguide_2 = 50,
	ns1__Coating__rodguide_2_x002e = 51,
	ns1__Coating__rodguide_3 = 52,
	ns1__Coating__rodguide_4 = 53,
	ns1__Coating__rodguide_5 = 54,
	ns1__Coating__rodguide_6 = 55,
	ns1__Coating__rodguide_7 = 56,
	ns1__Coating__rodguide_fx = 57,
	ns1__Coating__rodguide_so = 58,
	ns1__Coating__rodguide_so1 = 59,
	ns1__Coating__rodguide_so2 = 60,
	ns1__Coating__rodguide_so3 = 61,
	ns1__Coating__rodguide_so4 = 62,
	ns1__Coating__rodguide_so5 = 63,
	ns1__Coating__rodguide_so6 = 64,
	ns1__Coating__rodguide_so8 = 'A',
	ns1__Coating__rodguide_sp = 'B',
	ns1__Coating__spray_metal = 'C',
	ns1__Coating__spray_metal_monel = 'D',
	ns1__Coating__spraymetal_monel = 'E',
	ns1__Coating__spraymetal_nickel = 'F',
	ns1__Coating__spraymetal_od_x002fnickelplated_id = 'G',
	ns1__Coating__spraymetal_steel = 'H',
	ns1__Coating__spraymetal_thick = 'I',
	ns1__Coating__sslined = 'J',
	ns1__Coating__teflon = 'K',
	ns1__Coating__teflon_red = 'L',
	ns1__Coating__teflon_tan = 'M',
	ns1__Coating__teflon_yellow = 'N',
	ns1__Coating__thermo = 'O',
	ns1__Coating__tk_4 = 'P',
	ns1__Coating__tk_99 = 'Q',
	ns1__Coating__tuffr = 'R',
	ns1__Coating__tungsten_x0020plated = 'S',
	ns1__Coating__zincplated = 'T'
};
#endif

/* testh.h:15261 */
#ifndef SOAP_TYPE_ns1__ConnectionFormType
#define SOAP_TYPE_ns1__ConnectionFormType (535)
/* ns1:ConnectionFormType */
enum ns1__ConnectionFormType {
	ns1__ConnectionFormType__box = 0,
	ns1__ConnectionFormType__flange = 1,
	ns1__ConnectionFormType__mandrel = 2,
	ns1__ConnectionFormType__pin = 3,
	ns1__ConnectionFormType__welded = 4
};
#endif

/* testh.h:15277 */
#ifndef SOAP_TYPE_ns1__DownholeStringType
#define SOAP_TYPE_ns1__DownholeStringType (536)
/* ns1:DownholeStringType */
enum ns1__DownholeStringType {
	ns1__DownholeStringType__casing = 0,
	ns1__DownholeStringType__others = 1,
	ns1__DownholeStringType__rod = 2,
	ns1__DownholeStringType__tubing = 3,
	ns1__DownholeStringType__wellhead = 4
};
#endif

/* testh.h:15293 */
#ifndef SOAP_TYPE_ns1__EquipmentType
#define SOAP_TYPE_ns1__EquipmentType (537)
/* ns1:EquipmentType */
enum ns1__EquipmentType {
	ns1__EquipmentType__bridge_x0020plug = 0,
	ns1__EquipmentType__bull_x0020plug = 1,
	ns1__EquipmentType__capillary_x0020tubing = 2,
	ns1__EquipmentType__casing_x0020crossover = 3,
	ns1__EquipmentType__casing_x0020hanger = 4,
	ns1__EquipmentType__casing_x0020head = 5,
	ns1__EquipmentType__casing_x0020liner_expandable = 6,
	ns1__EquipmentType__casing_x0020shoe = 7,
	ns1__EquipmentType__casing_x0020spool = 8,
	ns1__EquipmentType__casing_x002fcasing_x0020liner = 9,
	ns1__EquipmentType__cement_x0020_x0028behind_x0020casing_x0029 = 10,
	ns1__EquipmentType__cement_x0020basket = 11,
	ns1__EquipmentType__cement_x0020retainer = 12,
	ns1__EquipmentType__cement_x0020squeeze = 13,
	ns1__EquipmentType__cement_x0020stage_x0020tool = 14,
	ns1__EquipmentType__chemical_x0020injection_x0020mandrel = 15,
	ns1__EquipmentType__chemical_x0020injection_x0020valve = 16,
	ns1__EquipmentType__corrosion_x0020coupon_x0020carrier = 17,
	ns1__EquipmentType__dip_x0020tube = 18,
	ns1__EquipmentType__downhole_x0020choke = 19,
	ns1__EquipmentType__downhole_x0020sensor = 20,
	ns1__EquipmentType__ESP_x0020assembly = 21,
	ns1__EquipmentType__ESP_x0020bolt_x0020on_x0020discharge = 22,
	ns1__EquipmentType__ESP_x0020bolt_x0020on_x0020intake = 23,
	ns1__EquipmentType__ESP_x0020bolt_x0020on_x0020motor_x0020base = 24,
	ns1__EquipmentType__ESP_x0020bolt_x0020on_x0020motor_x0020head = 25,
	ns1__EquipmentType__ESP_x0020cable = 26,
	ns1__EquipmentType__ESP_x0020gas_x0020handler = 27,
	ns1__EquipmentType__ESP_x0020gas_x0020separator = 28,
	ns1__EquipmentType__ESP_x0020lower_x0020pigtail = 29,
	ns1__EquipmentType__ESP_x0020motor = 30,
	ns1__EquipmentType__ESP_x0020motor_x0020base_x0020centralizer = 31,
	ns1__EquipmentType__ESP_x0020motor_x0020flat_x0020cable = 32,
	ns1__EquipmentType__ESP_x0020motor_x0020shroud = 33,
	ns1__EquipmentType__ESP_x0020promotor = 34,
	ns1__EquipmentType__ESP_x0020pump = 35,
	ns1__EquipmentType__ESP_x0020pump_x0020discharge_x0020sensor_x0020sub = 36,
	ns1__EquipmentType__ESP_x0020seal = 37,
	ns1__EquipmentType__expansion_x0020joint = 38,
	ns1__EquipmentType__external_x0020cementing_x0020port = 39,
	ns1__EquipmentType__fill = 40,
	ns1__EquipmentType__fish = 41,
	ns1__EquipmentType__float_x0020collar = 42,
	ns1__EquipmentType__float_x0020shoe_x002fguide_x0020shoe = 43,
	ns1__EquipmentType__gas_x0020anchor = 44,
	ns1__EquipmentType__gas_x0020lift_x0020mandrel = 45,
	ns1__EquipmentType__gas_x0020lift_x0020valve = 46,
	ns1__EquipmentType__gravel_x0020pack_x0020screen = 47,
	ns1__EquipmentType__hydraulic_x0020pump = 48,
	ns1__EquipmentType__injection_x0020mandrel = 49,
	ns1__EquipmentType__injection_x0020valve = 50,
	ns1__EquipmentType__junk_x0020in_x0020wellbore = 51,
	ns1__EquipmentType__landing_x0020collar = 52,
	ns1__EquipmentType__liner_x0020entry_x0020guide = 53,
	ns1__EquipmentType__liner_x0020hanger = 54,
	ns1__EquipmentType__mule_x0020shoe = 55,
	ns1__EquipmentType__notched_x0020collar = 56,
	ns1__EquipmentType__on_off_x0020tool = 57,
	ns1__EquipmentType__overshot = 58,
	ns1__EquipmentType__packer = 59,
	ns1__EquipmentType__packer_x0020plug = 60,
	ns1__EquipmentType__packer_multiple_x0020strings = 61,
	ns1__EquipmentType__packoff_x0020_x0028tubing_x0029 = 62,
	ns1__EquipmentType__pcp_flex_x0020shaft_x0020intake = 63,
	ns1__EquipmentType__pcp_gear_x0020reducer_x0020_x0028subsurface_x0029 = 64,
	ns1__EquipmentType__pcp_no_x0020turn_x0020tool_x002ftorque_x0020anchor = 'A',
	ns1__EquipmentType__pcp_rotor = 'B',
	ns1__EquipmentType__pcp_stator = 'C',
	ns1__EquipmentType__pcp_tag_x0020bar = 'D',
	ns1__EquipmentType__plug_x0020__x0020cement = 'E',
	ns1__EquipmentType__plug_x0020__x0020mud = 'F',
	ns1__EquipmentType__plunger_x0020lift_x0020ball = 'G',
	ns1__EquipmentType__plunger_x0020lift_x0020bottom_x0020hole_x0020bumper_x0020assembly = 'H',
	ns1__EquipmentType__plunger_x0020lift_x0020bumper_x0020spring = 'I',
	ns1__EquipmentType__plunger_x0020lift_x0020collar_x0020stop = 'J',
	ns1__EquipmentType__plunger_x0020lift_x0020plunger = 'K',
	ns1__EquipmentType__polished_x0020rod = 'L',
	ns1__EquipmentType__polished_x0020rod_x0020liner = 'M',
	ns1__EquipmentType__ported_x0020collar = 'N',
	ns1__EquipmentType__profile_x0020nipple = 'O',
	ns1__EquipmentType__profile_x0020nipple_x0020plug = 'P',
	ns1__EquipmentType__pump_out_x0020plug = 'Q',
	ns1__EquipmentType__sand_x0020screen_tubing = 'R',
	ns1__EquipmentType__sand_x0020separator = 'S',
	ns1__EquipmentType__screen_x0020liner_x002finsert = 'T',
	ns1__EquipmentType__seal_x0020assembly = 'U',
	ns1__EquipmentType__seal_x0020bore_x0020extension = 'V',
	ns1__EquipmentType__seat_x0020nipple_x002fshoe = 'W',
	ns1__EquipmentType__shear_x0020tool = 'X',
	ns1__EquipmentType__sliding_x0020sleeve = 'Y',
	ns1__EquipmentType__steam_x0020cup_x0020mandrel = 'Z',
	ns1__EquipmentType__steam_x0020deflectors = 91,
	ns1__EquipmentType__strainer_x0020nipple = 92,
	ns1__EquipmentType__subsurface_x0020safety_x0020valve = 93,
	ns1__EquipmentType__sucker_x0020rod = 94,
	ns1__EquipmentType__sucker_x0020rod_x0020backoff_x0020coupling = 95,
	ns1__EquipmentType__sucker_x0020rod_x0020pump_insert = 96,
	ns1__EquipmentType__sucker_x0020rod_x0020pump_jacket = 'a',
	ns1__EquipmentType__sucker_x0020rod_x0020pump_tubing_x0020pump_x0020barrel = 'b',
	ns1__EquipmentType__sucker_x0020rod_x0020pump_tubing_x0020pump_x0020plunger = 'c',
	ns1__EquipmentType__sucker_x0020rod_x0020sub = 'd',
	ns1__EquipmentType__sucker_x0020rod_continuous = 'e',
	ns1__EquipmentType__sucker_x0020rod_ribbon = 'f',
	ns1__EquipmentType__sucker_x0020rod_sinker_x0020bar = 'g',
	ns1__EquipmentType__tcp_x0020gun = 'h',
	ns1__EquipmentType__tubing = 'i',
	ns1__EquipmentType__tubing_x0020_x0028coiled_x0029 = 'j',
	ns1__EquipmentType__tubing_x0020anchor_x002fcatcher = 'k',
	ns1__EquipmentType__tubing_x0020crossover = 'l',
	ns1__EquipmentType__tubing_x0020drain = 'm',
	ns1__EquipmentType__tubing_x0020hanger = 'n',
	ns1__EquipmentType__tubing_x0020head_x0020_x0028spool_x0029 = 'o',
	ns1__EquipmentType__tubing_x0020purge_x0020check_x0020valve = 'p',
	ns1__EquipmentType__tubing_x0020sub = 'q',
	ns1__EquipmentType__wellbore_x0020notes = 'r',
	ns1__EquipmentType__whipstock = 's',
	ns1__EquipmentType__wireline_x0020re_entry_x0020guide_x0020_x0028bell_x0020collar_x0029 = 't',
	ns1__EquipmentType__y_tool = 'u'
};
#endif

/* testh.h:15422 */
#ifndef SOAP_TYPE_ns1__GeologyType
#define SOAP_TYPE_ns1__GeologyType (538)
/* ns1:GeologyType */
enum ns1__GeologyType {
	ns1__GeologyType__aquifer = 0,
	ns1__GeologyType__reservoir = 1
};
#endif

/* testh.h:15435 */
#ifndef SOAP_TYPE_ns1__GradeType
#define SOAP_TYPE_ns1__GradeType (539)
/* ns1:GradeType */
enum ns1__GradeType {
	ns1__GradeType__35 = 35,
	ns1__GradeType__45 = 45,
	ns1__GradeType__46 = 46,
	ns1__GradeType__50 = 50,
	ns1__GradeType__75 = 'K',
	ns1__GradeType__95 = 95,
	ns1__GradeType__13CR = 96,
	ns1__GradeType__13CR__x002080 = 'a',
	ns1__GradeType__13CR__x002085 = 'b',
	ns1__GradeType__13CR__x002095 = 'c',
	ns1__GradeType__13CR_110 = 'd',
	ns1__GradeType__620C = 'e',
	ns1__GradeType__750N = 'f',
	ns1__GradeType__75A = 'g',
	ns1__GradeType__780M = 'h',
	ns1__GradeType__960M = 'i',
	ns1__GradeType__970N = 'j',
	ns1__GradeType__A53 = 'k',
	ns1__GradeType__A53A = 'l',
	ns1__GradeType__A53B = 'm',
	ns1__GradeType__Armco_95 = 'n',
	ns1__GradeType__B = 'o',
	ns1__GradeType__C = 'p',
	ns1__GradeType__C_110 = 'q',
	ns1__GradeType__C_75 = 'r',
	ns1__GradeType__C_90 = 's',
	ns1__GradeType__C_95 = 't',
	ns1__GradeType__D = 'u',
	ns1__GradeType__DE = 'v',
	ns1__GradeType__DER = 'w',
	ns1__GradeType__DR = 'x',
	ns1__GradeType__DWR = 'y',
	ns1__GradeType__E = 'z',
	ns1__GradeType__E_75 = 123,
	ns1__GradeType__EL = 124,
	ns1__GradeType__F_25 = 125,
	ns1__GradeType__FG = 126,
	ns1__GradeType__FS_80 = 127,
	ns1__GradeType__FSS_95 = 128,
	ns1__GradeType__G = 129,
	ns1__GradeType__G_105 = 130,
	ns1__GradeType__GT_80S = 131,
	ns1__GradeType__H2S_90 = 132,
	ns1__GradeType__H2S_95 = 133,
	ns1__GradeType__H_40 = 134,
	ns1__GradeType__HC_95 = 135,
	ns1__GradeType__HCK_55 = 136,
	ns1__GradeType__HCL_80 = 137,
	ns1__GradeType__HCN_80 = 138,
	ns1__GradeType__HCP_110 = 139,
	ns1__GradeType__HCQ_125 = 140,
	ns1__GradeType__HO_70 = 141,
	ns1__GradeType__HS = 142,
	ns1__GradeType__J_20 = 143,
	ns1__GradeType__J_55 = 144,
	ns1__GradeType__K = 145,
	ns1__GradeType__K_40 = 146,
	ns1__GradeType__K_55 = 147,
	ns1__GradeType__KD = 148,
	ns1__GradeType__KD_63 = 149,
	ns1__GradeType__L_80 = 150,
	ns1__GradeType__LS_140 = 151,
	ns1__GradeType__LS_50 = 152,
	ns1__GradeType__LS_65 = 153,
	ns1__GradeType__M_65 = 154,
	ns1__GradeType__M_90 = 155,
	ns1__GradeType__M_95 = 156,
	ns1__GradeType__MAV_50 = 157,
	ns1__GradeType__MD_56 = 158,
	ns1__GradeType__MMS = 159,
	ns1__GradeType__N_105 = 160,
	ns1__GradeType__N_23 = 161,
	ns1__GradeType__N_30 = 162,
	ns1__GradeType__N_40 = 163,
	ns1__GradeType__N_54 = 164,
	ns1__GradeType__N_75 = 165,
	ns1__GradeType__N_78 = 166,
	ns1__GradeType__N_80 = 167,
	ns1__GradeType__N_90 = 168,
	ns1__GradeType__N_96 = 169,
	ns1__GradeType__N_97 = 170,
	ns1__GradeType__P_105 = 171,
	ns1__GradeType__P_110 = 172,
	ns1__GradeType__PCP_x0020_x0020900 = 173,
	ns1__GradeType__PCP_x00201000 = 174,
	ns1__GradeType__PCP_x00201500 = 175,
	ns1__GradeType__PCP_x00202500 = 176,
	ns1__GradeType__PH_6 = 177,
	ns1__GradeType__Plus = 178,
	ns1__GradeType__Q_125 = 179,
	ns1__GradeType__QT_1000 = 180,
	ns1__GradeType__QT_1200 = 181,
	ns1__GradeType__QT_700 = 182,
	ns1__GradeType__QT_800 = 183,
	ns1__GradeType__QT_900 = 184,
	ns1__GradeType__S = 185,
	ns1__GradeType__S_135 = 186,
	ns1__GradeType__S_59 = 187,
	ns1__GradeType__S_60 = 188,
	ns1__GradeType__S_67 = 189,
	ns1__GradeType__S_80 = 190,
	ns1__GradeType__S_87 = 191,
	ns1__GradeType__S_88 = 192,
	ns1__GradeType__S_95 = 193,
	ns1__GradeType__SC_90 = 194,
	ns1__GradeType__SE = 195,
	ns1__GradeType__SER = 196,
	ns1__GradeType__SM = 197,
	ns1__GradeType__SOO_95 = 198,
	ns1__GradeType__Stainless = 199,
	ns1__GradeType__SWR = 200,
	ns1__GradeType__T = 201,
	ns1__GradeType__T_66 = 202,
	ns1__GradeType__T_95 = 203,
	ns1__GradeType__T_D61 = 204,
	ns1__GradeType__T_D63 = 205,
	ns1__GradeType__T_K65 = 206,
	ns1__GradeType__UHS = 207,
	ns1__GradeType__USS_125 = 208,
	ns1__GradeType__USS_140 = 209,
	ns1__GradeType__USS_50 = 210,
	ns1__GradeType__USS_95 = 211,
	ns1__GradeType__V_150 = 212,
	ns1__GradeType__WC_50 = 213,
	ns1__GradeType__X = 214,
	ns1__GradeType__X_140 = 215,
	ns1__GradeType__X_42 = 216,
	ns1__GradeType__X_46 = 217,
	ns1__GradeType__X_52 = 218,
	ns1__GradeType__X_56 = 219,
	ns1__GradeType__X_60 = 220,
	ns1__GradeType__X_70 = 221,
	ns1__GradeType__X_95 = 222,
	ns1__GradeType__XD = 223
};
#endif

/* testh.h:15580 */
#ifndef SOAP_TYPE_ns1__OtherConnectionTypes
#define SOAP_TYPE_ns1__OtherConnectionTypes (540)
/* ns1:OtherConnectionTypes */
enum ns1__OtherConnectionTypes {
	ns1__OtherConnectionTypes__cemented_in_place = 0,
	ns1__OtherConnectionTypes__dogscompressionfit_sealed = 1
};
#endif

/* testh.h:15593 */
#ifndef SOAP_TYPE_ns1__PerforationToolType
#define SOAP_TYPE_ns1__PerforationToolType (541)
/* ns1:PerforationToolType */
enum ns1__PerforationToolType {
	ns1__PerforationToolType__casing_x0020gun = 0,
	ns1__PerforationToolType__coiled_x0020tubing_x0020jet_x0020tool = 1,
	ns1__PerforationToolType__drilled = 2,
	ns1__PerforationToolType__mandrel = 3,
	ns1__PerforationToolType__n_x002fa = 4,
	ns1__PerforationToolType__slots_machine_x0020cut = 5,
	ns1__PerforationToolType__slots_undercut = 6,
	ns1__PerforationToolType__strip_x0020gun = 7,
	ns1__PerforationToolType__tcp_x0020gun = 8,
	ns1__PerforationToolType__through_x0020tubing_x0020gun = 9
};
#endif

/* testh.h:15614 */
#ifndef SOAP_TYPE_ns1__RodConnectionTypes
#define SOAP_TYPE_ns1__RodConnectionTypes (542)
/* ns1:RodConnectionTypes */
enum ns1__RodConnectionTypes {
	ns1__RodConnectionTypes__eating_x0020nipple_cup = 0,
	ns1__RodConnectionTypes__latched = 1,
	ns1__RodConnectionTypes__seating_x0020nipple_mechanical = 2,
	ns1__RodConnectionTypes__slipfit_x0020sealed = 3,
	ns1__RodConnectionTypes__threaded = 4,
	ns1__RodConnectionTypes__welded = 5
};
#endif

/* testh.h:15631 */
#ifndef SOAP_TYPE_ns1__SubStringType
#define SOAP_TYPE_ns1__SubStringType (543)
/* ns1:SubStringType */
enum ns1__SubStringType {
	ns1__SubStringType__abandoned_x0020junk_x002ffish = 0,
	ns1__SubStringType__capillary_x0020string_x0020_x0028inside_x0020tubing_x0029 = 1,
	ns1__SubStringType__capillary_x0020string_x0020_x0028tubing_x002fcasing_x0020annulus_x0029 = 2,
	ns1__SubStringType__conductor_x0020casing = 3,
	ns1__SubStringType__drill_x0020string = 4,
	ns1__SubStringType__flowline = 5,
	ns1__SubStringType__geological_x0020objects = 6,
	ns1__SubStringType__inner_x0020liner = 7,
	ns1__SubStringType__intermediate_x0020casing = 8,
	ns1__SubStringType__production_x0020casing = 9,
	ns1__SubStringType__production_x0020liner = 10,
	ns1__SubStringType__protective_x0020casing = 11,
	ns1__SubStringType__surface_x0020casing = 12,
	ns1__SubStringType__wellbore_x0020notes = 13,
	ns1__SubStringType__y_tool_x0020string = 14
};
#endif

/* testh.h:15657 */
#ifndef SOAP_TYPE_ns1__TubingConnectionTypes
#define SOAP_TYPE_ns1__TubingConnectionTypes (544)
/* ns1:TubingConnectionTypes */
enum ns1__TubingConnectionTypes {
	ns1__TubingConnectionTypes__dogscompressionfit_notsealed = 0,
	ns1__TubingConnectionTypes__landed = 1,
	ns1__TubingConnectionTypes__latched = 2,
	ns1__TubingConnectionTypes__radial = 3,
	ns1__TubingConnectionTypes__selfsealing_threaded = 4,
	ns1__TubingConnectionTypes__slipfit_sealed = 5,
	ns1__TubingConnectionTypes__threaded = 6
};
#endif

/* testh.h:15675 */
#ifndef SOAP_TYPE_ns1__EventClassType
#define SOAP_TYPE_ns1__EventClassType (545)
/* ns1:EventClassType */
enum ns1__EventClassType {
	ns1__EventClassType__daily_x0020cost = 0,
	ns1__EventClassType__daily_x0020report = 1,
	ns1__EventClassType__failure_x0020_x0028downhole_x0020equipment_x0020only_x0029 = 2,
	ns1__EventClassType__job = 3,
	ns1__EventClassType__job_x0020plan_x0020_x0028phases_x0029 = 4,
	ns1__EventClassType__mud_x0020attributes = 5,
	ns1__EventClassType__npt_x0020_x0028lost_x0020time_x0020event_x0029 = 6,
	ns1__EventClassType__time_x0020log_x0020_x0028time_x0020measure_x0029 = 7
};
#endif

/* testh.h:15694 */
#ifndef SOAP_TYPE_ns1__PerfConveyanceMethod
#define SOAP_TYPE_ns1__PerfConveyanceMethod (546)
/* ns1:PerfConveyanceMethod */
enum ns1__PerfConveyanceMethod {
	ns1__PerfConveyanceMethod__slick_x0020line = 0,
	ns1__PerfConveyanceMethod__tubing_x0020conveyed = 1,
	ns1__PerfConveyanceMethod__wireline = 2
};
#endif

/* testh.h:15708 */
#ifndef SOAP_TYPE_ns1__DrillActivityClassType
#define SOAP_TYPE_ns1__DrillActivityClassType (547)
/* ns1:DrillActivityClassType */
enum ns1__DrillActivityClassType {
	ns1__DrillActivityClassType__planned = 0,
	ns1__DrillActivityClassType__unplanned = 1,
	ns1__DrillActivityClassType__downtime = 2
};
#endif

/* testh.h:15722 */
#ifndef SOAP_TYPE_ns1__DrillActivityCode
#define SOAP_TYPE_ns1__DrillActivityCode (548)
/* ns1:DrillActivityCode */
enum ns1__DrillActivityCode {
	ns1__DrillActivityCode__abandonment = 0,
	ns1__DrillActivityCode__abandonment_x0020_x002d__x0020log_x0020plugs = 1,
	ns1__DrillActivityCode__abandonment_x0020_x002d__x0020run_x0020plugs = 2,
	ns1__DrillActivityCode__abandonment_x0020_x002d__x0020wait_x0020on_x0020cement = 3,
	ns1__DrillActivityCode__casing = 4,
	ns1__DrillActivityCode__cement = 5,
	ns1__DrillActivityCode__cement_x0020_x002d__x0020circulate = 6,
	ns1__DrillActivityCode__cement_x0020_x002d__x0020other = 7,
	ns1__DrillActivityCode__cement_x0020_x002d__x0020rig_x0020up = 8,
	ns1__DrillActivityCode__cement_x0020_x002d__x0020wait_x0020on_x0020cement = 9,
	ns1__DrillActivityCode__circulate = 10,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020boulder_x0020or_x0020gravel = 11,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020casing = 12,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020cementing = 13,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020circulate_x0020samples = 14,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020coring = 15,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020drilling = 16,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020fishing = 17,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020gumbo_x0020attack = 18,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020logging = 19,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020lost_x0020circulation = 20,
	ns1__DrillActivityCode__circulate_x0020_x002d__x0020well_x0020control = 21,
	ns1__DrillActivityCode__completion_x0020operations = 22,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020gravel_x0020packing = 23,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020logging = 24,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020rig_x0020up = 25,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020running_x0020liner = 26,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020tear_x0020down = 27,
	ns1__DrillActivityCode__completion_x0020operations_x0020_x002d__x0020testing = 28,
	ns1__DrillActivityCode__cond_x0020mud = 29,
	ns1__DrillActivityCode__coring = 30,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020conventional = 31,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020flow_x0020check = 32,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020laydown_x0020barrel = 33,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020oriented = 34,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020plastic_x0020sleeve = 35,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020rig_x0020up_x0020core_x0020barrel = 36,
	ns1__DrillActivityCode__coring_x0020_x002d__x0020sponge = 37,
	ns1__DrillActivityCode__cut = 38,
	ns1__DrillActivityCode__deviation_x0020survey = 39,
	ns1__DrillActivityCode__deviation_x0020survey_x0020_x002d__x0020dir_x0020multi_shot = 40,
	ns1__DrillActivityCode__deviation_x0020survey_x0020_x002d__x0020dir_x0020single_x0020shot = 41,
	ns1__DrillActivityCode__deviation_x0020survey_x0020_x002d__x0020drift = 42,
	ns1__DrillActivityCode__deviation_x0020survey_x0020_x002d__x0020gyro = 43,
	ns1__DrillActivityCode__deviation_x0020survey_x0020_x002d__x0020MWD = 44,
	ns1__DrillActivityCode__dir_x0020work = 45,
	ns1__DrillActivityCode__dir_x0020work_x0020_x002d__x0020horizontal_x0020drilling = 46,
	ns1__DrillActivityCode__dir_x0020work_x0020_x002d__x0020motor_x0020drilling = 47,
	ns1__DrillActivityCode__dir_x0020work_x0020_x002d__x0020orient = 48,
	ns1__DrillActivityCode__dir_x0020work_x0020_x002d__x0020rotary_x0020drilling = 49,
	ns1__DrillActivityCode__dir_x0020work_x0020_x002d__x0020slant_x0020drilling = 50,
	ns1__DrillActivityCode__drilling = 51,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020casing = 52,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020connection = 53,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020drill_x0020cement = 54,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020flow_x0020check = 55,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020hole_x0020opening = 56,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020new_x0020hole = 57,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020sidetracking = 58,
	ns1__DrillActivityCode__drilling_x0020_x002d__x0020under_reaming = 59,
	ns1__DrillActivityCode__DST = 60,
	ns1__DrillActivityCode__DST_x0020_x002d__x0020cased_x0020hole = 61,
	ns1__DrillActivityCode__DST_x0020_x002d__x0020lay_x0020down_x0020tools = 62,
	ns1__DrillActivityCode__DST_x0020_x002d__x0020open_x0020hole = 63,
	ns1__DrillActivityCode__DST_x0020_x002d__x0020open_x0020hole_x0020closed_x0020chamber = 64,
	ns1__DrillActivityCode__DST_x0020_x002d__x0020rig_x0020up_x0020tools = 'A',
	ns1__DrillActivityCode__fishing = 'B',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020BHA = 'C',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020casing = 'D',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020cones = 'E',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020other = 'F',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020stuck_x0020pipe = 'G',
	ns1__DrillActivityCode__fishing_x0020_x002d__x0020wireline_x0020tools = 'H',
	ns1__DrillActivityCode__float_x0020equip = 'I',
	ns1__DrillActivityCode__HSE = 'J',
	ns1__DrillActivityCode__HSE_x0020_x002d__x0020hold_x0020drill = 'K',
	ns1__DrillActivityCode__HSE_x0020_x002d__x0020incident = 'L',
	ns1__DrillActivityCode__HSE_x0020_x002d__x0020safety_x0020meeting = 'M',
	ns1__DrillActivityCode__mill = 'N',
	ns1__DrillActivityCode__mill_x0020_x002d__x0020cut_x0020casing_x0020or_x0020tubing = 'O',
	ns1__DrillActivityCode__mill_x0020_x002d__x0020milling = 'P',
	ns1__DrillActivityCode__miscellaneous = 'Q',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP = 'R',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP_x0020_x002d__x0020diverter = 'S',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP_x0020_x002d__x0020manifold = 'T',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP_x0020_x002d__x0020other = 'U',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP_x0020_x002d__x0020PVT_x0020system = 'V',
	ns1__DrillActivityCode__nipple_x0020up_x0020BOP_x0020_x002d__x0020stack = 'W',
	ns1__DrillActivityCode__plug_x0020back = 'X',
	ns1__DrillActivityCode__plug_x0020back_x0020_x002d__x0020abandonment = 'Y',
	ns1__DrillActivityCode__plug_x0020back_x0020_x002d__x0020kick_x0020off_x0020plug = 'Z',
	ns1__DrillActivityCode__plug_x0020back_x0020_x002d__x0020lost_x0020circulation = 91,
	ns1__DrillActivityCode__plug_x0020back_x0020_x002d__x0020wait_x0020on_x0020cement = 92,
	ns1__DrillActivityCode__plug_x0020back_x0020_x002d__x0020well_x0020control = 93,
	ns1__DrillActivityCode__pressure_x0020test = 94,
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020BOP_x0020manifold = 95,
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020BOP_x0020stack = 96,
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020form_x0020integrity_x0020test = 'a',
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020form_x0020leak_x0020off_x0020test = 'b',
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020packer = 'c',
	ns1__DrillActivityCode__pressure_x0020test_x0020_x002d__x0020PIT = 'd',
	ns1__DrillActivityCode__reaming = 'e',
	ns1__DrillActivityCode__reaming_x0020_x002d__x0020back_x0020reaming = 'f',
	ns1__DrillActivityCode__reaming_x0020_x002d__x0020coring = 'g',
	ns1__DrillActivityCode__reaming_x0020_x002d__x0020drill = 'h',
	ns1__DrillActivityCode__reaming_x0020_x002d__x0020logging = 'i',
	ns1__DrillActivityCode__reaming_x0020_x002d__x0020under_reaming = 'j',
	ns1__DrillActivityCode__rig_x0020move = 'k',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020anchor_x0020handling = 'l',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020inter_pad_x0020move = 'm',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020inter_well_x0020move = 'n',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020jack_x0020up_x0020or_x0020down = 'o',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020other = 'p',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020position_x0020rig = 'q',
	ns1__DrillActivityCode__rig_x0020move_x0020_x002d__x0020skid_x0020rig = 'r',
	ns1__DrillActivityCode__rig_x0020release = 's',
	ns1__DrillActivityCode__rig_x0020release_x0020_x002d__x0020cut_x0020casing = 't',
	ns1__DrillActivityCode__rig_x0020release_x0020_x002d__x0020install_x0020capping_x0020assembly = 'u',
	ns1__DrillActivityCode__rig_x0020release_x0020_x002d__x0020MOB_x0020or_x0020DE_MOB = 'v',
	ns1__DrillActivityCode__rig_x0020repairs = 'w',
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020drawworks = 'x',
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020electrical = 'y',
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020mud_x0020system = 'z',
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020other = 123,
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020rotary = 124,
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020subsea_x0020equipment = 125,
	ns1__DrillActivityCode__rig_x0020repairs_x0020_x002d__x0020well_x0020control_x0020equipment = 126,
	ns1__DrillActivityCode__rig_x0020service = 127,
	ns1__DrillActivityCode__rig_x0020service_x0020_x002d__x0020lubricate_x0020rig = 128,
	ns1__DrillActivityCode__rig_x0020service_x0020_x002d__x0020test_x0020equipment = 129,
	ns1__DrillActivityCode__rig_x0020up_x0020or_x0020tear_x0020down = 130,
	ns1__DrillActivityCode__rig_x0020up_x0020or_x0020tear_x0020down_x0020_x002d__x0020rig_x0020up = 131,
	ns1__DrillActivityCode__rig_x0020up_x0020or_x0020tear_x0020down_x0020_x002d__x0020site_x0020work = 132,
	ns1__DrillActivityCode__rig_x0020up_x0020or_x0020tear_x0020down_x0020_x002d__x0020tear_x0020down = 133,
	ns1__DrillActivityCode__run_x0020casing = 134,
	ns1__DrillActivityCode__run_x0020liner = 135,
	ns1__DrillActivityCode__run_x0020or_x0020pull_x0020riser = 136,
	ns1__DrillActivityCode__run_x0020or_x0020pull_x0020riser_x0020_x002d__x0020other = 137,
	ns1__DrillActivityCode__run_x0020or_x0020pull_x0020riser_x0020_x002d__x0020run_x0020or_x0020pull_x0020riser = 138,
	ns1__DrillActivityCode__set = 139,
	ns1__DrillActivityCode__slip_x0020drilling_x0020line = 140,
	ns1__DrillActivityCode__squeeze_x0020cement = 141,
	ns1__DrillActivityCode__squeeze_x0020cement_x0020_x002d__x0020casing_x0020repair = 142,
	ns1__DrillActivityCode__squeeze_x0020cement_x0020_x002d__x0020casing_x0020shoe = 143,
	ns1__DrillActivityCode__squeeze_x0020cement_x0020_x002d__x0020parted_x0020casing = 144,
	ns1__DrillActivityCode__squeeze_x0020cement_x0020_x002d__x0020perforations_x0020DST = 145,
	ns1__DrillActivityCode__stuck_x0020pipe = 146,
	ns1__DrillActivityCode__surface_x0020string_x0020handling = 147,
	ns1__DrillActivityCode__test_x0020completion = 148,
	ns1__DrillActivityCode__testing_x0020general = 149,
	ns1__DrillActivityCode__testing_x0020general_x0020_x002d__x0020equipment = 150,
	ns1__DrillActivityCode__testing_x0020general_x0020_x002d__x0020flow = 151,
	ns1__DrillActivityCode__tripping = 152,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020back_reaming = 153,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020flow_x0020check = 154,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020short_x0020trip_x0020in = 155,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020short_x0020trip_x0020out = 156,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020trip_x0020in_x0020_x0028from_x0020surface_x0029 = 157,
	ns1__DrillActivityCode__tripping_x0020_x002d__x0020trip_x0020out_x0020_x0028to_x0020surface_x0029 = 158,
	ns1__DrillActivityCode__wait = 159,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020daylight = 160,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020environmental_x0020or_x0020regulatory = 161,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020equipment = 162,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020holiday = 163,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020ice = 164,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020on_x0020orders = 165,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020operator = 166,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020other = 167,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020partners = 168,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020service_x0020company = 169,
	ns1__DrillActivityCode__wait_x0020_x002d__x0020weather = 170,
	ns1__DrillActivityCode__well_x0020control = 171,
	ns1__DrillActivityCode__well_x0020control_x0020_x002d__x0020mix = 172,
	ns1__DrillActivityCode__well_x0020control_x0020_x002d__x0020shut_x0020in = 173,
	ns1__DrillActivityCode__well_x0020control_x0020_x002d__x0020strip = 174,
	ns1__DrillActivityCode__well_x0020control_x0020_x002d__x0020well_x0020kill = 175,
	ns1__DrillActivityCode__well_x0020srvc = 176,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020casing_x0020repair = 177,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020clean_x0020well_x0020to_x0020compl_x0020fluid = 178,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020coiled_x0020tubing_x0020work = 179,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020gravel_x0020pack = 180,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020install_x0020or_x0020test_x0020xmas_x0020tree = 181,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020kill_x0020well = 182,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020land = 183,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020perforate = 184,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020pull_x0020completion = 185,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020pull_x0020suspension_x0020plugs = 186,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020run_x0020completion = 187,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020run_x0020screens = 188,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020sand_x0020control = 189,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020stimulation = 190,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020subsea_x0020work = 191,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020surface_x0020line_x0020work = 192,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020suspend_x0020well_x0020or_x0020pull_x0020BOPs = 193,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020test_x0020well = 194,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020wash = 195,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020wireline_x0020work = 196,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020work_x0020tubulars = 197,
	ns1__DrillActivityCode__well_x0020srvc_x0020_x002d__x0020workstring_x0020run = 198,
	ns1__DrillActivityCode__wireline_x0020logs = 199,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020abandonment = 200,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020evaluation = 201,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020form_x0020tester = 202,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020other = 203,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020side_x0020wall_x0020cores = 204,
	ns1__DrillActivityCode__wireline_x0020logs_x0020_x002d__x0020velocity = 205
};
#endif

/* testh.h:15939 */
#ifndef SOAP_TYPE_ns1__InnerBarrelType
#define SOAP_TYPE_ns1__InnerBarrelType (549)
/* ns1:InnerBarrelType */
enum ns1__InnerBarrelType {
	ns1__InnerBarrelType__undifferentiated = 0,
	ns1__InnerBarrelType__aluminum = 1,
	ns1__InnerBarrelType__gel = 2,
	ns1__InnerBarrelType__fiberglass = 3
};
#endif

/* testh.h:15970 */
#ifndef SOAP_TYPE_ns1__ItemState
#define SOAP_TYPE_ns1__ItemState (550)
/* ns1:ItemState */
enum ns1__ItemState {
	ns1__ItemState__actual = 0,
	ns1__ItemState__model = 1,
	ns1__ItemState__plan = 2
};
#endif

/* testh.h:15996 */
#ifndef SOAP_TYPE_ns1__OpsReportVersion
#define SOAP_TYPE_ns1__OpsReportVersion (551)
/* ns1:OpsReportVersion */
enum ns1__OpsReportVersion {
	ns1__OpsReportVersion__preliminary = 0,
	ns1__OpsReportVersion__normal = 1,
	ns1__OpsReportVersion__final_ = 2
};
#endif

/* testh.h:16022 */
#ifndef SOAP_TYPE_ns1__PresTestType
#define SOAP_TYPE_ns1__PresTestType (552)
/* ns1:PresTestType */
enum ns1__PresTestType {
	ns1__PresTestType__leak_x0020off_x0020test = 0,
	ns1__PresTestType__formation_x0020integrity_x0020test = 1
};
#endif

/* testh.h:16043 */
#ifndef SOAP_TYPE_ns1__ReadingKind
#define SOAP_TYPE_ns1__ReadingKind (553)
/* ns1:ReadingKind */
enum ns1__ReadingKind {
	ns1__ReadingKind__measured = 0,
	ns1__ReadingKind__estimated = 1,
	ns1__ReadingKind__unknown = 2
};
#endif

/* testh.h:16069 */
#ifndef SOAP_TYPE_ns1__StateDetailActivity
#define SOAP_TYPE_ns1__StateDetailActivity (554)
/* ns1:StateDetailActivity */
enum ns1__StateDetailActivity {
	ns1__StateDetailActivity__injury = 0,
	ns1__StateDetailActivity__operation_x0020failed = 1,
	ns1__StateDetailActivity__kick = 2,
	ns1__StateDetailActivity__circulation_x0020loss = 3,
	ns1__StateDetailActivity__mud_x0020loss = 4,
	ns1__StateDetailActivity__stuck_x0020equipment = 5,
	ns1__StateDetailActivity__equipment_x0020failure = 6,
	ns1__StateDetailActivity__equipment_x0020hang = 7,
	ns1__StateDetailActivity__success = 8
};
#endif

/* testh.h:16125 */
#ifndef SOAP_TYPE_ns1__WellControlIncidentType
#define SOAP_TYPE_ns1__WellControlIncidentType (555)
/* ns1:WellControlIncidentType */
enum ns1__WellControlIncidentType {
	ns1__WellControlIncidentType__shallow_x0020gas_x0020kick = 0,
	ns1__WellControlIncidentType__water_x0020kick = 1,
	ns1__WellControlIncidentType__oil_x0020kick = 2,
	ns1__WellControlIncidentType__gas_x0020kick = 3
};
#endif

/* testh.h:16156 */
#ifndef SOAP_TYPE_ns1__WellKillingProcedureType
#define SOAP_TYPE_ns1__WellKillingProcedureType (556)
/* ns1:WellKillingProcedureType */
enum ns1__WellKillingProcedureType {
	ns1__WellKillingProcedureType__drillers_x0020method = 0,
	ns1__WellKillingProcedureType__wait_x0020and_x0020weight = 1,
	ns1__WellKillingProcedureType__bullheading = 2,
	ns1__WellKillingProcedureType__lubricate_x0020and_x0020bleed = 3,
	ns1__WellKillingProcedureType__forward_x0020circulation = 4,
	ns1__WellKillingProcedureType__reverse_x0020circulation = 5
};
#endif

/* testh.h:16199 */
#ifndef SOAP_TYPE_ns1__WellTestType
#define SOAP_TYPE_ns1__WellTestType (557)
/* ns1:WellTestType */
enum ns1__WellTestType {
	ns1__WellTestType__drill_x0020stem_x0020test = 0,
	ns1__WellTestType__production_x0020test = 1
};
#endif

/* testh.h:16220 */
#ifndef SOAP_TYPE_ns1__BopType
#define SOAP_TYPE_ns1__BopType (558)
/* ns1:BopType */
enum ns1__BopType {
	ns1__BopType__annular_x0020preventer = 0,
	ns1__BopType__shear_x0020ram = 1,
	ns1__BopType__blind_x0020ram = 2,
	ns1__BopType__pipe_x0020ram = 3,
	ns1__BopType__drilling_x0020spool = 4,
	ns1__BopType__flexible_x0020joint = 5,
	ns1__BopType__connector = 6
};
#endif

/* testh.h:16238 */
#ifndef SOAP_TYPE_ns1__DerrickType
#define SOAP_TYPE_ns1__DerrickType (559)
/* ns1:DerrickType */
enum ns1__DerrickType {
	ns1__DerrickType__double_ = 0,
	ns1__DerrickType__quadruple = 1,
	ns1__DerrickType__slant = 2,
	ns1__DerrickType__triple = 3
};
#endif

/* testh.h:16269 */
#ifndef SOAP_TYPE_ns1__DrawWorksType
#define SOAP_TYPE_ns1__DrawWorksType (560)
/* ns1:DrawWorksType */
enum ns1__DrawWorksType {
	ns1__DrawWorksType__mechanical = 0,
	ns1__DrawWorksType__standard_x0020electric = 1,
	ns1__DrawWorksType__diesel_x0020electric = 2,
	ns1__DrawWorksType__ram_x0020rig = 3
};
#endif

/* testh.h:16284 */
#ifndef SOAP_TYPE_ns1__DriveType
#define SOAP_TYPE_ns1__DriveType (561)
/* ns1:DriveType */
enum ns1__DriveType {
	ns1__DriveType__coiled_x0020tubing = 0,
	ns1__DriveType__rotary_x0020kelly_x0020drive = 1,
	ns1__DriveType__top_x0020drive = 2
};
#endif

/* testh.h:16310 */
#ifndef SOAP_TYPE_ns1__PitType
#define SOAP_TYPE_ns1__PitType (562)
/* ns1:PitType */
enum ns1__PitType {
	ns1__PitType__bulk = 0,
	ns1__PitType__chemical = 1,
	ns1__PitType__drilling = 2,
	ns1__PitType__mix = 3,
	ns1__PitType__mud_x0020cleaning = 4,
	ns1__PitType__sand_x0020trap = 5,
	ns1__PitType__slug = 6,
	ns1__PitType__storage = 7,
	ns1__PitType__surge_x0020tank = 8,
	ns1__PitType__trip_x0020tank = 9
};
#endif

/* testh.h:16335 */
#ifndef SOAP_TYPE_ns1__PumpType
#define SOAP_TYPE_ns1__PumpType (563)
/* ns1:PumpType */
enum ns1__PumpType {
	ns1__PumpType__centrifugal = 0,
	ns1__PumpType__duplex = 1,
	ns1__PumpType__triplex = 2
};
#endif

/* testh.h:16361 */
#ifndef SOAP_TYPE_ns1__RigType
#define SOAP_TYPE_ns1__RigType (564)
/* ns1:RigType */
enum ns1__RigType {
	ns1__RigType__barge = 0,
	ns1__RigType__coiled_x0020tubing = 1,
	ns1__RigType__floater = 2,
	ns1__RigType__jackup = 3,
	ns1__RigType__land = 4,
	ns1__RigType__platform = 5,
	ns1__RigType__semi_submersible = 6
};
#endif

/* testh.h:16407 */
#ifndef SOAP_TYPE_ns1__SurfEquipType
#define SOAP_TYPE_ns1__SurfEquipType (565)
/* ns1:SurfEquipType */
enum ns1__SurfEquipType {
	ns1__SurfEquipType__IADC = 0,
	ns1__SurfEquipType__custom = 1,
	ns1__SurfEquipType__coiled_x0020tubing = 2,
	ns1__SurfEquipType__unknown = 3
};
#endif

/* testh.h:16426 */
#ifndef SOAP_TYPE_ns1__ConcentrationParameterKind
#define SOAP_TYPE_ns1__ConcentrationParameterKind (566)
/* ns1:ConcentrationParameterKind */
enum ns1__ConcentrationParameterKind {
	ns1__ConcentrationParameterKind__cuttings_x0020gas = 0
};
#endif

/* testh.h:16442 */
#ifndef SOAP_TYPE_ns1__ForceParameterKind
#define SOAP_TYPE_ns1__ForceParameterKind (567)
/* ns1:ForceParameterKind */
enum ns1__ForceParameterKind {
	ns1__ForceParameterKind__overpull_x0020on_x0020connection = 0,
	ns1__ForceParameterKind__overpull_x0020on_x0020trip = 1
};
#endif

/* testh.h:16463 */
#ifndef SOAP_TYPE_ns1__GasPeakType
#define SOAP_TYPE_ns1__GasPeakType (568)
/* ns1:GasPeakType */
enum ns1__GasPeakType {
	ns1__GasPeakType__circulating_x0020background_x0020gas = 0,
	ns1__GasPeakType__connection_x0020gas = 1,
	ns1__GasPeakType__drilling_x0020background_x0020gas = 2,
	ns1__GasPeakType__drilling_x0020gas_x0020peak = 3,
	ns1__GasPeakType__flow_x0020check_x0020gas = 4,
	ns1__GasPeakType__no_x0020readings = 5,
	ns1__GasPeakType__other = 6,
	ns1__GasPeakType__shut_x0020down_x0020gas = 7,
	ns1__GasPeakType__trip_x0020gas = 8
};
#endif

/* testh.h:16483 */
#ifndef SOAP_TYPE_ns1__MudLogStringParameterKind
#define SOAP_TYPE_ns1__MudLogStringParameterKind (569)
/* ns1:MudLogStringParameterKind */
enum ns1__MudLogStringParameterKind {
	ns1__MudLogStringParameterKind__bit_x0020parameters = 0,
	ns1__MudLogStringParameterKind__bit_x0020type_x0020comment = 1,
	ns1__MudLogStringParameterKind__casing_x0020point_x0020comment = 2,
	ns1__MudLogStringParameterKind__chromatograph_x0020comment = 3,
	ns1__MudLogStringParameterKind__circulation_x0020system_x0020comment = 4,
	ns1__MudLogStringParameterKind__core_x0020interval_x0020comment = 5,
	ns1__MudLogStringParameterKind__drilling_x0020data_x0020comment = 6,
	ns1__MudLogStringParameterKind__gas_x0020peaks_x0020comment = 7,
	ns1__MudLogStringParameterKind__gas_x0020ratio_x0020comment = 8,
	ns1__MudLogStringParameterKind__general_x0020engineering_x0020comment = 9,
	ns1__MudLogStringParameterKind__lithlog_x0020comment = 10,
	ns1__MudLogStringParameterKind__LWD_x0020comment = 11,
	ns1__MudLogStringParameterKind__marker_x0020or_x0020formation_x0020top_x0020comment = 12,
	ns1__MudLogStringParameterKind__midnight_x0020depth_x0020date = 13,
	ns1__MudLogStringParameterKind__mud_x0020check_x0020comment = 14,
	ns1__MudLogStringParameterKind__mud_x0020data_x0020comment = 15,
	ns1__MudLogStringParameterKind__mudlog_x0020comment = 16,
	ns1__MudLogStringParameterKind__pressure_x0020data_x0020comment = 17,
	ns1__MudLogStringParameterKind__shale_x0020density_x0020comment = 18,
	ns1__MudLogStringParameterKind__short_x0020trip_x0020comment = 19,
	ns1__MudLogStringParameterKind__show_x0020report_x0020comment = 20,
	ns1__MudLogStringParameterKind__sidewall_x0020core_x0020comment = 21,
	ns1__MudLogStringParameterKind__sliding_x0020Interval = 22,
	ns1__MudLogStringParameterKind__steam_x0020still_x0020results_x0020comment = 23,
	ns1__MudLogStringParameterKind__survey_x0020comment = 24,
	ns1__MudLogStringParameterKind__temperature_x0020data_x0020comment = 25,
	ns1__MudLogStringParameterKind__temperature_x0020trend_x0020comment = 26,
	ns1__MudLogStringParameterKind__unknown = 27,
	ns1__MudLogStringParameterKind__wireline_x0020log_x0020comment = 28
};
#endif

/* testh.h:16523 */
#ifndef SOAP_TYPE_ns1__PressureGradientParameterKind
#define SOAP_TYPE_ns1__PressureGradientParameterKind (570)
/* ns1:PressureGradientParameterKind */
enum ns1__PressureGradientParameterKind {
	ns1__PressureGradientParameterKind__direct_x0020pore_x0020pressure_x0020gradient_x0020measurement = 0,
	ns1__PressureGradientParameterKind__fracture_x0020pressure_x0020gradient_x0020estimate = 1,
	ns1__PressureGradientParameterKind__kick_x0020pressure_x0020gradient = 2,
	ns1__PressureGradientParameterKind__lost_x0020returns = 3,
	ns1__PressureGradientParameterKind__overburden_x0020gradient = 4,
	ns1__PressureGradientParameterKind__pore_x0020pressure_x0020gradient_x0020estimate = 5
};
#endif

/* testh.h:16540 */
#ifndef SOAP_TYPE_ns1__PressureParameterKind
#define SOAP_TYPE_ns1__PressureParameterKind (571)
/* ns1:PressureParameterKind */
enum ns1__PressureParameterKind {
	ns1__PressureParameterKind__direct_x0020fracture_x0020pressure_x0020measurement = 0,
	ns1__PressureParameterKind__pore_x0020pressure_x0020estimate_x0020while_x0020drilling = 1
};
#endif

/* testh.h:16553 */
#ifndef SOAP_TYPE_ns1__ShowFluid
#define SOAP_TYPE_ns1__ShowFluid (572)
/* ns1:ShowFluid */
enum ns1__ShowFluid {
	ns1__ShowFluid__gas = 0,
	ns1__ShowFluid__oil = 1
};
#endif

/* testh.h:16566 */
#ifndef SOAP_TYPE_ns1__ShowFluorescence
#define SOAP_TYPE_ns1__ShowFluorescence (573)
/* ns1:ShowFluorescence */
enum ns1__ShowFluorescence {
	ns1__ShowFluorescence__faint = 0,
	ns1__ShowFluorescence__bright = 1,
	ns1__ShowFluorescence__none = 2
};
#endif

/* testh.h:16580 */
#ifndef SOAP_TYPE_ns1__ShowLevel
#define SOAP_TYPE_ns1__ShowLevel (574)
/* ns1:ShowLevel */
enum ns1__ShowLevel {
	ns1__ShowLevel__blooming = 0,
	ns1__ShowLevel__streaming = 1
};
#endif

/* testh.h:16593 */
#ifndef SOAP_TYPE_ns1__ShowRating
#define SOAP_TYPE_ns1__ShowRating (575)
/* ns1:ShowRating */
enum ns1__ShowRating {
	ns1__ShowRating__none = 0,
	ns1__ShowRating__very_x0020poor = 1,
	ns1__ShowRating__poor = 2,
	ns1__ShowRating__fair = 3,
	ns1__ShowRating__good = 4,
	ns1__ShowRating__very_x0020good = 5
};
#endif

/* testh.h:16610 */
#ifndef SOAP_TYPE_ns1__ShowSpeed
#define SOAP_TYPE_ns1__ShowSpeed (576)
/* ns1:ShowSpeed */
enum ns1__ShowSpeed {
	ns1__ShowSpeed__slow = 0,
	ns1__ShowSpeed__moderately_x0020fast = 1,
	ns1__ShowSpeed__fast = 2,
	ns1__ShowSpeed__instantaneous = 3,
	ns1__ShowSpeed__none = 4
};
#endif

/* testh.h:16626 */
#ifndef SOAP_TYPE_ns1__TrajStationStatus
#define SOAP_TYPE_ns1__TrajStationStatus (577)
/* ns1:TrajStationStatus */
enum ns1__TrajStationStatus {
	ns1__TrajStationStatus__open = 0,
	ns1__TrajStationStatus__rejected = 1,
	ns1__TrajStationStatus__position = 2
};
#endif

/* testh.h:16652 */
#ifndef SOAP_TYPE_ns1__TrajStationType
#define SOAP_TYPE_ns1__TrajStationType (578)
/* ns1:TrajStationType */
enum ns1__TrajStationType {
	ns1__TrajStationType__azimuth_x0020on_x0020plane = 0,
	ns1__TrajStationType__buildrate_x0020to_x0020delta_MD = 1,
	ns1__TrajStationType__buildrate_x0020to_x0020INCL = 2,
	ns1__TrajStationType__buildrate_x0020to_x0020MD = 3,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020AZI = 4,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020delta_MD = 5,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020INCL = 6,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020INCL_x0020and_x0020AZI = 7,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020MD = 8,
	ns1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020TVD = 9,
	ns1__TrajStationType__buildrate_x0020TVD = 10,
	ns1__TrajStationType__casing_x0020MD = 11,
	ns1__TrajStationType__casing_x0020TVD = 12,
	ns1__TrajStationType__DLS = 13,
	ns1__TrajStationType__DLS_x0020to_x0020AZI_x0020and_x0020MD = 14,
	ns1__TrajStationType__DLS_x0020to_x0020AZI_TVD = 15,
	ns1__TrajStationType__DLS_x0020to_x0020INCL = 16,
	ns1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020AZI = 17,
	ns1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020MD = 18,
	ns1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020TVD = 19,
	ns1__TrajStationType__DLS_x0020to_x0020NS = 20,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020AZI = 21,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020delta_MD = 22,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020INCL = 23,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020INCL_AZI = 24,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020MD = 25,
	ns1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020TVD = 26,
	ns1__TrajStationType__extrapolated = 27,
	ns1__TrajStationType__formation_x0020MD = 28,
	ns1__TrajStationType__formation_x0020TVD = 29,
	ns1__TrajStationType__hold_x0020to_x0020delta_MD = 30,
	ns1__TrajStationType__hold_x0020to_x0020MD = 31,
	ns1__TrajStationType__hold_x0020to_x0020TVD = 32,
	ns1__TrajStationType__INCL_x0020AZI_x0020and_x0020TVD = 33,
	ns1__TrajStationType__interpolated = 34,
	ns1__TrajStationType__marker_x0020MD = 35,
	ns1__TrajStationType__marker_x0020TVD = 36,
	ns1__TrajStationType__MD_x0020and_x0020INCL = 37,
	ns1__TrajStationType__MD_x0020INCL_x0020and_x0020AZI = 38,
	ns1__TrajStationType__N_x0020E_x0020and_x0020TVD = 39,
	ns1__TrajStationType__NS_x0020EW_x0020and_x0020TVD = 40,
	ns1__TrajStationType__target_x0020center = 41,
	ns1__TrajStationType__target_x0020offset = 42,
	ns1__TrajStationType__tie_x0020in_x0020point = 43,
	ns1__TrajStationType__turnrate_x0020to_x0020AZI = 44,
	ns1__TrajStationType__turnrate_x0020to_x0020delta_MD = 45,
	ns1__TrajStationType__turnrate_x0020to_x0020MD = 46,
	ns1__TrajStationType__turnrate_x0020to_x0020TVD = 47,
	ns1__TrajStationType__unknown = 48
};
#endif

/* testh.h:16908 */
#ifndef SOAP_TYPE_ns1__TrajStnCalcAlgorithm
#define SOAP_TYPE_ns1__TrajStnCalcAlgorithm (579)
/* ns1:TrajStnCalcAlgorithm */
enum ns1__TrajStnCalcAlgorithm {
	ns1__TrajStnCalcAlgorithm__average_x0020angle = 0,
	ns1__TrajStnCalcAlgorithm__balanced_x0020tangential = 1,
	ns1__TrajStnCalcAlgorithm__constant_x0020tool_x0020face = 2,
	ns1__TrajStnCalcAlgorithm__custom = 3,
	ns1__TrajStnCalcAlgorithm__inertial = 4,
	ns1__TrajStnCalcAlgorithm__minimum_x0020curvature = 5,
	ns1__TrajStnCalcAlgorithm__radius_x0020of_x0020curvature = 6,
	ns1__TrajStnCalcAlgorithm__tangential = 7
};
#endif

/* testh.h:16927 */
#ifndef SOAP_TYPE_ns1__TypeSurveyTool
#define SOAP_TYPE_ns1__TypeSurveyTool (580)
/* ns1:TypeSurveyTool */
enum ns1__TypeSurveyTool {
	ns1__TypeSurveyTool__gyroscopic_x0020inertial = 0,
	ns1__TypeSurveyTool__gyroscopic_x0020MWD = 1,
	ns1__TypeSurveyTool__gyroscopic_x0020north_x0020seeking = 2,
	ns1__TypeSurveyTool__magnetic_x0020multiple_shot = 3,
	ns1__TypeSurveyTool__magnetic_x0020MWD = 4,
	ns1__TypeSurveyTool__magnetic_x0020single_shot = 5
};
#endif

/* testh.h:16940 */
#ifndef SOAP_TYPE_ns1__TargetCategory
#define SOAP_TYPE_ns1__TargetCategory (581)
/* ns1:TargetCategory */
enum ns1__TargetCategory {
	ns1__TargetCategory__geological = 0,
	ns1__TargetCategory__well_x0020control = 1
};
#endif

/* testh.h:16957 */
#ifndef SOAP_TYPE_ns1__TargetScope
#define SOAP_TYPE_ns1__TargetScope (582)
/* ns1:TargetScope */
enum ns1__TargetScope {
	ns1__TargetScope__3D_x0020volume = 0,
	ns1__TargetScope__ellipsoid = 1,
	ns1__TargetScope__elliptical = 2,
	ns1__TargetScope__hardLine = 3,
	ns1__TargetScope__irregular = 4,
	ns1__TargetScope__lease_x0020line = 5,
	ns1__TargetScope__line = 6,
	ns1__TargetScope__plane = 7,
	ns1__TargetScope__point = 8,
	ns1__TargetScope__rectangular = 9
};
#endif

/* testh.h:17015 */
#ifndef SOAP_TYPE_ns1__TargetSectionScope
#define SOAP_TYPE_ns1__TargetSectionScope (583)
/* ns1:TargetSectionScope */
enum ns1__TargetSectionScope {
	ns1__TargetSectionScope__arc = 0,
	ns1__TargetSectionScope__line = 1
};
#endif

/* testh.h:17032 */
#ifndef SOAP_TYPE_ns1__AccelerometerAxisCombination
#define SOAP_TYPE_ns1__AccelerometerAxisCombination (584)
/* ns1:AccelerometerAxisCombination */
enum ns1__AccelerometerAxisCombination {
	ns1__AccelerometerAxisCombination__xy = 0,
	ns1__AccelerometerAxisCombination__xyz = 1
};
#endif

/* testh.h:17041 */
#ifndef SOAP_TYPE_ns1__AuthorizationStatus
#define SOAP_TYPE_ns1__AuthorizationStatus (585)
/* ns1:AuthorizationStatus */
enum ns1__AuthorizationStatus {
	ns1__AuthorizationStatus__agreed = 0,
	ns1__AuthorizationStatus__provisional = 1,
	ns1__AuthorizationStatus__obsolete = 2
};
#endif

/* testh.h:17051 */
#ifndef SOAP_TYPE_ns1__CorrectionConsidered
#define SOAP_TYPE_ns1__CorrectionConsidered (586)
/* ns1:CorrectionConsidered */
enum ns1__CorrectionConsidered {
	ns1__CorrectionConsidered__depth = 0,
	ns1__CorrectionConsidered__dual_x0020inclinometer = 1,
	ns1__CorrectionConsidered__sag = 2,
	ns1__CorrectionConsidered__cosag = 3,
	ns1__CorrectionConsidered__axial_x0020magnetic_x0020interference = 4,
	ns1__CorrectionConsidered__drill_x0020string_x0020magnetic_x0020interference = 5,
	ns1__CorrectionConsidered__international_x0020geomagnetic_x0020reference_x0020field = 6,
	ns1__CorrectionConsidered__high_x0020resolution_x0020geomagnetic_x0020model = 7,
	ns1__CorrectionConsidered__in_x0020field_x0020referencing_x00201 = 8,
	ns1__CorrectionConsidered__in_x0020field_x0020referencing_x00202 = 9,
	ns1__CorrectionConsidered__in_x0020hole_x0020referencing = 10,
	ns1__CorrectionConsidered__single_x0020station_x0020analysis = 11,
	ns1__CorrectionConsidered__multi_x0020station_x0020analysis = 12
};
#endif

/* testh.h:17071 */
#ifndef SOAP_TYPE_ns1__ErrorKind
#define SOAP_TYPE_ns1__ErrorKind (587)
/* ns1:ErrorKind */
enum ns1__ErrorKind {
	ns1__ErrorKind__alignment = 0,
	ns1__ErrorKind__azimuth_x0020reference = 1,
	ns1__ErrorKind__depth = 2,
	ns1__ErrorKind__magnetic = 3,
	ns1__ErrorKind__reading = 4,
	ns1__ErrorKind__sensor = 5
};
#endif

/* testh.h:17084 */
#ifndef SOAP_TYPE_ns1__ErrorPropagationMode
#define SOAP_TYPE_ns1__ErrorPropagationMode (588)
/* ns1:ErrorPropagationMode */
enum ns1__ErrorPropagationMode {
	ns1__ErrorPropagationMode__B = 'B',
	ns1__ErrorPropagationMode__G = 'G',
	ns1__ErrorPropagationMode__R = 'R',
	ns1__ErrorPropagationMode__S = 'S',
	ns1__ErrorPropagationMode__W = 'W'
};
#endif

/* testh.h:17096 */
#ifndef SOAP_TYPE_ns1__GyroAxisCombination
#define SOAP_TYPE_ns1__GyroAxisCombination (589)
/* ns1:GyroAxisCombination */
enum ns1__GyroAxisCombination {
	ns1__GyroAxisCombination__z = 'z',
	ns1__GyroAxisCombination__xy = 123,
	ns1__GyroAxisCombination__xyz = 124
};
#endif

/* testh.h:17106 */
#ifndef SOAP_TYPE_ns1__GyroMode
#define SOAP_TYPE_ns1__GyroMode (590)
/* ns1:GyroMode */
enum ns1__GyroMode {
	ns1__GyroMode__continuous = 0,
	ns1__GyroMode__stationary = 1
};
#endif

/* testh.h:17119 */
#ifndef SOAP_TYPE_ns1__MisalignmentMode
#define SOAP_TYPE_ns1__MisalignmentMode (591)
/* ns1:MisalignmentMode */
enum ns1__MisalignmentMode {
	ns1__MisalignmentMode__1 = 1,
	ns1__MisalignmentMode__2 = 2,
	ns1__MisalignmentMode__3 = 3
};
#endif

/* testh.h:17129 */
#ifndef SOAP_TYPE_ns1__OperatingCondition
#define SOAP_TYPE_ns1__OperatingCondition (592)
/* ns1:OperatingCondition */
enum ns1__OperatingCondition {
	ns1__OperatingCondition__bent_x0020sub = 0,
	ns1__OperatingCondition__cable_x0020conveyed = 1,
	ns1__OperatingCondition__casing = 2,
	ns1__OperatingCondition__casing_x0020collar_x0020locator = 3,
	ns1__OperatingCondition__centrollers = 4,
	ns1__OperatingCondition__drill_x0020pipe = 5,
	ns1__OperatingCondition__dropped = 6,
	ns1__OperatingCondition__fast_x0020logging_x0020speed = 7,
	ns1__OperatingCondition__floating = 8,
	ns1__OperatingCondition__large_x0020inside_x0020diameter = 9,
	ns1__OperatingCondition__single_x0020shot = 10,
	ns1__OperatingCondition__slow_x0020logging_x0020speed = 11
};
#endif

/* testh.h:17148 */
#ifndef SOAP_TYPE_ns1__ToolKind
#define SOAP_TYPE_ns1__ToolKind (593)
/* ns1:ToolKind */
enum ns1__ToolKind {
	ns1__ToolKind__gyroscopic = 0,
	ns1__ToolKind__magnetic = 1,
	ns1__ToolKind__utility = 2
};
#endif

/* testh.h:17158 */
#ifndef SOAP_TYPE_ns1__ToolSubKind
#define SOAP_TYPE_ns1__ToolSubKind (594)
/* ns1:ToolSubKind */
enum ns1__ToolSubKind {
	ns1__ToolSubKind__blind = 0,
	ns1__ToolSubKind__blind_x0020plus_x0020trend = 1,
	ns1__ToolSubKind__camera_x0020based_x0020film_x0020gyro_x0020multi_x0020shot = 2,
	ns1__ToolSubKind__camera_x0020based_x0020film_x0020gyro_x0020single_x0020shot = 3,
	ns1__ToolSubKind__camera_x0020based_x0020film_x0020magnetic_x0020multi_x0020shot = 4,
	ns1__ToolSubKind__camera_x0020based_x0020film_x0020magnetic_x0020single_x0020shot = 5,
	ns1__ToolSubKind__dipmeter = 6,
	ns1__ToolSubKind__electro_x0020magnetic_x0020survey = 7,
	ns1__ToolSubKind__ferranti_x0020inertial_x0020navigation_x0020system = 8,
	ns1__ToolSubKind__gyro_x0020suspicious = 9,
	ns1__ToolSubKind__gyro_x0020while_x0020drilling = 10,
	ns1__ToolSubKind__inclinometer_x0020actual = 11,
	ns1__ToolSubKind__inclinometer_x0020planned = 12,
	ns1__ToolSubKind__inclinometer_x0020plus_x0020trend = 13,
	ns1__ToolSubKind__magnetic_x0020while_x0020drilling = 14,
	ns1__ToolSubKind__north_x0020seeking_x0020gyro = 15,
	ns1__ToolSubKind__ring_x0020laser_x0020inertial_x0020guidance_x0020surveyor = 16,
	ns1__ToolSubKind__surface_x0020readout_x0020gyro_x0020multi_x0020shot = 17,
	ns1__ToolSubKind__surface_x0020readout_x0020gyro_x0020single_x0020shot = 18,
	ns1__ToolSubKind__zero_x0020error = 19,
	ns1__ToolSubKind__unknown = 20
};
#endif

/* testh.h:17190 */
#ifndef SOAP_TYPE_ns1__PIDXCommodityCode
#define SOAP_TYPE_ns1__PIDXCommodityCode (595)
/* ns1:PIDXCommodityCode */
enum ns1__PIDXCommodityCode {
	ns1__PIDXCommodityCode__71131001 = 71131001LL,
	ns1__PIDXCommodityCode__71131002 = 71131002LL,
	ns1__PIDXCommodityCode__71131003 = 71131003LL,
	ns1__PIDXCommodityCode__71131004 = 71131004LL,
	ns1__PIDXCommodityCode__71131005 = 71131005LL,
	ns1__PIDXCommodityCode__71131006 = 71131006LL,
	ns1__PIDXCommodityCode__71131007 = 71131007LL,
	ns1__PIDXCommodityCode__71131008 = 71131008LL,
	ns1__PIDXCommodityCode__71131009 = 71131009LL,
	ns1__PIDXCommodityCode__71131010 = 71131010LL,
	ns1__PIDXCommodityCode__71131011 = 71131011LL,
	ns1__PIDXCommodityCode__71131012 = 71131012LL,
	ns1__PIDXCommodityCode__71131013 = 71131013LL,
	ns1__PIDXCommodityCode__71131014 = 71131014LL,
	ns1__PIDXCommodityCode__71131015 = 71131015LL,
	ns1__PIDXCommodityCode__71131016 = 71131016LL,
	ns1__PIDXCommodityCode__71131018 = 71131018LL,
	ns1__PIDXCommodityCode__71131019 = 71131019LL
};
#endif

/* testh.h:17219 */
#ifndef SOAP_TYPE_ns1__ProppantAgentKind
#define SOAP_TYPE_ns1__ProppantAgentKind (596)
/* ns1:ProppantAgentKind */
enum ns1__ProppantAgentKind {
	ns1__ProppantAgentKind__ceramic = 0,
	ns1__ProppantAgentKind__resin_x0020coated_x0020ceramic = 1,
	ns1__ProppantAgentKind__resin_x0020coated_x0020sand = 2,
	ns1__ProppantAgentKind__sand = 3
};
#endif

/* testh.h:17234 */
#ifndef SOAP_TYPE_ns1__StimAdditiveKind
#define SOAP_TYPE_ns1__StimAdditiveKind (597)
/* ns1:StimAdditiveKind */
enum ns1__StimAdditiveKind {
	ns1__StimAdditiveKind__acid = 0,
	ns1__StimAdditiveKind__activator = 1,
	ns1__StimAdditiveKind__biocide = 2,
	ns1__StimAdditiveKind__breaker = 3,
	ns1__StimAdditiveKind__breaker_x0020aid = 4,
	ns1__StimAdditiveKind__buffer = 5,
	ns1__StimAdditiveKind__clay_x0020stabilizer = 6,
	ns1__StimAdditiveKind__corrosion_x0020inhibitor = 7,
	ns1__StimAdditiveKind__corrosion_x0020inhibitor_x0020aid = 8,
	ns1__StimAdditiveKind__crosslinker = 9,
	ns1__StimAdditiveKind__delaying_x0020agent = 10,
	ns1__StimAdditiveKind__fibers = 11,
	ns1__StimAdditiveKind__fluid_x0020loss_x0020additive = 12,
	ns1__StimAdditiveKind__foamer = 13,
	ns1__StimAdditiveKind__friction_x0020reducer = 14,
	ns1__StimAdditiveKind__gelling_x0020agent = 15,
	ns1__StimAdditiveKind__iron_x0020control_x0020additive = 16,
	ns1__StimAdditiveKind__mutual_x0020solvent = 17,
	ns1__StimAdditiveKind__salt = 18,
	ns1__StimAdditiveKind__stabilizer = 19,
	ns1__StimAdditiveKind__surfactant = 20
};
#endif

/* testh.h:17266 */
#ifndef SOAP_TYPE_ns1__StimFetTestAnalysisMethod
#define SOAP_TYPE_ns1__StimFetTestAnalysisMethod (598)
/* ns1:StimFetTestAnalysisMethod */
enum ns1__StimFetTestAnalysisMethod {
	ns1__StimFetTestAnalysisMethod__average = 0,
	ns1__StimFetTestAnalysisMethod__delta_x0020pressure_x0020over_x0020g_time = 1,
	ns1__StimFetTestAnalysisMethod__delta_x0020pressure_x0020over_x0020linear_x0020time = 2,
	ns1__StimFetTestAnalysisMethod__delta_x0020pressure_x0020over_x0020radial_x0020time = 3,
	ns1__StimFetTestAnalysisMethod__gdk_x00202_d = 4,
	ns1__StimFetTestAnalysisMethod__horner = 5,
	ns1__StimFetTestAnalysisMethod__linear = 6,
	ns1__StimFetTestAnalysisMethod__log_log = 7,
	ns1__StimFetTestAnalysisMethod__nolte = 8,
	ns1__StimFetTestAnalysisMethod__other = 9,
	ns1__StimFetTestAnalysisMethod__pdl_x0020coefficient = 10,
	ns1__StimFetTestAnalysisMethod__perkins_x0020and_x0020kern_x00202_d = 11,
	ns1__StimFetTestAnalysisMethod__radial_x00202_d = 12,
	ns1__StimFetTestAnalysisMethod__square_x0020root = 13,
	ns1__StimFetTestAnalysisMethod__third_party_x0020software = 14
};
#endif

/* testh.h:17292 */
#ifndef SOAP_TYPE_ns1__StimFlowPathType
#define SOAP_TYPE_ns1__StimFlowPathType (599)
/* ns1:StimFlowPathType */
enum ns1__StimFlowPathType {
	ns1__StimFlowPathType__annulus = 0,
	ns1__StimFlowPathType__casing = 1,
	ns1__StimFlowPathType__drill_x0020pipe = 2,
	ns1__StimFlowPathType__open_x0020hole = 3,
	ns1__StimFlowPathType__tubing = 4,
	ns1__StimFlowPathType__tubing_x0020and_x0020annulus = 5
};
#endif

/* testh.h:17333 */
#ifndef SOAP_TYPE_ns1__StimFluidKind
#define SOAP_TYPE_ns1__StimFluidKind (600)
/* ns1:StimFluidKind */
enum ns1__StimFluidKind {
	ns1__StimFluidKind__acid_based = 0,
	ns1__StimFluidKind__gas = 1,
	ns1__StimFluidKind__oil_based = 2,
	ns1__StimFluidKind__water_based = 3
};
#endif

/* testh.h:17360 */
#ifndef SOAP_TYPE_ns1__StimFluidSubtype
#define SOAP_TYPE_ns1__StimFluidSubtype (601)
/* ns1:StimFluidSubtype */
enum ns1__StimFluidSubtype {
	ns1__StimFluidSubtype__acid = 0,
	ns1__StimFluidSubtype__base = 1,
	ns1__StimFluidSubtype__carbon_x0020dioxide = 2,
	ns1__StimFluidSubtype__carbon_x0020dioxide_x0020and_x0020nitrogen = 3,
	ns1__StimFluidSubtype__carbon_x0020dioxide_x0020and_x0020water = 4,
	ns1__StimFluidSubtype__condensate = 5,
	ns1__StimFluidSubtype__cross_linked_x0020gel = 6,
	ns1__StimFluidSubtype__crude_x0020oil = 7,
	ns1__StimFluidSubtype__diesel = 8,
	ns1__StimFluidSubtype__foam = 9,
	ns1__StimFluidSubtype__fracturing_x0020oil = 10,
	ns1__StimFluidSubtype__fresh_x0020water = 11,
	ns1__StimFluidSubtype__gelled_x0020acid = 12,
	ns1__StimFluidSubtype__gelled_x0020condensate = 13,
	ns1__StimFluidSubtype__gelled_x0020crude = 14,
	ns1__StimFluidSubtype__gelled_x0020diesel = 15,
	ns1__StimFluidSubtype__gelled_x0020oil = 16,
	ns1__StimFluidSubtype__gelled_x0020salt_x0020water = 17,
	ns1__StimFluidSubtype__hot_x0020condensate = 18,
	ns1__StimFluidSubtype__hot_x0020fresh_x0020water = 19,
	ns1__StimFluidSubtype__hot_x0020oil = 20,
	ns1__StimFluidSubtype__hot_x0020salt_x0020water = 21,
	ns1__StimFluidSubtype__hybrid = 22,
	ns1__StimFluidSubtype__linear_x0020gel = 23,
	ns1__StimFluidSubtype__liquefied_x0020petroleum_x0020gas = 24,
	ns1__StimFluidSubtype__nitrogen = 25,
	ns1__StimFluidSubtype__oil = 26,
	ns1__StimFluidSubtype__other = 27,
	ns1__StimFluidSubtype__produced_x0020water = 28,
	ns1__StimFluidSubtype__salt_x0020water = 29,
	ns1__StimFluidSubtype__slick_x0020water = 30
};
#endif

/* testh.h:17402 */
#ifndef SOAP_TYPE_ns1__StimJobDiversionMethod
#define SOAP_TYPE_ns1__StimJobDiversionMethod (602)
/* ns1:StimJobDiversionMethod */
enum ns1__StimJobDiversionMethod {
	ns1__StimJobDiversionMethod__ball_x0020sealer = 0,
	ns1__StimJobDiversionMethod__bands = 1,
	ns1__StimJobDiversionMethod__chemical = 2,
	ns1__StimJobDiversionMethod__fibers = 3,
	ns1__StimJobDiversionMethod__other = 4,
	ns1__StimJobDiversionMethod__packer = 5,
	ns1__StimJobDiversionMethod__solid_x0020particle = 6,
	ns1__StimJobDiversionMethod__straddle_x0020packer = 7
};
#endif

/* testh.h:17421 */
#ifndef SOAP_TYPE_ns1__StimMaterialKind
#define SOAP_TYPE_ns1__StimMaterialKind (603)
/* ns1:StimMaterialKind */
enum ns1__StimMaterialKind {
	ns1__StimMaterialKind__additive = 0,
	ns1__StimMaterialKind__brine = 1,
	ns1__StimMaterialKind__CO2 = 2,
	ns1__StimMaterialKind__gel = 3,
	ns1__StimMaterialKind__N2 = 4,
	ns1__StimMaterialKind__other = 5,
	ns1__StimMaterialKind__proppant_x0020agent = 6,
	ns1__StimMaterialKind__water = 7
};
#endif

/* testh.h:17440 */
#ifndef SOAP_TYPE_ns1__PumpOpType
#define SOAP_TYPE_ns1__PumpOpType (604)
/* ns1:PumpOpType */
enum ns1__PumpOpType {
	ns1__PumpOpType__drilling = 0,
	ns1__PumpOpType__reaming = 1,
	ns1__PumpOpType__circulating = 2,
	ns1__PumpOpType__slow_x0020pump = 3
};
#endif

/* testh.h:17455 */
#ifndef SOAP_TYPE_ns1__ScrType
#define SOAP_TYPE_ns1__ScrType (605)
/* ns1:ScrType */
enum ns1__ScrType {
	ns1__ScrType__string_x0020annulus = 0,
	ns1__ScrType__string_x0020kill_x0020line = 1,
	ns1__ScrType__string_x0020choke_x0020line = 2,
	ns1__ScrType__unknown = 3
};
#endif

/* testh.h:17474 */
#ifndef SOAP_TYPE_ns1__SupportCraftType
#define SOAP_TYPE_ns1__SupportCraftType (606)
/* ns1:SupportCraftType */
enum ns1__SupportCraftType {
	ns1__SupportCraftType__barge = 0,
	ns1__SupportCraftType__standby_x0020boat = 1,
	ns1__SupportCraftType__helicopter = 2,
	ns1__SupportCraftType__supply_x0020boat = 3,
	ns1__SupportCraftType__truck = 4,
	ns1__SupportCraftType__crew_x0020vehicle = 5,
	ns1__SupportCraftType__tug_x0020boat = 6
};
#endif

/* testh.h:17492 */
#ifndef SOAP_TYPE_ns1__PPFGDataDerivation
#define SOAP_TYPE_ns1__PPFGDataDerivation (607)
/* ns1:PPFGDataDerivation */
enum ns1__PPFGDataDerivation {
	ns1__PPFGDataDerivation__basin_x0020model = 0,
	ns1__PPFGDataDerivation__estimated = 1,
	ns1__PPFGDataDerivation__inferred = 2,
	ns1__PPFGDataDerivation__measured = 3,
	ns1__PPFGDataDerivation__post_drill_x0020interpretation = 4,
	ns1__PPFGDataDerivation__pre_drill_x0020interpretation = 5,
	ns1__PPFGDataDerivation__real_x0020time = 6,
	ns1__PPFGDataDerivation__transformed = 7
};
#endif

/* testh.h:17543 */
#ifndef SOAP_TYPE_ns1__PPFGDataProcessing
#define SOAP_TYPE_ns1__PPFGDataProcessing (608)
/* ns1:PPFGDataProcessing */
enum ns1__PPFGDataProcessing {
	ns1__PPFGDataProcessing__calibrated = 0,
	ns1__PPFGDataProcessing__corrected = 1,
	ns1__PPFGDataProcessing__filtered = 2,
	ns1__PPFGDataProcessing__interpolated = 3,
	ns1__PPFGDataProcessing__interpreted = 4,
	ns1__PPFGDataProcessing__normalized = 5,
	ns1__PPFGDataProcessing__smoothed = 6,
	ns1__PPFGDataProcessing__transformed = 7
};
#endif

/* testh.h:17562 */
#ifndef SOAP_TYPE_ns1__PPFGFamily
#define SOAP_TYPE_ns1__PPFGFamily (609)
/* ns1:PPFGFamily */
enum ns1__PPFGFamily {
	ns1__PPFGFamily__achievable_x0020fracture_x0020gradient = 0,
	ns1__PPFGFamily__breakout_x0020width = 1,
	ns1__PPFGFamily__corrected_x0020temperature = 2,
	ns1__PPFGFamily__effective_x0020stress = 3,
	ns1__PPFGFamily__effective_x0020stress_x0020gradient = 4,
	ns1__PPFGFamily__formation_x0020temperature = 5,
	ns1__PPFGFamily__fracture_x0020breakdown_x0020gradient = 6,
	ns1__PPFGFamily__fracture_x0020breakdown_x0020pressure = 7,
	ns1__PPFGFamily__fracture_x0020closure_x0020gradient = 8,
	ns1__PPFGFamily__fracture_x0020closure_x0020pressure = 9,
	ns1__PPFGFamily__fracture_x0020gradient = 10,
	ns1__PPFGFamily__fracture_x0020initiation_x0020pressure = 11,
	ns1__PPFGFamily__fracture_x0020initiation_x0020pressure_x0020gradient = 12,
	ns1__PPFGFamily__fracture_x0020pressure = 13,
	ns1__PPFGFamily__fracture_x0020propagation_x0020pressure = 14,
	ns1__PPFGFamily__fracture_x0020propagation_x0020pressure_x0020gradient = 15,
	ns1__PPFGFamily__friction_x0020angle_x0020_x0028failure_x0020criteria_x0029 = 16,
	ns1__PPFGFamily__intermediate_x0020principle_x0020stress = 17,
	ns1__PPFGFamily__intermediate_x0020principle_x0020stress_x0020gradient = 18,
	ns1__PPFGFamily__least_x0020principle_x0020stress = 19,
	ns1__PPFGFamily__least_x0020principle_x0020stress_x0020gradient = 20,
	ns1__PPFGFamily__margin = 21,
	ns1__PPFGFamily__max_x0020horizontal_x0020stress = 22,
	ns1__PPFGFamily__max_x0020horizontal_x0020stress_x0020gradient = 23,
	ns1__PPFGFamily__maximum_x0020horizontal_x0020stress_x0020azimuth = 24,
	ns1__PPFGFamily__maximum_x0020principle_x0020stress = 25,
	ns1__PPFGFamily__maximum_x0020principle_x0020stress_x0020gradient = 26,
	ns1__PPFGFamily__mean_x0020effective_x0020stress = 27,
	ns1__PPFGFamily__mean_x0020effective_x0020stress_x0020gradient = 28,
	ns1__PPFGFamily__mean_x0020stress = 29,
	ns1__PPFGFamily__mean_x0020stress_x0020gradient = 30,
	ns1__PPFGFamily__measured_x0020depth = 31,
	ns1__PPFGFamily__measured_x0020formation_x0020pressure = 32,
	ns1__PPFGFamily__measured_x0020formation_x0020pressure_x0020gradient = 33,
	ns1__PPFGFamily__minimum_x0020horizontal_x0020stress = 34,
	ns1__PPFGFamily__minimum_x0020horizontal_x0020stress_x0020gradient = 35,
	ns1__PPFGFamily__modeled_x0020fracture_x0020gradient = 36,
	ns1__PPFGFamily__mpd_x0020back_x0020pressure = 37,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline = 38,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020corrected_x0020drilling_x0020exponent = 39,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020density = 40,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020mechanical_x0020specific_x0020energy = 41,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020resistivity = 42,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020sonic = 43,
	ns1__PPFGFamily__normal_x0020compaction_x0020trendline_x0020__x0020total_x0020porosity = 44,
	ns1__PPFGFamily__normal_x0020effective_x0020stress = 45,
	ns1__PPFGFamily__normal_x0020effective_x0020stress_x0020gradient = 46,
	ns1__PPFGFamily__normal_x0020hydrostatic_x0020pressure = 47,
	ns1__PPFGFamily__normal_x0020hydrostatic_x0020pressure_x0020gradient = 48,
	ns1__PPFGFamily__overburden_x0020gradient = 49,
	ns1__PPFGFamily__overburden_x0020pressure = 50,
	ns1__PPFGFamily__overpressure = 51,
	ns1__PPFGFamily__overpressure_x0020gradient = 52,
	ns1__PPFGFamily__pore_x0020_x0020pressure = 53,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020connection_x0020gas = 54,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020density = 55,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020drill_x0020gas = 56,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020drilling_x0020parameter = 57,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020log = 58,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020resistivity = 59,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020seismic_x0020velocity = 60,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020sonic = 61,
	ns1__PPFGFamily__pore_x0020pressure_x0020estimated_x0020from_x0020total_x0020porosity = 62,
	ns1__PPFGFamily__pore_x0020pressure_x0020from_x0020basin_x0020model = 63,
	ns1__PPFGFamily__pore_x0020pressure_x0020from_x0020corrected_x0020drilling_x0020exponent = 64,
	ns1__PPFGFamily__pore_x0020pressure_x0020from_x0020mechanical_x0020specific_x0020energy = 'A',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient = 'B',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020connection_x0020gas = 'C',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020density = 'D',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020drill_x0020gas = 'E',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020drilling_x0020parameter = 'F',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020log = 'G',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020resistivity = 'H',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020seismic_x0020velocity = 'I',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020sonic = 'J',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020estimated_x0020from_x0020total_x0020porosity = 'K',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020from_x0020basin_x0020model = 'L',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020from_x0020corrected_x0020drilling_x0020exponent = 'M',
	ns1__PPFGFamily__pore_x0020pressure_x0020gradient_x0020from_x0020mechanical_x0020specific_x0020energy = 'N',
	ns1__PPFGFamily__pore_frac_x0020window = 'O',
	ns1__PPFGFamily__safe_x0020drilling_x0020margin = 'P',
	ns1__PPFGFamily__sedimentation_x0020rate = 'Q',
	ns1__PPFGFamily__shear_x0020failure_x0020pressure_x0020_x0028collapse_x0020pressure_x0029 = 'R',
	ns1__PPFGFamily__shear_x0020failure_x0020pressure_x0020gradient_x0020_x0028collapse_x0020pressure_x0020gradient_x0029 = 'S',
	ns1__PPFGFamily__strengthened_x0020fracture_x0020gradient = 'T',
	ns1__PPFGFamily__structurally_x0020adjusted_x0020pore_x0020pressure = 'U',
	ns1__PPFGFamily__structurally_x0020adjusted_x0020pore_x0020pressure_x0020gradient = 'V',
	ns1__PPFGFamily__subnormal_x0020pressure = 'W',
	ns1__PPFGFamily__temperature_x0020annular = 'X',
	ns1__PPFGFamily__temperature_x0020bha = 'Y',
	ns1__PPFGFamily__true_x0020vertical_x0020depth = 'Z',
	ns1__PPFGFamily__two_x0020way_x0020time = 91,
	ns1__PPFGFamily__unconfined_x0020compressive_x0020strength = 92,
	ns1__PPFGFamily__vertical_x0020effective_x0020stress = 93,
	ns1__PPFGFamily__vertical_x0020effective_x0020stress_x0020gradient = 94,
	ns1__PPFGFamily__vertical_x0020stress = 95,
	ns1__PPFGFamily__vertical_x0020stress_x0020gradient = 96
};
#endif

/* testh.h:17670 */
#ifndef SOAP_TYPE_ns1__PPFGFamilyMnemonic
#define SOAP_TYPE_ns1__PPFGFamilyMnemonic (610)
/* ns1:PPFGFamilyMnemonic */
enum ns1__PPFGFamilyMnemonic {
	ns1__PPFGFamilyMnemonic__BOAngle = 0,
	ns1__PPFGFamilyMnemonic__ES = 1,
	ns1__PPFGFamilyMnemonic__ESG = 2,
	ns1__PPFGFamilyMnemonic__ESN = 3,
	ns1__PPFGFamilyMnemonic__FA = 4,
	ns1__PPFGFamilyMnemonic__FBP = 5,
	ns1__PPFGFamilyMnemonic__FBPG = 6,
	ns1__PPFGFamilyMnemonic__FCP = 7,
	ns1__PPFGFamilyMnemonic__FCPG = 8,
	ns1__PPFGFamilyMnemonic__FG = 9,
	ns1__PPFGFamilyMnemonic__FG_x0020ACHIV = 10,
	ns1__PPFGFamilyMnemonic__FG_x0020BM = 11,
	ns1__PPFGFamilyMnemonic__FG_x0020STREN = 12,
	ns1__PPFGFamilyMnemonic__FIP = 13,
	ns1__PPFGFamilyMnemonic__FIPG = 14,
	ns1__PPFGFamilyMnemonic__FP = 15,
	ns1__PPFGFamilyMnemonic__FPP = 16,
	ns1__PPFGFamilyMnemonic__FPPG = 17,
	ns1__PPFGFamilyMnemonic__FTEMP = 18,
	ns1__PPFGFamilyMnemonic__IPS = 19,
	ns1__PPFGFamilyMnemonic__IPSG = 20,
	ns1__PPFGFamilyMnemonic__LPS = 21,
	ns1__PPFGFamilyMnemonic__LPSG = 22,
	ns1__PPFGFamilyMnemonic__MD = 23,
	ns1__PPFGFamilyMnemonic__MES = 24,
	ns1__PPFGFamilyMnemonic__MESG = 25,
	ns1__PPFGFamilyMnemonic__MPD_x0020BP = 26,
	ns1__PPFGFamilyMnemonic__MPS = 27,
	ns1__PPFGFamilyMnemonic__MPSG = 28,
	ns1__PPFGFamilyMnemonic__MRGN = 29,
	ns1__PPFGFamilyMnemonic__MS = 30,
	ns1__PPFGFamilyMnemonic__MSG = 31,
	ns1__PPFGFamilyMnemonic__NCT = 32,
	ns1__PPFGFamilyMnemonic__NCT_x0020DT = 33,
	ns1__PPFGFamilyMnemonic__NCT_x0020DXC = 34,
	ns1__PPFGFamilyMnemonic__NCT_x0020MSE = 35,
	ns1__PPFGFamilyMnemonic__NCT_x0020PHIT = 36,
	ns1__PPFGFamilyMnemonic__NCT_x0020RES = 37,
	ns1__PPFGFamilyMnemonic__NCT_x0020RHOB = 38,
	ns1__PPFGFamilyMnemonic__NESG = 39,
	ns1__PPFGFamilyMnemonic__OB = 40,
	ns1__PPFGFamilyMnemonic__OBG = 41,
	ns1__PPFGFamilyMnemonic__OP = 42,
	ns1__PPFGFamilyMnemonic__OPG = 43,
	ns1__PPFGFamilyMnemonic__PFW = 44,
	ns1__PPFGFamilyMnemonic__PNORM = 45,
	ns1__PPFGFamilyMnemonic__PNORMG = 46,
	ns1__PPFGFamilyMnemonic__PP = 47,
	ns1__PPFGFamilyMnemonic__PP_x0020BM = 48,
	ns1__PPFGFamilyMnemonic__PP_x0020CG = 49,
	ns1__PPFGFamilyMnemonic__PP_x0020DG = 50,
	ns1__PPFGFamilyMnemonic__PP_x0020DP = 51,
	ns1__PPFGFamilyMnemonic__PP_x0020DT = 52,
	ns1__PPFGFamilyMnemonic__PP_x0020DXC = 53,
	ns1__PPFGFamilyMnemonic__PP_x0020LOG = 54,
	ns1__PPFGFamilyMnemonic__PP_x0020MEAS = 55,
	ns1__PPFGFamilyMnemonic__PP_x0020MSE = 56,
	ns1__PPFGFamilyMnemonic__PP_x0020PHIT = 57,
	ns1__PPFGFamilyMnemonic__PP_x0020RES = 58,
	ns1__PPFGFamilyMnemonic__PP_x0020RHOB = 59,
	ns1__PPFGFamilyMnemonic__PP_x0020VSEIS = 60,
	ns1__PPFGFamilyMnemonic__PP_x0020ZADJ = 61,
	ns1__PPFGFamilyMnemonic__PPG = 62,
	ns1__PPFGFamilyMnemonic__PPG_x0020BM = 63,
	ns1__PPFGFamilyMnemonic__PPG_x0020CG = 64,
	ns1__PPFGFamilyMnemonic__PPG_x0020DG = 'A',
	ns1__PPFGFamilyMnemonic__PPG_x0020DP = 'B',
	ns1__PPFGFamilyMnemonic__PPG_x0020DT = 'C',
	ns1__PPFGFamilyMnemonic__PPG_x0020DxC = 'D',
	ns1__PPFGFamilyMnemonic__PPG_x0020EST = 'E',
	ns1__PPFGFamilyMnemonic__PPG_x0020MEAS = 'F',
	ns1__PPFGFamilyMnemonic__PPG_x0020MSE = 'G',
	ns1__PPFGFamilyMnemonic__PPG_x0020PHIT = 'H',
	ns1__PPFGFamilyMnemonic__PPG_x0020RES = 'I',
	ns1__PPFGFamilyMnemonic__PPG_x0020RHOB = 'J',
	ns1__PPFGFamilyMnemonic__PPG_x0020VSEIS = 'K',
	ns1__PPFGFamilyMnemonic__PPG_x0020ZADJ = 'L',
	ns1__PPFGFamilyMnemonic__PSNORM = 'M',
	ns1__PPFGFamilyMnemonic__SDM = 'N',
	ns1__PPFGFamilyMnemonic__SEDRT = 'O',
	ns1__PPFGFamilyMnemonic__SFP = 'P',
	ns1__PPFGFamilyMnemonic__SFPG = 'Q',
	ns1__PPFGFamilyMnemonic__SHAZ = 'R',
	ns1__PPFGFamilyMnemonic__SHmax = 'S',
	ns1__PPFGFamilyMnemonic__SHmaxG = 'T',
	ns1__PPFGFamilyMnemonic__Shmin = 'U',
	ns1__PPFGFamilyMnemonic__ShminG = 'V',
	ns1__PPFGFamilyMnemonic__SV = 'W',
	ns1__PPFGFamilyMnemonic__SVG = 'X',
	ns1__PPFGFamilyMnemonic__TEMP_x0020A = 'Y',
	ns1__PPFGFamilyMnemonic__TEMP_x0020BHA = 'Z',
	ns1__PPFGFamilyMnemonic__TEMP_x0020C = 91,
	ns1__PPFGFamilyMnemonic__TVD = 92,
	ns1__PPFGFamilyMnemonic__TWT = 93,
	ns1__PPFGFamilyMnemonic__UCS = 94,
	ns1__PPFGFamilyMnemonic__VES = 95,
	ns1__PPFGFamilyMnemonic__VESG = 96
};
#endif

/* testh.h:17778 */
#ifndef SOAP_TYPE_ns1__PPFGMainFamily
#define SOAP_TYPE_ns1__PPFGMainFamily (611)
/* ns1:PPFGMainFamily */
enum ns1__PPFGMainFamily {
	ns1__PPFGMainFamily__compaction_x0020trendline = 0,
	ns1__PPFGMainFamily__effective_x0020stress = 1,
	ns1__PPFGMainFamily__effective_x0020stress_x0020gradient = 2,
	ns1__PPFGMainFamily__formation_x0020pressure = 3,
	ns1__PPFGMainFamily__formation_x0020pressure_x0020gradient = 4,
	ns1__PPFGMainFamily__fracture_x0020pressure = 5,
	ns1__PPFGMainFamily__fracture_x0020pressure_x0020gradient = 6,
	ns1__PPFGMainFamily__geomechnanics = 7,
	ns1__PPFGMainFamily__margin = 8,
	ns1__PPFGMainFamily__mpd = 9,
	ns1__PPFGMainFamily__overpressure = 10,
	ns1__PPFGMainFamily__overpressure_x0020gradient = 11,
	ns1__PPFGMainFamily__pore_x0020pressure = 12,
	ns1__PPFGMainFamily__pore_x0020pressure_x0020gradient = 13,
	ns1__PPFGMainFamily__reference = 14,
	ns1__PPFGMainFamily__sedimentation_x0020rate = 15,
	ns1__PPFGMainFamily__stress = 16,
	ns1__PPFGMainFamily__stress_x0020gradient = 17,
	ns1__PPFGMainFamily__temperature = 18,
	ns1__PPFGMainFamily__transform_x0020model_x0020parameter = 19,
	ns1__PPFGMainFamily__window = 20
};
#endif

/* testh.h:17810 */
#ifndef SOAP_TYPE_ns1__PPFGModeledLithology
#define SOAP_TYPE_ns1__PPFGModeledLithology (612)
/* ns1:PPFGModeledLithology */
enum ns1__PPFGModeledLithology {
	ns1__PPFGModeledLithology__carbonate = 0,
	ns1__PPFGModeledLithology__composite = 1,
	ns1__PPFGModeledLithology__igneous = 2,
	ns1__PPFGModeledLithology__salt = 3,
	ns1__PPFGModeledLithology__sand = 4,
	ns1__PPFGModeledLithology__shale = 5
};
#endif

/* testh.h:17827 */
#ifndef SOAP_TYPE_ns1__PPFGTectonicSetting
#define SOAP_TYPE_ns1__PPFGTectonicSetting (613)
/* ns1:PPFGTectonicSetting */
enum ns1__PPFGTectonicSetting {
	ns1__PPFGTectonicSetting__compressional = 0,
	ns1__PPFGTectonicSetting__extensional = 1,
	ns1__PPFGTectonicSetting__strike_x0020slip = 2,
	ns1__PPFGTectonicSetting__transpressional = 3,
	ns1__PPFGTectonicSetting__transtensional = 4
};
#endif

/* testh.h:17843 */
#ifndef SOAP_TYPE_ns1__PPFGTransformModelType
#define SOAP_TYPE_ns1__PPFGTransformModelType (614)
/* ns1:PPFGTransformModelType */
enum ns1__PPFGTransformModelType {
	ns1__PPFGTransformModelType__apparent_x0020poisson_x0027s_x0020ratio = 0,
	ns1__PPFGTransformModelType__bowers = 1,
	ns1__PPFGTransformModelType__diagenetic = 2,
	ns1__PPFGTransformModelType__eaton = 3,
	ns1__PPFGTransformModelType__eaton_daines = 4,
	ns1__PPFGTransformModelType__equivalent_x0020depth = 5,
	ns1__PPFGTransformModelType__k0 = 6,
	ns1__PPFGTransformModelType__stress_x0020path = 7
};
#endif

/* testh.h:17862 */
#ifndef SOAP_TYPE_ns1__PPFGUncertaintyClass
#define SOAP_TYPE_ns1__PPFGUncertaintyClass (615)
/* ns1:PPFGUncertaintyClass */
enum ns1__PPFGUncertaintyClass {
	ns1__PPFGUncertaintyClass__high = 0,
	ns1__PPFGUncertaintyClass__low = 1,
	ns1__PPFGUncertaintyClass__maximum = 2,
	ns1__PPFGUncertaintyClass__mean = 3,
	ns1__PPFGUncertaintyClass__mid = 4,
	ns1__PPFGUncertaintyClass__minimum = 5,
	ns1__PPFGUncertaintyClass__most_x0020likely = 6,
	ns1__PPFGUncertaintyClass__p10 = 7,
	ns1__PPFGUncertaintyClass__p50 = 8,
	ns1__PPFGUncertaintyClass__p90 = 9
};
#endif

/* testh.h:17883 */
#ifndef SOAP_TYPE_ns1__RiskAffectedPersonnel
#define SOAP_TYPE_ns1__RiskAffectedPersonnel (616)
/* ns1:RiskAffectedPersonnel */
enum ns1__RiskAffectedPersonnel {
	ns1__RiskAffectedPersonnel__cementer = 0,
	ns1__RiskAffectedPersonnel__company_x0020man = 1,
	ns1__RiskAffectedPersonnel__contractor = 2,
	ns1__RiskAffectedPersonnel__directional_x0020driller = 3,
	ns1__RiskAffectedPersonnel__driller = 4,
	ns1__RiskAffectedPersonnel__drilling_x0020engineer = 5,
	ns1__RiskAffectedPersonnel__drilling_x0020superintendent = 6,
	ns1__RiskAffectedPersonnel__drilling_x0020team = 7,
	ns1__RiskAffectedPersonnel__facility_x0020engineer = 8,
	ns1__RiskAffectedPersonnel__field_x0020service_x0020manager = 9,
	ns1__RiskAffectedPersonnel__foreman = 10,
	ns1__RiskAffectedPersonnel__general_x0020service_x0020supervisor = 11,
	ns1__RiskAffectedPersonnel__geologist = 12,
	ns1__RiskAffectedPersonnel__member = 13,
	ns1__RiskAffectedPersonnel__mud_x0020engineer = 14,
	ns1__RiskAffectedPersonnel__mud_x0020logger = 15,
	ns1__RiskAffectedPersonnel__MWD_x0020or_x0020LWD_x0020engineer = 16,
	ns1__RiskAffectedPersonnel__perform_x0020engineer = 17,
	ns1__RiskAffectedPersonnel__petrophysicist = 18,
	ns1__RiskAffectedPersonnel__production_x0020engineer = 19,
	ns1__RiskAffectedPersonnel__remotely_x0020operated_x0020vehicle_x0020engineer = 20,
	ns1__RiskAffectedPersonnel__safety_x0020manager = 21,
	ns1__RiskAffectedPersonnel__sales_x0020engineer = 22,
	ns1__RiskAffectedPersonnel__service_x0020supervisor = 23,
	ns1__RiskAffectedPersonnel__technical_x0020support = 24,
	ns1__RiskAffectedPersonnel__tool_x0020pusher = 25,
	ns1__RiskAffectedPersonnel__wireline_x0020engineer = 26
};
#endif

/* testh.h:17925 */
#ifndef SOAP_TYPE_ns1__RiskCategory
#define SOAP_TYPE_ns1__RiskCategory (617)
/* ns1:RiskCategory */
enum ns1__RiskCategory {
	ns1__RiskCategory__hydraulics = 0,
	ns1__RiskCategory__mechanical = 1,
	ns1__RiskCategory__time_x0020related = 2,
	ns1__RiskCategory__wellbore_x0020stability = 3,
	ns1__RiskCategory__directional_x0020drilling = 4,
	ns1__RiskCategory__bit = 5,
	ns1__RiskCategory__equipment_x0020failure = 6,
	ns1__RiskCategory__completion = 7,
	ns1__RiskCategory__casing = 8,
	ns1__RiskCategory__other = 9,
	ns1__RiskCategory__HSE = 10
};
#endif

/* testh.h:17955 */
#ifndef SOAP_TYPE_ns1__RiskSubCategory
#define SOAP_TYPE_ns1__RiskSubCategory (618)
/* ns1:RiskSubCategory */
enum ns1__RiskSubCategory {
	ns1__RiskSubCategory__gas_x0020kick = 0,
	ns1__RiskSubCategory__shallow_x0020water_x0020influx = 1,
	ns1__RiskSubCategory__other_x0020influx_x0020or_x0020kicks = 2,
	ns1__RiskSubCategory__loss_x0020circulation = 3,
	ns1__RiskSubCategory__poor_x0020hole_x0020cleaning = 4,
	ns1__RiskSubCategory__good_x0020hole_x0020cleaning_x0020at_x0020high_x0020ROP = 5,
	ns1__RiskSubCategory__high_x0020mud_x0020weight = 6,
	ns1__RiskSubCategory__special_x0020additives_x0020needed = 7,
	ns1__RiskSubCategory__gumbo_x0020problems = 8,
	ns1__RiskSubCategory__high_x0020ECD_x0020__x0020rheology_x0020related = 9,
	ns1__RiskSubCategory__excessive_x0020circulation = 10,
	ns1__RiskSubCategory__performing_x0020a_x0020kill = 11,
	ns1__RiskSubCategory__mud_x0020weight_x0020change = 12,
	ns1__RiskSubCategory__excessive_x0020pipe_x0020cement_x0020scaling = 13,
	ns1__RiskSubCategory__pit_x0020gain_x0020or_x0020loss = 14,
	ns1__RiskSubCategory__mud_x0020stability_x0020problems = 15,
	ns1__RiskSubCategory__shallow_x0020gas_x0020flow = 16,
	ns1__RiskSubCategory__twist_x0020off = 17,
	ns1__RiskSubCategory__stuck_x0020pipe = 18,
	ns1__RiskSubCategory__wireline_x0020stuck_x0020in_x0020hole = 19,
	ns1__RiskSubCategory__stick_x0020and_x0020slip = 20,
	ns1__RiskSubCategory__vibration_x0020__x0020axial = 21,
	ns1__RiskSubCategory__vibration_x0020__x0020torsional = 22,
	ns1__RiskSubCategory__vibration_x0020__x0020transverse = 23,
	ns1__RiskSubCategory__vibration_x0020unknown_x0020or_x0020rough_x0020drilling = 24,
	ns1__RiskSubCategory__uneven_x0020wear_x0020of_x0020BHA = 25,
	ns1__RiskSubCategory__uneven_x0020wear_x0020of_x0020drillstring = 26,
	ns1__RiskSubCategory__excessive_x0020torque = 27,
	ns1__RiskSubCategory__excessive_x0020drag = 28,
	ns1__RiskSubCategory__reaming_x0020greater_x0020than_x00202_x0020hours = 29,
	ns1__RiskSubCategory__washouts = 30,
	ns1__RiskSubCategory__tight_x0020hole_x0020or_x0020overPull = 31,
	ns1__RiskSubCategory__failed_x0020inspections_x0020or_x0020fatigue_x0020wear = 32,
	ns1__RiskSubCategory__mechanical = 33,
	ns1__RiskSubCategory__drilling_x0020greater_x0020than_x00201000_x0020feet_x002fday = 34,
	ns1__RiskSubCategory__drilling_x0020greater_x0020than_x00202000_x0020feet_x002fday = 35,
	ns1__RiskSubCategory__drilling_x0020less_x0020than_x002020_x0020feet_x002fday = 36,
	ns1__RiskSubCategory__trips_x0020greater_x0020than_x002024_x0020hours = 37,
	ns1__RiskSubCategory__excessive_x0020time_x0020for_x0020BHA_x0020makeup = 38,
	ns1__RiskSubCategory__waiting_x0020on_x0020decisions = 39,
	ns1__RiskSubCategory__waiting_x0020on_x0020weather = 40,
	ns1__RiskSubCategory__waiting_x0020on_x0020tools = 41,
	ns1__RiskSubCategory__sloughing_x0020or_x0020packoffs = 42,
	ns1__RiskSubCategory__ballooning = 43,
	ns1__RiskSubCategory__fracture_x0020problems = 44,
	ns1__RiskSubCategory__unstable_x0020zones = 45,
	ns1__RiskSubCategory__formation_x0020integrity_x0020test = 46,
	ns1__RiskSubCategory__leak_off_x0020test = 47,
	ns1__RiskSubCategory__tectonics = 48,
	ns1__RiskSubCategory__pore_x0020pressure = 49,
	ns1__RiskSubCategory__breakouts = 50,
	ns1__RiskSubCategory__bed_x0020parallel = 51,
	ns1__RiskSubCategory__wellbore_x0020stability = 52,
	ns1__RiskSubCategory__excessive_x0020doglegs = 53,
	ns1__RiskSubCategory__sidetrack = 54,
	ns1__RiskSubCategory__BHA_x0020change_x0020for_x0020directional = 55,
	ns1__RiskSubCategory__wrong_x0020total_x0020flow_x0020area = 56,
	ns1__RiskSubCategory__well_x0020collision_x0020__x0020actual = 57,
	ns1__RiskSubCategory__well_x0020collision_x0020__x0020technical = 58,
	ns1__RiskSubCategory__geosteering = 59,
	ns1__RiskSubCategory__abnormal_x0020tendency_x0020changes = 60,
	ns1__RiskSubCategory__resurveying = 61,
	ns1__RiskSubCategory__in_field_x0020referencing_x0020_x0028IFR_x0029_x0020actions = 62,
	ns1__RiskSubCategory__bit_x0020or_x0020BHA_x0020performance = 63,
	ns1__RiskSubCategory__drilling_x0020optimization = 64,
	ns1__RiskSubCategory__bit_x0020balling = 'A',
	ns1__RiskSubCategory__lost_x0020cones_x0020or_x0020broken_x0020cutters = 'B',
	ns1__RiskSubCategory__excessive_x0020bit_x0020wear_x0020or_x0020gauge = 'C',
	ns1__RiskSubCategory__low_x0020rate_x0020of_x0020bit_x0020penetration = 'D',
	ns1__RiskSubCategory__high_x0020rate_x0020of_x0020bit_x0020penetration = 'E',
	ns1__RiskSubCategory__downhole_x0020tool = 'F',
	ns1__RiskSubCategory__surface_x0020system = 'G',
	ns1__RiskSubCategory__motor_x0020or_x0020rotary_x0020steerable_x0020system_x0020failure = 'H',
	ns1__RiskSubCategory__topdrive_x0020failure = 'I',
	ns1__RiskSubCategory__hoisting_x0020equipment_x0020failure = 'J',
	ns1__RiskSubCategory__circulating_x0020equipment_x0020failure = 'K',
	ns1__RiskSubCategory__electrical_x0020system_x0020failure = 'L',
	ns1__RiskSubCategory__blow_x0020out_x0020preventer_x0020events = 'M',
	ns1__RiskSubCategory__surface_x0020instrumentation_x0020problems = 'N',
	ns1__RiskSubCategory__rig_x0020communications = 'O',
	ns1__RiskSubCategory__completion_x0020equipment_x0020failure = 'P',
	ns1__RiskSubCategory__miscellaneous_x0020rig_x0020equipment = 'Q',
	ns1__RiskSubCategory__tool_x0020or_x0020equipment_x0020failure = 'R',
	ns1__RiskSubCategory__squeeze_x0020jobs = 'S',
	ns1__RiskSubCategory__casing_x0020surge_x0020losses = 'T',
	ns1__RiskSubCategory__stuck_x0020casing_x0020or_x0020completion = 'U',
	ns1__RiskSubCategory__shoe_x0020failures = 'V',
	ns1__RiskSubCategory__early_x0020cement_x0020setup = 'W',
	ns1__RiskSubCategory__casing_x0020collapse = 'X',
	ns1__RiskSubCategory__milling = 'Y',
	ns1__RiskSubCategory__excessive_x0020casing_x0020wear_x0020or_x0020cuttings = 'Z',
	ns1__RiskSubCategory__excessive_x0020formation_x0020damage_x0020or_x0020skin = 91,
	ns1__RiskSubCategory__casing_x0020rotation_x0020or_x0020reciprocation_x0020rqd = 92,
	ns1__RiskSubCategory__broaching = 93,
	ns1__RiskSubCategory__completion_x0020or_x0020casing = 94,
	ns1__RiskSubCategory__stratigraphy = 95,
	ns1__RiskSubCategory__fishing = 96,
	ns1__RiskSubCategory__junk_x0020in_x0020hole = 'a',
	ns1__RiskSubCategory__delay_x0020due_x0020to_x0020political_x0020unrest = 'b',
	ns1__RiskSubCategory__rig_x0020move = 'c',
	ns1__RiskSubCategory__gas_x0020hydrates = 'd',
	ns1__RiskSubCategory__pending_x0020analysis = 'e',
	ns1__RiskSubCategory__riser_x0020disconnect = 'f',
	ns1__RiskSubCategory__other = 'g',
	ns1__RiskSubCategory__personnel = 'h',
	ns1__RiskSubCategory__environmental = 'i',
	ns1__RiskSubCategory__automotive = 'j',
	ns1__RiskSubCategory__asset = 'k',
	ns1__RiskSubCategory__information = 'l',
	ns1__RiskSubCategory__time = 'm',
	ns1__RiskSubCategory__HSE = 'n'
};
#endif

/* testh.h:18137 */
#ifndef SOAP_TYPE_ns1__RiskType
#define SOAP_TYPE_ns1__RiskType (619)
/* ns1:RiskType */
enum ns1__RiskType {
	ns1__RiskType__risk = 0,
	ns1__RiskType__event = 1,
	ns1__RiskType__near_x0020miss = 2,
	ns1__RiskType__best_x0020practice = 3,
	ns1__RiskType__lessons_x0020learned = 4,
	ns1__RiskType__other = 5
};
#endif

/* testh.h:18154 */
#ifndef SOAP_TYPE_ns1__PerforationStatus
#define SOAP_TYPE_ns1__PerforationStatus (620)
/* ns1:PerforationStatus */
enum ns1__PerforationStatus {
	ns1__PerforationStatus__open = 0,
	ns1__PerforationStatus__proposed = 1,
	ns1__PerforationStatus__squeezed = 2
};
#endif

/* testh.h:18168 */
#ifndef SOAP_TYPE_ns1__PhysicalStatus
#define SOAP_TYPE_ns1__PhysicalStatus (621)
/* ns1:PhysicalStatus */
enum ns1__PhysicalStatus {
	ns1__PhysicalStatus__closed = 0,
	ns1__PhysicalStatus__open = 1,
	ns1__PhysicalStatus__proposed = 2
};
#endif

/* testh.h:18182 */
#ifndef SOAP_TYPE_ns1__CompletionStatus
#define SOAP_TYPE_ns1__CompletionStatus (622)
/* ns1:CompletionStatus */
enum ns1__CompletionStatus {
	ns1__CompletionStatus__active = 0,
	ns1__CompletionStatus__inactive = 1,
	ns1__CompletionStatus__permanently_x0020abandoned = 2,
	ns1__CompletionStatus__planned = 3,
	ns1__CompletionStatus__suspended = 4,
	ns1__CompletionStatus__temporarily_x0020abandoned = 5,
	ns1__CompletionStatus__testing = 6
};
#endif

/* testh.h:18196 */
#ifndef SOAP_TYPE_ns1__StratigraphyKind
#define SOAP_TYPE_ns1__StratigraphyKind (623)
/* ns1:StratigraphyKind */
enum ns1__StratigraphyKind {
	ns1__StratigraphyKind__biostratigraphic = 0,
	ns1__StratigraphyKind__chemostratigraphic = 1,
	ns1__StratigraphyKind__chronostratigraphic = 2,
	ns1__StratigraphyKind__fluid_x0020stratigraphic = 3,
	ns1__StratigraphyKind__lithostratigraphic = 4,
	ns1__StratigraphyKind__magnetostratigraphic = 5,
	ns1__StratigraphyKind__seismic_x0020stratigraphic = 6,
	ns1__StratigraphyKind__sequence_x0020stratigraphic = 7
};
#endif

/* testh.h:18211 */
#ifndef SOAP_TYPE_ns1__StratigraphyKindQualifier
#define SOAP_TYPE_ns1__StratigraphyKindQualifier (624)
/* ns1:StratigraphyKindQualifier */
enum ns1__StratigraphyKindQualifier {
	ns1__StratigraphyKindQualifier__base = 0,
	ns1__StratigraphyKindQualifier__fault = 1,
	ns1__StratigraphyKindQualifier__gas_oil_x0020contact = 2,
	ns1__StratigraphyKindQualifier__gas_water_x0020contact = 3,
	ns1__StratigraphyKindQualifier__oil_water_x0020contact = 4,
	ns1__StratigraphyKindQualifier__seafloor = 5,
	ns1__StratigraphyKindQualifier__top = 6
};
#endif

/* testh.h:18225 */
#ifndef SOAP_TYPE_ns1__WellboreMarkerKind
#define SOAP_TYPE_ns1__WellboreMarkerKind (625)
/* ns1:WellboreMarkerKind */
enum ns1__WellboreMarkerKind {
	ns1__WellboreMarkerKind__point_x0020of_x0020interest = 0,
	ns1__WellboreMarkerKind__stratigraphic = 1
};
#endif

/* testh.h:18234 */
#ifndef SOAP_TYPE_ns1__WellborePointOfInterest
#define SOAP_TYPE_ns1__WellborePointOfInterest (626)
/* ns1:WellborePointOfInterest */
enum ns1__WellborePointOfInterest {
	ns1__WellborePointOfInterest__bottomhole_x0020location = 0,
	ns1__WellborePointOfInterest__first_x0020perforation = 1,
	ns1__WellborePointOfInterest__kickoff_x0020point = 2,
	ns1__WellborePointOfInterest__landing_x0020point = 3,
	ns1__WellborePointOfInterest__last_x0020perforation = 4
};
#endif

/* testh.h:18258 */
#ifndef SOAP_TYPE_ns2__ActiveStatusKind
#define SOAP_TYPE_ns2__ActiveStatusKind (627)
/* ns2:ActiveStatusKind */
enum ns2__ActiveStatusKind {
	ns2__ActiveStatusKind__active = 0,
	ns2__ActiveStatusKind__inactive = 1
};
#endif

/* testh.h:18275 */
#ifndef SOAP_TYPE_ns2__AliasIdentifierKind
#define SOAP_TYPE_ns2__AliasIdentifierKind (628)
/* ns2:AliasIdentifierKind */
enum ns2__AliasIdentifierKind {
	ns2__AliasIdentifierKind__abbreviation = 0,
	ns2__AliasIdentifierKind__acronym = 1,
	ns2__AliasIdentifierKind__common_x0020name = 2,
	ns2__AliasIdentifierKind__industry_x0020code = 3,
	ns2__AliasIdentifierKind__industry_x0020name = 4,
	ns2__AliasIdentifierKind__lease_x0020identifier = 5,
	ns2__AliasIdentifierKind__local_x0020language_x0020name = 6,
	ns2__AliasIdentifierKind__preferred_x0020name = 7,
	ns2__AliasIdentifierKind__project_x0020number = 8,
	ns2__AliasIdentifierKind__regulatory_x0020identifier = 9,
	ns2__AliasIdentifierKind__regulatory_x0020name = 10,
	ns2__AliasIdentifierKind__short_x0020name = 11,
	ns2__AliasIdentifierKind__subscription_x0020well_x0020name = 12,
	ns2__AliasIdentifierKind__unique_x0020identifier = 13,
	ns2__AliasIdentifierKind__wellbore_x0020number = 14
};
#endif

/* testh.h:18361 */
#ifndef SOAP_TYPE_ns2__ExistenceKind
#define SOAP_TYPE_ns2__ExistenceKind (629)
/* ns2:ExistenceKind */
enum ns2__ExistenceKind {
	ns2__ExistenceKind__actual = 0,
	ns2__ExistenceKind__planned = 1,
	ns2__ExistenceKind__simulated = 2,
	ns2__ExistenceKind__test = 3
};
#endif

/* testh.h:18392 */
#ifndef SOAP_TYPE_ns2__ReferencePointKind
#define SOAP_TYPE_ns2__ReferencePointKind (630)
/* ns2:ReferencePointKind */
enum ns2__ReferencePointKind {
	ns2__ReferencePointKind__casing_x0020flange = 0,
	ns2__ReferencePointKind__crown_x0020valve = 1,
	ns2__ReferencePointKind__derrick_x0020floor = 2,
	ns2__ReferencePointKind__ground_x0020level = 3,
	ns2__ReferencePointKind__kelly_x0020bushing = 4,
	ns2__ReferencePointKind__kickoff_x0020point = 5,
	ns2__ReferencePointKind__lowest_x0020astronomical_x0020tide = 6,
	ns2__ReferencePointKind__mean_x0020high_x0020water = 7,
	ns2__ReferencePointKind__mean_x0020higher_x0020high_x0020water = 8,
	ns2__ReferencePointKind__mean_x0020low_x0020water = 9,
	ns2__ReferencePointKind__mean_x0020lower_x0020low_x0020water = 10,
	ns2__ReferencePointKind__mean_x0020sea_x0020level = 11,
	ns2__ReferencePointKind__mean_x0020tide_x0020level = 12,
	ns2__ReferencePointKind__rotary_x0020bushing = 13,
	ns2__ReferencePointKind__rotary_x0020table = 14,
	ns2__ReferencePointKind__seafloor = 15,
	ns2__ReferencePointKind__wellhead = 16,
	ns2__ReferencePointKind__well_x0020surface_x0020location = 17
};
#endif

/* testh.h:18417 */
#ifndef SOAP_TYPE_ns2__FloatingPointType
#define SOAP_TYPE_ns2__FloatingPointType (631)
/* ns2:FloatingPointType */
enum ns2__FloatingPointType {
	ns2__FloatingPointType__arrayOfFloat32LE = 0,
	ns2__FloatingPointType__arrayOfDouble64LE = 1,
	ns2__FloatingPointType__arrayOfFloat32BE = 2,
	ns2__FloatingPointType__arrayOfDouble64BE = 3
};
#endif

/* testh.h:18428 */
#ifndef SOAP_TYPE_ns2__IntegerType
#define SOAP_TYPE_ns2__IntegerType (632)
/* ns2:IntegerType */
enum ns2__IntegerType {
	ns2__IntegerType__arrayOfInt8 = 0,
	ns2__IntegerType__arrayOfUInt8 = 1,
	ns2__IntegerType__arrayOfInt16LE = 2,
	ns2__IntegerType__arrayOfInt32LE = 3,
	ns2__IntegerType__arrayOfInt64LE = 4,
	ns2__IntegerType__arrayOfUInt16LE = 5,
	ns2__IntegerType__arrayOfUInt32LE = 6,
	ns2__IntegerType__arrayOfUInt64LE = 7,
	ns2__IntegerType__arrayOfInt16BE = 8,
	ns2__IntegerType__arrayOfInt32BE = 9,
	ns2__IntegerType__arrayOfInt64BE = 10,
	ns2__IntegerType__arrayOfUInt16BE = 11,
	ns2__IntegerType__arrayOfUInt32BE = 12,
	ns2__IntegerType__arrayOfUInt64BE = 13
};
#endif

/* testh.h:18453 */
#ifndef SOAP_TYPE_ns2__DataIndexKind
#define SOAP_TYPE_ns2__DataIndexKind (633)
/* ns2:DataIndexKind */
enum ns2__DataIndexKind {
	ns2__DataIndexKind__measured_x0020depth = 0,
	ns2__DataIndexKind__true_x0020vertical_x0020depth = 1,
	ns2__DataIndexKind__pass_x0020indexed_x0020depth = 2,
	ns2__DataIndexKind__date_x0020time = 3,
	ns2__DataIndexKind__elapsed_x0020time = 4,
	ns2__DataIndexKind__temperature = 5,
	ns2__DataIndexKind__pressure = 6,
	ns2__DataIndexKind__scalar = 7
};
#endif

/* testh.h:18504 */
#ifndef SOAP_TYPE_ns2__GeochronologicalRank
#define SOAP_TYPE_ns2__GeochronologicalRank (634)
/* ns2:GeochronologicalRank */
enum ns2__GeochronologicalRank {
	ns2__GeochronologicalRank__eon = 0,
	ns2__GeochronologicalRank__era = 1,
	ns2__GeochronologicalRank__period = 2,
	ns2__GeochronologicalRank__epoch = 3,
	ns2__GeochronologicalRank__age = 4,
	ns2__GeochronologicalRank__chron = 5
};
#endif

/* testh.h:18527 */
#ifndef SOAP_TYPE_ns2__IndexableElement
#define SOAP_TYPE_ns2__IndexableElement (635)
/* ns2:IndexableElement */
enum ns2__IndexableElement {
	ns2__IndexableElement__cells = 0,
	ns2__IndexableElement__intervals_x0020from_x0020datum = 1,
	ns2__IndexableElement__column_x0020edges = 2,
	ns2__IndexableElement__columns = 3,
	ns2__IndexableElement__contacts = 4,
	ns2__IndexableElement__coordinate_x0020lines = 5,
	ns2__IndexableElement__edges = 6,
	ns2__IndexableElement__edges_x0020per_x0020column = 7,
	ns2__IndexableElement__enumerated_x0020elements = 8,
	ns2__IndexableElement__faces = 9,
	ns2__IndexableElement__faces_x0020per_x0020cell = 10,
	ns2__IndexableElement__interval_x0020edges = 11,
	ns2__IndexableElement__intervals = 12,
	ns2__IndexableElement__I0 = 13,
	ns2__IndexableElement__I0_x0020edges = 14,
	ns2__IndexableElement__J0 = 15,
	ns2__IndexableElement__J0_x0020edges = 16,
	ns2__IndexableElement__layers = 17,
	ns2__IndexableElement__lines = 18,
	ns2__IndexableElement__nodes = 19,
	ns2__IndexableElement__nodes_x0020per_x0020cell = 20,
	ns2__IndexableElement__nodes_x0020per_x0020edge = 21,
	ns2__IndexableElement__nodes_x0020per_x0020face = 22,
	ns2__IndexableElement__patches = 23,
	ns2__IndexableElement__pillars = 24,
	ns2__IndexableElement__regions = 25,
	ns2__IndexableElement__representation = 26,
	ns2__IndexableElement__subnodes = 27,
	ns2__IndexableElement__triangles = 28
};
#endif

/* testh.h:18595 */
#ifndef SOAP_TYPE_ns2__IndexDirection
#define SOAP_TYPE_ns2__IndexDirection (636)
/* ns2:IndexDirection */
enum ns2__IndexDirection {
	ns2__IndexDirection__decreasing = 0,
	ns2__IndexDirection__increasing = 1,
	ns2__IndexDirection__unordered = 2
};
#endif

/* testh.h:18621 */
#ifndef SOAP_TYPE_ns2__LithologyKind
#define SOAP_TYPE_ns2__LithologyKind (637)
/* ns2:LithologyKind */
enum ns2__LithologyKind {
	ns2__LithologyKind__alkali_x0020feldspar_x0020rhyolite = 0,
	ns2__LithologyKind__alkali_x0020olivine_x0020basalt = 1,
	ns2__LithologyKind__amphibolite = 2,
	ns2__LithologyKind__andesite = 3,
	ns2__LithologyKind__anhydrite = 4,
	ns2__LithologyKind__anorthositic_x0020rock = 5,
	ns2__LithologyKind__anthracite = 6,
	ns2__LithologyKind__aplite = 7,
	ns2__LithologyKind__arenite = 8,
	ns2__LithologyKind__argillaceous = 9,
	ns2__LithologyKind__arkose = 10,
	ns2__LithologyKind__basalt = 11,
	ns2__LithologyKind__basanite = 12,
	ns2__LithologyKind__bauxite = 13,
	ns2__LithologyKind__bituminous_x0020coal = 14,
	ns2__LithologyKind__blueschist_x0020metamorphic_x0020rock = 15,
	ns2__LithologyKind__boninite = 16,
	ns2__LithologyKind__breccia = 17,
	ns2__LithologyKind__carbonate_x0020ooze = 18,
	ns2__LithologyKind__carbonatite = 19,
	ns2__LithologyKind__chalk = 20,
	ns2__LithologyKind__chert = 21,
	ns2__LithologyKind__clay = 22,
	ns2__LithologyKind__claystone = 23,
	ns2__LithologyKind__coal = 24,
	ns2__LithologyKind__conglomerate = 25,
	ns2__LithologyKind__dacite = 26,
	ns2__LithologyKind__diabase = 27,
	ns2__LithologyKind__diamictite = 28,
	ns2__LithologyKind__diorite = 29,
	ns2__LithologyKind__dioritoid = 30,
	ns2__LithologyKind__doleritic_x0020rock = 31,
	ns2__LithologyKind__dolomite = 32,
	ns2__LithologyKind__dolomitic = 33,
	ns2__LithologyKind__eclogite = 34,
	ns2__LithologyKind__exotic_x0020alkaline_x0020rock = 35,
	ns2__LithologyKind__feldspar = 36,
	ns2__LithologyKind__feldspathic_x0020arenite = 37,
	ns2__LithologyKind__fine_x0020grained_x0020igneous_x0020rock = 38,
	ns2__LithologyKind__foid_x0020dioritoid = 39,
	ns2__LithologyKind__foid_x0020gabbroid = 40,
	ns2__LithologyKind__foid_x0020syenitoid = 41,
	ns2__LithologyKind__foidite = 42,
	ns2__LithologyKind__foiditoid = 43,
	ns2__LithologyKind__foidolite = 44,
	ns2__LithologyKind__foliated_x0020metamorphic_x0020rock = 45,
	ns2__LithologyKind__fragmental_x0020igneous_x0020rock = 46,
	ns2__LithologyKind__gabbro = 47,
	ns2__LithologyKind__gabbroic_x0020rock = 48,
	ns2__LithologyKind__gabbroid = 49,
	ns2__LithologyKind__glauconite = 50,
	ns2__LithologyKind__gneiss = 51,
	ns2__LithologyKind__granite = 52,
	ns2__LithologyKind__granodiorite = 53,
	ns2__LithologyKind__granofels = 54,
	ns2__LithologyKind__granulite = 55,
	ns2__LithologyKind__gravel = 56,
	ns2__LithologyKind__greenstone = 57,
	ns2__LithologyKind__gumbo = 58,
	ns2__LithologyKind__gypsum = 59,
	ns2__LithologyKind__halite = 60,
	ns2__LithologyKind__hornfels = 61,
	ns2__LithologyKind__igneous_x0020rock = 62,
	ns2__LithologyKind__impact_x0020generated_x0020material = 63,
	ns2__LithologyKind__impure_x0020dolomite = 64,
	ns2__LithologyKind__impure_x0020limestone = 'A',
	ns2__LithologyKind__intrusive_x0020rock_x0020_x0028plutonic_x0029 = 'B',
	ns2__LithologyKind__iron_x0020rich_x0020sedimentary_x0020rock = 'C',
	ns2__LithologyKind__kalsilitic_x0020and_x0020melilitic_x0020rocks = 'D',
	ns2__LithologyKind__komatiitic_x0020rock = 'E',
	ns2__LithologyKind__latitic_x0020rock = 'F',
	ns2__LithologyKind__lignite = 'G',
	ns2__LithologyKind__lime_x0020boundstone = 'H',
	ns2__LithologyKind__lime_x0020framestone = 'I',
	ns2__LithologyKind__lime_x0020grainstone = 'J',
	ns2__LithologyKind__lime_x0020mudstone = 'K',
	ns2__LithologyKind__lime_x0020packstone = 'L',
	ns2__LithologyKind__lime_x0020wackestone = 'M',
	ns2__LithologyKind__limestone = 'N',
	ns2__LithologyKind__marble = 'O',
	ns2__LithologyKind__marl = 'P',
	ns2__LithologyKind__metamorphic_x0020rock = 'Q',
	ns2__LithologyKind__mica_x0020schist = 'R',
	ns2__LithologyKind__migmatite = 'S',
	ns2__LithologyKind__monzogabbro = 'T',
	ns2__LithologyKind__mud = 'U',
	ns2__LithologyKind__mudstone = 'V',
	ns2__LithologyKind__mylonitic_x0020rock = 'W',
	ns2__LithologyKind__no_x0020description = 'X',
	ns2__LithologyKind__no_x0020sample = 'Y',
	ns2__LithologyKind__ooze = 'Z',
	ns2__LithologyKind__ophiolite = 91,
	ns2__LithologyKind__organic_x0020bearing_x0020mudstone = 92,
	ns2__LithologyKind__peat = 93,
	ns2__LithologyKind__pegmatite = 94,
	ns2__LithologyKind__peridotite = 95,
	ns2__LithologyKind__phaneritic_x0020igneous_x0020rock = 96,
	ns2__LithologyKind__phonolite = 'a',
	ns2__LithologyKind__phonolitoid = 'b',
	ns2__LithologyKind__phosphate = 'c',
	ns2__LithologyKind__phosphate_x0020rock = 'd',
	ns2__LithologyKind__phyllite = 'e',
	ns2__LithologyKind__porphyry = 'f',
	ns2__LithologyKind__potassium_x0020and_x0020magnesium_x0020salts = 'g',
	ns2__LithologyKind__pyroclastic_x0020breccia = 'h',
	ns2__LithologyKind__pyroclastic_x0020rock = 'i',
	ns2__LithologyKind__pyroxenite = 'j',
	ns2__LithologyKind__quartz_x0020arenite = 'k',
	ns2__LithologyKind__quartzite = 'l',
	ns2__LithologyKind__rhyolite = 'm',
	ns2__LithologyKind__rock_x0020salt = 'n',
	ns2__LithologyKind__sand = 'o',
	ns2__LithologyKind__sandstone = 'p',
	ns2__LithologyKind__sandy = 'q',
	ns2__LithologyKind__sapropel = 'r',
	ns2__LithologyKind__schist = 's',
	ns2__LithologyKind__serpentinite = 't',
	ns2__LithologyKind__shale = 'u',
	ns2__LithologyKind__siliceous_x0020ooze = 'v',
	ns2__LithologyKind__silt = 'w',
	ns2__LithologyKind__siltstone = 'x',
	ns2__LithologyKind__skarn = 'y',
	ns2__LithologyKind__slate = 'z',
	ns2__LithologyKind__spilite = 123,
	ns2__LithologyKind__syenite = 124,
	ns2__LithologyKind__syenitoid = 125,
	ns2__LithologyKind__sylvite = 126,
	ns2__LithologyKind__tephrite = 127,
	ns2__LithologyKind__tephritoid = 128,
	ns2__LithologyKind__tholeiitic_x0020basalt = 129,
	ns2__LithologyKind__tonalite = 130,
	ns2__LithologyKind__trachyte = 131,
	ns2__LithologyKind__trachytic_x0020rock = 132,
	ns2__LithologyKind__trachytoid = 133,
	ns2__LithologyKind__travertine = 134,
	ns2__LithologyKind__tuff = 135,
	ns2__LithologyKind__tuffite = 136,
	ns2__LithologyKind__ultrabasic = 137,
	ns2__LithologyKind__undifferentiated = 138,
	ns2__LithologyKind__unknown = 139,
	ns2__LithologyKind__wacke = 140
};
#endif

/* testh.h:18769 */
#ifndef SOAP_TYPE_ns2__LithologyQualifierKind
#define SOAP_TYPE_ns2__LithologyQualifierKind (638)
/* ns2:LithologyQualifierKind */
enum ns2__LithologyQualifierKind {
	ns2__LithologyQualifierKind__alkali_x0020feldspar_x0020rhyolite = 0,
	ns2__LithologyQualifierKind__alkali_x0020olivine_x0020basalt = 1,
	ns2__LithologyQualifierKind__amphibolite = 2,
	ns2__LithologyQualifierKind__amphibolitic = 3,
	ns2__LithologyQualifierKind__andesite = 4,
	ns2__LithologyQualifierKind__andesitic = 5,
	ns2__LithologyQualifierKind__anhydrite = 6,
	ns2__LithologyQualifierKind__anhydritic = 7,
	ns2__LithologyQualifierKind__ankerite = 8,
	ns2__LithologyQualifierKind__ankeritic = 9,
	ns2__LithologyQualifierKind__anorthositic_x0020rock = 10,
	ns2__LithologyQualifierKind__anthracite = 11,
	ns2__LithologyQualifierKind__anthracitic = 12,
	ns2__LithologyQualifierKind__aplite = 13,
	ns2__LithologyQualifierKind__aplitic = 14,
	ns2__LithologyQualifierKind__arenite = 15,
	ns2__LithologyQualifierKind__arenitic = 16,
	ns2__LithologyQualifierKind__argillaceous = 17,
	ns2__LithologyQualifierKind__arkose = 18,
	ns2__LithologyQualifierKind__arkosic = 19,
	ns2__LithologyQualifierKind__barite = 20,
	ns2__LithologyQualifierKind__baritic = 21,
	ns2__LithologyQualifierKind__basalt = 22,
	ns2__LithologyQualifierKind__basaltic = 23,
	ns2__LithologyQualifierKind__basanite = 24,
	ns2__LithologyQualifierKind__basanitic = 25,
	ns2__LithologyQualifierKind__bauxite = 26,
	ns2__LithologyQualifierKind__bauxitic = 27,
	ns2__LithologyQualifierKind__belemnites = 28,
	ns2__LithologyQualifierKind__belemnitic = 29,
	ns2__LithologyQualifierKind__bioturbated = 30,
	ns2__LithologyQualifierKind__bioturbation = 31,
	ns2__LithologyQualifierKind__bitumen = 32,
	ns2__LithologyQualifierKind__bituminous = 33,
	ns2__LithologyQualifierKind__bituminous_x0020coal = 34,
	ns2__LithologyQualifierKind__blueschist_x0020metamorphic_x0020rock = 35,
	ns2__LithologyQualifierKind__boninite = 36,
	ns2__LithologyQualifierKind__breccia = 37,
	ns2__LithologyQualifierKind__brecciated = 38,
	ns2__LithologyQualifierKind__bryozoan = 39,
	ns2__LithologyQualifierKind__bryozoans = 40,
	ns2__LithologyQualifierKind__burrowed = 41,
	ns2__LithologyQualifierKind__burrows = 42,
	ns2__LithologyQualifierKind__calcareous = 43,
	ns2__LithologyQualifierKind__calcite = 44,
	ns2__LithologyQualifierKind__calcite_x0020concretion = 45,
	ns2__LithologyQualifierKind__calcitic = 46,
	ns2__LithologyQualifierKind__carbonaceous = 47,
	ns2__LithologyQualifierKind__carbonate_x0020ooze = 48,
	ns2__LithologyQualifierKind__carbonatite = 49,
	ns2__LithologyQualifierKind__carbonatitic = 50,
	ns2__LithologyQualifierKind__chalk = 51,
	ns2__LithologyQualifierKind__chalky = 52,
	ns2__LithologyQualifierKind__chamosite = 53,
	ns2__LithologyQualifierKind__chamositic = 54,
	ns2__LithologyQualifierKind__chert = 55,
	ns2__LithologyQualifierKind__cherty = 56,
	ns2__LithologyQualifierKind__chlorite = 57,
	ns2__LithologyQualifierKind__chloritic = 58,
	ns2__LithologyQualifierKind__clay = 59,
	ns2__LithologyQualifierKind__claystone = 60,
	ns2__LithologyQualifierKind__coal = 61,
	ns2__LithologyQualifierKind__concretionary = 62,
	ns2__LithologyQualifierKind__concretions = 63,
	ns2__LithologyQualifierKind__conglomerate = 64,
	ns2__LithologyQualifierKind__conglomeratic = 'A',
	ns2__LithologyQualifierKind__coral_x0020fragments = 'B',
	ns2__LithologyQualifierKind__coralline = 'C',
	ns2__LithologyQualifierKind__crinoidal = 'D',
	ns2__LithologyQualifierKind__crinoids = 'E',
	ns2__LithologyQualifierKind__dacite = 'F',
	ns2__LithologyQualifierKind__dacitic = 'G',
	ns2__LithologyQualifierKind__diabase = 'H',
	ns2__LithologyQualifierKind__diabasic = 'I',
	ns2__LithologyQualifierKind__diamictite = 'J',
	ns2__LithologyQualifierKind__diamictitic = 'K',
	ns2__LithologyQualifierKind__diatomaceous = 'L',
	ns2__LithologyQualifierKind__diatoms = 'M',
	ns2__LithologyQualifierKind__diorite = 'N',
	ns2__LithologyQualifierKind__dioritic = 'O',
	ns2__LithologyQualifierKind__dioritoid = 'P',
	ns2__LithologyQualifierKind__dioritoidic = 'Q',
	ns2__LithologyQualifierKind__doleritic_x0020rock = 'R',
	ns2__LithologyQualifierKind__dolomite = 'S',
	ns2__LithologyQualifierKind__dolomite_x0020concretion = 'T',
	ns2__LithologyQualifierKind__dolomite_x0020stringer = 'U',
	ns2__LithologyQualifierKind__dolomitic = 'V',
	ns2__LithologyQualifierKind__eclogite = 'W',
	ns2__LithologyQualifierKind__eclogitic = 'X',
	ns2__LithologyQualifierKind__exotic_x0020alkaline_x0020rock = 'Y',
	ns2__LithologyQualifierKind__feldspar = 'Z',
	ns2__LithologyQualifierKind__feldsparic = 91,
	ns2__LithologyQualifierKind__feldspathic = 92,
	ns2__LithologyQualifierKind__feldspathic_x0020arenite = 93,
	ns2__LithologyQualifierKind__ferruginous = 94,
	ns2__LithologyQualifierKind__fine_x0020grained_x0020igneous_x0020rock = 95,
	ns2__LithologyQualifierKind__foid_x0020dioritoid = 96,
	ns2__LithologyQualifierKind__foid_x0020gabbroid = 'a',
	ns2__LithologyQualifierKind__foid_x0020syenitoid = 'b',
	ns2__LithologyQualifierKind__foidite = 'c',
	ns2__LithologyQualifierKind__foiditic = 'd',
	ns2__LithologyQualifierKind__foiditoid = 'e',
	ns2__LithologyQualifierKind__foidolite = 'f',
	ns2__LithologyQualifierKind__foidolitic = 'g',
	ns2__LithologyQualifierKind__foliated_x0020metamorphic_x0020rock = 'h',
	ns2__LithologyQualifierKind__foraminifera = 'i',
	ns2__LithologyQualifierKind__foraminiferous = 'j',
	ns2__LithologyQualifierKind__forams = 'k',
	ns2__LithologyQualifierKind__fossil_x0020fragments = 'l',
	ns2__LithologyQualifierKind__fossiliferous = 'm',
	ns2__LithologyQualifierKind__fossils_x0020undifferentiated = 'n',
	ns2__LithologyQualifierKind__fragmental_x0020igneous_x0020rock = 'o',
	ns2__LithologyQualifierKind__gabbro = 'p',
	ns2__LithologyQualifierKind__gabbroic = 'q',
	ns2__LithologyQualifierKind__gabbroic_x0020rock = 'r',
	ns2__LithologyQualifierKind__gabbroid = 's',
	ns2__LithologyQualifierKind__gabbroidic = 't',
	ns2__LithologyQualifierKind__gilsonite = 'u',
	ns2__LithologyQualifierKind__gilsonitic = 'v',
	ns2__LithologyQualifierKind__glauconite = 'w',
	ns2__LithologyQualifierKind__glauconitic = 'x',
	ns2__LithologyQualifierKind__gneiss = 'y',
	ns2__LithologyQualifierKind__gneissic = 'z',
	ns2__LithologyQualifierKind__granite = 123,
	ns2__LithologyQualifierKind__granitic = 124,
	ns2__LithologyQualifierKind__granodiorite = 125,
	ns2__LithologyQualifierKind__granodioritic = 126,
	ns2__LithologyQualifierKind__granofels = 127,
	ns2__LithologyQualifierKind__granulite = 128,
	ns2__LithologyQualifierKind__granulitic = 129,
	ns2__LithologyQualifierKind__gravel = 130,
	ns2__LithologyQualifierKind__gravelly = 131,
	ns2__LithologyQualifierKind__greenstone = 132,
	ns2__LithologyQualifierKind__gumbo = 133,
	ns2__LithologyQualifierKind__gypsiferous = 134,
	ns2__LithologyQualifierKind__gypsum = 135,
	ns2__LithologyQualifierKind__halite = 136,
	ns2__LithologyQualifierKind__halitic = 137,
	ns2__LithologyQualifierKind__hornfels = 138,
	ns2__LithologyQualifierKind__hornfelsic = 139,
	ns2__LithologyQualifierKind__igneous = 140,
	ns2__LithologyQualifierKind__igneous_x0020rock = 141,
	ns2__LithologyQualifierKind__illite = 142,
	ns2__LithologyQualifierKind__illitic = 143,
	ns2__LithologyQualifierKind__impact_x0020generated_x0020material = 144,
	ns2__LithologyQualifierKind__impure_x0020dolomite = 145,
	ns2__LithologyQualifierKind__impure_x0020limestone = 146,
	ns2__LithologyQualifierKind__intrusive_x0020rock_x0020_x0028plutonic_x0029 = 147,
	ns2__LithologyQualifierKind__iron_x0020rich_x0020sedimentary_x0020rock = 148,
	ns2__LithologyQualifierKind__kalsilitic_x0020and_x0020melilitic_x0020rocks = 149,
	ns2__LithologyQualifierKind__kaolinite = 150,
	ns2__LithologyQualifierKind__kaolinitic = 151,
	ns2__LithologyQualifierKind__komatiitic_x0020rock = 152,
	ns2__LithologyQualifierKind__latitic_x0020rock = 153,
	ns2__LithologyQualifierKind__lignite = 154,
	ns2__LithologyQualifierKind__lignitic = 155,
	ns2__LithologyQualifierKind__lime_x0020boundstone = 156,
	ns2__LithologyQualifierKind__lime_x0020framestone = 157,
	ns2__LithologyQualifierKind__lime_x0020grainstone = 158,
	ns2__LithologyQualifierKind__lime_x0020mudstone = 159,
	ns2__LithologyQualifierKind__lime_x0020packstone = 160,
	ns2__LithologyQualifierKind__lime_x0020wackestone = 161,
	ns2__LithologyQualifierKind__limestone = 162,
	ns2__LithologyQualifierKind__limestone_x0020stringer = 163,
	ns2__LithologyQualifierKind__lithic = 164,
	ns2__LithologyQualifierKind__lithic_x0020fragments = 165,
	ns2__LithologyQualifierKind__marble = 166,
	ns2__LithologyQualifierKind__marcasite = 167,
	ns2__LithologyQualifierKind__marcasitic = 168,
	ns2__LithologyQualifierKind__marl = 169,
	ns2__LithologyQualifierKind__marly = 170,
	ns2__LithologyQualifierKind__metamorphic_x0020rock = 171,
	ns2__LithologyQualifierKind__mica = 172,
	ns2__LithologyQualifierKind__mica_x0020schist = 173,
	ns2__LithologyQualifierKind__micaceous = 174,
	ns2__LithologyQualifierKind__microfossiliferous = 175,
	ns2__LithologyQualifierKind__microfossils = 176,
	ns2__LithologyQualifierKind__migmatite = 177,
	ns2__LithologyQualifierKind__migmatitic = 178,
	ns2__LithologyQualifierKind__monzogabbro = 179,
	ns2__LithologyQualifierKind__monzogabbroic = 180,
	ns2__LithologyQualifierKind__mud = 181,
	ns2__LithologyQualifierKind__muddy = 182,
	ns2__LithologyQualifierKind__mudstone = 183,
	ns2__LithologyQualifierKind__mylonitic_x0020rock = 184,
	ns2__LithologyQualifierKind__no_x0020sample = 185,
	ns2__LithologyQualifierKind__oncolite = 186,
	ns2__LithologyQualifierKind__oncoliths = 187,
	ns2__LithologyQualifierKind__oncolitic = 188,
	ns2__LithologyQualifierKind__ooids = 189,
	ns2__LithologyQualifierKind__ooliths = 190,
	ns2__LithologyQualifierKind__oolitic = 191,
	ns2__LithologyQualifierKind__ooze = 192,
	ns2__LithologyQualifierKind__ophiolite = 193,
	ns2__LithologyQualifierKind__ophiolitic = 194,
	ns2__LithologyQualifierKind__organic_x0020bearing_x0020mudstone = 195,
	ns2__LithologyQualifierKind__ostracodal = 196,
	ns2__LithologyQualifierKind__ostracods = 197,
	ns2__LithologyQualifierKind__peat = 198,
	ns2__LithologyQualifierKind__peaty = 199,
	ns2__LithologyQualifierKind__pebble = 200,
	ns2__LithologyQualifierKind__pebbly = 201,
	ns2__LithologyQualifierKind__pegmatite = 202,
	ns2__LithologyQualifierKind__pegmatitic = 203,
	ns2__LithologyQualifierKind__pelletal = 204,
	ns2__LithologyQualifierKind__pellets = 205,
	ns2__LithologyQualifierKind__peloidal = 206,
	ns2__LithologyQualifierKind__peloids = 207,
	ns2__LithologyQualifierKind__peridotite = 208,
	ns2__LithologyQualifierKind__peridotitic = 209,
	ns2__LithologyQualifierKind__phaneritic_x0020igneous_x0020rock = 210,
	ns2__LithologyQualifierKind__phonolite = 211,
	ns2__LithologyQualifierKind__phonolitic = 212,
	ns2__LithologyQualifierKind__phonolitoid = 213,
	ns2__LithologyQualifierKind__phosphate = 214,
	ns2__LithologyQualifierKind__phosphate_x0020rock = 215,
	ns2__LithologyQualifierKind__phosphatic = 216,
	ns2__LithologyQualifierKind__phyllite = 217,
	ns2__LithologyQualifierKind__phyllitic = 218,
	ns2__LithologyQualifierKind__pisolite = 219,
	ns2__LithologyQualifierKind__pisoliths = 220,
	ns2__LithologyQualifierKind__pisolitic = 221,
	ns2__LithologyQualifierKind__plant_x0020remains = 222,
	ns2__LithologyQualifierKind__porphyritic = 223,
	ns2__LithologyQualifierKind__porphyry = 224,
	ns2__LithologyQualifierKind__potassium_x0020and_x0020magnesium_x0020salts = 225,
	ns2__LithologyQualifierKind__pyrite = 226,
	ns2__LithologyQualifierKind__pyritic = 227,
	ns2__LithologyQualifierKind__pyroclastic_x0020breccia = 228,
	ns2__LithologyQualifierKind__pyroclastic_x0020rock = 229,
	ns2__LithologyQualifierKind__pyroxenite = 230,
	ns2__LithologyQualifierKind__pyroxenitic = 231,
	ns2__LithologyQualifierKind__quartiferous = 232,
	ns2__LithologyQualifierKind__quartz = 233,
	ns2__LithologyQualifierKind__quartz_x0020arenite = 234,
	ns2__LithologyQualifierKind__quartzite = 235,
	ns2__LithologyQualifierKind__quartzitic = 236,
	ns2__LithologyQualifierKind__radiolaria = 237,
	ns2__LithologyQualifierKind__radiolarian = 238,
	ns2__LithologyQualifierKind__rhyolite = 239,
	ns2__LithologyQualifierKind__rhyolitic = 240,
	ns2__LithologyQualifierKind__rock_x0020salt = 241,
	ns2__LithologyQualifierKind__rootlets = 242,
	ns2__LithologyQualifierKind__salty = 243,
	ns2__LithologyQualifierKind__sand = 244,
	ns2__LithologyQualifierKind__sandstone = 245,
	ns2__LithologyQualifierKind__sandy = 246,
	ns2__LithologyQualifierKind__sapropel = 247,
	ns2__LithologyQualifierKind__sapropelic = 248,
	ns2__LithologyQualifierKind__schist = 249,
	ns2__LithologyQualifierKind__schisty = 250,
	ns2__LithologyQualifierKind__sepentinitic = 251,
	ns2__LithologyQualifierKind__serpentinite = 252,
	ns2__LithologyQualifierKind__shale = 253,
	ns2__LithologyQualifierKind__shaly = 254,
	ns2__LithologyQualifierKind__shell_x0020fragments = 255,
	ns2__LithologyQualifierKind__shelly = 256,
	ns2__LithologyQualifierKind__siderite = 257,
	ns2__LithologyQualifierKind__siderite_x0020concretion = 258,
	ns2__LithologyQualifierKind__sideritic = 259,
	ns2__LithologyQualifierKind__siliceous_x0020ooze = 260,
	ns2__LithologyQualifierKind__silt = 261,
	ns2__LithologyQualifierKind__siltstone = 262,
	ns2__LithologyQualifierKind__silty = 263,
	ns2__LithologyQualifierKind__skarn = 264,
	ns2__LithologyQualifierKind__skarny = 265,
	ns2__LithologyQualifierKind__slate = 266,
	ns2__LithologyQualifierKind__slaty = 267,
	ns2__LithologyQualifierKind__smectite = 268,
	ns2__LithologyQualifierKind__smectitic = 269,
	ns2__LithologyQualifierKind__spicular = 270,
	ns2__LithologyQualifierKind__spicules = 271,
	ns2__LithologyQualifierKind__spilite = 272,
	ns2__LithologyQualifierKind__spilitic = 273,
	ns2__LithologyQualifierKind__stylolites = 274,
	ns2__LithologyQualifierKind__stylolitic = 275,
	ns2__LithologyQualifierKind__syenite = 276,
	ns2__LithologyQualifierKind__syenitic = 277,
	ns2__LithologyQualifierKind__syenitoid = 278,
	ns2__LithologyQualifierKind__sylvite = 279,
	ns2__LithologyQualifierKind__sylvitic = 280,
	ns2__LithologyQualifierKind__tarry = 281,
	ns2__LithologyQualifierKind__tephrite = 282,
	ns2__LithologyQualifierKind__tephritic = 283,
	ns2__LithologyQualifierKind__tephritoid = 284,
	ns2__LithologyQualifierKind__tholeiitic_x0020basalt = 285,
	ns2__LithologyQualifierKind__tonalite = 286,
	ns2__LithologyQualifierKind__tonalitic = 287,
	ns2__LithologyQualifierKind__trachyte = 288,
	ns2__LithologyQualifierKind__trachytic = 289,
	ns2__LithologyQualifierKind__trachytic_x0020rock = 290,
	ns2__LithologyQualifierKind__trachytoid = 291,
	ns2__LithologyQualifierKind__travertine = 292,
	ns2__LithologyQualifierKind__tuff = 293,
	ns2__LithologyQualifierKind__tuffaceous = 294,
	ns2__LithologyQualifierKind__tuffite = 295,
	ns2__LithologyQualifierKind__tuffitic = 296,
	ns2__LithologyQualifierKind__ultrabasic = 297,
	ns2__LithologyQualifierKind__undifferentiated = 298,
	ns2__LithologyQualifierKind__unknown = 299,
	ns2__LithologyQualifierKind__wacke = 300
};
#endif

/* testh.h:19081 */
#ifndef SOAP_TYPE_ns2__LithostratigraphicRank
#define SOAP_TYPE_ns2__LithostratigraphicRank (639)
/* ns2:LithostratigraphicRank */
enum ns2__LithostratigraphicRank {
	ns2__LithostratigraphicRank__group = 0,
	ns2__LithostratigraphicRank__formation = 1,
	ns2__LithostratigraphicRank__member = 2,
	ns2__LithostratigraphicRank__bed = 3
};
#endif

/* testh.h:19130 */
#ifndef SOAP_TYPE_ns2__MatrixCementKind
#define SOAP_TYPE_ns2__MatrixCementKind (640)
/* ns2:MatrixCementKind */
enum ns2__MatrixCementKind {
	ns2__MatrixCementKind__ankerite = 0,
	ns2__MatrixCementKind__calcite = 1,
	ns2__MatrixCementKind__chlorite = 2,
	ns2__MatrixCementKind__dolomite = 3,
	ns2__MatrixCementKind__illite = 4,
	ns2__MatrixCementKind__kaolinite = 5,
	ns2__MatrixCementKind__quartz = 6,
	ns2__MatrixCementKind__siderite = 7,
	ns2__MatrixCementKind__smectite = 8
};
#endif

/* testh.h:19150 */
#ifndef SOAP_TYPE_ns2__MeasureClass
#define SOAP_TYPE_ns2__MeasureClass (641)
/* ns2:MeasureClass */
enum ns2__MeasureClass {
	ns2__MeasureClass__absorbed_x0020dose = 0,
	ns2__MeasureClass__activity_x0020of_x0020radioactivity = 1,
	ns2__MeasureClass__activity_x0020of_x0020radioactivity_x0020per_x0020volume = 2,
	ns2__MeasureClass__amount_x0020of_x0020substance = 3,
	ns2__MeasureClass__amount_x0020of_x0020substance_x0020per_x0020amount_x0020of_x0020substance = 4,
	ns2__MeasureClass__amount_x0020of_x0020substance_x0020per_x0020area = 5,
	ns2__MeasureClass__amount_x0020of_x0020substance_x0020per_x0020time = 6,
	ns2__MeasureClass__amount_x0020of_x0020substance_x0020per_x0020time_x0020per_x0020area = 7,
	ns2__MeasureClass__amount_x0020of_x0020substance_x0020per_x0020volume = 8,
	ns2__MeasureClass__angle_x0020per_x0020length = 9,
	ns2__MeasureClass__angle_x0020per_x0020volume = 10,
	ns2__MeasureClass__angular_x0020acceleration = 11,
	ns2__MeasureClass__angular_x0020velocity = 12,
	ns2__MeasureClass__api_x0020gamma_x0020ray = 13,
	ns2__MeasureClass__api_x0020gravity = 14,
	ns2__MeasureClass__api_x0020neutron = 15,
	ns2__MeasureClass__area = 16,
	ns2__MeasureClass__area_x0020per_x0020amount_x0020of_x0020substance = 17,
	ns2__MeasureClass__area_x0020per_x0020area = 18,
	ns2__MeasureClass__area_x0020per_x0020count = 19,
	ns2__MeasureClass__area_x0020per_x0020mass = 20,
	ns2__MeasureClass__area_x0020per_x0020time = 21,
	ns2__MeasureClass__area_x0020per_x0020volume = 22,
	ns2__MeasureClass__attenuation_x0020per_x0020frequency_x0020interval = 23,
	ns2__MeasureClass__capacitance = 24,
	ns2__MeasureClass__cation_x0020exchange_x0020capacity = 25,
	ns2__MeasureClass__data_x0020transfer_x0020speed = 26,
	ns2__MeasureClass__diffusion_x0020coefficient = 27,
	ns2__MeasureClass__diffusive_x0020time_x0020of_x0020flight = 28,
	ns2__MeasureClass__digital_x0020storage = 29,
	ns2__MeasureClass__dimensionless = 30,
	ns2__MeasureClass__dipole_x0020moment = 31,
	ns2__MeasureClass__dose_x0020equivalent = 32,
	ns2__MeasureClass__dynamic_x0020viscosity = 33,
	ns2__MeasureClass__electric_x0020charge = 34,
	ns2__MeasureClass__electric_x0020charge_x0020per_x0020area = 35,
	ns2__MeasureClass__electric_x0020charge_x0020per_x0020mass = 36,
	ns2__MeasureClass__electric_x0020charge_x0020per_x0020volume = 37,
	ns2__MeasureClass__electric_x0020conductance = 38,
	ns2__MeasureClass__electric_x0020conductivity = 39,
	ns2__MeasureClass__electric_x0020current = 40,
	ns2__MeasureClass__electric_x0020current_x0020density = 41,
	ns2__MeasureClass__electric_x0020field_x0020strength = 42,
	ns2__MeasureClass__electric_x0020potential_x0020difference = 43,
	ns2__MeasureClass__electric_x0020resistance = 44,
	ns2__MeasureClass__electric_x0020resistance_x0020per_x0020length = 45,
	ns2__MeasureClass__electrical_x0020resistivity = 46,
	ns2__MeasureClass__electromagnetic_x0020moment = 47,
	ns2__MeasureClass__energy = 48,
	ns2__MeasureClass__energy_x0020length_x0020per_x0020area = 49,
	ns2__MeasureClass__energy_x0020length_x0020per_x0020time_x0020area_x0020temperature = 50,
	ns2__MeasureClass__energy_x0020per_x0020area = 51,
	ns2__MeasureClass__energy_x0020per_x0020length = 52,
	ns2__MeasureClass__energy_x0020per_x0020mass = 53,
	ns2__MeasureClass__energy_x0020per_x0020mass_x0020per_x0020time = 54,
	ns2__MeasureClass__energy_x0020per_x0020volume = 55,
	ns2__MeasureClass__force = 56,
	ns2__MeasureClass__force_x0020area = 57,
	ns2__MeasureClass__force_x0020length_x0020per_x0020length = 58,
	ns2__MeasureClass__force_x0020per_x0020force = 59,
	ns2__MeasureClass__force_x0020per_x0020length = 60,
	ns2__MeasureClass__force_x0020per_x0020volume = 61,
	ns2__MeasureClass__frequency = 62,
	ns2__MeasureClass__frequency_x0020interval = 63,
	ns2__MeasureClass__heat_x0020capacity = 64,
	ns2__MeasureClass__heat_x0020flow_x0020rate = 'A',
	ns2__MeasureClass__heat_x0020transfer_x0020coefficient = 'B',
	ns2__MeasureClass__illuminance = 'C',
	ns2__MeasureClass__inductance = 'D',
	ns2__MeasureClass__isothermal_x0020compressibility = 'E',
	ns2__MeasureClass__kinematic_x0020viscosity = 'F',
	ns2__MeasureClass__length = 'G',
	ns2__MeasureClass__length_x0020per_x0020angle = 'H',
	ns2__MeasureClass__length_x0020per_x0020length = 'I',
	ns2__MeasureClass__length_x0020per_x0020mass = 'J',
	ns2__MeasureClass__length_x0020per_x0020pressure = 'K',
	ns2__MeasureClass__length_x0020per_x0020temperature = 'L',
	ns2__MeasureClass__length_x0020per_x0020time = 'M',
	ns2__MeasureClass__length_x0020per_x0020volume = 'N',
	ns2__MeasureClass__light_x0020exposure = 'O',
	ns2__MeasureClass__linear_x0020acceleration = 'P',
	ns2__MeasureClass__linear_x0020thermal_x0020expansion = 'Q',
	ns2__MeasureClass__logarithmic_x0020power_x0020ratio = 'R',
	ns2__MeasureClass__logarithmic_x0020power_x0020ratio_x0020per_x0020length = 'S',
	ns2__MeasureClass__luminance = 'T',
	ns2__MeasureClass__luminous_x0020efficacy = 'U',
	ns2__MeasureClass__luminous_x0020flux = 'V',
	ns2__MeasureClass__luminous_x0020intensity = 'W',
	ns2__MeasureClass__magnetic_x0020dipole_x0020moment = 'X',
	ns2__MeasureClass__magnetic_x0020field_x0020strength = 'Y',
	ns2__MeasureClass__magnetic_x0020flux = 'Z',
	ns2__MeasureClass__magnetic_x0020flux_x0020density = 91,
	ns2__MeasureClass__magnetic_x0020flux_x0020density_x0020per_x0020length = 92,
	ns2__MeasureClass__magnetic_x0020permeability = 93,
	ns2__MeasureClass__magnetic_x0020vector_x0020potential = 94,
	ns2__MeasureClass__mass = 95,
	ns2__MeasureClass__mass_x0020length = 96,
	ns2__MeasureClass__mass_x0020per_x0020area = 'a',
	ns2__MeasureClass__mass_x0020per_x0020energy = 'b',
	ns2__MeasureClass__mass_x0020per_x0020length = 'c',
	ns2__MeasureClass__mass_x0020per_x0020mass = 'd',
	ns2__MeasureClass__mass_x0020per_x0020time = 'e',
	ns2__MeasureClass__mass_x0020per_x0020time_x0020per_x0020area = 'f',
	ns2__MeasureClass__mass_x0020per_x0020time_x0020per_x0020length = 'g',
	ns2__MeasureClass__mass_x0020per_x0020volume = 'h',
	ns2__MeasureClass__mass_x0020per_x0020volume_x0020per_x0020length = 'i',
	ns2__MeasureClass__mass_x0020per_x0020volume_x0020per_x0020pressure = 'j',
	ns2__MeasureClass__mass_x0020per_x0020volume_x0020per_x0020temperature = 'k',
	ns2__MeasureClass__mobility = 'l',
	ns2__MeasureClass__molar_x0020energy = 'm',
	ns2__MeasureClass__molar_x0020heat_x0020capacity = 'n',
	ns2__MeasureClass__molar_x0020volume = 'o',
	ns2__MeasureClass__molecular_x0020weight = 'p',
	ns2__MeasureClass__moment_x0020of_x0020force = 'q',
	ns2__MeasureClass__moment_x0020of_x0020inertia = 'r',
	ns2__MeasureClass__momentum = 's',
	ns2__MeasureClass__normalized_x0020power = 't',
	ns2__MeasureClass__permeability_x0020length = 'u',
	ns2__MeasureClass__permeability_x0020rock = 'v',
	ns2__MeasureClass__permittivity = 'w',
	ns2__MeasureClass__plane_x0020angle = 'x',
	ns2__MeasureClass__potential_x0020difference_x0020per_x0020power_x0020drop = 'y',
	ns2__MeasureClass__power = 'z',
	ns2__MeasureClass__power_x0020per_x0020area = 123,
	ns2__MeasureClass__power_x0020per_x0020power = 124,
	ns2__MeasureClass__power_x0020per_x0020volume = 125,
	ns2__MeasureClass__pressure = 126,
	ns2__MeasureClass__pressure_x0020per_x0020flowrate = 127,
	ns2__MeasureClass__pressure_x0020per_x0020flowrate_x0020squared = 128,
	ns2__MeasureClass__pressure_x0020per_x0020pressure = 129,
	ns2__MeasureClass__pressure_x0020per_x0020time = 130,
	ns2__MeasureClass__pressure_x0020per_x0020volume = 131,
	ns2__MeasureClass__pressure_x0020squared = 132,
	ns2__MeasureClass__pressure_x0020squared_x0020per_x0020force_x0020time_x0020per_x0020area = 133,
	ns2__MeasureClass__pressure_x0020time_x0020per_x0020volume = 134,
	ns2__MeasureClass__quantity_x0020of_x0020light = 135,
	ns2__MeasureClass__radiance = 136,
	ns2__MeasureClass__radiant_x0020intensity = 137,
	ns2__MeasureClass__reciprocal_x0020area = 138,
	ns2__MeasureClass__reciprocal_x0020electric_x0020potential_x0020difference = 139,
	ns2__MeasureClass__reciprocal_x0020force = 140,
	ns2__MeasureClass__reciprocal_x0020length = 141,
	ns2__MeasureClass__reciprocal_x0020mass = 142,
	ns2__MeasureClass__reciprocal_x0020mass_x0020time = 143,
	ns2__MeasureClass__reciprocal_x0020pressure = 144,
	ns2__MeasureClass__reciprocal_x0020time = 145,
	ns2__MeasureClass__reciprocal_x0020volume = 146,
	ns2__MeasureClass__reluctance = 147,
	ns2__MeasureClass__second_x0020moment_x0020of_x0020area = 148,
	ns2__MeasureClass__signaling_x0020event_x0020per_x0020time = 149,
	ns2__MeasureClass__solid_x0020angle = 150,
	ns2__MeasureClass__specific_x0020heat_x0020capacity = 151,
	ns2__MeasureClass__temperature_x0020interval = 152,
	ns2__MeasureClass__temperature_x0020interval_x0020per_x0020length = 153,
	ns2__MeasureClass__temperature_x0020interval_x0020per_x0020pressure = 154,
	ns2__MeasureClass__temperature_x0020interval_x0020per_x0020time = 155,
	ns2__MeasureClass__thermal_x0020conductance = 156,
	ns2__MeasureClass__thermal_x0020conductivity = 157,
	ns2__MeasureClass__thermal_x0020diffusivity = 158,
	ns2__MeasureClass__thermal_x0020insulance = 159,
	ns2__MeasureClass__thermal_x0020resistance = 160,
	ns2__MeasureClass__thermodynamic_x0020temperature = 161,
	ns2__MeasureClass__thermodynamic_x0020temperature_x0020per_x0020thermodynamic_x0020temperature = 162,
	ns2__MeasureClass__time = 163,
	ns2__MeasureClass__time_x0020per_x0020length = 164,
	ns2__MeasureClass__time_x0020per_x0020mass = 165,
	ns2__MeasureClass__time_x0020per_x0020time = 166,
	ns2__MeasureClass__time_x0020per_x0020volume = 167,
	ns2__MeasureClass__vertical_x0020coordinate = 168,
	ns2__MeasureClass__volume = 169,
	ns2__MeasureClass__volume_x0020flow_x0020rate_x0020per_x0020volume_x0020flow_x0020rate = 170,
	ns2__MeasureClass__volume_x0020per_x0020area = 171,
	ns2__MeasureClass__volume_x0020per_x0020length = 172,
	ns2__MeasureClass__volume_x0020per_x0020mass = 173,
	ns2__MeasureClass__volume_x0020per_x0020pressure = 174,
	ns2__MeasureClass__volume_x0020per_x0020rotation = 175,
	ns2__MeasureClass__volume_x0020per_x0020time = 176,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020length = 177,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020area = 178,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020length = 179,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020pressure = 180,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020pressure_x0020length = 181,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020time = 182,
	ns2__MeasureClass__volume_x0020per_x0020time_x0020per_x0020volume = 183,
	ns2__MeasureClass__volume_x0020per_x0020volume = 184,
	ns2__MeasureClass__volumetric_x0020heat_x0020transfer_x0020coefficient = 185,
	ns2__MeasureClass__volumetric_x0020thermal_x0020expansion = 186,
	ns2__MeasureClass__unitless = 187
};
#endif

/* testh.h:19355 */
#ifndef SOAP_TYPE_ns2__NorthReferenceKind
#define SOAP_TYPE_ns2__NorthReferenceKind (642)
/* ns2:NorthReferenceKind */
enum ns2__NorthReferenceKind {
	ns2__NorthReferenceKind__astronomic_x0020north = 0,
	ns2__NorthReferenceKind__compass_x0020north = 1,
	ns2__NorthReferenceKind__grid_x0020north = 2,
	ns2__NorthReferenceKind__magnetic_x0020north = 3,
	ns2__NorthReferenceKind__plant_x0020north = 4,
	ns2__NorthReferenceKind__true_x0020north = 5
};
#endif

/* testh.h:19368 */
#ifndef SOAP_TYPE_ns2__QuantityClassKind
#define SOAP_TYPE_ns2__QuantityClassKind (643)
/* ns2:QuantityClassKind */
enum ns2__QuantityClassKind {
	ns2__QuantityClassKind__absorbed_x0020dose = 0,
	ns2__QuantityClassKind__activity_x0020of_x0020radioactivity = 1,
	ns2__QuantityClassKind__activity_x0020of_x0020radioactivity_x0020per_x0020volume = 2,
	ns2__QuantityClassKind__amount_x0020of_x0020substance = 3,
	ns2__QuantityClassKind__amount_x0020of_x0020substance_x0020per_x0020amount_x0020of_x0020substance = 4,
	ns2__QuantityClassKind__amount_x0020of_x0020substance_x0020per_x0020area = 5,
	ns2__QuantityClassKind__amount_x0020of_x0020substance_x0020per_x0020time = 6,
	ns2__QuantityClassKind__amount_x0020of_x0020substance_x0020per_x0020time_x0020per_x0020area = 7,
	ns2__QuantityClassKind__amount_x0020of_x0020substance_x0020per_x0020volume = 8,
	ns2__QuantityClassKind__angle_x0020per_x0020length = 9,
	ns2__QuantityClassKind__angle_x0020per_x0020volume = 10,
	ns2__QuantityClassKind__angular_x0020acceleration = 11,
	ns2__QuantityClassKind__angular_x0020velocity = 12,
	ns2__QuantityClassKind__api_x0020gamma_x0020ray = 13,
	ns2__QuantityClassKind__api_x0020gravity = 14,
	ns2__QuantityClassKind__api_x0020neutron = 15,
	ns2__QuantityClassKind__area = 16,
	ns2__QuantityClassKind__area_x0020per_x0020amount_x0020of_x0020substance = 17,
	ns2__QuantityClassKind__area_x0020per_x0020area = 18,
	ns2__QuantityClassKind__area_x0020per_x0020count = 19,
	ns2__QuantityClassKind__area_x0020per_x0020mass = 20,
	ns2__QuantityClassKind__area_x0020per_x0020time = 21,
	ns2__QuantityClassKind__area_x0020per_x0020volume = 22,
	ns2__QuantityClassKind__attenuation_x0020per_x0020frequency_x0020interval = 23,
	ns2__QuantityClassKind__capacitance = 24,
	ns2__QuantityClassKind__cation_x0020exchange_x0020capacity = 25,
	ns2__QuantityClassKind__data_x0020transfer_x0020speed = 26,
	ns2__QuantityClassKind__diffusion_x0020coefficient = 27,
	ns2__QuantityClassKind__diffusive_x0020time_x0020of_x0020flight = 28,
	ns2__QuantityClassKind__digital_x0020storage = 29,
	ns2__QuantityClassKind__dimensionless = 30,
	ns2__QuantityClassKind__dipole_x0020moment = 31,
	ns2__QuantityClassKind__dose_x0020equivalent = 32,
	ns2__QuantityClassKind__dynamic_x0020viscosity = 33,
	ns2__QuantityClassKind__electric_x0020charge = 34,
	ns2__QuantityClassKind__electric_x0020charge_x0020per_x0020area = 35,
	ns2__QuantityClassKind__electric_x0020charge_x0020per_x0020mass = 36,
	ns2__QuantityClassKind__electric_x0020charge_x0020per_x0020volume = 37,
	ns2__QuantityClassKind__electric_x0020conductance = 38,
	ns2__QuantityClassKind__electric_x0020conductivity = 39,
	ns2__QuantityClassKind__electric_x0020current = 40,
	ns2__QuantityClassKind__electric_x0020current_x0020density = 41,
	ns2__QuantityClassKind__electric_x0020field_x0020strength = 42,
	ns2__QuantityClassKind__electric_x0020potential_x0020difference = 43,
	ns2__QuantityClassKind__electric_x0020resistance = 44,
	ns2__QuantityClassKind__electric_x0020resistance_x0020per_x0020length = 45,
	ns2__QuantityClassKind__electrical_x0020resistivity = 46,
	ns2__QuantityClassKind__electromagnetic_x0020moment = 47,
	ns2__QuantityClassKind__energy = 48,
	ns2__QuantityClassKind__energy_x0020length_x0020per_x0020area = 49,
	ns2__QuantityClassKind__energy_x0020length_x0020per_x0020time_x0020area_x0020temperature = 50,
	ns2__QuantityClassKind__energy_x0020per_x0020area = 51,
	ns2__QuantityClassKind__energy_x0020per_x0020length = 52,
	ns2__QuantityClassKind__energy_x0020per_x0020mass = 53,
	ns2__QuantityClassKind__energy_x0020per_x0020mass_x0020per_x0020time = 54,
	ns2__QuantityClassKind__energy_x0020per_x0020volume = 55,
	ns2__QuantityClassKind__force = 56,
	ns2__QuantityClassKind__force_x0020area = 57,
	ns2__QuantityClassKind__force_x0020length_x0020per_x0020length = 58,
	ns2__QuantityClassKind__force_x0020per_x0020force = 59,
	ns2__QuantityClassKind__force_x0020per_x0020length = 60,
	ns2__QuantityClassKind__force_x0020per_x0020volume = 61,
	ns2__QuantityClassKind__frequency = 62,
	ns2__QuantityClassKind__frequency_x0020interval = 63,
	ns2__QuantityClassKind__heat_x0020capacity = 64,
	ns2__QuantityClassKind__heat_x0020flow_x0020rate = 'A',
	ns2__QuantityClassKind__heat_x0020transfer_x0020coefficient = 'B',
	ns2__QuantityClassKind__illuminance = 'C',
	ns2__QuantityClassKind__inductance = 'D',
	ns2__QuantityClassKind__isothermal_x0020compressibility = 'E',
	ns2__QuantityClassKind__kinematic_x0020viscosity = 'F',
	ns2__QuantityClassKind__length = 'G',
	ns2__QuantityClassKind__length_x0020per_x0020angle = 'H',
	ns2__QuantityClassKind__length_x0020per_x0020length = 'I',
	ns2__QuantityClassKind__length_x0020per_x0020mass = 'J',
	ns2__QuantityClassKind__length_x0020per_x0020pressure = 'K',
	ns2__QuantityClassKind__length_x0020per_x0020temperature = 'L',
	ns2__QuantityClassKind__length_x0020per_x0020time = 'M',
	ns2__QuantityClassKind__length_x0020per_x0020volume = 'N',
	ns2__QuantityClassKind__light_x0020exposure = 'O',
	ns2__QuantityClassKind__linear_x0020acceleration = 'P',
	ns2__QuantityClassKind__linear_x0020thermal_x0020expansion = 'Q',
	ns2__QuantityClassKind__logarithmic_x0020power_x0020ratio = 'R',
	ns2__QuantityClassKind__logarithmic_x0020power_x0020ratio_x0020per_x0020length = 'S',
	ns2__QuantityClassKind__luminance = 'T',
	ns2__QuantityClassKind__luminous_x0020efficacy = 'U',
	ns2__QuantityClassKind__luminous_x0020flux = 'V',
	ns2__QuantityClassKind__luminous_x0020intensity = 'W',
	ns2__QuantityClassKind__magnetic_x0020dipole_x0020moment = 'X',
	ns2__QuantityClassKind__magnetic_x0020field_x0020strength = 'Y',
	ns2__QuantityClassKind__magnetic_x0020flux = 'Z',
	ns2__QuantityClassKind__magnetic_x0020flux_x0020density = 91,
	ns2__QuantityClassKind__magnetic_x0020flux_x0020density_x0020per_x0020length = 92,
	ns2__QuantityClassKind__magnetic_x0020permeability = 93,
	ns2__QuantityClassKind__magnetic_x0020vector_x0020potential = 94,
	ns2__QuantityClassKind__mass = 95,
	ns2__QuantityClassKind__mass_x0020length = 96,
	ns2__QuantityClassKind__mass_x0020per_x0020area = 'a',
	ns2__QuantityClassKind__mass_x0020per_x0020energy = 'b',
	ns2__QuantityClassKind__mass_x0020per_x0020length = 'c',
	ns2__QuantityClassKind__mass_x0020per_x0020mass = 'd',
	ns2__QuantityClassKind__mass_x0020per_x0020time = 'e',
	ns2__QuantityClassKind__mass_x0020per_x0020time_x0020per_x0020area = 'f',
	ns2__QuantityClassKind__mass_x0020per_x0020time_x0020per_x0020length = 'g',
	ns2__QuantityClassKind__mass_x0020per_x0020volume = 'h',
	ns2__QuantityClassKind__mass_x0020per_x0020volume_x0020per_x0020length = 'i',
	ns2__QuantityClassKind__mass_x0020per_x0020volume_x0020per_x0020pressure = 'j',
	ns2__QuantityClassKind__mass_x0020per_x0020volume_x0020per_x0020temperature = 'k',
	ns2__QuantityClassKind__mobility = 'l',
	ns2__QuantityClassKind__molar_x0020energy = 'm',
	ns2__QuantityClassKind__molar_x0020heat_x0020capacity = 'n',
	ns2__QuantityClassKind__molar_x0020volume = 'o',
	ns2__QuantityClassKind__molecular_x0020weight = 'p',
	ns2__QuantityClassKind__moment_x0020of_x0020force = 'q',
	ns2__QuantityClassKind__moment_x0020of_x0020inertia = 'r',
	ns2__QuantityClassKind__momentum = 's',
	ns2__QuantityClassKind__normalized_x0020power = 't',
	ns2__QuantityClassKind__pressure_x0020per_x0020flowrate = 'u',
	ns2__QuantityClassKind__pressure_x0020per_x0020flowrate_x0020squared = 'v',
	ns2__QuantityClassKind__permeability_x0020length = 'w',
	ns2__QuantityClassKind__permeability_x0020rock = 'x',
	ns2__QuantityClassKind__permittivity = 'y',
	ns2__QuantityClassKind__plane_x0020angle = 'z',
	ns2__QuantityClassKind__potential_x0020difference_x0020per_x0020power_x0020drop = 123,
	ns2__QuantityClassKind__power = 124,
	ns2__QuantityClassKind__power_x0020per_x0020area = 125,
	ns2__QuantityClassKind__power_x0020per_x0020power = 126,
	ns2__QuantityClassKind__power_x0020per_x0020volume = 127,
	ns2__QuantityClassKind__pressure = 128,
	ns2__QuantityClassKind__pressure_x0020per_x0020pressure = 129,
	ns2__QuantityClassKind__pressure_x0020per_x0020time = 130,
	ns2__QuantityClassKind__pressure_x0020per_x0020volume = 131,
	ns2__QuantityClassKind__pressure_x0020squared = 132,
	ns2__QuantityClassKind__pressure_x0020squared_x0020per_x0020force_x0020time_x0020per_x0020area = 133,
	ns2__QuantityClassKind__pressure_x0020time_x0020per_x0020volume = 134,
	ns2__QuantityClassKind__quantity_x0020of_x0020light = 135,
	ns2__QuantityClassKind__radiance = 136,
	ns2__QuantityClassKind__radiant_x0020intensity = 137,
	ns2__QuantityClassKind__reciprocal_x0020area = 138,
	ns2__QuantityClassKind__reciprocal_x0020electric_x0020potential_x0020difference = 139,
	ns2__QuantityClassKind__reciprocal_x0020force = 140,
	ns2__QuantityClassKind__reciprocal_x0020length = 141,
	ns2__QuantityClassKind__reciprocal_x0020mass = 142,
	ns2__QuantityClassKind__reciprocal_x0020mass_x0020time = 143,
	ns2__QuantityClassKind__reciprocal_x0020pressure = 144,
	ns2__QuantityClassKind__reciprocal_x0020time = 145,
	ns2__QuantityClassKind__reciprocal_x0020volume = 146,
	ns2__QuantityClassKind__reluctance = 147,
	ns2__QuantityClassKind__second_x0020moment_x0020of_x0020area = 148,
	ns2__QuantityClassKind__signaling_x0020event_x0020per_x0020time = 149,
	ns2__QuantityClassKind__solid_x0020angle = 150,
	ns2__QuantityClassKind__specific_x0020heat_x0020capacity = 151,
	ns2__QuantityClassKind__temperature_x0020interval = 152,
	ns2__QuantityClassKind__temperature_x0020interval_x0020per_x0020length = 153,
	ns2__QuantityClassKind__temperature_x0020interval_x0020per_x0020pressure = 154,
	ns2__QuantityClassKind__temperature_x0020interval_x0020per_x0020time = 155,
	ns2__QuantityClassKind__thermal_x0020conductance = 156,
	ns2__QuantityClassKind__thermal_x0020conductivity = 157,
	ns2__QuantityClassKind__thermal_x0020diffusivity = 158,
	ns2__QuantityClassKind__thermal_x0020insulance = 159,
	ns2__QuantityClassKind__thermal_x0020resistance = 160,
	ns2__QuantityClassKind__thermodynamic_x0020temperature = 161,
	ns2__QuantityClassKind__thermodynamic_x0020temperature_x0020per_x0020thermodynamic_x0020temperature = 162,
	ns2__QuantityClassKind__time = 163,
	ns2__QuantityClassKind__time_x0020per_x0020length = 164,
	ns2__QuantityClassKind__time_x0020per_x0020mass = 165,
	ns2__QuantityClassKind__time_x0020per_x0020time = 166,
	ns2__QuantityClassKind__time_x0020per_x0020volume = 167,
	ns2__QuantityClassKind__vertical_x0020coordinate = 168,
	ns2__QuantityClassKind__volume = 169,
	ns2__QuantityClassKind__volume_x0020flow_x0020rate_x0020per_x0020volume_x0020flow_x0020rate = 170,
	ns2__QuantityClassKind__volume_x0020per_x0020area = 171,
	ns2__QuantityClassKind__volume_x0020per_x0020length = 172,
	ns2__QuantityClassKind__volume_x0020per_x0020mass = 173,
	ns2__QuantityClassKind__volume_x0020per_x0020pressure = 174,
	ns2__QuantityClassKind__volume_x0020per_x0020rotation = 175,
	ns2__QuantityClassKind__volume_x0020per_x0020time = 176,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020length = 177,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020area = 178,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020length = 179,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020pressure = 180,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020pressure_x0020length = 181,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020time = 182,
	ns2__QuantityClassKind__volume_x0020per_x0020time_x0020per_x0020volume = 183,
	ns2__QuantityClassKind__volume_x0020per_x0020volume = 184,
	ns2__QuantityClassKind__volumetric_x0020heat_x0020transfer_x0020coefficient = 185,
	ns2__QuantityClassKind__volumetric_x0020thermal_x0020expansion = 186,
	ns2__QuantityClassKind__unitless = 187,
	ns2__QuantityClassKind__not_x0020a_x0020measure = 188
};
#endif

/* testh.h:19578 */
#ifndef SOAP_TYPE_ns2__ReferenceCondition
#define SOAP_TYPE_ns2__ReferenceCondition (644)
/* ns2:ReferenceCondition */
enum ns2__ReferenceCondition {
	ns2__ReferenceCondition__0_x0020degC_x00201_x0020atm = 0,
	ns2__ReferenceCondition__0_x0020degC_x00201_x0020bar = 1,
	ns2__ReferenceCondition__15_x0020degC_x00201_x0020atm = 2,
	ns2__ReferenceCondition__15_x0020degC_x00201_x0020bar = 3,
	ns2__ReferenceCondition__20_x0020degC_x00201_x0020atm = 4,
	ns2__ReferenceCondition__20_x0020degC_x00201_x0020bar = 5,
	ns2__ReferenceCondition__25_x0020degC_x00201_x0020bar = 6,
	ns2__ReferenceCondition__60_x0020degF_x00201_x0020atm = 7,
	ns2__ReferenceCondition__60_x0020degF_x002030_x0020in_x0020Hg = 8,
	ns2__ReferenceCondition__ambient = 9
};
#endif

/* testh.h:19611 */
#ifndef SOAP_TYPE_ns2__WellStatus
#define SOAP_TYPE_ns2__WellStatus (645)
/* ns2:WellStatus */
enum ns2__WellStatus {
	ns2__WellStatus__abandoned = 0,
	ns2__WellStatus__active = 1,
	ns2__WellStatus__active_x0020_x002d__x0020injecting = 2,
	ns2__WellStatus__active_x0020_x002d__x0020producing = 3,
	ns2__WellStatus__completed = 4,
	ns2__WellStatus__drilling = 5,
	ns2__WellStatus__partially_x0020plugged = 6,
	ns2__WellStatus__permitted = 7,
	ns2__WellStatus__plugged_x0020and_x0020abandoned = 8,
	ns2__WellStatus__proposed = 9,
	ns2__WellStatus__sold = 10,
	ns2__WellStatus__suspended = 11,
	ns2__WellStatus__temporarily_x0020abandoned = 12,
	ns2__WellStatus__testing = 13,
	ns2__WellStatus__tight = 14,
	ns2__WellStatus__working_x0020over = 15,
	ns2__WellStatus__unknown = 16
};
#endif

/* testh.h:19709 */
#ifndef SOAP_TYPE_ns2__AxisDirectionKind
#define SOAP_TYPE_ns2__AxisDirectionKind (646)
/* ns2:AxisDirectionKind */
enum ns2__AxisDirectionKind {
	ns2__AxisDirectionKind__aft = 0,
	ns2__AxisDirectionKind__away_from = 1,
	ns2__AxisDirectionKind__clockwise = 2,
	ns2__AxisDirectionKind__column_negative = 3,
	ns2__AxisDirectionKind__column_positive = 4,
	ns2__AxisDirectionKind__counter_clockwise = 5,
	ns2__AxisDirectionKind__display_down = 6,
	ns2__AxisDirectionKind__display_left = 7,
	ns2__AxisDirectionKind__display_right = 8,
	ns2__AxisDirectionKind__display_up = 9,
	ns2__AxisDirectionKind__down = 10,
	ns2__AxisDirectionKind__east = 11,
	ns2__AxisDirectionKind__east_north_east = 12,
	ns2__AxisDirectionKind__east_south_east = 13,
	ns2__AxisDirectionKind__forward = 14,
	ns2__AxisDirectionKind__future = 15,
	ns2__AxisDirectionKind__geocentric_x0020x = 16,
	ns2__AxisDirectionKind__geocentric_x0020y = 17,
	ns2__AxisDirectionKind__geocentric_x0020z = 18,
	ns2__AxisDirectionKind__north = 19,
	ns2__AxisDirectionKind__north_east = 20,
	ns2__AxisDirectionKind__north_north_east = 21,
	ns2__AxisDirectionKind__north_north_west = 22,
	ns2__AxisDirectionKind__north_west = 23,
	ns2__AxisDirectionKind__past = 24,
	ns2__AxisDirectionKind__port = 25,
	ns2__AxisDirectionKind__row_negative = 26,
	ns2__AxisDirectionKind__row_positive = 27,
	ns2__AxisDirectionKind__south = 28,
	ns2__AxisDirectionKind__south_east = 29,
	ns2__AxisDirectionKind__south_south_east = 30,
	ns2__AxisDirectionKind__south_south_west = 31,
	ns2__AxisDirectionKind__south_west = 32,
	ns2__AxisDirectionKind__starboard = 33,
	ns2__AxisDirectionKind__towards = 34,
	ns2__AxisDirectionKind__up = 35,
	ns2__AxisDirectionKind__west = 36,
	ns2__AxisDirectionKind__west_north_west = 37,
	ns2__AxisDirectionKind__west_south_west = 38
};
#endif

/* testh.h:19759 */
#ifndef SOAP_TYPE_ns2__AxisOrder2d
#define SOAP_TYPE_ns2__AxisOrder2d (647)
/* ns2:AxisOrder2d */
enum ns2__AxisOrder2d {
	ns2__AxisOrder2d__easting_x0020northing = 0,
	ns2__AxisOrder2d__easting_x0020southing = 1,
	ns2__AxisOrder2d__southing_x0020easting = 2,
	ns2__AxisOrder2d__northing_x0020easting = 3,
	ns2__AxisOrder2d__westing_x0020southing = 4,
	ns2__AxisOrder2d__southing_x0020westing = 5,
	ns2__AxisOrder2d__northing_x0020westing = 6,
	ns2__AxisOrder2d__westing_x0020northing = 7
};
#endif

/* testh.h:19802 */
#ifndef SOAP_TYPE_ns2__EastOrWest
#define SOAP_TYPE_ns2__EastOrWest (648)
/* ns2:EastOrWest */
enum ns2__EastOrWest {
	ns2__EastOrWest__east = 0,
	ns2__EastOrWest__west = 1
};
#endif

/* testh.h:19823 */
#ifndef SOAP_TYPE_ns2__NorthOrSouth
#define SOAP_TYPE_ns2__NorthOrSouth (649)
/* ns2:NorthOrSouth */
enum ns2__NorthOrSouth {
	ns2__NorthOrSouth__north = 0,
	ns2__NorthOrSouth__south = 1
};
#endif

/* testh.h:19844 */
#ifndef SOAP_TYPE_ns2__PrincipalMeridian
#define SOAP_TYPE_ns2__PrincipalMeridian (650)
/* ns2:PrincipalMeridian */
enum ns2__PrincipalMeridian {
	ns2__PrincipalMeridian__1st_x0020Principal_x0020Meridian = 0,
	ns2__PrincipalMeridian__2nd_x0020Principal_x0020Meridian = 1,
	ns2__PrincipalMeridian__3rd_x0020Principal_x0020Meridian = 2,
	ns2__PrincipalMeridian__4th_x0020Principal_x0020Meridian = 3,
	ns2__PrincipalMeridian__5th_x0020Principal_x0020Meridian = 4,
	ns2__PrincipalMeridian__6th_x0020Principal_x0020Meridian = 5,
	ns2__PrincipalMeridian__Black_x0020Hills_x0020Meridian = 6,
	ns2__PrincipalMeridian__Boise_x0020Meridian = 7,
	ns2__PrincipalMeridian__Chickasaw_x0020Meridian = 8,
	ns2__PrincipalMeridian__Choctaw_x0020Meridian = 9,
	ns2__PrincipalMeridian__Cimarron_x0020Meridian = 10,
	ns2__PrincipalMeridian__Copper_x0020River_x0020Meridian = 11,
	ns2__PrincipalMeridian__Fairbanks_x0020Meridian = 12,
	ns2__PrincipalMeridian__Gila_x0020and_x0020Salt_x0020River_x0020Meridian = 13,
	ns2__PrincipalMeridian__Humboldt_x0020Meridian = 14,
	ns2__PrincipalMeridian__Huntsville_x0020Meridian = 15,
	ns2__PrincipalMeridian__Indian_x0020Meridian = 16,
	ns2__PrincipalMeridian__Kateel_x0020River_x0020Meridian = 17,
	ns2__PrincipalMeridian__Lousiana_x0020Meridian = 18,
	ns2__PrincipalMeridian__Michigan_x0020Meridian = 19,
	ns2__PrincipalMeridian__Montana_x0020Meridian = 20,
	ns2__PrincipalMeridian__Mount_x0020Diablo_x0020Meridian = 21,
	ns2__PrincipalMeridian__Navajo_x0020Meridian = 22,
	ns2__PrincipalMeridian__New_x0020Mexico_x0020Meridian = 23,
	ns2__PrincipalMeridian__Saint_x0020Helena_x0020Meridian = 24,
	ns2__PrincipalMeridian__Saint_x0020Stephens_x0020Meridian = 25,
	ns2__PrincipalMeridian__Salt_x0020Lake_x0020Meridian = 26,
	ns2__PrincipalMeridian__San_x0020Bernardo_x0020Meridian = 27,
	ns2__PrincipalMeridian__Seward_x0020Meridian = 28,
	ns2__PrincipalMeridian__Tallahassee_x0020Meridian = 29,
	ns2__PrincipalMeridian__Uintah_x0020Meridian = 30,
	ns2__PrincipalMeridian__Umiat_x0020Meridian = 31,
	ns2__PrincipalMeridian__Ute_x0020Meridian = 32,
	ns2__PrincipalMeridian__Washington_x0020Meridian = 33,
	ns2__PrincipalMeridian__Williamette_x0020Meridian = 34,
	ns2__PrincipalMeridian__Wind_x0020River_x0020Meridian = 35
};
#endif

/* testh.h:20031 */
#ifndef SOAP_TYPE_ns2__VerticalDirection
#define SOAP_TYPE_ns2__VerticalDirection (651)
/* ns2:VerticalDirection */
enum ns2__VerticalDirection {
	ns2__VerticalDirection__up = 0,
	ns2__VerticalDirection__down = 1
};
#endif

/* testh.h:20052 */
#ifndef SOAP_TYPE_ns2__ReferencePressureKind
#define SOAP_TYPE_ns2__ReferencePressureKind (652)
/* ns2:ReferencePressureKind */
enum ns2__ReferencePressureKind {
	ns2__ReferencePressureKind__absolute = 0,
	ns2__ReferencePressureKind__ambient = 1,
	ns2__ReferencePressureKind__legal = 2
};
#endif

/* testh.h:20070 */
#ifndef SOAP_TYPE_ns2__OSDULineageRelationshipKind
#define SOAP_TYPE_ns2__OSDULineageRelationshipKind (653)
/* ns2:OSDULineageRelationshipKind */
enum ns2__OSDULineageRelationshipKind {
	ns2__OSDULineageRelationshipKind__direct = 0,
	ns2__OSDULineageRelationshipKind__indirect = 1,
	ns2__OSDULineageRelationshipKind__reference = 2
};
#endif

/* testh.h:20092 */
#ifndef SOAP_TYPE_ns2__Facet
#define SOAP_TYPE_ns2__Facet (654)
/* ns2:Facet */
enum ns2__Facet {
	ns2__Facet__I = 'I',
	ns2__Facet__J = 'J',
	ns2__Facet__K = 'K',
	ns2__Facet__X = 'X',
	ns2__Facet__Y = 'Y',
	ns2__Facet__Z = 'Z',
	ns2__Facet__I_x002b = 91,
	ns2__Facet__J_x002b = 92,
	ns2__Facet__K_x002b = 93,
	ns2__Facet__X_x002b = 94,
	ns2__Facet__Y_x002b = 95,
	ns2__Facet__Z_x002b = 96,
	ns2__Facet__I_x002d = 'a',
	ns2__Facet__J_x002d = 'b',
	ns2__Facet__K_x002d = 'c',
	ns2__Facet__X_x002d = 'd',
	ns2__Facet__Y_x002d = 'e',
	ns2__Facet__Z_x002d = 'f',
	ns2__Facet__net = 'g',
	ns2__Facet__gross = 'h',
	ns2__Facet__plus = 'i',
	ns2__Facet__minus = 'j',
	ns2__Facet__average = 'k',
	ns2__Facet__maximum = 'l',
	ns2__Facet__minimum = 'm',
	ns2__Facet__maximum_x0020threshold = 'n',
	ns2__Facet__minimum_x0020threshold = 'o',
	ns2__Facet__surface_x0020condition = 'p',
	ns2__Facet__reservoir_x0020condition = 'q',
	ns2__Facet__oil = 'r',
	ns2__Facet__water = 's',
	ns2__Facet__gas = 't',
	ns2__Facet__condensate = 'u',
	ns2__Facet__cumulative = 'v',
	ns2__Facet__fracture = 'w',
	ns2__Facet__matrix = 'x'
};
#endif

/* testh.h:20267 */
#ifndef SOAP_TYPE_ns2__FacetKind
#define SOAP_TYPE_ns2__FacetKind (655)
/* ns2:FacetKind */
enum ns2__FacetKind {
	ns2__FacetKind__conditions = 0,
	ns2__FacetKind__side = 1,
	ns2__FacetKind__direction = 2,
	ns2__FacetKind__netgross = 3,
	ns2__FacetKind__qualifier = 4,
	ns2__FacetKind__statistics = 5,
	ns2__FacetKind__what = 6
};
#endif

/* testh.h:20309 */
#ifndef SOAP_TYPE_ns2__FacilityLifecycleState
#define SOAP_TYPE_ns2__FacilityLifecycleState (656)
/* ns2:FacilityLifecycleState */
enum ns2__FacilityLifecycleState {
	ns2__FacilityLifecycleState__planning = 0,
	ns2__FacilityLifecycleState__constructing = 1,
	ns2__FacilityLifecycleState__operating = 2,
	ns2__FacilityLifecycleState__closing = 3,
	ns2__FacilityLifecycleState__closed = 4
};
#endif

/* testh.h:20345 */
#ifndef SOAP_TYPE_ns2__AddressKindEnum
#define SOAP_TYPE_ns2__AddressKindEnum (657)
/* ns2:AddressKindEnum */
enum ns2__AddressKindEnum {
	ns2__AddressKindEnum__both = 0,
	ns2__AddressKindEnum__mailing = 1,
	ns2__AddressKindEnum__physical = 2
};
#endif

/* testh.h:20363 */
#ifndef SOAP_TYPE_ns2__AddressQualifier
#define SOAP_TYPE_ns2__AddressQualifier (658)
/* ns2:AddressQualifier */
enum ns2__AddressQualifier {
	ns2__AddressQualifier__permanent = 0,
	ns2__AddressQualifier__personal = 1,
	ns2__AddressQualifier__work = 2
};
#endif

/* testh.h:20385 */
#ifndef SOAP_TYPE_ns2__OrganizationKind
#define SOAP_TYPE_ns2__OrganizationKind (659)
/* ns2:OrganizationKind */
enum ns2__OrganizationKind {
	ns2__OrganizationKind__academic_x0020institution = 0,
	ns2__OrganizationKind__government_x0020agency = 1,
	ns2__OrganizationKind__industry_x0020organization = 2,
	ns2__OrganizationKind__non_governmental_x0020organization = 3,
	ns2__OrganizationKind__organization_x0020unit = 4
};
#endif

/* testh.h:20401 */
#ifndef SOAP_TYPE_ns2__PhoneType
#define SOAP_TYPE_ns2__PhoneType (660)
/* ns2:PhoneType */
enum ns2__PhoneType {
	ns2__PhoneType__fax = 0,
	ns2__PhoneType__mobile = 1,
	ns2__PhoneType__pager = 2,
	ns2__PhoneType__unknown = 3,
	ns2__PhoneType__voice = 4,
	ns2__PhoneType__voice_x002ffax = 5,
	ns2__PhoneType__voicemail = 6
};
#endif

/* testh.h:20415 */
#ifndef SOAP_TYPE_ns2__ActivityParameterKind
#define SOAP_TYPE_ns2__ActivityParameterKind (661)
/* ns2:ActivityParameterKind */
enum ns2__ActivityParameterKind {
	ns2__ActivityParameterKind__dataObject = 0,
	ns2__ActivityParameterKind__double_ = 1,
	ns2__ActivityParameterKind__integer = 2,
	ns2__ActivityParameterKind__string = 3,
	ns2__ActivityParameterKind__timestamp = 4,
	ns2__ActivityParameterKind__subActivity = 5
};
#endif

/* testh.h:20432 */
#ifndef SOAP_TYPE_ns2__CollectionKind
#define SOAP_TYPE_ns2__CollectionKind (662)
/* ns2:CollectionKind */
enum ns2__CollectionKind {
	ns2__CollectionKind__folder = 0,
	ns2__CollectionKind__project = 1,
	ns2__CollectionKind__realization = 2,
	ns2__CollectionKind__scenario = 3,
	ns2__CollectionKind__study = 4
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Structs and Unions                                                         *
 *                                                                            *
\******************************************************************************/

struct xsd__base64Binary;	/* testh.h:154 */
struct ns1__DrillingParams;	/* testh.h:20462 */
struct ns1__Fluid;	/* testh.h:20848 */
struct ns1__Rheometer;	/* testh.h:21376 */
struct ns1__RheometerViscosity;	/* testh.h:21423 */
struct ns1__BottomHoleLocation;	/* testh.h:21481 */
struct ns1__LicensePeriod;	/* testh.h:21510 */
struct ns1__WellPurposePeriod;	/* testh.h:21545 */
struct ns1__AbstractRotarySteerableTool;	/* testh.h:21584 */
struct ns1__Bend;	/* testh.h:21605 */
struct ns1__BitRecord;	/* testh.h:21648 */
struct ns1__Connection;	/* testh.h:21840 */
struct ns1__HoleOpener;	/* testh.h:21939 */
struct ns1__Jar;	/* testh.h:21988 */
struct ns1__Motor;	/* testh.h:22061 */
struct ns1__MwdTool;	/* testh.h:22186 */
struct ns1__Nozzle;	/* testh.h:22239 */
struct ns1__OSDUTubularAssemblyStatus;	/* testh.h:22300 */
struct ns1__RotarySteerableTool;	/* testh.h:22335 */
struct ns1__Sensor;	/* testh.h:22161 */
struct ns1__Stabilizer;	/* testh.h:22517 */
struct ns1__TubularComponent;	/* testh.h:22596 */
struct ns1__TubularComponentOSDUIntegration;	/* testh.h:22632 */
struct ns1__TubularOSDUIntegration;	/* testh.h:22986 */
struct ns1__TubularUmbilical;	/* testh.h:23099 */
struct ns1__TubularUmbilicalCut;	/* testh.h:23113 */
struct ns1__TubularUmbilicalOSDUIntegration;	/* testh.h:23125 */
struct ns1__NameTag;	/* testh.h:22832 */
struct ns1__AbstractCementJob;	/* testh.h:23289 */
struct ns1__AbstractCementStage;	/* testh.h:23399 */
struct ns1__CementAdditive;	/* testh.h:23742 */
struct ns1__CementingFluid;	/* testh.h:23803 */
struct ns1__CementPumpScheduleStep;	/* testh.h:23711 */
struct ns1__FluidLocation;	/* testh.h:23715 */
struct ns1__WellboreGeometryReport;	/* testh.h:24350 */
struct ns1__DepthRegCalibrationPoint;	/* testh.h:24389 */
struct ns1__DepthRegLogRect;	/* testh.h:24464 */
struct ns1__DepthRegLogSection;	/* testh.h:24509 */
struct ns1__DepthRegParameter;	/* testh.h:24439 */
struct ns1__DepthRegPoint;	/* testh.h:24441 */
struct ns1__DepthRegRectangle;	/* testh.h:24486 */
struct ns1__DepthRegTrack;	/* testh.h:24643 */
struct ns1__DepthRegTrackCurve;	/* testh.h:24858 */
struct ns1__ChannelData;	/* testh.h:24972 */
struct ns1__ChannelIndex;	/* testh.h:25004 */
struct ns1__ChannelOSDUIntegration;	/* testh.h:25070 */
struct ns1__ChannelSetOSDUIntegration;	/* testh.h:25129 */
struct ns1__LogChannelAxis;	/* testh.h:25176 */
struct ns1__LogOSDUIntegration;	/* testh.h:25235 */
struct ns1__PassDetail;	/* testh.h:25282 */
struct ns1__PassIndexedDepth;	/* testh.h:25311 */
struct ns1__PointMetadata;	/* testh.h:25347 */
struct ns1__AbstractConnectionType;	/* testh.h:25420 */
struct ns1__Assembly;	/* testh.h:25445 */
struct ns1__Borehole;	/* testh.h:25466 */
struct ns1__BoreholeString;	/* testh.h:25535 */
struct ns1__BoreholeStringSet;	/* testh.h:25576 */
struct ns1__DownholeString;	/* testh.h:25597 */
struct ns1__DownholeStringSet;	/* testh.h:25672 */
struct ns1__Equipment;	/* testh.h:25693 */
struct ns1__EquipmentSet;	/* testh.h:25952 */
struct ns1__EventInfo;	/* testh.h:25512 */
struct ns1__EventRefInfo;	/* testh.h:25983 */
struct ns1__ExtPropNameValue;	/* testh.h:25921 */
struct ns1__GeologyFeature;	/* testh.h:25549 */
struct ns1__ObjectSequence;	/* testh.h:26127 */
struct ns1__PerfHole;	/* testh.h:25929 */
struct ns1__PerforationSet;	/* testh.h:26229 */
struct ns1__PerforationSets;	/* testh.h:26366 */
struct ns1__PerfSlot;	/* testh.h:25925 */
struct ns1__ReferenceContainer;	/* testh.h:26448 */
struct ns1__StringAccessory;	/* testh.h:25551 */
struct ns1__StringEquipment;	/* testh.h:25449 */
struct ns1__StringEquipmentSet;	/* testh.h:25645 */
struct ns1__AbstractEventExtension;	/* testh.h:26752 */
struct ns1__BoreholeStringReference;	/* testh.h:26793 */
struct ns1__DownholeComponentReference;	/* testh.h:26824 */
struct ns1__DownholeStringReference;	/* testh.h:26848 */
struct ns1__MemberObject;	/* testh.h:26896 */
struct ns1__Participant;	/* testh.h:26968 */
struct ns1__Perforating;	/* testh.h:26997 */
struct ns1__AbstractBottomHoleTemperature;	/* testh.h:27194 */
struct ns1__DrillActivity;	/* testh.h:27221 */
struct ns1__DrillReportControlIncidentInfo;	/* testh.h:27378 */
struct ns1__DrillReportCoreInfo;	/* testh.h:27555 */
struct ns1__DrillReportEquipFailureInfo;	/* testh.h:27640 */
struct ns1__DrillReportFormTestInfo;	/* testh.h:27713 */
struct ns1__DrillReportGasReadingInfo;	/* testh.h:27805 */
struct ns1__DrillReportLithShowInfo;	/* testh.h:27908 */
struct ns1__DrillReportLogInfo;	/* testh.h:27969 */
struct ns1__DrillReportPerfInfo;	/* testh.h:28050 */
struct ns1__DrillReportPorePressure;	/* testh.h:28105 */
struct ns1__DrillReportStatusInfo;	/* testh.h:28166 */
struct ns1__DrillReportStratInfo;	/* testh.h:28547 */
struct ns1__DrillReportSurveyStation;	/* testh.h:28602 */
struct ns1__DrillReportSurveyStationReport;	/* testh.h:28679 */
struct ns1__DrillReportWellboreInfo;	/* testh.h:28799 */
struct ns1__DrillReportWellTestInfo;	/* testh.h:28854 */
struct ns1__Bop;	/* testh.h:29032 */
struct ns1__BopComponent;	/* testh.h:29242 */
struct ns1__Centrifuge;	/* testh.h:29338 */
struct ns1__Degasser;	/* testh.h:29420 */
struct ns1__Hydrocyclone;	/* testh.h:29573 */
struct ns1__MudPump;	/* testh.h:29655 */
struct ns1__Pit;	/* testh.h:29815 */
struct ns1__Shaker;	/* testh.h:29897 */
struct ns1__SurfaceEquipment;	/* testh.h:30017 */
struct ns1__Chromatograph;	/* testh.h:30257 */
struct ns1__DrillingParameters;	/* testh.h:30540 */
struct ns1__DxcStatistics;	/* testh.h:30588 */
struct ns1__EcdStatistics;	/* testh.h:30582 */
struct ns1__GasInMud;	/* testh.h:30663 */
struct ns1__GasPeak;	/* testh.h:30694 */
struct ns1__MudDensityStatistics;	/* testh.h:30576 */
struct ns1__MudGas;	/* testh.h:30772 */
struct ns1__MudLogParameter;	/* testh.h:30802 */
struct ns1__RopStatistics;	/* testh.h:30546 */
struct ns1__RpmStatistics;	/* testh.h:30570 */
struct ns1__TorqueCurrentStatistics;	/* testh.h:30564 */
struct ns1__TorqueStatistics;	/* testh.h:30558 */
struct ns1__WobStatistics;	/* testh.h:30552 */
struct ns1__CuttingsIntervalLithology;	/* testh.h:31010 */
struct ns1__CuttingsIntervalShow;	/* testh.h:31144 */
struct ns1__InterpretedIntervalLithology;	/* testh.h:31332 */
struct ns1__LithologyQualifier;	/* testh.h:31148 */
struct ns1__SourceTrajectoryStation;	/* testh.h:31529 */
struct ns1__StnTrajCorUsed;	/* testh.h:31554 */
struct ns1__StnTrajMatrixCov;	/* testh.h:31663 */
struct ns1__StnTrajRawData;	/* testh.h:31740 */
struct ns1__StnTrajValid;	/* testh.h:31793 */
struct ns1__TrajectoryOSDUIntegration;	/* testh.h:28738 */
struct ns1__TrajectoryReport;	/* testh.h:31877 */
struct ns1__TrajectoryStationOSDUIntegration;	/* testh.h:31997 */
struct ns1__TargetSection;	/* testh.h:32032 */
struct ns1__AbstractOperatingRange;	/* testh.h:32099 */
struct ns1__Authorization;	/* testh.h:32134 */
struct ns1__AzimuthFormula;	/* testh.h:32166 */
struct ns1__ContinuousGyro;	/* testh.h:32187 */
struct ns1__ErrorTermValue;	/* testh.h:32216 */
struct ns1__GyroToolConfiguration;	/* testh.h:32249 */
struct ns1__OperatingConstraints;	/* testh.h:32280 */
struct ns1__Parameter;	/* testh.h:32172 */
struct ns1__StationaryGyro;	/* testh.h:32267 */
struct ns1__XyAccelerometer;	/* testh.h:32263 */
struct ns1__SurveySection;	/* testh.h:32406 */
struct ns1__ISO13503_USCORE2CrushTestData;	/* testh.h:32499 */
struct ns1__ISO13503_USCORE2SieveAnalysisData;	/* testh.h:32534 */
struct ns1__StimEvent;	/* testh.h:32569 */
struct ns1__StimFetTest;	/* testh.h:32624 */
struct ns1__StimFlowPath;	/* testh.h:32754 */
struct ns1__StimFluid;	/* testh.h:32847 */
struct ns1__StimISO13503_USCORE2Properties;	/* testh.h:32958 */
struct ns1__StimISO13503_USCORE5Point;	/* testh.h:33068 */
struct ns1__StimJobDiagnosticSession;	/* testh.h:33115 */
struct ns1__StimJobDiversion;	/* testh.h:33418 */
struct ns1__StimJobLogCatalog;	/* testh.h:33459 */
struct ns1__StimJobMaterialCatalog;	/* testh.h:33480 */
struct ns1__StimJobStep;	/* testh.h:33513 */
struct ns1__StimMaterial;	/* testh.h:33942 */
struct ns1__StimMaterialQuantity;	/* testh.h:32941 */
struct ns1__StimPerforationClusterSet;	/* testh.h:34074 */
struct ns1__StimPressureFlowRate;	/* testh.h:34095 */
struct ns1__StimPumpFlowBackTest;	/* testh.h:33395 */
struct ns1__StimPumpFlowBackTestStep;	/* testh.h:34192 */
struct ns1__StimReservoirInterval;	/* testh.h:34312 */
struct ns1__StimShutInPressure;	/* testh.h:34457 */
struct ns1__StimStepDownTest;	/* testh.h:33387 */
struct ns1__StimStepTest;	/* testh.h:33376 */
struct ns1__StimTubular;	/* testh.h:32830 */
struct ns1__AbstractItemWtOrVolPerUnit;	/* testh.h:34697 */
struct ns1__AnchorState;	/* testh.h:34714 */
struct ns1__DayCost;	/* testh.h:34755 */
struct ns1__Hse;	/* testh.h:34923 */
struct ns1__Incident;	/* testh.h:35095 */
struct ns1__Inventory;	/* testh.h:35221 */
struct ns1__MudLosses;	/* testh.h:35312 */
struct ns1__MudVolume;	/* testh.h:35407 */
struct ns1__Personnel;	/* testh.h:35486 */
struct ns1__PitVolume;	/* testh.h:35541 */
struct ns1__PumpOp;	/* testh.h:35608 */
struct ns1__RigResponse;	/* testh.h:35699 */
struct ns1__Scr;	/* testh.h:35858 */
struct ns1__ShakerOp;	/* testh.h:35925 */
struct ns1__ShakerScreen;	/* testh.h:35965 */
struct ns1__SupportCraft;	/* testh.h:36053 */
struct ns1__Weather;	/* testh.h:36114 */
struct ns1__PPFGChannelOSDUIntegration;	/* testh.h:36283 */
struct ns1__PPFGChannelSetOSDUIntegration;	/* testh.h:36306 */
struct ns1__PPFGLogOSDUIntegration;	/* testh.h:36329 */
struct ns1__ContactIntervalSet;	/* testh.h:36352 */
struct ns1__GravelPackInterval;	/* testh.h:36356 */
struct ns1__IntervalStatusHistory;	/* testh.h:36437 */
struct ns1__OpenHoleInterval;	/* testh.h:36360 */
struct ns1__PerforationSetInterval;	/* testh.h:36364 */
struct ns1__PerforationStatusHistory;	/* testh.h:36646 */
struct ns1__SlotsInterval;	/* testh.h:36368 */
struct ns1__CompletionStatusHistory;	/* testh.h:36809 */
struct ns2__AbstractGrowingObjectPart;	/* testh.h:36872 */
struct ns2__AbstractObject;	/* testh.h:36975 */
struct ns2__Citation;	/* testh.h:30814 */
struct ns2__CustomData;	/* testh.h:37009 */
struct ns2__ExtensionNameValue;	/* testh.h:20819 */
struct ns2__GrowingObjectIndex;	/* testh.h:37325 */
struct ns2__ObjectAlias;	/* testh.h:36979 */
struct ns2__AbstractHorizontalCoordinates;	/* testh.h:37417 */
struct ns2__AbstractPosition;	/* testh.h:21487 */
struct ns2__HorizontalCoordinates;	/* testh.h:37464 */
struct ns2__VerticalPosition1d;	/* testh.h:37481 */
struct ns2__ComponentReference;	/* testh.h:23105 */
struct ns2__DataObjectComponentReference;	/* testh.h:26799 */
struct ns2__DataObjectReference;	/* testh.h:20825 */
struct ns2__ExternalDataArray;	/* testh.h:37646 */
struct ns2__ExternalDataArrayPart;	/* testh.h:37650 */
struct ns2__AbstractElevation;	/* testh.h:28520 */
struct ns2__AbstractInterval;	/* testh.h:24569 */
struct ns2__AbstractValueArray;	/* testh.h:37800 */
struct ns2__AbstractVerticalDepth;	/* testh.h:20878 */
struct ns2__BooleanArrayStatistics;	/* testh.h:37848 */
struct ns2__FloatingPointArrayStatistics;	/* testh.h:37865 */
struct ns2__IntegerArrayStatistics;	/* testh.h:37894 */
struct ns2__JaggedArray;	/* testh.h:37929 */
struct ns2__MeasuredDepth;	/* testh.h:20475 */
struct ns2__StringArrayStatistics;	/* testh.h:37979 */
struct ns2__AbstractGeographic2dCrs;	/* testh.h:38002 */
struct ns2__AbstractProjectedCrs;	/* testh.h:38029 */
struct ns2__AbstractVerticalCrs;	/* testh.h:38056 */
struct ns2__HorizontalAxes;	/* testh.h:38077 */
struct ns2__PublicLandSurveySystemLocation;	/* testh.h:38106 */
struct ns2__Vector;	/* testh.h:38169 */
struct ns2__VerticalAxis;	/* testh.h:38188 */
struct ns2__AbstractPressureValue;	/* testh.h:38216 */
struct ns2__AbstractTemperaturePressure;	/* testh.h:38243 */
struct ns2__DensityValue;	/* testh.h:38264 */
struct ns2__FlowRateValue;	/* testh.h:38289 */
struct ns2__PressureValue;	/* testh.h:38310 */
struct ns2__VolumeValue;	/* testh.h:38329 */
struct ns2__OSDUIntegration;	/* testh.h:37007 */
struct ns2__OSDULineageAssertion;	/* testh.h:38358 */
struct ns2__OSDUReferencePointIntegration;	/* testh.h:38448 */
struct ns2__OSDUSpatialLocationIntegration;	/* testh.h:21493 */
struct ns2__FacilityLifecyclePeriod;	/* testh.h:38540 */
struct ns2__FacilityOperator;	/* testh.h:38575 */
struct ns2__GeologicTime;	/* testh.h:38611 */
struct ns2__PropertyKindFacet;	/* testh.h:38641 */
struct ns2__TimeIndex;	/* testh.h:38671 */
struct ns2__TimeOrIntervalSeries;	/* testh.h:38692 */
struct ns2__TimeSeriesParentage;	/* testh.h:38713 */
struct ns2__WellStatusPeriod;	/* testh.h:38738 */
struct ns2__GeneralAddress;	/* testh.h:38773 */
struct ns2__PersonName;	/* testh.h:38852 */
struct ns2__PhoneNumberStruct;	/* testh.h:38901 */
struct ns2__AbstractActivityParameter;	/* testh.h:38948 */
struct ns2__AbstractParameterKey;	/* testh.h:38976 */
struct ns2__ParameterTemplate;	/* testh.h:39037 */
struct ns2__SingleCollectionAssociation;	/* testh.h:39121 */
struct ns2__Column;	/* testh.h:39150 */
struct ns2__NestedColumnBasedTable;	/* testh.h:39206 */
struct ns2__FailingRule;	/* testh.h:39235 */
struct ns2__IndexRange;	/* testh.h:39281 */
struct ns2__AbstractGraphicalInformation;	/* testh.h:39306 */
struct ns1__BhaRun;	/* testh.h:37071 */
struct ns1__FluidsReport;	/* testh.h:37073 */
struct ns1__BendAngle;	/* testh.h:21586 */
struct ns1__BendOffset;	/* testh.h:21588 */
struct ns1__Tubular;	/* testh.h:37075 */
struct ns1__CementDesignStage;	/* testh.h:23721 */
struct ns1__CementJob;	/* testh.h:37077 */
struct ns1__CementJobDesign;	/* testh.h:23375 */
struct ns1__CementJobEvaluation;	/* testh.h:37079 */
struct ns1__CementJobReport;	/* testh.h:23377 */
struct ns1__CementStageDesign;	/* testh.h:23723 */
struct ns1__CementStageReport;	/* testh.h:23725 */
struct ns1__DepthRegImage;	/* testh.h:37081 */
struct ns1__PassIndexedDepthInterval;	/* testh.h:37778 */
struct ns1__ChannelKind;	/* testh.h:37083 */
struct ns1__ChannelKindDictionary;	/* testh.h:37085 */
struct ns1__LoggingToolKind;	/* testh.h:37087 */
struct ns1__LoggingToolKindDictionary;	/* testh.h:37089 */
struct ns1__CasingConnectionType;	/* testh.h:25422 */
struct ns1__DownholeComponent;	/* testh.h:37091 */
struct ns1__EquipmentConnection;	/* testh.h:21922 */
struct ns1__OtherConnectionType;	/* testh.h:25424 */
struct ns1__RodConnectionType;	/* testh.h:25426 */
struct ns1__TubingConnectionType;	/* testh.h:25428 */
struct ns1__AcidizeFracExtension;	/* testh.h:26754 */
struct ns1__BHPExtension;	/* testh.h:26756 */
struct ns1__CementExtension;	/* testh.h:26758 */
struct ns1__CleanFillExtension;	/* testh.h:26760 */
struct ns1__DirectionalSurveyExtension;	/* testh.h:26762 */
struct ns1__DownholeExtension;	/* testh.h:26764 */
struct ns1__FluidReportExtension;	/* testh.h:26766 */
struct ns1__JobExtension;	/* testh.h:26768 */
struct ns1__LostCirculationExtension;	/* testh.h:26770 */
struct ns1__PerforatingExtension;	/* testh.h:26772 */
struct ns1__PressureTestExtension;	/* testh.h:26774 */
struct ns1__WaitingOnExtension;	/* testh.h:26776 */
struct ns1__WellCMLedger;	/* testh.h:37093 */
struct ns1__BottomHoleCirculatingTemperature;	/* testh.h:27202 */
struct ns1__BottomHoleStaticTemperature;	/* testh.h:27204 */
struct ns1__DrillReport;	/* testh.h:37095 */
struct ns1__MudLogConcentrationParameter;	/* testh.h:30828 */
struct ns1__MudLogForceParameter;	/* testh.h:30830 */
struct ns1__MudLogPressureGradientParameter;	/* testh.h:30832 */
struct ns1__MudLogPressureParameter;	/* testh.h:30834 */
struct ns1__MudLogStringParameter;	/* testh.h:30836 */
struct ns1__Target;	/* testh.h:37097 */
struct ns1__ContinuousAzimuthFormula;	/* testh.h:32174 */
struct ns1__CustomOperatingRange;	/* testh.h:32119 */
struct ns1__ErrorTerm;	/* testh.h:37099 */
struct ns1__ErrorTermDictionary;	/* testh.h:37101 */
struct ns1__PlaneAngleOperatingRange;	/* testh.h:32121 */
struct ns1__ToolErrorModel;	/* testh.h:37103 */
struct ns1__ToolErrorModelDictionary;	/* testh.h:37105 */
struct ns1__WeightingFunction;	/* testh.h:37107 */
struct ns1__WeightingFunctionDictionary;	/* testh.h:37109 */
struct ns1__SurveyProgram;	/* testh.h:37111 */
struct ns1__StimAdditive;	/* testh.h:33488 */
struct ns1__StimJob;	/* testh.h:37113 */
struct ns1__StimJobStage;	/* testh.h:37115 */
struct ns1__StimPerforationCluster;	/* testh.h:34078 */
struct ns1__StimProppantAgent;	/* testh.h:33496 */
struct ns1__ItemVolPerUnit;	/* testh.h:34699 */
struct ns1__ItemWtPerUnit;	/* testh.h:34701 */
struct ns1__OpsReport;	/* testh.h:37119 */
struct ns1__Risk;	/* testh.h:37121 */
struct ns1__WellboreCompletion;	/* testh.h:37123 */
struct ns1__WellCompletion;	/* testh.h:37125 */
struct ns1__WellboreMarker;	/* testh.h:37127 */
struct ns1__WellboreMarkerSet;	/* testh.h:37129 */
struct ns2__AbstractActiveObject;	/* testh.h:37031 */
struct ns2__AbstractMdGrowingPart;	/* testh.h:36900 */
struct ns2__AbstractMdIntervalGrowingPart;	/* testh.h:36902 */
struct ns2__AbstractTimeGrowingPart;	/* testh.h:36904 */
struct ns2__AbstractTimeIntervalGrowingPart;	/* testh.h:36906 */
struct ns2__Abstract2dPosition;	/* testh.h:28656 */
struct ns2__Abstract3dPosition;	/* testh.h:32080 */
struct ns2__AbstractCompoundPosition;	/* testh.h:37451 */
struct ns2__AbstractReferencePoint;	/* testh.h:37033 */
struct ns2__GeographicCoordinates;	/* testh.h:37423 */
struct ns2__ProjectedCoordinates;	/* testh.h:37425 */
struct ns2__PublicLandSurveySystemCoordinates;	/* testh.h:37427 */
struct ns2__AbstractBooleanArray;	/* testh.h:37802 */
struct ns2__AbstractNumericArray;	/* testh.h:37804 */
struct ns2__AbstractPressureInterval;	/* testh.h:37764 */
struct ns2__AbstractStringArray;	/* testh.h:37806 */
struct ns2__AbstractTvdInterval;	/* testh.h:25490 */
struct ns2__DateTimeInterval;	/* testh.h:37768 */
struct ns2__DatumElevation;	/* testh.h:37727 */
struct ns2__DatumVerticalDepth;	/* testh.h:37833 */
struct ns2__ElapsedTimeInterval;	/* testh.h:37770 */
struct ns2__MdInterval;	/* testh.h:23307 */
struct ns2__ReferencePointElevation;	/* testh.h:37729 */
struct ns2__ReferencePointVerticalDepth;	/* testh.h:37835 */
struct ns2__ScalarInterval;	/* testh.h:37774 */
struct ns2__TemperatureInterval;	/* testh.h:37776 */
struct ns2__Abstract2dCrs;	/* testh.h:37035 */
struct ns2__AbstractCompoundCrs;	/* testh.h:37037 */
struct ns2__Geocentric3dCrs;	/* testh.h:37039 */
struct ns2__GeodeticEpsgCrs;	/* testh.h:38004 */
struct ns2__GeodeticLocalAuthorityCrs;	/* testh.h:38006 */
struct ns2__GeodeticUnknownCrs;	/* testh.h:38008 */
struct ns2__GeodeticWktCrs;	/* testh.h:38010 */
struct ns2__Geographic3dCrs;	/* testh.h:37041 */
struct ns2__ProjectedEpsgCrs;	/* testh.h:38031 */
struct ns2__ProjectedLocalAuthorityCrs;	/* testh.h:38033 */
struct ns2__ProjectedUnknownCrs;	/* testh.h:38035 */
struct ns2__ProjectedWktCrs;	/* testh.h:38037 */
struct ns2__VerticalCrs;	/* testh.h:37043 */
struct ns2__VerticalEpsgCrs;	/* testh.h:38058 */
struct ns2__VerticalLocalAuthorityCrs;	/* testh.h:38060 */
struct ns2__VerticalUnknownCrs;	/* testh.h:38062 */
struct ns2__VerticalWktCrs;	/* testh.h:38064 */
struct ns2__AbsolutePressure;	/* testh.h:38218 */
struct ns2__GaugePressure;	/* testh.h:38220 */
struct ns2__ReferenceTemperaturePressure;	/* testh.h:38245 */
struct ns2__RelativePressure;	/* testh.h:38222 */
struct ns2__TemperaturePressure;	/* testh.h:38247 */
struct ns2__PropertyKind;	/* testh.h:37045 */
struct ns2__PropertyKindDictionary;	/* testh.h:37047 */
struct ns2__TimeSeries;	/* testh.h:37049 */
struct ns2__BusinessAssociate;	/* testh.h:37051 */
struct ns2__Activity;	/* testh.h:37053 */
struct ns2__ActivityTemplate;	/* testh.h:37055 */
struct ns2__DataObjectParameter;	/* testh.h:38978 */
struct ns2__DoubleQuantityParameter;	/* testh.h:38980 */
struct ns2__DoubleParameterKey;	/* testh.h:39012 */
struct ns2__IntegerQuantityParameter;	/* testh.h:38982 */
struct ns2__IntegerParameterKey;	/* testh.h:39014 */
struct ns2__ObjectParameterKey;	/* testh.h:39016 */
struct ns2__StringParameter;	/* testh.h:38984 */
struct ns2__StringParameterKey;	/* testh.h:39018 */
struct ns2__TimeIndexParameter;	/* testh.h:38986 */
struct ns2__TimeIndexParameterKey;	/* testh.h:39020 */
struct ns2__Aggregate;	/* testh.h:37057 */
struct ns2__Attachment;	/* testh.h:37059 */
struct ns2__CollectionsToDataobjectsAssociationSet;	/* testh.h:37061 */
struct ns2__DataobjectCollection;	/* testh.h:37063 */
struct ns2__ColumnBasedTable;	/* testh.h:37065 */
struct ns2__DataAssuranceRecord;	/* testh.h:37067 */
struct ns2__GraphicalInformationSet;	/* testh.h:37069 */
struct ns1__Wellbore;	/* testh.h:47023 */
struct ns1__Well;	/* testh.h:47025 */
struct ns1__WellboreGeometrySection;	/* testh.h:24354 */
struct ns1__Channel;	/* testh.h:47027 */
struct ns1__ChannelSet;	/* testh.h:47029 */
struct ns1__Log;	/* testh.h:47031 */
struct ns1__Rig;	/* testh.h:47033 */
struct ns1__RigUtilization;	/* testh.h:47035 */
struct ns1__MudlogReportInterval;	/* testh.h:47142 */
struct ns1__CuttingsGeologyInterval;	/* testh.h:47144 */
struct ns1__InterpretedGeologyInterval;	/* testh.h:47146 */
struct ns1__ShowEvaluationInterval;	/* testh.h:47148 */
struct ns1__WellboreGeology;	/* testh.h:47037 */
struct ns1__TrajectoryStation;	/* testh.h:31980 */
struct ns1__AzimuthRange;	/* testh.h:32334 */
struct ns2__AbstractGrowingObject;	/* testh.h:47021 */
struct ns2__AbstractCartesian2dPosition;	/* testh.h:47259 */
struct ns2__EngineeringCompoundPosition;	/* testh.h:47301 */
struct ns2__Geocentric3dPosition;	/* testh.h:47278 */
struct ns2__Geographic2dPosition;	/* testh.h:47261 */
struct ns2__Geographic3dPosition;	/* testh.h:47280 */
struct ns2__GeographicCompoundPosition;	/* testh.h:47303 */
struct ns2__LocalEngineering3dPosition;	/* testh.h:47282 */
struct ns2__Projected3dPosition;	/* testh.h:47284 */
struct ns2__ProjectedCompoundPosition;	/* testh.h:47305 */
struct ns2__RecursiveReferencePoint;	/* testh.h:47387 */
struct ns2__ReferencePointInACrs;	/* testh.h:47389 */
struct ns2__ReferencePointInALocalEngineeringCompoundCrs;	/* testh.h:47391 */
struct ns2__AbsolutePressureInterval;	/* testh.h:47537 */
struct ns2__AbstractFloatingPointArray;	/* testh.h:47512 */
struct ns2__AbstractIntegerArray;	/* testh.h:37941 */
struct ns2__BooleanArrayFromIndexArray;	/* testh.h:47489 */
struct ns2__BooleanConstantArray;	/* testh.h:47491 */
struct ns2__BooleanExternalArray;	/* testh.h:47493 */
struct ns2__BooleanXmlArray;	/* testh.h:47495 */
struct ns2__Cost;	/* testh.h:21814 */
struct ns2__DatumTvdInterval;	/* testh.h:47605 */
struct ns2__GaugePressureInterval;	/* testh.h:47539 */
struct ns2__GenericMeasure;	/* testh.h:24395 */
struct ns2__ReferencePointTvdInterval;	/* testh.h:47607 */
struct ns2__RelativePressureInterval;	/* testh.h:47541 */
struct ns2__StringConstantArray;	/* testh.h:47562 */
struct ns2__StringExternalArray;	/* testh.h:47564 */
struct ns2__StringXmlArray;	/* testh.h:47566 */
struct ns2__Cartesian2dCrs;	/* testh.h:47899 */
struct ns2__Geographic2dCrs;	/* testh.h:47901 */
struct ns2__GeographicCompoundCrs;	/* testh.h:47974 */
struct ns2__LocalEngineeringCompoundCrs;	/* testh.h:47976 */
struct ns2__ProjectedCompoundCrs;	/* testh.h:47978 */
struct ns2__AbsorbedDoseMeasure;	/* testh.h:54762 */
struct ns2__AbsorbedDoseMeasureExt;	/* testh.h:54781 */
struct ns2__ActivityOfRadioactivityMeasure;	/* testh.h:54800 */
struct ns2__ActivityOfRadioactivityMeasureExt;	/* testh.h:54819 */
struct ns2__ActivityOfRadioactivityPerVolumeMeasure;	/* testh.h:54838 */
struct ns2__ActivityOfRadioactivityPerVolumeMeasureExt;	/* testh.h:54857 */
struct ns2__AmountOfSubstanceMeasure;	/* testh.h:54876 */
struct ns2__AmountOfSubstanceMeasureExt;	/* testh.h:54895 */
struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasure;	/* testh.h:54914 */
struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt;	/* testh.h:54933 */
struct ns2__AmountOfSubstancePerAreaMeasure;	/* testh.h:54952 */
struct ns2__AmountOfSubstancePerAreaMeasureExt;	/* testh.h:54971 */
struct ns2__AmountOfSubstancePerTimeMeasure;	/* testh.h:54990 */
struct ns2__AmountOfSubstancePerTimeMeasureExt;	/* testh.h:55009 */
struct ns2__AmountOfSubstancePerTimePerAreaMeasure;	/* testh.h:55028 */
struct ns2__AmountOfSubstancePerTimePerAreaMeasureExt;	/* testh.h:55047 */
struct ns2__AmountOfSubstancePerVolumeMeasure;	/* testh.h:55066 */
struct ns2__AmountOfSubstancePerVolumeMeasureExt;	/* testh.h:55085 */
struct ns2__AnglePerLengthMeasure;	/* testh.h:22818 */
struct ns2__AnglePerLengthMeasureExt;	/* testh.h:55123 */
struct ns2__AnglePerVolumeMeasure;	/* testh.h:55142 */
struct ns2__AnglePerVolumeMeasureExt;	/* testh.h:55161 */
struct ns2__AngularAccelerationMeasure;	/* testh.h:55180 */
struct ns2__AngularAccelerationMeasureExt;	/* testh.h:55199 */
struct ns2__AngularVelocityMeasure;	/* testh.h:20667 */
struct ns2__AngularVelocityMeasureExt;	/* testh.h:55237 */
struct ns2__APIGammaRayMeasure;	/* testh.h:55256 */
struct ns2__APIGammaRayMeasureExt;	/* testh.h:55275 */
struct ns2__APIGravityMeasure;	/* testh.h:55294 */
struct ns2__APIGravityMeasureExt;	/* testh.h:55313 */
struct ns2__APINeutronMeasure;	/* testh.h:55332 */
struct ns2__APINeutronMeasureExt;	/* testh.h:55351 */
struct ns2__AreaMeasure;	/* testh.h:21894 */
struct ns2__AreaMeasureExt;	/* testh.h:55389 */
struct ns2__AreaPerAmountOfSubstanceMeasure;	/* testh.h:55408 */
struct ns2__AreaPerAmountOfSubstanceMeasureExt;	/* testh.h:55427 */
struct ns2__AreaPerAreaMeasure;	/* testh.h:31201 */
struct ns2__AreaPerAreaMeasureExt;	/* testh.h:55465 */
struct ns2__AreaPerCountMeasure;	/* testh.h:55484 */
struct ns2__AreaPerCountMeasureExt;	/* testh.h:55503 */
struct ns2__AreaPerMassMeasure;	/* testh.h:45695 */
struct ns2__AreaPerMassMeasureExt;	/* testh.h:55541 */
struct ns2__AreaPerTimeMeasure;	/* testh.h:55560 */
struct ns2__AreaPerTimeMeasureExt;	/* testh.h:55579 */
struct ns2__AreaPerVolumeMeasure;	/* testh.h:55598 */
struct ns2__AreaPerVolumeMeasureExt;	/* testh.h:55617 */
struct ns2__AttenuationPerFrequencyIntervalMeasure;	/* testh.h:55636 */
struct ns2__AttenuationPerFrequencyIntervalMeasureExt;	/* testh.h:55655 */
struct ns2__CapacitanceMeasure;	/* testh.h:55674 */
struct ns2__CapacitanceMeasureExt;	/* testh.h:55693 */
struct ns2__CationExchangeCapacityMeasure;	/* testh.h:55712 */
struct ns2__CationExchangeCapacityMeasureExt;	/* testh.h:21070 */
struct ns2__DataTransferSpeedMeasure;	/* testh.h:55750 */
struct ns2__DataTransferSpeedMeasureExt;	/* testh.h:55769 */
struct ns2__DiffusionCoefficientMeasure;	/* testh.h:55788 */
struct ns2__DiffusionCoefficientMeasureExt;	/* testh.h:55807 */
struct ns2__DiffusiveTimeOfFlightMeasure;	/* testh.h:55826 */
struct ns2__DiffusiveTimeOfFlightMeasureExt;	/* testh.h:55845 */
struct ns2__DigitalStorageMeasure;	/* testh.h:41727 */
struct ns2__DigitalStorageMeasureExt;	/* testh.h:55883 */
struct ns2__DimensionlessMeasure;	/* testh.h:23941 */
struct ns2__DimensionlessMeasureExt;	/* testh.h:55921 */
struct ns2__DipoleMomentMeasure;	/* testh.h:55940 */
struct ns2__DipoleMomentMeasureExt;	/* testh.h:55959 */
struct ns2__DoseEquivalentMeasure;	/* testh.h:55978 */
struct ns2__DoseEquivalentMeasureExt;	/* testh.h:55997 */
struct ns2__DynamicViscosityMeasure;	/* testh.h:20938 */
struct ns2__DynamicViscosityMeasureExt;	/* testh.h:56035 */
struct ns2__ElectricalResistivityMeasure;	/* testh.h:56054 */
struct ns2__ElectricalResistivityMeasureExt;	/* testh.h:56073 */
struct ns2__ElectricChargeMeasure;	/* testh.h:56092 */
struct ns2__ElectricChargeMeasureExt;	/* testh.h:56111 */
struct ns2__ElectricChargePerAreaMeasure;	/* testh.h:56130 */
struct ns2__ElectricChargePerAreaMeasureExt;	/* testh.h:56149 */
struct ns2__ElectricChargePerMassMeasure;	/* testh.h:56168 */
struct ns2__ElectricChargePerMassMeasureExt;	/* testh.h:56187 */
struct ns2__ElectricChargePerVolumeMeasure;	/* testh.h:56206 */
struct ns2__ElectricChargePerVolumeMeasureExt;	/* testh.h:56225 */
struct ns2__ElectricConductanceMeasure;	/* testh.h:56244 */
struct ns2__ElectricConductanceMeasureExt;	/* testh.h:56263 */
struct ns2__ElectricConductivityMeasure;	/* testh.h:56282 */
struct ns2__ElectricConductivityMeasureExt;	/* testh.h:56301 */
struct ns2__ElectricCurrentDensityMeasure;	/* testh.h:56320 */
struct ns2__ElectricCurrentDensityMeasureExt;	/* testh.h:56339 */
struct ns2__ElectricCurrentMeasure;	/* testh.h:30929 */
struct ns2__ElectricCurrentMeasureExt;	/* testh.h:56377 */
struct ns2__ElectricFieldStrengthMeasure;	/* testh.h:56396 */
struct ns2__ElectricFieldStrengthMeasureExt;	/* testh.h:56415 */
struct ns2__ElectricPotentialDifferenceMeasure;	/* testh.h:21166 */
struct ns2__ElectricPotentialDifferenceMeasureExt;	/* testh.h:56453 */
struct ns2__ElectricResistanceMeasure;	/* testh.h:56472 */
struct ns2__ElectricResistanceMeasureExt;	/* testh.h:56491 */
struct ns2__ElectricResistancePerLengthMeasure;	/* testh.h:56510 */
struct ns2__ElectricResistancePerLengthMeasureExt;	/* testh.h:56529 */
struct ns2__ElectromagneticMomentMeasure;	/* testh.h:56548 */
struct ns2__ElectromagneticMomentMeasureExt;	/* testh.h:56567 */
struct ns2__EnergyLengthPerAreaMeasure;	/* testh.h:56586 */
struct ns2__EnergyLengthPerAreaMeasureExt;	/* testh.h:56605 */
struct ns2__EnergyLengthPerTimeAreaTemperatureMeasure;	/* testh.h:56624 */
struct ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt;	/* testh.h:56643 */
struct ns2__EnergyMeasure;	/* testh.h:56662 */
struct ns2__EnergyMeasureExt;	/* testh.h:56681 */
struct ns2__EnergyPerAreaMeasure;	/* testh.h:56700 */
struct ns2__EnergyPerAreaMeasureExt;	/* testh.h:56719 */
struct ns2__EnergyPerLengthMeasure;	/* testh.h:56738 */
struct ns2__EnergyPerLengthMeasureExt;	/* testh.h:56757 */
struct ns2__EnergyPerMassMeasure;	/* testh.h:56776 */
struct ns2__EnergyPerMassMeasureExt;	/* testh.h:56795 */
struct ns2__EnergyPerMassPerTimeMeasure;	/* testh.h:56814 */
struct ns2__EnergyPerMassPerTimeMeasureExt;	/* testh.h:56833 */
struct ns2__EnergyPerVolumeMeasure;	/* testh.h:56852 */
struct ns2__EnergyPerVolumeMeasureExt;	/* testh.h:56871 */
struct ns2__ForceAreaMeasure;	/* testh.h:56890 */
struct ns2__ForceAreaMeasureExt;	/* testh.h:56909 */
struct ns2__ForceLengthPerLengthMeasure;	/* testh.h:56928 */
struct ns2__ForceLengthPerLengthMeasureExt;	/* testh.h:56947 */
struct ns2__ForceMeasure;	/* testh.h:20487 */
struct ns2__ForceMeasureExt;	/* testh.h:43592 */
struct ns2__ForcePerForceMeasure;	/* testh.h:57004 */
struct ns2__ForcePerForceMeasureExt;	/* testh.h:57023 */
struct ns2__ForcePerLengthMeasure;	/* testh.h:22794 */
struct ns2__ForcePerLengthMeasureExt;	/* testh.h:57061 */
struct ns2__ForcePerVolumeMeasure;	/* testh.h:32681 */
struct ns2__ForcePerVolumeMeasureExt;	/* testh.h:43643 */
struct ns2__FrequencyIntervalMeasure;	/* testh.h:57118 */
struct ns2__FrequencyIntervalMeasureExt;	/* testh.h:57137 */
struct ns2__FrequencyMeasure;	/* testh.h:57156 */
struct ns2__FrequencyMeasureExt;	/* testh.h:57175 */
struct ns2__HeatCapacityMeasure;	/* testh.h:57194 */
struct ns2__HeatCapacityMeasureExt;	/* testh.h:57213 */
struct ns2__HeatFlowRateMeasure;	/* testh.h:57232 */
struct ns2__HeatFlowRateMeasureExt;	/* testh.h:57251 */
struct ns2__HeatTransferCoefficientMeasure;	/* testh.h:57270 */
struct ns2__HeatTransferCoefficientMeasureExt;	/* testh.h:57289 */
struct ns2__IlluminanceMeasure;	/* testh.h:52556 */
struct ns2__IlluminanceMeasureExt;	/* testh.h:57327 */
struct ns2__InductanceMeasure;	/* testh.h:57346 */
struct ns2__InductanceMeasureExt;	/* testh.h:57365 */
struct ns2__IsothermalCompressibilityMeasure;	/* testh.h:33283 */
struct ns2__IsothermalCompressibilityMeasureExt;	/* testh.h:57403 */
struct ns2__KinematicViscosityMeasure;	/* testh.h:57422 */
struct ns2__KinematicViscosityMeasureExt;	/* testh.h:57441 */
struct ns2__LengthMeasure;	/* testh.h:20637 */
struct ns2__LengthMeasureExt;	/* testh.h:24365 */
struct ns2__LengthOrTimeMeasureExt;	/* testh.h:57498 */
struct ns2__LengthPerAngleMeasure;	/* testh.h:57515 */
struct ns2__LengthPerAngleMeasureExt;	/* testh.h:57534 */
struct ns2__LengthPerLengthMeasure;	/* testh.h:22776 */
struct ns2__LengthPerLengthMeasureExt;	/* testh.h:28753 */
struct ns2__LengthPerMassMeasure;	/* testh.h:57591 */
struct ns2__LengthPerMassMeasureExt;	/* testh.h:57610 */
struct ns2__LengthPerPressureMeasure;	/* testh.h:57629 */
struct ns2__LengthPerPressureMeasureExt;	/* testh.h:57648 */
struct ns2__LengthPerTemperatureMeasure;	/* testh.h:57667 */
struct ns2__LengthPerTemperatureMeasureExt;	/* testh.h:57686 */
struct ns2__LengthPerTimeMeasure;	/* testh.h:20583 */
struct ns2__LengthPerTimeMeasureExt;	/* testh.h:32201 */
struct ns2__LengthPerVolumeMeasure;	/* testh.h:57743 */
struct ns2__LengthPerVolumeMeasureExt;	/* testh.h:57762 */
struct ns2__LightExposureMeasure;	/* testh.h:57781 */
struct ns2__LightExposureMeasureExt;	/* testh.h:57800 */
struct ns2__LinearAccelerationMeasure;	/* testh.h:31560 */
struct ns2__LinearAccelerationMeasureExt;	/* testh.h:57838 */
struct ns2__LinearThermalExpansionMeasure;	/* testh.h:57857 */
struct ns2__LinearThermalExpansionMeasureExt;	/* testh.h:57876 */
struct ns2__LogarithmicPowerRatioMeasure;	/* testh.h:57895 */
struct ns2__LogarithmicPowerRatioMeasureExt;	/* testh.h:57914 */
struct ns2__LogarithmicPowerRatioPerLengthMeasure;	/* testh.h:57933 */
struct ns2__LogarithmicPowerRatioPerLengthMeasureExt;	/* testh.h:57952 */
struct ns2__LuminanceMeasure;	/* testh.h:57971 */
struct ns2__LuminanceMeasureExt;	/* testh.h:57990 */
struct ns2__LuminousEfficacyMeasure;	/* testh.h:58009 */
struct ns2__LuminousEfficacyMeasureExt;	/* testh.h:58028 */
struct ns2__LuminousFluxMeasure;	/* testh.h:58047 */
struct ns2__LuminousFluxMeasureExt;	/* testh.h:58066 */
struct ns2__LuminousIntensityMeasure;	/* testh.h:58085 */
struct ns2__LuminousIntensityMeasureExt;	/* testh.h:58104 */
struct ns2__MagneticDipoleMomentMeasure;	/* testh.h:58123 */
struct ns2__MagneticDipoleMomentMeasureExt;	/* testh.h:58142 */
struct ns2__MagneticFieldStrengthMeasure;	/* testh.h:58161 */
struct ns2__MagneticFieldStrengthMeasureExt;	/* testh.h:58180 */
struct ns2__MagneticFluxDensityMeasure;	/* testh.h:31578 */
struct ns2__MagneticFluxDensityMeasureExt;	/* testh.h:58218 */
struct ns2__MagneticFluxDensityPerLengthMeasure;	/* testh.h:58237 */
struct ns2__MagneticFluxDensityPerLengthMeasureExt;	/* testh.h:58256 */
struct ns2__MagneticFluxMeasure;	/* testh.h:58275 */
struct ns2__MagneticFluxMeasureExt;	/* testh.h:58294 */
struct ns2__MagneticPermeabilityMeasure;	/* testh.h:58313 */
struct ns2__MagneticPermeabilityMeasureExt;	/* testh.h:58332 */
struct ns2__MagneticVectorPotentialMeasure;	/* testh.h:58351 */
struct ns2__MagneticVectorPotentialMeasureExt;	/* testh.h:58370 */
struct ns2__MassLengthMeasure;	/* testh.h:58389 */
struct ns2__MassLengthMeasureExt;	/* testh.h:58408 */
struct ns2__MassMeasure;	/* testh.h:21274 */
struct ns2__MassMeasureExt;	/* testh.h:22614 */
struct ns2__MassPerAreaMeasure;	/* testh.h:58465 */
struct ns2__MassPerAreaMeasureExt;	/* testh.h:58484 */
struct ns2__MassPerEnergyMeasure;	/* testh.h:58503 */
struct ns2__MassPerEnergyMeasureExt;	/* testh.h:58522 */
struct ns2__MassPerLengthMeasure;	/* testh.h:22692 */
struct ns2__MassPerLengthMeasureExt;	/* testh.h:58560 */
struct ns2__MassPerMassMeasure;	/* testh.h:21196 */
struct ns2__MassPerMassMeasureExt;	/* testh.h:58598 */
struct ns2__MassPerTimeMeasure;	/* testh.h:34013 */
struct ns2__MassPerTimeMeasureExt;	/* testh.h:58636 */
struct ns2__MassPerTimePerAreaMeasure;	/* testh.h:58655 */
struct ns2__MassPerTimePerAreaMeasureExt;	/* testh.h:58674 */
struct ns2__MassPerTimePerLengthMeasure;	/* testh.h:58693 */
struct ns2__MassPerTimePerLengthMeasureExt;	/* testh.h:58712 */
struct ns2__MassPerVolumeMeasure;	/* testh.h:20559 */
struct ns2__MassPerVolumeMeasureExt;	/* testh.h:58750 */
struct ns2__MassPerVolumePerLengthMeasure;	/* testh.h:58769 */
struct ns2__MassPerVolumePerLengthMeasureExt;	/* testh.h:58788 */
struct ns2__MassPerVolumePerPressureMeasure;	/* testh.h:58807 */
struct ns2__MassPerVolumePerPressureMeasureExt;	/* testh.h:58826 */
struct ns2__MassPerVolumePerTemperatureMeasure;	/* testh.h:58845 */
struct ns2__MassPerVolumePerTemperatureMeasureExt;	/* testh.h:58864 */
struct ns2__MobilityMeasure;	/* testh.h:58883 */
struct ns2__MobilityMeasureExt;	/* testh.h:58902 */
struct ns2__MolarEnergyMeasure;	/* testh.h:58921 */
struct ns2__MolarEnergyMeasureExt;	/* testh.h:58940 */
struct ns2__MolarHeatCapacityMeasure;	/* testh.h:58959 */
struct ns2__MolarHeatCapacityMeasureExt;	/* testh.h:58978 */
struct ns2__MolarVolumeMeasure;	/* testh.h:58997 */
struct ns2__MolarVolumeMeasureExt;	/* testh.h:59016 */
struct ns2__MolecularWeightMeasure;	/* testh.h:59035 */
struct ns2__MolecularWeightMeasureExt;	/* testh.h:59054 */
struct ns2__MomentOfForceMeasure;	/* testh.h:20517 */
struct ns2__MomentOfForceMeasureExt;	/* testh.h:59092 */
struct ns2__MomentOfInertiaMeasure;	/* testh.h:59111 */
struct ns2__MomentOfInertiaMeasureExt;	/* testh.h:59130 */
struct ns2__MomentumMeasure;	/* testh.h:59149 */
struct ns2__MomentumMeasureExt;	/* testh.h:59168 */
struct ns2__NormalizedPowerMeasure;	/* testh.h:59187 */
struct ns2__NormalizedPowerMeasureExt;	/* testh.h:59206 */
struct ns2__PermeabilityLengthMeasure;	/* testh.h:33074 */
struct ns2__PermeabilityLengthMeasureExt;	/* testh.h:59244 */
struct ns2__PermeabilityRockMeasure;	/* testh.h:32723 */
struct ns2__PermeabilityRockMeasureExt;	/* testh.h:59282 */
struct ns2__PermittivityMeasure;	/* testh.h:59301 */
struct ns2__PermittivityMeasureExt;	/* testh.h:59320 */
struct ns2__PlaneAngleMeasure;	/* testh.h:20745 */
struct ns2__PlaneAngleMeasureExt;	/* testh.h:28696 */
struct ns2__PotentialDifferencePerPowerDropMeasure;	/* testh.h:59377 */
struct ns2__PotentialDifferencePerPowerDropMeasureExt;	/* testh.h:59396 */
struct ns2__PowerMeasure;	/* testh.h:20589 */
struct ns2__PowerMeasureExt;	/* testh.h:59434 */
struct ns2__PowerPerAreaMeasure;	/* testh.h:59453 */
struct ns2__PowerPerAreaMeasureExt;	/* testh.h:59472 */
struct ns2__PowerPerPowerMeasure;	/* testh.h:29727 */
struct ns2__PowerPerPowerMeasureExt;	/* testh.h:59510 */
struct ns2__PowerPerVolumeMeasure;	/* testh.h:59529 */
struct ns2__PowerPerVolumeMeasureExt;	/* testh.h:59548 */
struct ns2__PressureMeasure;	/* testh.h:20595 */
struct ns2__PressureMeasureExt;	/* testh.h:20950 */
struct ns2__PressurePerFlowrateMeasure;	/* testh.h:59609 */
struct ns2__PressurePerFlowrateMeasureExt;	/* testh.h:59632 */
struct ns2__PressurePerFlowrateSquaredMeasure;	/* testh.h:59655 */
struct ns2__PressurePerFlowrateSquaredMeasureExt;	/* testh.h:59678 */
struct ns2__PressurePerPressureMeasure;	/* testh.h:59697 */
struct ns2__PressurePerPressureMeasureExt;	/* testh.h:59716 */
struct ns2__PressurePerTimeMeasure;	/* testh.h:59735 */
struct ns2__PressurePerTimeMeasureExt;	/* testh.h:59754 */
struct ns2__PressurePerVolumeMeasure;	/* testh.h:59773 */
struct ns2__PressurePerVolumeMeasureExt;	/* testh.h:59792 */
struct ns2__PressureSquaredMeasure;	/* testh.h:59811 */
struct ns2__PressureSquaredMeasureExt;	/* testh.h:59830 */
struct ns2__PressureSquaredPerForceTimePerAreaMeasure;	/* testh.h:59849 */
struct ns2__PressureSquaredPerForceTimePerAreaMeasureExt;	/* testh.h:59868 */
struct ns2__PressureTimePerVolumeMeasure;	/* testh.h:59887 */
struct ns2__PressureTimePerVolumeMeasureExt;	/* testh.h:59906 */
struct ns2__QuantityOfLightMeasure;	/* testh.h:59925 */
struct ns2__QuantityOfLightMeasureExt;	/* testh.h:59944 */
struct ns2__RadianceMeasure;	/* testh.h:59963 */
struct ns2__RadianceMeasureExt;	/* testh.h:59982 */
struct ns2__RadiantIntensityMeasure;	/* testh.h:60001 */
struct ns2__RadiantIntensityMeasureExt;	/* testh.h:60020 */
struct ns2__ReciprocalAreaMeasure;	/* testh.h:60039 */
struct ns2__ReciprocalAreaMeasureExt;	/* testh.h:60058 */
struct ns2__ReciprocalElectricPotentialDifferenceMeasure;	/* testh.h:60077 */
struct ns2__ReciprocalElectricPotentialDifferenceMeasureExt;	/* testh.h:60096 */
struct ns2__ReciprocalForceMeasure;	/* testh.h:60115 */
struct ns2__ReciprocalForceMeasureExt;	/* testh.h:60134 */
struct ns2__ReciprocalLengthMeasure;	/* testh.h:26200 */
struct ns2__ReciprocalLengthMeasureExt;	/* testh.h:60172 */
struct ns2__ReciprocalMassMeasure;	/* testh.h:60191 */
struct ns2__ReciprocalMassMeasureExt;	/* testh.h:60210 */
struct ns2__ReciprocalMassTimeMeasure;	/* testh.h:60229 */
struct ns2__ReciprocalMassTimeMeasureExt;	/* testh.h:60248 */
struct ns2__ReciprocalPressureMeasure;	/* testh.h:60267 */
struct ns2__ReciprocalPressureMeasureExt;	/* testh.h:60286 */
struct ns2__ReciprocalTimeMeasure;	/* testh.h:60305 */
struct ns2__ReciprocalTimeMeasureExt;	/* testh.h:60324 */
struct ns2__ReciprocalVolumeMeasure;	/* testh.h:60343 */
struct ns2__ReciprocalVolumeMeasureExt;	/* testh.h:60362 */
struct ns2__ReluctanceMeasure;	/* testh.h:60381 */
struct ns2__ReluctanceMeasureExt;	/* testh.h:60400 */
struct ns2__SecondMomentOfAreaMeasure;	/* testh.h:60419 */
struct ns2__SecondMomentOfAreaMeasureExt;	/* testh.h:60438 */
struct ns2__SignalingEventPerTimeMeasure;	/* testh.h:60457 */
struct ns2__SignalingEventPerTimeMeasureExt;	/* testh.h:60476 */
struct ns2__SolidAngleMeasure;	/* testh.h:60495 */
struct ns2__SolidAngleMeasureExt;	/* testh.h:60514 */
struct ns2__SpecificHeatCapacityMeasure;	/* testh.h:33307 */
struct ns2__SpecificHeatCapacityMeasureExt;	/* testh.h:60552 */
struct ns2__TemperatureIntervalMeasure;	/* testh.h:60571 */
struct ns2__TemperatureIntervalMeasureExt;	/* testh.h:60590 */
struct ns2__TemperatureIntervalPerLengthMeasure;	/* testh.h:60609 */
struct ns2__TemperatureIntervalPerLengthMeasureExt;	/* testh.h:60628 */
struct ns2__TemperatureIntervalPerPressureMeasure;	/* testh.h:60647 */
struct ns2__TemperatureIntervalPerPressureMeasureExt;	/* testh.h:60666 */
struct ns2__TemperatureIntervalPerTimeMeasure;	/* testh.h:60685 */
struct ns2__TemperatureIntervalPerTimeMeasureExt;	/* testh.h:60704 */
struct ns2__ThermalConductanceMeasure;	/* testh.h:60723 */
struct ns2__ThermalConductanceMeasureExt;	/* testh.h:60742 */
struct ns2__ThermalConductivityMeasure;	/* testh.h:33313 */
struct ns2__ThermalConductivityMeasureExt;	/* testh.h:60780 */
struct ns2__ThermalDiffusivityMeasure;	/* testh.h:60799 */
struct ns2__ThermalDiffusivityMeasureExt;	/* testh.h:60818 */
struct ns2__ThermalInsulanceMeasure;	/* testh.h:60837 */
struct ns2__ThermalInsulanceMeasureExt;	/* testh.h:60856 */
struct ns2__ThermalResistanceMeasure;	/* testh.h:60875 */
struct ns2__ThermalResistanceMeasureExt;	/* testh.h:60894 */
struct ns2__ThermodynamicTemperatureMeasure;	/* testh.h:20781 */
struct ns2__ThermodynamicTemperatureMeasureExt;	/* testh.h:21358 */
struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure;	/* testh.h:60951 */
struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt;	/* testh.h:60970 */
struct ns2__TimeMeasure;	/* testh.h:20469 */
struct ns2__TimeMeasureExt;	/* testh.h:46823 */
struct ns2__TimePerLengthMeasure;	/* testh.h:61027 */
struct ns2__TimePerLengthMeasureExt;	/* testh.h:61046 */
struct ns2__TimePerMassMeasure;	/* testh.h:61065 */
struct ns2__TimePerMassMeasureExt;	/* testh.h:61084 */
struct ns2__TimePerTimeMeasure;	/* testh.h:61103 */
struct ns2__TimePerTimeMeasureExt;	/* testh.h:61122 */
struct ns2__TimePerVolumeMeasure;	/* testh.h:61141 */
struct ns2__TimePerVolumeMeasureExt;	/* testh.h:61160 */
struct ns2__UnitlessMeasure;	/* testh.h:32937 */
struct ns2__VerticalCoordinateMeasure;	/* testh.h:61201 */
struct ns2__VerticalCoordinateMeasureExt;	/* testh.h:61220 */
struct ns2__VolumeFlowRatePerVolumeFlowRateMeasure;	/* testh.h:61239 */
struct ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt;	/* testh.h:61258 */
struct ns2__VolumeMeasure;	/* testh.h:20890 */
struct ns2__VolumeMeasureExt;	/* testh.h:21346 */
struct ns2__VolumePerAreaMeasure;	/* testh.h:61315 */
struct ns2__VolumePerAreaMeasureExt;	/* testh.h:61334 */
struct ns2__VolumePerLengthMeasure;	/* testh.h:34662 */
struct ns2__VolumePerLengthMeasureExt;	/* testh.h:61372 */
struct ns2__VolumePerMassMeasure;	/* testh.h:23875 */
struct ns2__VolumePerMassMeasureExt;	/* testh.h:61410 */
struct ns2__VolumePerPressureMeasure;	/* testh.h:61429 */
struct ns2__VolumePerPressureMeasureExt;	/* testh.h:61448 */
struct ns2__VolumePerRotationMeasure;	/* testh.h:61467 */
struct ns2__VolumePerRotationMeasureExt;	/* testh.h:61486 */
struct ns2__VolumePerTimeLengthMeasure;	/* testh.h:61505 */
struct ns2__VolumePerTimeLengthMeasureExt;	/* testh.h:61524 */
struct ns2__VolumePerTimeMeasure;	/* testh.h:20565 */
struct ns2__VolumePerTimeMeasureExt;	/* testh.h:61562 */
struct ns2__VolumePerTimePerAreaMeasure;	/* testh.h:61581 */
struct ns2__VolumePerTimePerAreaMeasureExt;	/* testh.h:61600 */
struct ns2__VolumePerTimePerLengthMeasure;	/* testh.h:61619 */
struct ns2__VolumePerTimePerLengthMeasureExt;	/* testh.h:61638 */
struct ns2__VolumePerTimePerPressureLengthMeasure;	/* testh.h:61657 */
struct ns2__VolumePerTimePerPressureLengthMeasureExt;	/* testh.h:61676 */
struct ns2__VolumePerTimePerPressureMeasure;	/* testh.h:61695 */
struct ns2__VolumePerTimePerPressureMeasureExt;	/* testh.h:61714 */
struct ns2__VolumePerTimePerTimeMeasure;	/* testh.h:61733 */
struct ns2__VolumePerTimePerTimeMeasureExt;	/* testh.h:61752 */
struct ns2__VolumePerTimePerVolumeMeasure;	/* testh.h:61771 */
struct ns2__VolumePerTimePerVolumeMeasureExt;	/* testh.h:61790 */
struct ns2__VolumePerVolumeMeasure;	/* testh.h:21016 */
struct ns2__VolumePerVolumeMeasureExt;	/* testh.h:43549 */
struct ns2__VolumetricHeatTransferCoefficientMeasure;	/* testh.h:61847 */
struct ns2__VolumetricHeatTransferCoefficientMeasureExt;	/* testh.h:61866 */
struct ns2__VolumetricThermalExpansionMeasure;	/* testh.h:33320 */
struct ns2__VolumetricThermalExpansionMeasureExt;	/* testh.h:61904 */
struct ns2__ReferencePressure;	/* testh.h:48491 */
struct ns1__EventType;	/* testh.h:43187 */
struct ns1__TimestampedCommentString;	/* testh.h:43460 */
struct ns1__GeochronologicalUnit;	/* testh.h:46762 */
struct ns1__LithostratigraphicUnit;	/* testh.h:46768 */
struct ns1__PPFGChannel;	/* testh.h:51287 */
struct ns1__PPFGChannelSet;	/* testh.h:51509 */
struct ns1__PPFGLog;	/* testh.h:51734 */
struct ns2__AbstractMdGrowingObject;	/* testh.h:53337 */
struct ns2__AbstractTimeGrowingObject;	/* testh.h:53339 */
struct ns2__LocalEngineering2dPosition;	/* testh.h:53367 */
struct ns2__Projected2dPosition;	/* testh.h:50851 */
struct ns2__PublicLandSurveySystem2dPosition;	/* testh.h:53371 */
struct ns2__ReferencePointInAWellbore;	/* testh.h:53662 */
struct ns2__AuthorityQualifiedName;	/* testh.h:48089 */
struct ns2__FloatingPointConstantArray;	/* testh.h:53891 */
struct ns2__FloatingPointExternalArray;	/* testh.h:53893 */
struct ns2__FloatingPointLatticeArray;	/* testh.h:53895 */
struct ns2__FloatingPointXmlArray;	/* testh.h:53897 */
struct ns2__IntegerArrayFromBooleanMaskArray;	/* testh.h:53924 */
struct ns2__IntegerConstantArray;	/* testh.h:53926 */
struct ns2__IntegerExternalArray;	/* testh.h:53928 */
struct ns2__IntegerLatticeArray;	/* testh.h:53930 */
struct ns2__IntegerXmlArray;	/* testh.h:53932 */
struct ns2__StringMeasure;	/* testh.h:37282 */
struct ns2__LocalEngineering2dCrs;	/* testh.h:54435 */
struct ns2__ProjectedCrs;	/* testh.h:54437 */
struct ns2__EmailQualifierStruct;	/* testh.h:48962 */
struct ns2__NameStruct;	/* testh.h:27231 */
struct ns1__WellboreGeometry;	/* testh.h:63032 */
struct ns1__MudLogReport;	/* testh.h:63034 */
struct ns1__CuttingsGeology;	/* testh.h:52822 */
struct ns1__InterpretedGeology;	/* testh.h:52824 */
struct ns1__ShowEvaluation;	/* testh.h:52826 */
struct ns1__Trajectory;	/* testh.h:63042 */
struct ns21__witsmlObject;	/* testh.h:66202 */
struct ns21__readWitsmlObjectResponse;	/* testh.h:66240 */
struct ns21__readWitsmlObject;	/* testh.h:66240 */

/* testh.h:154 */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* binary data attached as MTOM/MIME/DIME attachment or included as *`xsd:base64Binary`* base64: */
struct xsd__base64Binary {
        unsigned char *__ptr;
        int __size;
        /** Optional element 'id' of XML schema type 'xsd:string' */
        char *id;
        /** Optional element 'type' of XML schema type 'xsd:string' */
        char *type;
        /** Optional element 'options' of XML schema type 'xsd:string' */
        char *options;
};
#endif

/* testh.h:20462 */
#ifndef SOAP_TYPE_ns1__DrillingParams
#define SOAP_TYPE_ns1__DrillingParams (663)
/* complex XML schema type 'ns1:DrillingParams': */
struct ns1__DrillingParams {
        /** Optional element 'ns1:ETimOpBit' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimOpBit;
        /** Optional element 'ns1:MdHoleStart' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHoleStart;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MdHoleStop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHoleStop;
        /** Optional element 'ns1:HkldRot' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *HkldRot;
        /** Optional element 'ns1:OverPull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *OverPull;
        /** Optional element 'ns1:SlackOff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *SlackOff;
        /** Optional element 'ns1:HkldUp' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *HkldUp;
        /** Optional element 'ns1:HkldDn' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *HkldDn;
        /** Optional element 'ns1:TqOnBotAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqOnBotAv;
        /** Optional element 'ns1:TqOnBotMx' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqOnBotMx;
        /** Optional element 'ns1:TqOnBotMn' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqOnBotMn;
        /** Optional element 'ns1:TqOffBotAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqOffBotAv;
        /** Optional element 'ns1:TqDhAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqDhAv;
        /** Optional element 'ns1:WtAboveJar' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WtAboveJar;
        /** Optional element 'ns1:WtBelowJar' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WtBelowJar;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Optional element 'ns1:FlowratePumpAv' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowratePumpAv;
        /** Optional element 'ns1:FlowratePumpMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowratePumpMx;
        /** Optional element 'ns1:FlowratePumpMn' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowratePumpMn;
        /** Optional element 'ns1:VelNozzleAv' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *VelNozzleAv;
        /** Optional element 'ns1:PowBit' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *PowBit;
        /** Optional element 'ns1:PresDropBit' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDropBit;
        /** Optional element 'ns1:CTimHold' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimHold;
        /** Optional element 'ns1:CTimSteering' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimSteering;
        /** Optional element 'ns1:CTimDrillRot' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimDrillRot;
        /** Optional element 'ns1:CTimDrillSlid' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimDrillSlid;
        /** Optional element 'ns1:CTimCirc' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimCirc;
        /** Optional element 'ns1:CTimReam' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *CTimReam;
        /** Optional element 'ns1:DistDrillRot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillRot;
        /** Optional element 'ns1:DistDrillSlid' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillSlid;
        /** Optional element 'ns1:DistReam' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistReam;
        /** Optional element 'ns1:DistHold' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistHold;
        /** Optional element 'ns1:DistSteering' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistSteering;
        /** Optional element 'ns1:RpmAv' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmAv;
        /** Optional element 'ns1:RpmMx' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmMx;
        /** Optional element 'ns1:RpmMn' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmMn;
        /** Optional element 'ns1:RpmAvDh' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmAvDh;
        /** Optional element 'ns1:RopAv' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopAv;
        /** Optional element 'ns1:RopMx' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopMx;
        /** Optional element 'ns1:RopMn' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopMn;
        /** Optional element 'ns1:WobAv' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WobAv;
        /** Optional element 'ns1:WobMx' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WobMx;
        /** Optional element 'ns1:WobMn' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WobMn;
        /** Optional element 'ns1:WobAvDh' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WobAvDh;
        /** Optional element 'ns1:ReasonTrip' of XML schema type 'ns2:String2000' */
        char *ReasonTrip;
        /** Optional element 'ns1:ObjectiveBha' of XML schema type 'ns2:String2000' */
        char *ObjectiveBha;
        /** Optional element 'ns1:AziTop' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AziTop;
        /** Optional element 'ns1:AziBottom' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AziBottom;
        /** Optional element 'ns1:InclStart' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *InclStart;
        /** Optional element 'ns1:InclMx' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *InclMx;
        /** Optional element 'ns1:InclMn' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *InclMn;
        /** Optional element 'ns1:InclStop' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *InclStop;
        /** Optional element 'ns1:TempMudDhMx' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempMudDhMx;
        /** Optional element 'ns1:PresPumpAv' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresPumpAv;
        /** Optional element 'ns1:FlowrateBit' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateBit;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClass' */
        enum ns1__MudClass *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClass' */
        enum ns1__MudSubClass *MudSubClass;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:Tubular' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tubular;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:20848 */
#ifndef SOAP_TYPE_ns1__Fluid
#define SOAP_TYPE_ns1__Fluid (696)
/* complex XML schema type 'ns1:Fluid': */
struct ns1__Fluid {
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:LocationSample' of XML schema type 'ns2:String64' */
        char *LocationSample;
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:Ecd' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Ecd;
        /** Optional element 'ns1:KickToleranceVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *KickToleranceVolume;
        /** Optional element 'ns1:KickToleranceIntensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *KickToleranceIntensity;
        /** Optional element 'ns1:TempFlowLine' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempFlowLine;
        /** Optional element 'ns1:PresBopRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBopRating;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClass' */
        enum ns1__MudClass *MudClass;
        /** Optional element 'ns1:Density' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Density;
        /** Optional element 'ns1:VisFunnel' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *VisFunnel;
        /** Optional element 'ns1:TempVis' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempVis;
        /** Optional element 'ns1:Pv' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *Pv;
        /** Optional element 'ns1:Yp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Yp;
        /** Optional element 'ns1:Gel3Sec' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *Gel3Sec;
        /** Optional element 'ns1:Gel6Sec' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *Gel6Sec;
        /** Optional element 'ns1:Gel10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Sec;
        /** Optional element 'ns1:Gel10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Min;
        /** Optional element 'ns1:Gel30Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel30Min;
        /** Optional element 'ns1:FilterCakeLtlp' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FilterCakeLtlp;
        /** Optional element 'ns1:FiltrateLtlp' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FiltrateLtlp;
        /** Optional element 'ns1:TempHthp' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempHthp;
        /** Optional element 'ns1:PresHthp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresHthp;
        /** Optional element 'ns1:FiltrateHthp' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FiltrateHthp;
        /** Optional element 'ns1:FilterCakeHthp' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FilterCakeHthp;
        /** Optional element 'ns1:SolidsPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolidsPc;
        /** Optional element 'ns1:WaterPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *WaterPc;
        /** Optional element 'ns1:OilPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *OilPc;
        /** Optional element 'ns1:SandPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SandPc;
        /** Optional element 'ns1:SolidsLowGravPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolidsLowGravPc;
        /** Optional element 'ns1:SolidsLowGrav' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *SolidsLowGrav;
        /** Optional element 'ns1:SolidsCalcPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolidsCalcPc;
        /** Optional element 'ns1:BaritePc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *BaritePc;
        /** Optional element 'ns1:Lcm' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Lcm;
        /** Optional element 'ns1:Mbt' of XML schema type 'ns2:CationExchangeCapacityMeasureExt' */
        struct ns2__CationExchangeCapacityMeasureExt *Mbt;
        /** Optional element 'ns1:Ph' of XML schema type 'xsd:double' */
        double *Ph;
        /** Optional element 'ns1:TempPh' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempPh;
        /** Optional element 'ns1:Pm' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Pm;
        /** Optional element 'ns1:PmFiltrate' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *PmFiltrate;
        /** Optional element 'ns1:Mf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Mf;
        /** Optional element 'ns1:AlkalinityP1' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *AlkalinityP1;
        /** Optional element 'ns1:AlkalinityP2' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *AlkalinityP2;
        /** Optional element 'ns1:Chloride' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Chloride;
        /** Optional element 'ns1:Calcium' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Calcium;
        /** Optional element 'ns1:Magnesium' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Magnesium;
        /** Optional element 'ns1:Potassium' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Potassium;
        /** Optional element 'ns1:BrinePc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *BrinePc;
        /** Optional element 'ns1:BrineDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *BrineDensity;
        /** Optional element 'ns1:BrineClass' of XML schema type 'ns1:BrineClassExt' */
        char *BrineClass;
        /** Optional element 'ns1:Lime' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Lime;
        /** Optional element 'ns1:ElectStab' of XML schema type 'ns2:ElectricPotentialDifferenceMeasure' */
        struct ns2__ElectricPotentialDifferenceMeasure *ElectStab;
        /** Optional element 'ns1:CalciumChloridePc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *CalciumChloridePc;
        /** Optional element 'ns1:CalciumChloride' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *CalciumChloride;
        /** Optional element 'ns1:Company' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Company;
        /** Optional element 'ns1:Engineer' of XML schema type 'ns2:String64' */
        char *Engineer;
        /** Optional element 'ns1:Asg' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *Asg;
        /** Optional element 'ns1:SolidsHiGravPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolidsHiGravPc;
        /** Optional element 'ns1:SolidsHiGrav' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *SolidsHiGrav;
        /** Optional element 'ns1:Polymer' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Polymer;
        /** Optional element 'ns1:PolyType' of XML schema type 'ns2:String64' */
        char *PolyType;
        /** Optional element 'ns1:SolCorPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolCorPc;
        /** Optional element 'ns1:OilCtg' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *OilCtg;
        /** Optional element 'ns1:OilCtgDry' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *OilCtgDry;
        /** Optional element 'ns1:HardnessCa' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *HardnessCa;
        /** Optional element 'ns1:Sulfide' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Sulfide;
        /** Optional element 'ns1:AverageCuttingSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *AverageCuttingSize;
        /** Optional element 'ns1:Carbonate' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Carbonate;
        /** Optional element 'ns1:Iron' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Iron;
        /** Optional element 'ns1:MetalRecovered' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *MetalRecovered;
        /** Optional element 'ns1:Turbidity' of XML schema type 'xsd:double' */
        double *Turbidity;
        /** Optional element 'ns1:OilGrease' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *OilGrease;
        /** Optional element 'ns1:Salt' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Salt;
        /** Optional element 'ns1:SaltPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SaltPc;
        /** Optional element 'ns1:Tct' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *Tct;
        /** Optional element 'ns1:WaterPhaseSalinity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WaterPhaseSalinity;
        /** Optional element 'ns1:WholeMudCalcium' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WholeMudCalcium;
        /** Optional element 'ns1:WholeMudChloride' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WholeMudChloride;
        /** Optional element 'ns1:ZincOxide' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *ZincOxide;
        /** Optional element 'ns1:SodiumChloride' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *SodiumChloride;
        /** Optional element 'ns1:SodiumChloridePc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SodiumChloridePc;
        /** Optional element 'ns1:PptSpurtLoss' of XML schema type 'ns2:VolumeMeasureExt' */
        struct ns2__VolumeMeasureExt *PptSpurtLoss;
        /** Optional element 'ns1:PptPressure' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *PptPressure;
        /** Optional element 'ns1:PptTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasureExt' */
        struct ns2__ThermodynamicTemperatureMeasureExt *PptTemperature;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Rheometer' of XML schema type 'ns1:Rheometer' stored in dynamic array Rheometer of length __sizeRheometer */
        int __sizeRheometer;
        struct ns1__Rheometer *Rheometer;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:21376 */
#ifndef SOAP_TYPE_ns1__Rheometer
#define SOAP_TYPE_ns1__Rheometer (721)
/* complex XML schema type 'ns1:Rheometer': */
struct ns1__Rheometer {
        /** Optional element 'ns1:TempRheom' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempRheom;
        /** Optional element 'ns1:PresRheom' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRheom;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Viscosity' of XML schema type 'ns1:RheometerViscosity' stored in dynamic array Viscosity of length __sizeViscosity */
        int __sizeViscosity;
        struct ns1__RheometerViscosity *Viscosity;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:21423 */
#ifndef SOAP_TYPE_ns1__RheometerViscosity
#define SOAP_TYPE_ns1__RheometerViscosity (723)
/* complex XML schema type 'ns1:RheometerViscosity': */
struct ns1__RheometerViscosity {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Speed' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *Speed;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Viscosity' of XML schema type 'xsd:double' */
        double Viscosity;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:21481 */
#ifndef SOAP_TYPE_ns1__BottomHoleLocation
#define SOAP_TYPE_ns1__BottomHoleLocation (725)
/* complex XML schema type 'ns1:BottomHoleLocation': */
struct ns1__BottomHoleLocation {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Location' of XML schema type 'ns2:AbstractPosition' */
        struct ns2__AbstractPosition *Location;
        /** Optional element 'ns1:OSDULocationMetadata' of XML schema type 'ns2:OSDUSpatialLocationIntegration' */
        struct ns2__OSDUSpatialLocationIntegration *OSDULocationMetadata;
};
#endif

/* testh.h:21510 */
#ifndef SOAP_TYPE_ns1__LicensePeriod
#define SOAP_TYPE_ns1__LicensePeriod (730)
/* complex XML schema type 'ns1:LicensePeriod': */
struct ns1__LicensePeriod {
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumLicense' of XML schema type 'ns2:String64' */
        char *NumLicense;
        /** Optional element 'ns1:TerminationDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *TerminationDateTime;
        /** Optional element 'ns1:EffectiveDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDateTime;
};
#endif

/* testh.h:21545 */
#ifndef SOAP_TYPE_ns1__WellPurposePeriod
#define SOAP_TYPE_ns1__WellPurposePeriod (731)
/* complex XML schema type 'ns1:WellPurposePeriod': */
struct ns1__WellPurposePeriod {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Purpose' of XML schema type 'ns1:WellPurpose' */
        enum ns1__WellPurpose Purpose;
        /** Optional element 'ns1:StartDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDateTime;
        /** Optional element 'ns1:EndDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDateTime;
};
#endif

/* testh.h:21584 */
#ifndef SOAP_TYPE_ns1__AbstractRotarySteerableTool
#define SOAP_TYPE_ns1__AbstractRotarySteerableTool (732)
/* complex XML schema type 'ns1:AbstractRotarySteerableTool': */
struct ns1__AbstractRotarySteerableTool {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractRotarySteerableTool when non-NULL */
        struct ns1__BendAngle *ns1__BendAngle;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractRotarySteerableTool when non-NULL */
        struct ns1__BendOffset *ns1__BendOffset;
};
#endif

/* testh.h:21605 */
#ifndef SOAP_TYPE_ns1__Bend
#define SOAP_TYPE_ns1__Bend (737)
/* complex XML schema type 'ns1:Bend': */
struct ns1__Bend {
        /** Optional element 'ns1:Angle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Angle;
        /** Optional element 'ns1:DistBendBot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistBendBot;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:21648 */
#ifndef SOAP_TYPE_ns1__BitRecord
#define SOAP_TYPE_ns1__BitRecord (738)
/* complex XML schema type 'ns1:BitRecord': */
struct ns1__BitRecord {
        /** Optional element 'ns1:NumBit' of XML schema type 'ns2:String64' */
        char *NumBit;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DiaBit' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaBit;
        /** Optional element 'ns1:DiaPassThru' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaPassThru;
        /** Optional element 'ns1:DiaPilot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaPilot;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:TypeBit' of XML schema type 'ns1:BitType' */
        enum ns1__BitType *TypeBit;
        /** Optional element 'ns1:CodeMfg' of XML schema type 'ns2:String64' */
        char *CodeMfg;
        /** Optional element 'ns1:CodeIADC' of XML schema type 'ns2:String64' */
        char *CodeIADC;
        /** Optional element 'ns1:CondInitInner' of XML schema type 'ns1:IadcIntegerCode' */
        enum ns1__IadcIntegerCode *CondInitInner;
        /** Optional element 'ns1:CondInitOuter' of XML schema type 'ns1:IadcIntegerCode' */
        enum ns1__IadcIntegerCode *CondInitOuter;
        /** Optional element 'ns1:CondInitDull' of XML schema type 'ns1:BitDullCode' */
        enum ns1__BitDullCode *CondInitDull;
        /** Optional element 'ns1:CondInitLocation' of XML schema type 'ns2:String64' */
        char *CondInitLocation;
        /** Optional element 'ns1:CondInitBearing' of XML schema type 'ns1:IadcBearingWearCode' */
        enum ns1__IadcBearingWearCode *CondInitBearing;
        /** Optional element 'ns1:CondInitGauge' of XML schema type 'ns2:String64' */
        char *CondInitGauge;
        /** Optional element 'ns1:CondInitOther' of XML schema type 'ns2:String64' */
        char *CondInitOther;
        /** Optional element 'ns1:CondInitReason' of XML schema type 'ns1:BitReasonPulled' */
        enum ns1__BitReasonPulled *CondInitReason;
        /** Optional element 'ns1:CondFinalInner' of XML schema type 'ns1:IadcIntegerCode' */
        enum ns1__IadcIntegerCode *CondFinalInner;
        /** Optional element 'ns1:CondFinalOuter' of XML schema type 'ns1:IadcIntegerCode' */
        enum ns1__IadcIntegerCode *CondFinalOuter;
        /** Optional element 'ns1:CondFinalDull' of XML schema type 'ns1:BitDullCode' */
        enum ns1__BitDullCode *CondFinalDull;
        /** Optional element 'ns1:CondFinalLocation' of XML schema type 'ns2:String64' */
        char *CondFinalLocation;
        /** Optional element 'ns1:CondFinalBearing' of XML schema type 'ns1:IadcBearingWearCode' */
        enum ns1__IadcBearingWearCode *CondFinalBearing;
        /** Optional element 'ns1:CondFinalGauge' of XML schema type 'ns2:String64' */
        char *CondFinalGauge;
        /** Optional element 'ns1:CondFinalOther' of XML schema type 'ns2:String64' */
        char *CondFinalOther;
        /** Optional element 'ns1:CondFinalReason' of XML schema type 'ns1:BitReasonPulled' */
        enum ns1__BitReasonPulled *CondFinalReason;
        /** Optional element 'ns1:Drive' of XML schema type 'ns2:String64' */
        char *Drive;
        /** Optional element 'ns1:BitClass' of XML schema type 'ns2:String64' */
        char *BitClass;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:Cost' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *Cost;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:21840 */
#ifndef SOAP_TYPE_ns1__Connection
#define SOAP_TYPE_ns1__Connection (746)
/* complex XML schema type 'ns1:Connection': */
struct ns1__Connection {
        /** Optional element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Optional element 'ns1:Od' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Od;
        /** Optional element 'ns1:Len' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Len;
        /** Optional element 'ns1:TypeThread' of XML schema type 'ns2:String64' */
        char *TypeThread;
        /** Optional element 'ns1:SizeThread' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeThread;
        /** Optional element 'ns1:TensYield' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *TensYield;
        /** Optional element 'ns1:TqYield' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqYield;
        /** Optional element 'ns1:Position' of XML schema type 'ns1:ConnectionPosition' */
        enum ns1__ConnectionPosition *Position;
        /** Optional element 'ns1:CriticalCrossSection' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *CriticalCrossSection;
        /** Optional element 'ns1:PresLeak' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresLeak;
        /** Optional element 'ns1:TqMakeup' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqMakeup;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__Connection when non-NULL */
        struct ns1__EquipmentConnection *ns1__EquipmentConnection;
};
#endif

/* testh.h:21939 */
#ifndef SOAP_TYPE_ns1__HoleOpener
#define SOAP_TYPE_ns1__HoleOpener (752)
/* complex XML schema type 'ns1:HoleOpener': */
struct ns1__HoleOpener {
        /** Optional element 'ns1:TypeHoleOpener' of XML schema type 'ns1:HoleOpenerType' */
        enum ns1__HoleOpenerType *TypeHoleOpener;
        /** Optional element 'ns1:NumCutter' of XML schema type 'xsd:long' */
        LONG64 *NumCutter;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:DiaHoleOpener' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaHoleOpener;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:21988 */
#ifndef SOAP_TYPE_ns1__Jar
#define SOAP_TYPE_ns1__Jar (755)
/* complex XML schema type 'ns1:Jar': */
struct ns1__Jar {
        /** Optional element 'ns1:ForUpSet' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForUpSet;
        /** Optional element 'ns1:ForDownSet' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForDownSet;
        /** Optional element 'ns1:ForUpTrip' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForUpTrip;
        /** Optional element 'ns1:ForDownTrip' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForDownTrip;
        /** Optional element 'ns1:ForPmpOpen' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForPmpOpen;
        /** Optional element 'ns1:ForSealFric' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ForSealFric;
        /** Optional element 'ns1:TypeJar' of XML schema type 'ns1:JarType' */
        enum ns1__JarType *TypeJar;
        /** Optional element 'ns1:JarAction' of XML schema type 'ns1:JarAction' */
        enum ns1__JarAction *JarAction;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:22061 */
#ifndef SOAP_TYPE_ns1__Motor
#define SOAP_TYPE_ns1__Motor (758)
/* complex XML schema type 'ns1:Motor': */
struct ns1__Motor {
        /** Optional element 'ns1:OffsetTool' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OffsetTool;
        /** Optional element 'ns1:PresLossFact' of XML schema type 'xsd:double' */
        double *PresLossFact;
        /** Optional element 'ns1:FlowrateMn' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMn;
        /** Optional element 'ns1:FlowrateMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMx;
        /** Optional element 'ns1:DiaRotorNozzle' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaRotorNozzle;
        /** Optional element 'ns1:ClearanceBearBox' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ClearanceBearBox;
        /** Optional element 'ns1:LobesRotor' of XML schema type 'xsd:long' */
        LONG64 *LobesRotor;
        /** Optional element 'ns1:LobesStator' of XML schema type 'xsd:long' */
        LONG64 *LobesStator;
        /** Optional element 'ns1:TypeBearing' of XML schema type 'ns1:BearingType' */
        enum ns1__BearingType *TypeBearing;
        /** Optional element 'ns1:TempOpMx' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempOpMx;
        /** Optional element 'ns1:RotorCatcher' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *RotorCatcher;
        /** Optional element 'ns1:DumpValve' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *DumpValve;
        /** Optional element 'ns1:DiaNozzle' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaNozzle;
        /** Optional element 'ns1:Rotatable' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Rotatable;
        /** Optional element 'ns1:BendSettingsMn' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *BendSettingsMn;
        /** Optional element 'ns1:BendSettingsMx' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *BendSettingsMx;
        /** Sequence of elements 'ns1:Sensor' of XML schema type 'ns1:Sensor' stored in dynamic array Sensor of length __sizeSensor */
        int __sizeSensor;
        struct ns1__Sensor *Sensor;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:22186 */
#ifndef SOAP_TYPE_ns1__MwdTool
#define SOAP_TYPE_ns1__MwdTool (763)
/* complex XML schema type 'ns1:MwdTool': */
struct ns1__MwdTool {
        /** Optional element 'ns1:FlowrateMn' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMn;
        /** Optional element 'ns1:FlowrateMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMx;
        /** Optional element 'ns1:TempMx' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempMx;
        /** Optional element 'ns1:IdEquv' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdEquv;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Sensor' of XML schema type 'ns1:Sensor' stored in dynamic array Sensor of length __sizeSensor */
        int __sizeSensor;
        struct ns1__Sensor *Sensor;
};
#endif

/* testh.h:22239 */
#ifndef SOAP_TYPE_ns1__Nozzle
#define SOAP_TYPE_ns1__Nozzle (764)
/* complex XML schema type 'ns1:Nozzle': */
struct ns1__Nozzle {
        /** Optional element 'ns1:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns1:DiaNozzle' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaNozzle;
        /** Optional element 'ns1:TypeNozzle' of XML schema type 'ns1:NozzleType' */
        enum ns1__NozzleType *TypeNozzle;
        /** Optional element 'ns1:Len' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Len;
        /** Optional element 'ns1:Orientation' of XML schema type 'ns2:String64' */
        char *Orientation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:22300 */
#ifndef SOAP_TYPE_ns1__OSDUTubularAssemblyStatus
#define SOAP_TYPE_ns1__OSDUTubularAssemblyStatus (766)
/* complex XML schema type 'ns1:OSDUTubularAssemblyStatus': */
struct ns1__OSDUTubularAssemblyStatus {
        /** Optional element 'ns1:Date' of XML schema type 'ns2:TimeStamp' */
        time_t *Date;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String256' */
        char *Description;
        /** Optional element 'ns1:StatusType' of XML schema type 'ns2:String64' */
        char *StatusType;
};
#endif

/* testh.h:22335 */
#ifndef SOAP_TYPE_ns1__RotarySteerableTool
#define SOAP_TYPE_ns1__RotarySteerableTool (767)
/* complex XML schema type 'ns1:RotarySteerableTool': */
struct ns1__RotarySteerableTool {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DeflectionMethod' of XML schema type 'ns1:DeflectionMethod' */
        enum ns1__DeflectionMethod DeflectionMethod;
        /** Optional element 'ns1:HoleSizeMn' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HoleSizeMn;
        /** Optional element 'ns1:HoleSizeMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HoleSizeMx;
        /** Optional element 'ns1:WobMx' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WobMx;
        /** Optional element 'ns1:OperatingSpeed' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *OperatingSpeed;
        /** Optional element 'ns1:SpeedMx' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *SpeedMx;
        /** Optional element 'ns1:FlowRateMn' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRateMn;
        /** Optional element 'ns1:FlowRateMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRateMx;
        /** Optional element 'ns1:DownLinkFlowRateMn' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *DownLinkFlowRateMn;
        /** Optional element 'ns1:DownLinkFlowRateMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *DownLinkFlowRateMx;
        /** Optional element 'ns1:PressLossFact' of XML schema type 'xsd:double' */
        double *PressLossFact;
        /** Optional element 'ns1:PadCount' of XML schema type 'xsd:long' */
        LONG64 *PadCount;
        /** Optional element 'ns1:PadLen' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PadLen;
        /** Optional element 'ns1:PadWidth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PadWidth;
        /** Optional element 'ns1:PadOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PadOffset;
        /** Optional element 'ns1:OpenPadOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OpenPadOd;
        /** Optional element 'ns1:ClosePadOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ClosePadOd;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Tool' of XML schema type 'ns1:AbstractRotarySteerableTool' */
        struct ns1__AbstractRotarySteerableTool *Tool;
        /** Sequence of elements 'ns1:Sensor' of XML schema type 'ns1:Sensor' stored in dynamic array Sensor of length __sizeSensor */
        int __sizeSensor;
        struct ns1__Sensor *Sensor;
};
#endif

/* testh.h:22161 */
#ifndef SOAP_TYPE_ns1__Sensor
#define SOAP_TYPE_ns1__Sensor (761)
/* complex XML schema type 'ns1:Sensor': */
struct ns1__Sensor {
        /** Optional element 'ns1:TypeMeasurement' of XML schema type 'ns1:MeasurementType' */
        enum ns1__MeasurementType *TypeMeasurement;
        /** Optional element 'ns1:OffsetBot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OffsetBot;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:22517 */
#ifndef SOAP_TYPE_ns1__Stabilizer
#define SOAP_TYPE_ns1__Stabilizer (770)
/* complex XML schema type 'ns1:Stabilizer': */
struct ns1__Stabilizer {
        /** Optional element 'ns1:LenBlade' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenBlade;
        /** Optional element 'ns1:LenBladeGauge' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenBladeGauge;
        /** Optional element 'ns1:OdBladeMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdBladeMx;
        /** Optional element 'ns1:OdBladeMn' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdBladeMn;
        /** Optional element 'ns1:DistBladeBot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistBladeBot;
        /** Optional element 'ns1:ShapeBlade' of XML schema type 'ns1:BladeShapeType' */
        enum ns1__BladeShapeType *ShapeBlade;
        /** Optional element 'ns1:FactFric' of XML schema type 'xsd:double' */
        double *FactFric;
        /** Optional element 'ns1:TypeBlade' of XML schema type 'ns1:BladeType' */
        enum ns1__BladeType *TypeBlade;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:22596 */
#ifndef SOAP_TYPE_ns1__TubularComponent
#define SOAP_TYPE_ns1__TubularComponent (773)
/* complex XML schema type 'ns1:TubularComponent': */
struct ns1__TubularComponent {
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:NominalDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *NominalDiameter;
        /** Optional element 'ns1:NominalWeight' of XML schema type 'ns2:MassMeasureExt' */
        struct ns2__MassMeasureExt *NominalWeight;
        /** Optional element 'ns1:Supplier' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Supplier;
        /** Optional element 'ns1:TensStrength' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *TensStrength;
        /** Optional element 'ns1:TubularComponentOSDUIntegration' of XML schema type 'ns1:TubularComponentOSDUIntegration' */
        struct ns1__TubularComponentOSDUIntegration *TubularComponentOSDUIntegration;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeTubularComponent' of XML schema type 'ns1:TubularComponentTypeExt' */
        char *TypeTubularComponent;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sequence' of XML schema type 'xsd:long' */
        LONG64 Sequence;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Od' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Od;
        /** Optional element 'ns1:OdMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdMx;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Len' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Len;
        /** Optional element 'ns1:LenJointAv' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenJointAv;
        /** Optional element 'ns1:NumJointStand' of XML schema type 'xsd:long' */
        LONG64 *NumJointStand;
        /** Optional element 'ns1:WtPerLen' of XML schema type 'ns2:MassPerLengthMeasure' */
        struct ns2__MassPerLengthMeasure *WtPerLen;
        /** Optional element 'ns1:Count' of XML schema type 'xsd:long' */
        LONG64 *Count;
        /** Optional element 'ns1:Grade' of XML schema type 'ns2:String64' */
        char *Grade;
        /** Optional element 'ns1:OdDrift' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdDrift;
        /** Optional element 'ns1:TensYield' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *TensYield;
        /** Optional element 'ns1:TqYield' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqYield;
        /** Optional element 'ns1:StressFatigue' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *StressFatigue;
        /** Optional element 'ns1:LenFishneck' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenFishneck;
        /** Optional element 'ns1:IdFishneck' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdFishneck;
        /** Optional element 'ns1:OdFishneck' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdFishneck;
        /** Optional element 'ns1:Disp' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Disp;
        /** Optional element 'ns1:PresBurst' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBurst;
        /** Optional element 'ns1:PresCollapse' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCollapse;
        /** Optional element 'ns1:ClassService' of XML schema type 'ns2:String64' */
        char *ClassService;
        /** Optional element 'ns1:WearWall' of XML schema type 'ns2:LengthPerLengthMeasure' */
        struct ns2__LengthPerLengthMeasure *WearWall;
        /** Optional element 'ns1:ThickWall' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ThickWall;
        /** Optional element 'ns1:ConfigCon' of XML schema type 'ns1:BoxPinConfig' */
        enum ns1__BoxPinConfig *ConfigCon;
        /** Optional element 'ns1:BendStiffness' of XML schema type 'ns2:ForcePerLengthMeasure' */
        struct ns2__ForcePerLengthMeasure *BendStiffness;
        /** Optional element 'ns1:AxialStiffness' of XML schema type 'ns2:ForcePerLengthMeasure' */
        struct ns2__ForcePerLengthMeasure *AxialStiffness;
        /** Optional element 'ns1:TorsionalStiffness' of XML schema type 'ns2:ForcePerLengthMeasure' */
        struct ns2__ForcePerLengthMeasure *TorsionalStiffness;
        /** Optional element 'ns1:TypeMaterial' of XML schema type 'ns1:MaterialType' */
        enum ns1__MaterialType *TypeMaterial;
        /** Optional element 'ns1:DoglegMx' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *DoglegMx;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Optional element 'ns1:AreaNozzleFlow' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *AreaNozzleFlow;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Connection' of XML schema type 'ns1:Connection' stored in dynamic array Connection of length __sizeConnection */
        int __sizeConnection;
        struct ns1__Connection *Connection;
        /** Optional element 'ns1:Jar' of XML schema type 'ns1:Jar' */
        struct ns1__Jar *Jar;
        /** Optional element 'ns1:MwdTool' of XML schema type 'ns1:MwdTool' */
        struct ns1__MwdTool *MwdTool;
        /** Optional element 'ns1:Motor' of XML schema type 'ns1:Motor' */
        struct ns1__Motor *Motor;
        /** Sequence of elements 'ns1:Stabilizer' of XML schema type 'ns1:Stabilizer' stored in dynamic array Stabilizer of length __sizeStabilizer */
        int __sizeStabilizer;
        struct ns1__Stabilizer *Stabilizer;
        /** Sequence of elements 'ns1:Bend' of XML schema type 'ns1:Bend' stored in dynamic array Bend of length __sizeBend */
        int __sizeBend;
        struct ns1__Bend *Bend;
        /** Optional element 'ns1:HoleOpener' of XML schema type 'ns1:HoleOpener' */
        struct ns1__HoleOpener *HoleOpener;
        /** Optional element 'ns1:RotarySteerableTool' of XML schema type 'ns1:RotarySteerableTool' */
        struct ns1__RotarySteerableTool *RotarySteerableTool;
        /** Optional element 'ns1:BitRecord' of XML schema type 'ns1:BitRecord' */
        struct ns1__BitRecord *BitRecord;
        /** Sequence of elements 'ns1:Nozzle' of XML schema type 'ns1:Nozzle' stored in dynamic array Nozzle of length __sizeNozzle */
        int __sizeNozzle;
        struct ns1__Nozzle *Nozzle;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:22632 */
#ifndef SOAP_TYPE_ns1__TubularComponentOSDUIntegration
#define SOAP_TYPE_ns1__TubularComponentOSDUIntegration (776)
/* complex XML schema type 'ns1:TubularComponentOSDUIntegration': */
struct ns1__TubularComponentOSDUIntegration {
        /** Optional element 'ns1:PackerSetDepthTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *PackerSetDepthTvd;
        /** Optional element 'ns1:PilotHoleSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PilotHoleSize;
        /** Optional element 'ns1:SectionType' of XML schema type 'ns2:String64' */
        char *SectionType;
        /** Optional element 'ns1:ShoeDepthTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *ShoeDepthTvd;
        /** Optional element 'ns1:TubularComponentBaseMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *TubularComponentBaseMd;
        /** Optional element 'ns1:TubularComponentBaseReportedTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TubularComponentBaseReportedTvd;
        /** Optional element 'ns1:TubularComponentBottomConnectionType' of XML schema type 'ns2:String64' */
        char *TubularComponentBottomConnectionType;
        /** Optional element 'ns1:TubularComponentBoxPinConfig' of XML schema type 'ns2:String64' */
        char *TubularComponentBoxPinConfig;
        /** Optional element 'ns1:TubularComponentMaterialType' of XML schema type 'ns2:String64' */
        char *TubularComponentMaterialType;
        /** Optional element 'ns1:TubularComponentTopConnectionType' of XML schema type 'ns2:String64' */
        char *TubularComponentTopConnectionType;
        /** Optional element 'ns1:TubularComponentTopMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *TubularComponentTopMd;
        /** Optional element 'ns1:TubularComponentTopReportedTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TubularComponentTopReportedTvd;
};
#endif

/* testh.h:22986 */
#ifndef SOAP_TYPE_ns1__TubularOSDUIntegration
#define SOAP_TYPE_ns1__TubularOSDUIntegration (800)
/* complex XML schema type 'ns1:TubularOSDUIntegration': */
struct ns1__TubularOSDUIntegration {
        /** Optional element 'ns1:ActiveIndicator' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ActiveIndicator;
        /** Optional element 'ns1:ActivityType' of XML schema type 'ns2:String64' */
        char *ActivityType;
        /** Optional element 'ns1:ActivityTypeReasonDescription' of XML schema type 'ns2:String64' */
        char *ActivityTypeReasonDescription;
        /** Optional element 'ns1:ArtificialLiftType' of XML schema type 'ns2:String64' */
        char *ArtificialLiftType;
        /** Optional element 'ns1:AssemblyBaseMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *AssemblyBaseMd;
        /** Optional element 'ns1:AssemblyBaseReportedTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *AssemblyBaseReportedTvd;
        /** Optional element 'ns1:AssemblyTopMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *AssemblyTopMd;
        /** Optional element 'ns1:AssemblyTopReportedTvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *AssemblyTopReportedTvd;
        /** Optional element 'ns1:LinerType' of XML schema type 'ns2:String64' */
        char *LinerType;
        /** Optional element 'ns1:OSDUTubularAssemblyStatus' of XML schema type 'ns1:OSDUTubularAssemblyStatus' */
        struct ns1__OSDUTubularAssemblyStatus *OSDUTubularAssemblyStatus;
        /** Optional element 'ns1:Parent' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Parent;
        /** Optional element 'ns1:PilotHoleSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PilotHoleSize;
        /** Optional element 'ns1:SeaFloorPenetrationLength' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SeaFloorPenetrationLength;
        /** Optional element 'ns1:StringClass' of XML schema type 'ns2:String64' */
        char *StringClass;
        /** Optional element 'ns1:SuspensionPointMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *SuspensionPointMd;
        /** Optional element 'ns1:TubularAssemblyNumber' of XML schema type 'xsd:long' */
        LONG64 *TubularAssemblyNumber;
};
#endif

/* testh.h:23099 */
#ifndef SOAP_TYPE_ns1__TubularUmbilical
#define SOAP_TYPE_ns1__TubularUmbilical (802)
/* complex XML schema type 'ns1:TubularUmbilical': */
struct ns1__TubularUmbilical {
        /** Required nillable (xsi:nil when NULL) element 'ns1:ConnectedTubularComponent' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *ConnectedTubularComponent;
        /** Sequence of elements 'ns1:Cut' of XML schema type 'ns1:TubularUmbilicalCut' stored in dynamic array Cut of length __sizeCut */
        int __sizeCut;
        struct ns1__TubularUmbilicalCut *Cut;
        /** Optional element 'ns1:ServiceType' of XML schema type 'ns2:String64' */
        char *ServiceType;
        /** Optional element 'ns1:TubularUmbilicalOSDUIntegration' of XML schema type 'ns1:TubularUmbilicalOSDUIntegration' */
        struct ns1__TubularUmbilicalOSDUIntegration *TubularUmbilicalOSDUIntegration;
        /** Required nillable (xsi:nil when NULL) element 'ns1:UmbilicalType' of XML schema type 'ns2:String64' */
        char *UmbilicalType;
};
#endif

/* testh.h:23113 */
#ifndef SOAP_TYPE_ns1__TubularUmbilicalCut
#define SOAP_TYPE_ns1__TubularUmbilicalCut (805)
/* complex XML schema type 'ns1:TubularUmbilicalCut': */
struct ns1__TubularUmbilicalCut {
        /** Optional element 'ns1:CutDate' of XML schema type 'ns2:TimeStamp' */
        time_t *CutDate;
        /** Optional element 'ns1:CutMd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *CutMd;
        /** Optional element 'ns1:IsAccidental' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsAccidental;
};
#endif

/* testh.h:23125 */
#ifndef SOAP_TYPE_ns1__TubularUmbilicalOSDUIntegration
#define SOAP_TYPE_ns1__TubularUmbilicalOSDUIntegration (807)
/* complex XML schema type 'ns1:TubularUmbilicalOSDUIntegration': */
struct ns1__TubularUmbilicalOSDUIntegration {
        /** Optional element 'ns1:WellheadOutletKey' of XML schema type 'ns2:String64' */
        char *WellheadOutletKey;
};
#endif

/* testh.h:22832 */
#ifndef SOAP_TYPE_ns1__NameTag
#define SOAP_TYPE_ns1__NameTag (788)
/* complex XML schema type 'ns1:NameTag': */
struct ns1__NameTag {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumberingScheme' of XML schema type 'ns1:NameTagNumberingScheme' */
        enum ns1__NameTagNumberingScheme NumberingScheme;
        /** Optional element 'ns1:Technology' of XML schema type 'ns1:NameTagTechnology' */
        enum ns1__NameTagTechnology *Technology;
        /** Optional element 'ns1:Location' of XML schema type 'ns1:NameTagLocation' */
        enum ns1__NameTagLocation *Location;
        /** Optional element 'ns1:InstallationDate' of XML schema type 'ns2:TimeStamp' */
        time_t *InstallationDate;
        /** Optional element 'ns1:InstallationCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *InstallationCompany;
        /** Optional element 'ns1:MountingCode' of XML schema type 'ns2:String64' */
        char *MountingCode;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:23289 */
#ifndef SOAP_TYPE_ns1__AbstractCementJob
#define SOAP_TYPE_ns1__AbstractCementJob (811)
/* complex XML schema type 'ns1:AbstractCementJob': */
struct ns1__AbstractCementJob {
        /** Optional element 'ns1:CementEngr' of XML schema type 'ns2:String64' */
        char *CementEngr;
        /** Optional element 'ns1:ETimWaitingOnCement' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimWaitingOnCement;
        /** Optional element 'ns1:PlugInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PlugInterval;
        /** Optional element 'ns1:MdHole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHole;
        /** Optional element 'ns1:Contractor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Contractor;
        /** Optional element 'ns1:RpmPipe' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipe;
        /** Optional element 'ns1:TqInitPipeRot' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqInitPipeRot;
        /** Optional element 'ns1:TqPipeAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeAv;
        /** Optional element 'ns1:TqPipeMx' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeMx;
        /** Optional element 'ns1:OverPull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *OverPull;
        /** Optional element 'ns1:SlackOff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *SlackOff;
        /** Optional element 'ns1:RpmPipeRecip' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipeRecip;
        /** Optional element 'ns1:LenPipeRecipStroke' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenPipeRecipStroke;
        /** Optional element 'ns1:Reciprocating' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Reciprocating;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractCementJob when non-NULL */
        struct ns1__CementJobDesign *ns1__CementJobDesign;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractCementJob when non-NULL */
        struct ns1__CementJobReport *ns1__CementJobReport;
};
#endif

/* testh.h:23399 */
#ifndef SOAP_TYPE_ns1__AbstractCementStage
#define SOAP_TYPE_ns1__AbstractCementStage (818)
/* complex XML schema type 'ns1:AbstractCementStage': */
struct ns1__AbstractCementStage {
        /** Optional element 'ns1:AnnularFlowAfter' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AnnularFlowAfter;
        /** Optional element 'ns1:ReciprocationSlackoff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationSlackoff;
        /** Optional element 'ns1:BotPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *BotPlug;
        /** Optional element 'ns1:BotPlugNumber' of XML schema type 'xsd:long' */
        LONG64 *BotPlugNumber;
        /** Optional element 'ns1:DiaTailPipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaTailPipe;
        /** Optional element 'ns1:DisplacementFluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *DisplacementFluid;
        /** Optional element 'ns1:ETimPresHeld' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPresHeld;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:FlowrateMudCirc' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMudCirc;
        /** Optional element 'ns1:Gel10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Min;
        /** Optional element 'ns1:Gel10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Sec;
        /** Optional element 'ns1:MdCircOut' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCircOut;
        /** Optional element 'ns1:MdCoilTbg' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCoilTbg;
        /** Optional element 'ns1:MdString' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdString;
        /** Optional element 'ns1:MdTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTool;
        /** Optional element 'ns1:MixMethod' of XML schema type 'ns2:String64' */
        char *MixMethod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumStage' of XML schema type 'xsd:long' */
        LONG64 NumStage;
        /** Optional element 'ns1:ReciprocationOverpull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationOverpull;
        /** Optional element 'ns1:PillBelowPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PillBelowPlug;
        /** Optional element 'ns1:PlugCatcher' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PlugCatcher;
        /** Optional element 'ns1:PresBackPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBackPressure;
        /** Optional element 'ns1:PresBump' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBump;
        /** Optional element 'ns1:PresCoilTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgEnd;
        /** Optional element 'ns1:PresCoilTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgStart;
        /** Optional element 'ns1:PresCsgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgEnd;
        /** Optional element 'ns1:PresCsgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgStart;
        /** Optional element 'ns1:PresDisplace' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDisplace;
        /** Optional element 'ns1:PresHeld' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresHeld;
        /** Optional element 'ns1:PresMudCirc' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMudCirc;
        /** Optional element 'ns1:PresTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgEnd;
        /** Optional element 'ns1:PresTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgStart;
        /** Optional element 'ns1:PvMud' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *PvMud;
        /** Optional element 'ns1:SqueezeObjective' of XML schema type 'ns2:String64' */
        char *SqueezeObjective;
        /** Optional element 'ns1:StageMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StageMdInterval;
        /** Optional element 'ns1:TailPipePerf' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipePerf;
        /** Optional element 'ns1:TailPipeUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipeUsed;
        /** Optional element 'ns1:TempBHCT' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHCT;
        /** Optional element 'ns1:TempBHST' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHST;
        /** Optional element 'ns1:TopPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TopPlug;
        /** Optional element 'ns1:TypeOriginalMud' of XML schema type 'ns2:String64' */
        char *TypeOriginalMud;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeStage' of XML schema type 'ns2:String64' */
        char *TypeStage;
        /** Optional element 'ns1:VolCircPrior' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCircPrior;
        /** Optional element 'ns1:VolCsgIn' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgIn;
        /** Optional element 'ns1:VolCsgOut' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgOut;
        /** Optional element 'ns1:VolDisplaceFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolDisplaceFluid;
        /** Optional element 'ns1:VolExcess' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolExcess;
        /** Optional element 'ns1:VolExcessMethod' of XML schema type 'ns2:String64' */
        char *VolExcessMethod;
        /** Optional element 'ns1:VolMudLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudLost;
        /** Optional element 'ns1:VolReturns' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolReturns;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Optional element 'ns1:YpMud' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *YpMud;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:CementPumpScheduleStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__CementPumpScheduleStep *Step;
        /** Sequence of elements 'ns1:OriginalFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array OriginalFluidLocation of length __sizeOriginalFluidLocation */
        int __sizeOriginalFluidLocation;
        struct ns1__FluidLocation *OriginalFluidLocation;
        /** Sequence of elements 'ns1:EndingFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array EndingFluidLocation of length __sizeEndingFluidLocation */
        int __sizeEndingFluidLocation;
        struct ns1__FluidLocation *EndingFluidLocation;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractCementStage when non-NULL */
        struct ns1__CementDesignStage *ns1__CementDesignStage;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractCementStage when non-NULL */
        struct ns1__CementStageDesign *ns1__CementStageDesign;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractCementStage when non-NULL */
        struct ns1__CementStageReport *ns1__CementStageReport;
};
#endif

/* testh.h:23742 */
#ifndef SOAP_TYPE_ns1__CementAdditive
#define SOAP_TYPE_ns1__CementAdditive (829)
/* complex XML schema type 'ns1:CementAdditive': */
struct ns1__CementAdditive {
        /** Required nillable (xsi:nil when NULL) element 'ns1:NameAdd' of XML schema type 'ns2:String64' */
        char *NameAdd;
        /** Optional element 'ns1:TypeAdd' of XML schema type 'ns2:String64' */
        char *TypeAdd;
        /** Optional element 'ns1:FormAdd' of XML schema type 'ns2:String64' */
        char *FormAdd;
        /** Optional element 'ns1:DensAdd' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensAdd;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Additive' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *Additive;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:23803 */
#ifndef SOAP_TYPE_ns1__CementingFluid
#define SOAP_TYPE_ns1__CementingFluid (830)
/* complex XML schema type 'ns1:CementingFluid': */
struct ns1__CementingFluid {
        /** Optional element 'ns1:ETimTransitions' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimTransitions;
        /** Optional element 'ns1:ETimZeroGel' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimZeroGel;
        /** Optional element 'ns1:TypeFluid' of XML schema type 'ns2:String64' */
        char *TypeFluid;
        /** Optional element 'ns1:FluidIndex' of XML schema type 'ns2:PositiveLong' */
        LONG64 *FluidIndex;
        /** Optional element 'ns1:DescFluid' of XML schema type 'ns2:String64' */
        char *DescFluid;
        /** Optional element 'ns1:Purpose' of XML schema type 'ns2:String64' */
        char *Purpose;
        /** Optional element 'ns1:ClassSlurryDryBlend' of XML schema type 'ns2:String64' */
        char *ClassSlurryDryBlend;
        /** Optional element 'ns1:SlurryPlacementInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *SlurryPlacementInterval;
        /** Optional element 'ns1:SourceWater' of XML schema type 'ns2:String64' */
        char *SourceWater;
        /** Optional element 'ns1:VolWater' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolWater;
        /** Optional element 'ns1:VolCement' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCement;
        /** Optional element 'ns1:RatioMixWater' of XML schema type 'ns2:VolumePerMassMeasure' */
        struct ns2__VolumePerMassMeasure *RatioMixWater;
        /** Optional element 'ns1:VolFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolFluid;
        /** Optional element 'ns1:ExcessPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *ExcessPc;
        /** Optional element 'ns1:VolYield' of XML schema type 'ns2:VolumePerMassMeasure' */
        struct ns2__VolumePerMassMeasure *VolYield;
        /** Optional element 'ns1:Density' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Density;
        /** Optional element 'ns1:SolidVolumeFraction' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *SolidVolumeFraction;
        /** Optional element 'ns1:VolPumped' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolPumped;
        /** Optional element 'ns1:VolOther' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolOther;
        /** Optional element 'ns1:FluidRheologicalModel' of XML schema type 'ns2:String64' */
        char *FluidRheologicalModel;
        /** Optional element 'ns1:Viscosity' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *Viscosity;
        /** Optional element 'ns1:Yp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Yp;
        /** Optional element 'ns1:N' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *N;
        /** Optional element 'ns1:K' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *K;
        /** Optional element 'ns1:Gel10SecReading' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Gel10SecReading;
        /** Optional element 'ns1:Gel10SecStrength' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10SecStrength;
        /** Optional element 'ns1:Gel1MinReading' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Gel1MinReading;
        /** Optional element 'ns1:Gel1MinStrength' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel1MinStrength;
        /** Optional element 'ns1:Gel10MinReading' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Gel10MinReading;
        /** Optional element 'ns1:Gel10MinStrength' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10MinStrength;
        /** Optional element 'ns1:TypeBaseFluid' of XML schema type 'ns2:String64' */
        char *TypeBaseFluid;
        /** Optional element 'ns1:DensBaseFluid' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensBaseFluid;
        /** Optional element 'ns1:DryBlendName' of XML schema type 'ns2:String64' */
        char *DryBlendName;
        /** Optional element 'ns1:DryBlendDescription' of XML schema type 'ns2:String64' */
        char *DryBlendDescription;
        /** Optional element 'ns1:MassDryBlend' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *MassDryBlend;
        /** Optional element 'ns1:DensDryBlend' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensDryBlend;
        /** Optional element 'ns1:MassSackDryBlend' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *MassSackDryBlend;
        /** Optional element 'ns1:FoamUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *FoamUsed;
        /** Optional element 'ns1:TypeGasFoam' of XML schema type 'ns2:String64' */
        char *TypeGasFoam;
        /** Optional element 'ns1:VolGasFoam' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolGasFoam;
        /** Optional element 'ns1:RatioConstGasMethodAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *RatioConstGasMethodAv;
        /** Optional element 'ns1:DensConstGasMethod' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensConstGasMethod;
        /** Optional element 'ns1:RatioConstGasMethodStart' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *RatioConstGasMethodStart;
        /** Optional element 'ns1:RatioConstGasMethodEnd' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *RatioConstGasMethodEnd;
        /** Optional element 'ns1:DensConstGasFoam' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensConstGasFoam;
        /** Optional element 'ns1:ETimThickening' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimThickening;
        /** Optional element 'ns1:TempThickening' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempThickening;
        /** Optional element 'ns1:PresTestThickening' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTestThickening;
        /** Optional element 'ns1:ConsTestThickening' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *ConsTestThickening;
        /** Optional element 'ns1:PcFreeWater' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PcFreeWater;
        /** Optional element 'ns1:TempFreeWater' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempFreeWater;
        /** Optional element 'ns1:VolTestFluidLoss' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTestFluidLoss;
        /** Optional element 'ns1:TempFluidLoss' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempFluidLoss;
        /** Optional element 'ns1:PresTestFluidLoss' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTestFluidLoss;
        /** Optional element 'ns1:TimeFluidLoss' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *TimeFluidLoss;
        /** Optional element 'ns1:VolAPIFluidLoss' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolAPIFluidLoss;
        /** Optional element 'ns1:ETimComprStren1' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimComprStren1;
        /** Optional element 'ns1:ETimComprStren2' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimComprStren2;
        /** Optional element 'ns1:PresComprStren1' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresComprStren1;
        /** Optional element 'ns1:PresComprStren2' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresComprStren2;
        /** Optional element 'ns1:TempComprStren1' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempComprStren1;
        /** Optional element 'ns1:TempComprStren2' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempComprStren2;
        /** Optional element 'ns1:DensAtPres' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensAtPres;
        /** Optional element 'ns1:VolReserved' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolReserved;
        /** Optional element 'ns1:VolTotSlurry' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTotSlurry;
        /** Sequence of elements 'ns1:CementAdditive' of XML schema type 'ns1:CementAdditive' stored in dynamic array CementAdditive of length __sizeCementAdditive */
        int __sizeCementAdditive;
        struct ns1__CementAdditive *CementAdditive;
        /** Sequence of elements 'ns1:Rheometer' of XML schema type 'ns1:Rheometer' stored in dynamic array Rheometer of length __sizeRheometer */
        int __sizeRheometer;
        struct ns1__Rheometer *Rheometer;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:23711 */
#ifndef SOAP_TYPE_ns1__CementPumpScheduleStep
#define SOAP_TYPE_ns1__CementPumpScheduleStep (819)
/* complex XML schema type 'ns1:CementPumpScheduleStep': */
struct ns1__CementPumpScheduleStep {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Fluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Fluid;
        /** Optional element 'ns1:RatioFluidExcess' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *RatioFluidExcess;
        /** Optional element 'ns1:ETimPump' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPump;
        /** Optional element 'ns1:RatePump' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *RatePump;
        /** Optional element 'ns1:VolPump' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolPump;
        /** Optional element 'ns1:StrokePump' of XML schema type 'xsd:long' */
        LONG64 *StrokePump;
        /** Optional element 'ns1:PresBack' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBack;
        /** Optional element 'ns1:ETimShutdown' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimShutdown;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:23715 */
#ifndef SOAP_TYPE_ns1__FluidLocation
#define SOAP_TYPE_ns1__FluidLocation (821)
/* complex XML schema type 'ns1:FluidLocation': */
struct ns1__FluidLocation {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Fluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Fluid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MDFluidBase' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MDFluidBase;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MDFluidTop' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MDFluidTop;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Volume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Volume;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LocationType' of XML schema type 'ns1:WellboreFluidLocation' */
        enum ns1__WellboreFluidLocation LocationType;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24350 */
#ifndef SOAP_TYPE_ns1__WellboreGeometryReport
#define SOAP_TYPE_ns1__WellboreGeometryReport (837)
/* complex XML schema type 'ns1:WellboreGeometryReport': */
struct ns1__WellboreGeometryReport {
        /** Sequence of elements 'ns1:WellboreGeometrySection' of XML schema type 'ns1:WellboreGeometrySection' stored in dynamic array WellboreGeometrySection of length __sizeWellboreGeometrySection */
        int __sizeWellboreGeometrySection;
        struct ns1__WellboreGeometrySection *WellboreGeometrySection;
        /** Optional element 'ns1:DepthWaterMean' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DepthWaterMean;
        /** Optional element 'ns1:GapAir' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *GapAir;
};
#endif

/* testh.h:24389 */
#ifndef SOAP_TYPE_ns1__DepthRegCalibrationPoint
#define SOAP_TYPE_ns1__DepthRegCalibrationPoint (842)
/* complex XML schema type 'ns1:DepthRegCalibrationPoint': */
struct ns1__DepthRegCalibrationPoint {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Index' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *Index;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Track' of XML schema type 'ns2:String64' */
        char *Track;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Role' of XML schema type 'ns1:CalibrationPointRole' */
        enum ns1__CalibrationPointRole Role;
        /** Optional element 'ns1:CurveName' of XML schema type 'ns2:String64' */
        char *CurveName;
        /** Optional element 'ns1:Fraction' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *Fraction;
        /** Sequence of elements 'ns1:Comment' of XML schema type 'ns2:String2000' stored in dynamic array Comment of length __sizeComment */
        int __sizeComment;
        char **Comment;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Parameter' of XML schema type 'ns1:DepthRegParameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns1__DepthRegParameter *Parameter;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Point' of XML schema type 'ns1:DepthRegPoint' */
        struct ns1__DepthRegPoint *Point;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24464 */
#ifndef SOAP_TYPE_ns1__DepthRegLogRect
#define SOAP_TYPE_ns1__DepthRegLogRect (850)
/* complex XML schema type 'ns1:DepthRegLogRect': */
struct ns1__DepthRegLogRect {
        /** Optional element 'ns1:Type' of XML schema type 'ns1:LogRectangleType' */
        enum ns1__LogRectangleType *Type;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:Position' of XML schema type 'ns1:DepthRegRectangle' */
        struct ns1__DepthRegRectangle *Position;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24509 */
#ifndef SOAP_TYPE_ns1__DepthRegLogSection
#define SOAP_TYPE_ns1__DepthRegLogSection (854)
/* complex XML schema type 'ns1:DepthRegLogSection': */
struct ns1__DepthRegLogSection {
        /** Required nillable (xsi:nil when NULL) element 'ns1:LogSectionSequenceNumber' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 LogSectionSequenceNumber;
        /** Optional element 'ns1:LogSectionType' of XML schema type 'ns1:LogSectionType' */
        enum ns1__LogSectionType *LogSectionType;
        /** Optional element 'ns1:LogSectionName' of XML schema type 'ns2:String64' */
        char *LogSectionName;
        /** Optional element 'ns1:LogMatrix' of XML schema type 'ns2:String64' */
        char *LogMatrix;
        /** Optional element 'ns1:ScaleNumerator' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ScaleNumerator;
        /** Optional element 'ns1:ScaleDenominator' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *ScaleDenominator;
        /** Required nillable (xsi:nil when NULL) element 'ns1:IndexKind' of XML schema type 'ns2:DataIndexKind' */
        enum ns2__DataIndexKind IndexKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:IndexUom' of XML schema type 'ns2:String64' */
        char *IndexUom;
        /** Optional element 'ns1:IndexDatum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IndexDatum;
        /** Required nillable (xsi:nil when NULL) element 'ns1:IndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *IndexInterval;
        /** Optional element 'ns1:VerticalLabel' of XML schema type 'ns2:String2000' */
        char *VerticalLabel;
        /** Optional element 'ns1:VerticalRatio' of XML schema type 'ns2:String2000' */
        char *VerticalRatio;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:UpperCurveScaleRect' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array UpperCurveScaleRect of length __sizeUpperCurveScaleRect */
        int __sizeUpperCurveScaleRect;
        struct ns1__DepthRegRectangle *UpperCurveScaleRect;
        /** Sequence of elements 'ns1:CalibrationPoint' of XML schema type 'ns1:DepthRegCalibrationPoint' stored in dynamic array CalibrationPoint of length __sizeCalibrationPoint */
        int __sizeCalibrationPoint;
        struct ns1__DepthRegCalibrationPoint *CalibrationPoint;
        /** Sequence of elements 'ns1:WhiteSpace' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array WhiteSpace of length __sizeWhiteSpace */
        int __sizeWhiteSpace;
        struct ns1__DepthRegRectangle *WhiteSpace;
        /** Sequence of elements 'ns1:LowerCurveScaleRect' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array LowerCurveScaleRect of length __sizeLowerCurveScaleRect */
        int __sizeLowerCurveScaleRect;
        struct ns1__DepthRegRectangle *LowerCurveScaleRect;
        /** Sequence of elements 'ns1:LogSectionRect' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array LogSectionRect of length __sizeLogSectionRect */
        int __sizeLogSectionRect;
        struct ns1__DepthRegRectangle *LogSectionRect;
        /** Sequence of elements 'ns1:Parameter' of XML schema type 'ns1:DepthRegParameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns1__DepthRegParameter *Parameter;
        /** Sequence of elements 'ns1:Track' of XML schema type 'ns1:DepthRegTrack' stored in dynamic array Track of length __sizeTrack */
        int __sizeTrack;
        struct ns1__DepthRegTrack *Track;
        /** Optional element 'ns1:ChannelSet' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChannelSet;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24439 */
#ifndef SOAP_TYPE_ns1__DepthRegParameter
#define SOAP_TYPE_ns1__DepthRegParameter (846)
/* complex XML schema type 'ns1:DepthRegParameter': */
struct ns1__DepthRegParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Mnemonic' of XML schema type 'ns2:String64' */
        char *Mnemonic;
        /** Optional element 'ns1:Dictionary' of XML schema type 'ns2:String64' */
        char *Dictionary;
        /** Optional element 'ns1:IndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *IndexInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *Value;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24441 */
#ifndef SOAP_TYPE_ns1__DepthRegPoint
#define SOAP_TYPE_ns1__DepthRegPoint (848)
/* complex XML schema type 'ns1:DepthRegPoint': */
struct ns1__DepthRegPoint {
        /** Required nillable (xsi:nil when NULL) element 'ns1:X' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 X;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Y' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 Y;
};
#endif

/* testh.h:24486 */
#ifndef SOAP_TYPE_ns1__DepthRegRectangle
#define SOAP_TYPE_ns1__DepthRegRectangle (852)
/* complex XML schema type 'ns1:DepthRegRectangle': */
struct ns1__DepthRegRectangle {
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:Ul' of XML schema type 'ns1:DepthRegPoint' */
        struct ns1__DepthRegPoint *Ul;
        /** Optional element 'ns1:Ur' of XML schema type 'ns1:DepthRegPoint' */
        struct ns1__DepthRegPoint *Ur;
        /** Optional element 'ns1:Ll' of XML schema type 'ns1:DepthRegPoint' */
        struct ns1__DepthRegPoint *Ll;
        /** Optional element 'ns1:Lr' of XML schema type 'ns1:DepthRegPoint' */
        struct ns1__DepthRegPoint *Lr;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24643 */
#ifndef SOAP_TYPE_ns1__DepthRegTrack
#define SOAP_TYPE_ns1__DepthRegTrack (859)
/* complex XML schema type 'ns1:DepthRegTrack': */
struct ns1__DepthRegTrack {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Type' of XML schema type 'ns1:LogTrackType' */
        enum ns1__LogTrackType Type;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LeftEdge' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 LeftEdge;
        /** Required nillable (xsi:nil when NULL) element 'ns1:RightEdge' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 RightEdge;
        /** Sequence of elements 'ns1:TrackCurveScaleRect' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array TrackCurveScaleRect of length __sizeTrackCurveScaleRect */
        int __sizeTrackCurveScaleRect;
        struct ns1__DepthRegRectangle *TrackCurveScaleRect;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:AssociatedCurve' of XML schema type 'ns1:DepthRegTrackCurve' stored in dynamic array AssociatedCurve of length __sizeAssociatedCurve */
        int __sizeAssociatedCurve;
        struct ns1__DepthRegTrackCurve *AssociatedCurve;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24858 */
#ifndef SOAP_TYPE_ns1__DepthRegTrackCurve
#define SOAP_TYPE_ns1__DepthRegTrackCurve (861)
/* complex XML schema type 'ns1:DepthRegTrackCurve': */
struct ns1__DepthRegTrackCurve {
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveInfo' of XML schema type 'ns2:String64' */
        char *CurveInfo;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LineStyle' of XML schema type 'ns1:LineStyle' */
        enum ns1__LineStyle LineStyle;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LineWeight' of XML schema type 'ns2:String64' */
        char *LineWeight;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LineColor' of XML schema type 'ns2:String64' */
        char *LineColor;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveScaleType' of XML schema type 'ns1:ScaleType' */
        enum ns1__ScaleType CurveScaleType;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveUnit' of XML schema type 'ns2:TypeEnum' */
        char *CurveUnit;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveLeftScaleValue' of XML schema type 'xsd:double' */
        double CurveLeftScaleValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveRightScaleValue' of XML schema type 'xsd:double' */
        double CurveRightScaleValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CurveBackupScaleType' of XML schema type 'ns1:BackupScaleType' */
        enum ns1__BackupScaleType CurveBackupScaleType;
        /** Sequence of elements 'ns1:CurveScaleRect' of XML schema type 'ns1:DepthRegRectangle' stored in dynamic array CurveScaleRect of length __sizeCurveScaleRect */
        int __sizeCurveScaleRect;
        struct ns1__DepthRegRectangle *CurveScaleRect;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:24972 */
#ifndef SOAP_TYPE_ns1__ChannelData
#define SOAP_TYPE_ns1__ChannelData (863)
/* complex XML schema type 'ns1:ChannelData': */
struct ns1__ChannelData {
        /** Optional element 'ns1:Data' of XML schema type 'xsd:string' */
        char *Data;
        /** Optional element 'ns1:FileUri' of XML schema type 'xsd:anyURI' */
        char *FileUri;
};
#endif

/* testh.h:25004 */
#ifndef SOAP_TYPE_ns1__ChannelIndex
#define SOAP_TYPE_ns1__ChannelIndex (864)
/* complex XML schema type 'ns1:ChannelIndex': */
struct ns1__ChannelIndex {
        /** Required nillable (xsi:nil when NULL) element 'ns1:IndexKind' of XML schema type 'ns2:DataIndexKind' */
        enum ns2__DataIndexKind IndexKind;
        /** Optional element 'ns1:IndexPropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IndexPropertyKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Direction' of XML schema type 'ns2:IndexDirection' */
        enum ns2__IndexDirection Direction;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Mnemonic' of XML schema type 'ns2:String64' */
        char *Mnemonic;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
        /** Optional element 'ns1:IndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *IndexInterval;
};
#endif

/* testh.h:25070 */
#ifndef SOAP_TYPE_ns1__ChannelOSDUIntegration
#define SOAP_TYPE_ns1__ChannelOSDUIntegration (865)
/* complex XML schema type 'ns1:ChannelOSDUIntegration': */
struct ns1__ChannelOSDUIntegration {
        /** Optional element 'ns1:ChannelQuality' of XML schema type 'ns2:String64' */
        char *ChannelQuality;
        /** Optional element 'ns1:IntermediaryServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IntermediaryServiceCompany;
        /** Optional element 'ns1:IsRegular' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsRegular;
        /** Optional element 'ns1:ZeroTime' of XML schema type 'ns2:TimeStamp' */
        time_t *ZeroTime;
        /** Optional element 'ns1:ChannelBusinessValue' of XML schema type 'ns2:String64' */
        char *ChannelBusinessValue;
        /** Optional element 'ns1:ChannelMainFamily' of XML schema type 'ns2:String64' */
        char *ChannelMainFamily;
        /** Optional element 'ns1:ChannelFamily' of XML schema type 'ns2:String64' */
        char *ChannelFamily;
};
#endif

/* testh.h:25129 */
#ifndef SOAP_TYPE_ns1__ChannelSetOSDUIntegration
#define SOAP_TYPE_ns1__ChannelSetOSDUIntegration (866)
/* complex XML schema type 'ns1:ChannelSetOSDUIntegration': */
struct ns1__ChannelSetOSDUIntegration {
        /** Optional element 'ns1:ChannelSetVersion' of XML schema type 'ns2:String64' */
        char *ChannelSetVersion;
        /** Optional element 'ns1:FrameIdentifier' of XML schema type 'ns2:String64' */
        char *FrameIdentifier;
        /** Optional element 'ns1:IntermediaryServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IntermediaryServiceCompany;
        /** Optional element 'ns1:IsRegular' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsRegular;
        /** Optional element 'ns1:ZeroTime' of XML schema type 'ns2:TimeStamp' */
        time_t *ZeroTime;
};
#endif

/* testh.h:25176 */
#ifndef SOAP_TYPE_ns1__LogChannelAxis
#define SOAP_TYPE_ns1__LogChannelAxis (867)
/* complex XML schema type 'ns1:LogChannelAxis': */
struct ns1__LogChannelAxis {
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisStart' of XML schema type 'xsd:double' */
        double AxisStart;
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisSpacing' of XML schema type 'xsd:double' */
        double AxisSpacing;
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisCount' of XML schema type 'ns2:PositiveLong' */
        LONG64 AxisCount;
        /** Optional element 'ns1:AxisName' of XML schema type 'ns2:String64' */
        char *AxisName;
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisPropertyKind' of XML schema type 'ns2:String64' */
        char *AxisPropertyKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisUom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *AxisUom;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25235 */
#ifndef SOAP_TYPE_ns1__LogOSDUIntegration
#define SOAP_TYPE_ns1__LogOSDUIntegration (868)
/* complex XML schema type 'ns1:LogOSDUIntegration': */
struct ns1__LogOSDUIntegration {
        /** Optional element 'ns1:LogVersion' of XML schema type 'ns2:String64' */
        char *LogVersion;
        /** Optional element 'ns1:ZeroTime' of XML schema type 'ns2:TimeStamp' */
        time_t *ZeroTime;
        /** Optional element 'ns1:FrameIdentifier' of XML schema type 'ns2:String64' */
        char *FrameIdentifier;
        /** Optional element 'ns1:IsRegular' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsRegular;
        /** Optional element 'ns1:IntermediaryServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IntermediaryServiceCompany;
};
#endif

/* testh.h:25282 */
#ifndef SOAP_TYPE_ns1__PassDetail
#define SOAP_TYPE_ns1__PassDetail (869)
/* complex XML schema type 'ns1:PassDetail': */
struct ns1__PassDetail {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pass' of XML schema type 'xsd:long' */
        LONG64 Pass;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String64' */
        char *Description;
};
#endif

/* testh.h:25311 */
#ifndef SOAP_TYPE_ns1__PassIndexedDepth
#define SOAP_TYPE_ns1__PassIndexedDepth (870)
/* complex XML schema type 'ns1:PassIndexedDepth': */
struct ns1__PassIndexedDepth {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pass' of XML schema type 'xsd:long' */
        LONG64 Pass;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Direction' of XML schema type 'ns1:PassDirection' */
        enum ns1__PassDirection Direction;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MeasuredDepth' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *MeasuredDepth;
};
#endif

/* testh.h:25347 */
#ifndef SOAP_TYPE_ns1__PointMetadata
#define SOAP_TYPE_ns1__PointMetadata (871)
/* complex XML schema type 'ns1:PointMetadata': */
struct ns1__PointMetadata {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DataKind' of XML schema type 'ns1:ChannelDataKind' */
        enum ns1__ChannelDataKind DataKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Optional element 'ns1:MetadataPropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *MetadataPropertyKind;
        /** Sequence of elements 'ns1:AxisDefinition' of XML schema type 'ns1:LogChannelAxis' stored in dynamic array AxisDefinition of length __sizeAxisDefinition */
        int __sizeAxisDefinition;
        struct ns1__LogChannelAxis *AxisDefinition;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:25420 */
#ifndef SOAP_TYPE_ns1__AbstractConnectionType
#define SOAP_TYPE_ns1__AbstractConnectionType (873)
/* complex XML schema type 'ns1:AbstractConnectionType': */
struct ns1__AbstractConnectionType {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractConnectionType when non-NULL */
        struct ns1__CasingConnectionType *ns1__CasingConnectionType;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractConnectionType when non-NULL */
        struct ns1__OtherConnectionType *ns1__OtherConnectionType;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractConnectionType when non-NULL */
        struct ns1__RodConnectionType *ns1__RodConnectionType;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractConnectionType when non-NULL */
        struct ns1__TubingConnectionType *ns1__TubingConnectionType;
};
#endif

/* testh.h:25445 */
#ifndef SOAP_TYPE_ns1__Assembly
#define SOAP_TYPE_ns1__Assembly (882)
/* complex XML schema type 'ns1:Assembly': */
struct ns1__Assembly {
        /** Sequence of elements 'ns1:Part' of XML schema type 'ns1:StringEquipment' stored in dynamic array Part of length __sizePart */
        int __sizePart;
        struct ns1__StringEquipment *Part;
};
#endif

/* testh.h:25466 */
#ifndef SOAP_TYPE_ns1__Borehole
#define SOAP_TYPE_ns1__Borehole (885)
/* complex XML schema type 'ns1:Borehole': */
struct ns1__Borehole {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:TypeBorehole' of XML schema type 'ns1:BoreholeType' */
        enum ns1__BoreholeType *TypeBorehole;
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:TvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TvdInterval;
        /** Optional element 'ns1:BoreholeDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *BoreholeDiameter;
        /** Optional element 'ns1:DescriptionPermanent' of XML schema type 'ns2:String2000' */
        char *DescriptionPermanent;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:EquipmentEventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EquipmentEventHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25535 */
#ifndef SOAP_TYPE_ns1__BoreholeString
#define SOAP_TYPE_ns1__BoreholeString (891)
/* complex XML schema type 'ns1:BoreholeString': */
struct ns1__BoreholeString {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Sequence of elements 'ns1:Borehole' of XML schema type 'ns1:Borehole' stored in dynamic array Borehole of length __sizeBorehole */
        int __sizeBorehole;
        struct ns1__Borehole *Borehole;
        /** Sequence of elements 'ns1:GeologyFeature' of XML schema type 'ns1:GeologyFeature' stored in dynamic array GeologyFeature of length __sizeGeologyFeature */
        int __sizeGeologyFeature;
        struct ns1__GeologyFeature *GeologyFeature;
        /** Optional element 'ns1:Accessories' of XML schema type 'ns1:StringAccessory' */
        struct ns1__StringAccessory *Accessories;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ReferenceWellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferenceWellbore;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25576 */
#ifndef SOAP_TYPE_ns1__BoreholeStringSet
#define SOAP_TYPE_ns1__BoreholeStringSet (897)
/* complex XML schema type 'ns1:BoreholeStringSet': */
struct ns1__BoreholeStringSet {
        /** Sequence of at least 1 elements 'ns1:BoreholeString' of XML schema type 'ns1:BoreholeString' stored in dynamic array BoreholeString of length __sizeBoreholeString */
        int __sizeBoreholeString;
        struct ns1__BoreholeString *BoreholeString;
};
#endif

/* testh.h:25597 */
#ifndef SOAP_TYPE_ns1__DownholeString
#define SOAP_TYPE_ns1__DownholeString (899)
/* complex XML schema type 'ns1:DownholeString': */
struct ns1__DownholeString {
        /** Required nillable (xsi:nil when NULL) element 'ns1:StringType' of XML schema type 'ns1:DownholeStringType' */
        enum ns1__DownholeStringType StringType;
        /** Optional element 'ns1:SubStringType' of XML schema type 'ns1:SubStringType' */
        enum ns1__SubStringType *SubStringType;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:StringInstallDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StringInstallDate;
        /** Optional element 'ns1:StringMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StringMdInterval;
        /** Optional element 'ns1:AxisOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *AxisOffset;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:ParentString' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *ParentString;
        /** Optional element 'ns1:StringEquipmentSet' of XML schema type 'ns1:StringEquipmentSet' */
        struct ns1__StringEquipmentSet *StringEquipmentSet;
        /** Optional element 'ns1:Accessories' of XML schema type 'ns1:StringAccessory' */
        struct ns1__StringAccessory *Accessories;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ReferenceWellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferenceWellbore;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25672 */
#ifndef SOAP_TYPE_ns1__DownholeStringSet
#define SOAP_TYPE_ns1__DownholeStringSet (903)
/* complex XML schema type 'ns1:DownholeStringSet': */
struct ns1__DownholeStringSet {
        /** Sequence of at least 1 elements 'ns1:DownholeString' of XML schema type 'ns1:DownholeString' stored in dynamic array DownholeString of length __sizeDownholeString */
        int __sizeDownholeString;
        struct ns1__DownholeString *DownholeString;
};
#endif

/* testh.h:25693 */
#ifndef SOAP_TYPE_ns1__Equipment
#define SOAP_TYPE_ns1__Equipment (905)
/* complex XML schema type 'ns1:Equipment': */
struct ns1__Equipment {
        /** Optional element 'ns1:EquipmentName' of XML schema type 'ns2:String64' */
        char *EquipmentName;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EquipmentType' of XML schema type 'ns1:EquipmentTypeExt' */
        char *EquipmentType;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:CatalogId' of XML schema type 'ns2:String64' */
        char *CatalogId;
        /** Optional element 'ns1:CatalogName' of XML schema type 'ns2:String64' */
        char *CatalogName;
        /** Optional element 'ns1:BrandName' of XML schema type 'ns2:String64' */
        char *BrandName;
        /** Optional element 'ns1:ModelType' of XML schema type 'ns2:String64' */
        char *ModelType;
        /** Optional element 'ns1:Series' of XML schema type 'ns2:String64' */
        char *Series;
        /** Optional element 'ns1:IsSerialized' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsSerialized;
        /** Optional element 'ns1:SerialNumber' of XML schema type 'ns2:String64' */
        char *SerialNumber;
        /** Optional element 'ns1:PartNo' of XML schema type 'ns2:String64' */
        char *PartNo;
        /** Optional element 'ns1:SurfaceCondition' of XML schema type 'ns2:String64' */
        char *SurfaceCondition;
        /** Optional element 'ns1:Material' of XML schema type 'ns2:String64' */
        char *Material;
        /** Optional element 'ns1:Grade' of XML schema type 'ns1:GradeType' */
        enum ns1__GradeType *Grade;
        /** Optional element 'ns1:UnitWeight' of XML schema type 'ns2:MassPerLengthMeasure' */
        struct ns2__MassPerLengthMeasure *UnitWeight;
        /** Optional element 'ns1:CoatingLinerApplied' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CoatingLinerApplied;
        /** Optional element 'ns1:OutsideCoating' of XML schema type 'ns1:Coating' */
        enum ns1__Coating *OutsideCoating;
        /** Optional element 'ns1:InsideCoating' of XML schema type 'ns1:Coating' */
        enum ns1__Coating *InsideCoating;
        /** Optional element 'ns1:UnitLength' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *UnitLength;
        /** Optional element 'ns1:MajorOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MajorOd;
        /** Optional element 'ns1:MinorOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MinorOd;
        /** Optional element 'ns1:Od' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Od;
        /** Optional element 'ns1:MaxOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MaxOd;
        /** Optional element 'ns1:MinOd' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MinOd;
        /** Optional element 'ns1:MajorId' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MajorId;
        /** Optional element 'ns1:MinorId' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MinorId;
        /** Optional element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Optional element 'ns1:MaxId' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MaxId;
        /** Optional element 'ns1:MinId' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MinId;
        /** Optional element 'ns1:Drift' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Drift;
        /** Optional element 'ns1:NominalSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *NominalSize;
        /** Optional element 'ns1:NameService' of XML schema type 'ns2:String64' */
        char *NameService;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:DescriptionPermanent' of XML schema type 'ns2:String2000' */
        char *DescriptionPermanent;
        /** Optional element 'ns1:Remark' of XML schema type 'ns2:String2000' */
        char *Remark;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Property' of XML schema type 'ns1:ExtPropNameValue' stored in dynamic array Property of length __sizeProperty */
        int __sizeProperty;
        struct ns1__ExtPropNameValue *Property;
        /** Sequence of elements 'ns1:SlotAsManufactured' of XML schema type 'ns1:PerfSlot' stored in dynamic array SlotAsManufactured of length __sizeSlotAsManufactured */
        int __sizeSlotAsManufactured;
        struct ns1__PerfSlot *SlotAsManufactured;
        /** Sequence of elements 'ns1:HoleAsManufactured' of XML schema type 'ns1:PerfHole' stored in dynamic array HoleAsManufactured of length __sizeHoleAsManufactured */
        int __sizeHoleAsManufactured;
        struct ns1__PerfHole *HoleAsManufactured;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25952 */
#ifndef SOAP_TYPE_ns1__EquipmentSet
#define SOAP_TYPE_ns1__EquipmentSet (914)
/* complex XML schema type 'ns1:EquipmentSet': */
struct ns1__EquipmentSet {
        /** Sequence of at least 1 elements 'ns1:Equipment' of XML schema type 'ns1:Equipment' stored in dynamic array Equipment of length __sizeEquipment */
        int __sizeEquipment;
        struct ns1__Equipment *Equipment;
};
#endif

/* testh.h:25512 */
#ifndef SOAP_TYPE_ns1__EventInfo
#define SOAP_TYPE_ns1__EventInfo (889)
/* complex XML schema type 'ns1:EventInfo': */
struct ns1__EventInfo {
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:BeginEvent' of XML schema type 'ns1:EventRefInfo' */
        struct ns1__EventRefInfo *BeginEvent;
        /** Optional element 'ns1:EndEvent' of XML schema type 'ns1:EventRefInfo' */
        struct ns1__EventRefInfo *EndEvent;
};
#endif

/* testh.h:25983 */
#ifndef SOAP_TYPE_ns1__EventRefInfo
#define SOAP_TYPE_ns1__EventRefInfo (916)
/* complex XML schema type 'ns1:EventRefInfo': */
struct ns1__EventRefInfo {
        /** Optional element 'ns1:Event' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Event;
        /** Optional element 'ns1:EventDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EventDate;
};
#endif

/* testh.h:25921 */
#ifndef SOAP_TYPE_ns1__ExtPropNameValue
#define SOAP_TYPE_ns1__ExtPropNameValue (908)
/* complex XML schema type 'ns1:ExtPropNameValue': */
struct ns1__ExtPropNameValue {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:Value' of XML schema type 'ns2:String2000' */
        char *Value;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25549 */
#ifndef SOAP_TYPE_ns1__GeologyFeature
#define SOAP_TYPE_ns1__GeologyFeature (893)
/* complex XML schema type 'ns1:GeologyFeature': */
struct ns1__GeologyFeature {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:GeologyType' of XML schema type 'ns1:GeologyType' */
        enum ns1__GeologyType *GeologyType;
        /** Optional element 'ns1:FeatureMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *FeatureMdInterval;
        /** Optional element 'ns1:FeatureTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *FeatureTvdInterval;
        /** Optional element 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:26127 */
#ifndef SOAP_TYPE_ns1__ObjectSequence
#define SOAP_TYPE_ns1__ObjectSequence (919)
/* complex XML schema type 'ns1:ObjectSequence': */
struct ns1__ObjectSequence {
        /** Required attribute 'description' of XML schema type 'ns2:String2000' */
        char *description;
};
#endif

/* testh.h:25929 */
#ifndef SOAP_TYPE_ns1__PerfHole
#define SOAP_TYPE_ns1__PerfHole (912)
/* complex XML schema type 'ns1:PerfHole': */
struct ns1__PerfHole {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:TvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TvdInterval;
        /** Optional element 'ns1:HoleDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HoleDiameter;
        /** Optional element 'ns1:HoleAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *HoleAngle;
        /** Optional element 'ns1:HolePattern' of XML schema type 'ns2:String64' */
        char *HolePattern;
        /** Optional element 'ns1:Remarks' of XML schema type 'ns2:String2000' */
        char *Remarks;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:HoleDensity' of XML schema type 'ns2:ReciprocalLengthMeasure' */
        struct ns2__ReciprocalLengthMeasure *HoleDensity;
        /** Optional element 'ns1:HoleCount' of XML schema type 'xsd:long' */
        LONG64 *HoleCount;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:26229 */
#ifndef SOAP_TYPE_ns1__PerforationSet
#define SOAP_TYPE_ns1__PerforationSet (922)
/* complex XML schema type 'ns1:PerforationSet': */
struct ns1__PerforationSet {
        /** Sequence of elements 'ns1:BoreholeString' of XML schema type 'ns2:ComponentReference' stored in dynamic array BoreholeString of length __sizeBoreholeString */
        int __sizeBoreholeString;
        struct ns2__ComponentReference *BoreholeString;
        /** Sequence of elements 'ns1:DownholeString' of XML schema type 'ns2:ComponentReference' stored in dynamic array DownholeString of length __sizeDownholeString */
        int __sizeDownholeString;
        struct ns2__ComponentReference *DownholeString;
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:TvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TvdInterval;
        /** Optional element 'ns1:HoleDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HoleDiameter;
        /** Optional element 'ns1:HoleAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *HoleAngle;
        /** Optional element 'ns1:HolePattern' of XML schema type 'ns2:String64' */
        char *HolePattern;
        /** Optional element 'ns1:HoleDensity' of XML schema type 'ns2:ReciprocalLengthMeasure' */
        struct ns2__ReciprocalLengthMeasure *HoleDensity;
        /** Optional element 'ns1:HoleCount' of XML schema type 'xsd:long' */
        LONG64 *HoleCount;
        /** Optional element 'ns1:FrictionFactor' of XML schema type 'xsd:double' */
        double *FrictionFactor;
        /** Optional element 'ns1:FrictionPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FrictionPres;
        /** Optional element 'ns1:DischargeCoefficient' of XML schema type 'xsd:double' */
        double *DischargeCoefficient;
        /** Optional element 'ns1:PerforationTool' of XML schema type 'ns1:PerforationToolType' */
        enum ns1__PerforationToolType *PerforationTool;
        /** Optional element 'ns1:PerforationPenetration' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PerforationPenetration;
        /** Optional element 'ns1:CrushZoneDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *CrushZoneDiameter;
        /** Optional element 'ns1:CrushDamageRatio' of XML schema type 'ns2:String64' */
        char *CrushDamageRatio;
        /** Optional element 'ns1:PerforationDate' of XML schema type 'ns2:TimeStamp' */
        time_t *PerforationDate;
        /** Optional element 'ns1:PermanentRemarks' of XML schema type 'ns2:String2000' */
        char *PermanentRemarks;
        /** Optional element 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EventHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:26366 */
#ifndef SOAP_TYPE_ns1__PerforationSets
#define SOAP_TYPE_ns1__PerforationSets (924)
/* complex XML schema type 'ns1:PerforationSets': */
struct ns1__PerforationSets {
        /** Sequence of at least 1 elements 'ns1:PerforationSet' of XML schema type 'ns1:PerforationSet' stored in dynamic array PerforationSet of length __sizePerforationSet */
        int __sizePerforationSet;
        struct ns1__PerforationSet *PerforationSet;
};
#endif

/* testh.h:25925 */
#ifndef SOAP_TYPE_ns1__PerfSlot
#define SOAP_TYPE_ns1__PerfSlot (910)
/* complex XML schema type 'ns1:PerfSlot': */
struct ns1__PerfSlot {
        /** Optional element 'ns1:SlotHeight' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SlotHeight;
        /** Optional element 'ns1:SlotWidth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SlotWidth;
        /** Optional element 'ns1:SlotCenterDistance' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SlotCenterDistance;
        /** Optional element 'ns1:SlotCount' of XML schema type 'xsd:long' */
        LONG64 *SlotCount;
        /** Optional element 'ns1:Remarks' of XML schema type 'ns2:String2000' */
        char *Remarks;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:26448 */
#ifndef SOAP_TYPE_ns1__ReferenceContainer
#define SOAP_TYPE_ns1__ReferenceContainer (926)
/* complex XML schema type 'ns1:ReferenceContainer': */
struct ns1__ReferenceContainer {
        /** Required nillable (xsi:nil when NULL) element 'ns1:String' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *String;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Equipment' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Equipment;
        /** Optional element 'ns1:AccesoryEquipment' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *AccesoryEquipment;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25551 */
#ifndef SOAP_TYPE_ns1__StringAccessory
#define SOAP_TYPE_ns1__StringAccessory (895)
/* complex XML schema type 'ns1:StringAccessory': */
struct ns1__StringAccessory {
        /** Sequence of at least 1 elements 'ns1:Accessory' of XML schema type 'ns1:StringEquipment' stored in dynamic array Accessory of length __sizeAccessory */
        int __sizeAccessory;
        struct ns1__StringEquipment *Accessory;
};
#endif

/* testh.h:25449 */
#ifndef SOAP_TYPE_ns1__StringEquipment
#define SOAP_TYPE_ns1__StringEquipment (883)
/* Type ns1__StringEquipment is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'ns1:StringEquipment': */
struct ns1__StringEquipment {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Equipment' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Equipment;
        /** Optional element 'ns1:EquipmentType' of XML schema type 'ns1:EquipmentTypeExt' */
        char *EquipmentType;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Sequence of elements 'ns1:EquipmentEventHistory' of XML schema type 'ns1:EventInfo' stored in dynamic array EquipmentEventHistory of length __sizeEquipmentEventHistory */
        int __sizeEquipmentEventHistory;
        struct ns1__EventInfo *EquipmentEventHistory;
        /** Optional element 'ns1:Status' of XML schema type 'ns2:String64' */
        char *Status;
        /** Optional element 'ns1:RunNo' of XML schema type 'ns2:String64' */
        char *RunNo;
        /** Optional element 'ns1:PreviousRunDays' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *PreviousRunDays;
        /** Optional element 'ns1:ObjectCondition' of XML schema type 'ns2:String64' */
        char *ObjectCondition;
        /** Optional element 'ns1:SurfaceCondition' of XML schema type 'ns2:String64' */
        char *SurfaceCondition;
        /** Optional element 'ns1:Count' of XML schema type 'xsd:long' */
        LONG64 *Count;
        /** Optional element 'ns1:Length' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Length;
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:TvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TvdInterval;
        /** Optional element 'ns1:OutsideString' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *OutsideString;
        /** Optional element 'ns1:TensileMax' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *TensileMax;
        /** Optional element 'ns1:PresRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRating;
        /** Optional element 'ns1:PresCollapse' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCollapse;
        /** Optional element 'ns1:PresBurst' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBurst;
        /** Optional element 'ns1:HeatRating' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *HeatRating;
        /** Optional element 'ns1:IsLinetoSurface' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsLinetoSurface;
        /** Optional element 'ns1:IsCentralized' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsCentralized;
        /** Optional element 'ns1:HasScratchers' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *HasScratchers;
        /** Sequence of elements 'ns1:PerforationSet' of XML schema type 'ns2:ComponentReference' stored in dynamic array PerforationSet of length __sizePerforationSet */
        int __sizePerforationSet;
        struct ns2__ComponentReference *PerforationSet;
        /** Optional element 'ns1:PermanentRemarks' of XML schema type 'ns2:String2000' */
        char *PermanentRemarks;
        /** Optional element 'ns1:UsageComment' of XML schema type 'ns2:String2000' */
        char *UsageComment;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:OrderOfObject' of XML schema type 'ns1:ObjectSequence' */
        struct ns1__ObjectSequence *OrderOfObject;
        /** Sequence of elements 'ns1:InsideComponent' of XML schema type 'ns1:ReferenceContainer' stored in dynamic array InsideComponent of length __sizeInsideComponent */
        int __sizeInsideComponent;
        struct ns1__ReferenceContainer *InsideComponent;
        /** Sequence of elements 'ns1:OutsideComponent' of XML schema type 'ns1:ReferenceContainer' stored in dynamic array OutsideComponent of length __sizeOutsideComponent */
        int __sizeOutsideComponent;
        struct ns1__ReferenceContainer *OutsideComponent;
        /** Sequence of elements 'ns1:ConnectionNext' of XML schema type 'ns1:EquipmentConnection' stored in dynamic array ConnectionNext of length __sizeConnectionNext */
        int __sizeConnectionNext;
        struct ns1__EquipmentConnection *ConnectionNext;
        /** Optional element 'ns1:Assembly' of XML schema type 'ns1:Assembly' */
        struct ns1__Assembly *Assembly;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:25645 */
#ifndef SOAP_TYPE_ns1__StringEquipmentSet
#define SOAP_TYPE_ns1__StringEquipmentSet (901)
/* complex XML schema type 'ns1:StringEquipmentSet': */
struct ns1__StringEquipmentSet {
        /** Sequence of at least 1 elements 'ns1:StringEquipment' of XML schema type 'ns1:StringEquipment' stored in dynamic array StringEquipment of length __sizeStringEquipment */
        int __sizeStringEquipment;
        struct ns1__StringEquipment *StringEquipment;
};
#endif

/* testh.h:26752 */
#ifndef SOAP_TYPE_ns1__AbstractEventExtension
#define SOAP_TYPE_ns1__AbstractEventExtension (931)
/* complex XML schema type 'ns1:AbstractEventExtension': */
struct ns1__AbstractEventExtension {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__AcidizeFracExtension *ns1__AcidizeFracExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__BHPExtension *ns1__BHPExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__CementExtension *ns1__CementExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__CleanFillExtension *ns1__CleanFillExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__DirectionalSurveyExtension *ns1__DirectionalSurveyExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__DownholeExtension *ns1__DownholeExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__FluidReportExtension *ns1__FluidReportExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__JobExtension *ns1__JobExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__LostCirculationExtension *ns1__LostCirculationExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__PerforatingExtension *ns1__PerforatingExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__PressureTestExtension *ns1__PressureTestExtension;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractEventExtension when non-NULL */
        struct ns1__WaitingOnExtension *ns1__WaitingOnExtension;
};
#endif

/* testh.h:26793 */
#ifndef SOAP_TYPE_ns1__BoreholeStringReference
#define SOAP_TYPE_ns1__BoreholeStringReference (956)
/* complex XML schema type 'ns1:BoreholeStringReference': */
struct ns1__BoreholeStringReference {
        /** Required nillable (xsi:nil when NULL) element 'ns1:BoreholeString' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *BoreholeString;
        /** Sequence of elements 'ns1:StringEquipment' of XML schema type 'ns2:ComponentReference' stored in dynamic array StringEquipment of length __sizeStringEquipment */
        int __sizeStringEquipment;
        struct ns2__ComponentReference *StringEquipment;
};
#endif

/* testh.h:26824 */
#ifndef SOAP_TYPE_ns1__DownholeComponentReference
#define SOAP_TYPE_ns1__DownholeComponentReference (959)
/* complex XML schema type 'ns1:DownholeComponentReference': */
struct ns1__DownholeComponentReference {
        /** Sequence of elements 'ns1:StringEquipment' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array StringEquipment of length __sizeStringEquipment */
        int __sizeStringEquipment;
        struct ns2__DataObjectComponentReference *StringEquipment;
        /** Sequence of elements 'ns1:PerforationSet' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array PerforationSet of length __sizePerforationSet */
        int __sizePerforationSet;
        struct ns2__DataObjectComponentReference *PerforationSet;
        /** Sequence of elements 'ns1:BoreholeStringReference' of XML schema type 'ns1:BoreholeStringReference' stored in dynamic array BoreholeStringReference of length __sizeBoreholeStringReference */
        int __sizeBoreholeStringReference;
        struct ns1__BoreholeStringReference *BoreholeStringReference;
        /** Sequence of elements 'ns1:DownholeStringReference' of XML schema type 'ns1:DownholeStringReference' stored in dynamic array DownholeStringReference of length __sizeDownholeStringReference */
        int __sizeDownholeStringReference;
        struct ns1__DownholeStringReference *DownholeStringReference;
};
#endif

/* testh.h:26848 */
#ifndef SOAP_TYPE_ns1__DownholeStringReference
#define SOAP_TYPE_ns1__DownholeStringReference (961)
/* complex XML schema type 'ns1:DownholeStringReference': */
struct ns1__DownholeStringReference {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DownholeString' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *DownholeString;
        /** Sequence of elements 'ns1:StringEquipment' of XML schema type 'ns2:ComponentReference' stored in dynamic array StringEquipment of length __sizeStringEquipment */
        int __sizeStringEquipment;
        struct ns2__ComponentReference *StringEquipment;
};
#endif

/* testh.h:26896 */
#ifndef SOAP_TYPE_ns1__MemberObject
#define SOAP_TYPE_ns1__MemberObject (963)
/* complex XML schema type 'ns1:MemberObject': */
struct ns1__MemberObject {
        /** Optional element 'ns1:IndexKind' of XML schema type 'ns2:DataIndexKind' */
        enum ns2__DataIndexKind *IndexKind;
        /** Optional element 'ns1:IndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *IndexInterval;
        /** Optional element 'ns1:MnemonicList' of XML schema type 'ns2:String2000' */
        char *MnemonicList;
        /** Optional element 'ns1:ReferenceDepth' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *ReferenceDepth;
        /** Optional element 'ns1:ReferenceDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *ReferenceDateTime;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ObjectReference' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ObjectReference;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sequence1' of XML schema type 'ns1:ObjectSequence' */
        struct ns1__ObjectSequence *Sequence1;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sequence2' of XML schema type 'ns1:ObjectSequence' */
        struct ns1__ObjectSequence *Sequence2;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sequence3' of XML schema type 'ns1:ObjectSequence' */
        struct ns1__ObjectSequence *Sequence3;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:26968 */
#ifndef SOAP_TYPE_ns1__Participant
#define SOAP_TYPE_ns1__Participant (965)
/* complex XML schema type 'ns1:Participant': */
struct ns1__Participant {
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Participant' of XML schema type 'ns1:MemberObject' stored in dynamic array Participant of length __sizeParticipant */
        int __sizeParticipant;
        struct ns1__MemberObject *Participant;
};
#endif

/* testh.h:26997 */
#ifndef SOAP_TYPE_ns1__Perforating
#define SOAP_TYPE_ns1__Perforating (967)
/* complex XML schema type 'ns1:Perforating': */
struct ns1__Perforating {
        /** Optional element 'ns1:StageNumber' of XML schema type 'xsd:long' */
        LONG64 *StageNumber;
        /** Optional element 'ns1:BottomPackerSet' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *BottomPackerSet;
        /** Optional element 'ns1:PerforationFluidType' of XML schema type 'ns2:String64' */
        char *PerforationFluidType;
        /** Optional element 'ns1:HydrostaticPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *HydrostaticPressure;
        /** Optional element 'ns1:SurfacePressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *SurfacePressure;
        /** Optional element 'ns1:ReservoirPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *ReservoirPressure;
        /** Optional element 'ns1:FluidDensity' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *FluidDensity;
        /** Optional element 'ns1:FluidLevel' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *FluidLevel;
        /** Optional element 'ns1:ConveyanceMethod' of XML schema type 'ns1:PerfConveyanceMethod' */
        enum ns1__PerfConveyanceMethod *ConveyanceMethod;
        /** Optional element 'ns1:ShotsPlanned' of XML schema type 'xsd:long' */
        LONG64 *ShotsPlanned;
        /** Optional element 'ns1:ShotsDensity' of XML schema type 'ns2:ReciprocalLengthMeasure' */
        struct ns2__ReciprocalLengthMeasure *ShotsDensity;
        /** Optional element 'ns1:ShotsMisfired' of XML schema type 'xsd:long' */
        LONG64 *ShotsMisfired;
        /** Optional element 'ns1:Orientation' of XML schema type 'ns2:String64' */
        char *Orientation;
        /** Optional element 'ns1:OrientationMethod' of XML schema type 'ns2:String64' */
        char *OrientationMethod;
        /** Optional element 'ns1:PerforationCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *PerforationCompany;
        /** Optional element 'ns1:CarrierManufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *CarrierManufacturer;
        /** Optional element 'ns1:CarrierSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *CarrierSize;
        /** Optional element 'ns1:CarrierDescription' of XML schema type 'ns2:String2000' */
        char *CarrierDescription;
        /** Optional element 'ns1:ChargeManufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChargeManufacturer;
        /** Optional element 'ns1:ChargeSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ChargeSize;
        /** Optional element 'ns1:ChargeWeight' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *ChargeWeight;
        /** Optional element 'ns1:ChargeType' of XML schema type 'ns2:String64' */
        char *ChargeType;
        /** Optional element 'ns1:RefLog' of XML schema type 'ns2:String64' */
        char *RefLog;
        /** Optional element 'ns1:GunCentralized' of XML schema type 'ns2:String64' */
        char *GunCentralized;
        /** Optional element 'ns1:GunSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *GunSize;
        /** Optional element 'ns1:GunDesciption' of XML schema type 'ns2:String2000' */
        char *GunDesciption;
        /** Optional element 'ns1:GunLeftInHole' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *GunLeftInHole;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27194 */
#ifndef SOAP_TYPE_ns1__AbstractBottomHoleTemperature
#define SOAP_TYPE_ns1__AbstractBottomHoleTemperature (969)
/* complex XML schema type 'ns1:AbstractBottomHoleTemperature': */
struct ns1__AbstractBottomHoleTemperature {
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomHoleTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *BottomHoleTemperature;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractBottomHoleTemperature when non-NULL */
        struct ns1__BottomHoleCirculatingTemperature *ns1__BottomHoleCirculatingTemperature;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractBottomHoleTemperature when non-NULL */
        struct ns1__BottomHoleStaticTemperature *ns1__BottomHoleStaticTemperature;
};
#endif

/* testh.h:27221 */
#ifndef SOAP_TYPE_ns1__DrillActivity
#define SOAP_TYPE_ns1__DrillActivity (974)
/* complex XML schema type 'ns1:DrillActivity': */
struct ns1__DrillActivity {
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Sequence of elements 'ns1:ProprietaryCode' of XML schema type 'ns2:NameStruct' stored in dynamic array ProprietaryCode of length __sizeProprietaryCode */
        int __sizeProprietaryCode;
        struct ns2__NameStruct *ProprietaryCode;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:Duration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *Duration;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:Phase' of XML schema type 'ns2:String64' */
        char *Phase;
        /** Optional element 'ns1:ActivityCode' of XML schema type 'ns1:DrillActivityCode' */
        enum ns1__DrillActivityCode *ActivityCode;
        /** Optional element 'ns1:DetailActivity' of XML schema type 'ns2:String64' */
        char *DetailActivity;
        /** Optional element 'ns1:TypeActivityClass' of XML schema type 'ns1:DrillActivityClassType' */
        enum ns1__DrillActivityClassType *TypeActivityClass;
        /** Optional element 'ns1:ActivityMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ActivityMdInterval;
        /** Optional element 'ns1:ActivityTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *ActivityTvdInterval;
        /** Optional element 'ns1:BitMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *BitMdInterval;
        /** Optional element 'ns1:State' of XML schema type 'ns2:String64' */
        char *State;
        /** Optional element 'ns1:StateDetailActivity' of XML schema type 'ns1:StateDetailActivity' */
        enum ns1__StateDetailActivity *StateDetailActivity;
        /** Optional element 'ns1:Operator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Operator;
        /** Optional element 'ns1:Optimum' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Optimum;
        /** Optional element 'ns1:Productive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Productive;
        /** Optional element 'ns1:ItemState' of XML schema type 'ns1:ItemState' */
        enum ns1__ItemState *ItemState;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:BhaRun' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *BhaRun;
        /** Optional element 'ns1:Tubular' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tubular;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27378 */
#ifndef SOAP_TYPE_ns1__DrillReportControlIncidentInfo
#define SOAP_TYPE_ns1__DrillReportControlIncidentInfo (981)
/* complex XML schema type 'ns1:DrillReportControlIncidentInfo': */
struct ns1__DrillReportControlIncidentInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:MdInflow' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdInflow;
        /** Optional element 'ns1:TvdInflow' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdInflow;
        /** Optional element 'ns1:Phase' of XML schema type 'ns2:String64' */
        char *Phase;
        /** Optional element 'ns1:ActivityCode' of XML schema type 'ns1:DrillActivityCode' */
        enum ns1__DrillActivityCode *ActivityCode;
        /** Optional element 'ns1:DetailActivity' of XML schema type 'ns2:String64' */
        char *DetailActivity;
        /** Optional element 'ns1:ETimLost' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimLost;
        /** Optional element 'ns1:DTimRegained' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRegained;
        /** Optional element 'ns1:DiaBit' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaBit;
        /** Optional element 'ns1:MdBit' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBit;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PorePressure' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *PorePressure;
        /** Optional element 'ns1:DiaCsgLast' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaCsgLast;
        /** Optional element 'ns1:MdCsgLast' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCsgLast;
        /** Optional element 'ns1:VolMudGained' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudGained;
        /** Optional element 'ns1:PresShutInCasing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresShutInCasing;
        /** Optional element 'ns1:PresShutInDrill' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresShutInDrill;
        /** Optional element 'ns1:IncidentType' of XML schema type 'ns1:WellControlIncidentType' */
        enum ns1__WellControlIncidentType *IncidentType;
        /** Optional element 'ns1:KillingType' of XML schema type 'ns1:WellKillingProcedureType' */
        enum ns1__WellKillingProcedureType *KillingType;
        /** Optional element 'ns1:Formation' of XML schema type 'ns2:String2000' */
        char *Formation;
        /** Optional element 'ns1:TempBottom' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBottom;
        /** Optional element 'ns1:PresMaxChoke' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMaxChoke;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:ProprietaryCode' of XML schema type 'ns2:NameStruct' stored in dynamic array ProprietaryCode of length __sizeProprietaryCode */
        int __sizeProprietaryCode;
        struct ns2__NameStruct *ProprietaryCode;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27555 */
#ifndef SOAP_TYPE_ns1__DrillReportCoreInfo
#define SOAP_TYPE_ns1__DrillReportCoreInfo (984)
/* complex XML schema type 'ns1:DrillReportCoreInfo': */
struct ns1__DrillReportCoreInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:CoreNumber' of XML schema type 'ns2:String64' */
        char *CoreNumber;
        /** Optional element 'ns1:CoredMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *CoredMdInterval;
        /** Optional element 'ns1:CoredTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *CoredTvdInterval;
        /** Optional element 'ns1:LenRecovered' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenRecovered;
        /** Optional element 'ns1:RecoverPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *RecoverPc;
        /** Optional element 'ns1:LenBarrel' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenBarrel;
        /** Optional element 'ns1:InnerBarrelType' of XML schema type 'ns1:InnerBarrelType' */
        enum ns1__InnerBarrelType *InnerBarrelType;
        /** Optional element 'ns1:CoreDescription' of XML schema type 'ns2:String2000' */
        char *CoreDescription;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27640 */
#ifndef SOAP_TYPE_ns1__DrillReportEquipFailureInfo
#define SOAP_TYPE_ns1__DrillReportEquipFailureInfo (986)
/* complex XML schema type 'ns1:DrillReportEquipFailureInfo': */
struct ns1__DrillReportEquipFailureInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:EquipClass' of XML schema type 'ns2:String64' */
        char *EquipClass;
        /** Optional element 'ns1:ETimMissProduction' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimMissProduction;
        /** Optional element 'ns1:DTimRepair' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRepair;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27713 */
#ifndef SOAP_TYPE_ns1__DrillReportFormTestInfo
#define SOAP_TYPE_ns1__DrillReportFormTestInfo (987)
/* complex XML schema type 'ns1:DrillReportFormTestInfo': */
struct ns1__DrillReportFormTestInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:PresPore' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresPore;
        /** Optional element 'ns1:GoodSeal' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *GoodSeal;
        /** Optional element 'ns1:MdSample' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdSample;
        /** Optional element 'ns1:DominateComponent' of XML schema type 'ns2:String64' */
        char *DominateComponent;
        /** Optional element 'ns1:DensityHC' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensityHC;
        /** Optional element 'ns1:VolumeSample' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeSample;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27805 */
#ifndef SOAP_TYPE_ns1__DrillReportGasReadingInfo
#define SOAP_TYPE_ns1__DrillReportGasReadingInfo (988)
/* complex XML schema type 'ns1:DrillReportGasReadingInfo': */
struct ns1__DrillReportGasReadingInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:ReadingType' of XML schema type 'ns1:GasPeakType' */
        enum ns1__GasPeakType *ReadingType;
        /** Optional element 'ns1:GasReadingMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *GasReadingMdInterval;
        /** Optional element 'ns1:GasReadingTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *GasReadingTvdInterval;
        /** Optional element 'ns1:GasHigh' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *GasHigh;
        /** Optional element 'ns1:GasLow' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *GasLow;
        /** Optional element 'ns1:Meth' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Meth;
        /** Optional element 'ns1:Eth' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Eth;
        /** Optional element 'ns1:Prop' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Prop;
        /** Optional element 'ns1:Ibut' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Ibut;
        /** Optional element 'ns1:Nbut' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Nbut;
        /** Optional element 'ns1:Ipent' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Ipent;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27908 */
#ifndef SOAP_TYPE_ns1__DrillReportLithShowInfo
#define SOAP_TYPE_ns1__DrillReportLithShowInfo (990)
/* complex XML schema type 'ns1:DrillReportLithShowInfo': */
struct ns1__DrillReportLithShowInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:ShowMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ShowMdInterval;
        /** Optional element 'ns1:ShowTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *ShowTvdInterval;
        /** Optional element 'ns1:Show' of XML schema type 'ns2:String2000' */
        char *Show;
        /** Optional element 'ns1:Lithology' of XML schema type 'ns2:String2000' */
        char *Lithology;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:27969 */
#ifndef SOAP_TYPE_ns1__DrillReportLogInfo
#define SOAP_TYPE_ns1__DrillReportLogInfo (991)
/* complex XML schema type 'ns1:DrillReportLogInfo': */
struct ns1__DrillReportLogInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:ServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ServiceCompany;
        /** Optional element 'ns1:LoggedMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *LoggedMdInterval;
        /** Optional element 'ns1:LoggedTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *LoggedTvdInterval;
        /** Optional element 'ns1:Tool' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tool;
        /** Optional element 'ns1:MdTempTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTempTool;
        /** Optional element 'ns1:TvdTempTool' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdTempTool;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:BottomHoleTemperature' of XML schema type 'ns1:AbstractBottomHoleTemperature' */
        struct ns1__AbstractBottomHoleTemperature *BottomHoleTemperature;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28050 */
#ifndef SOAP_TYPE_ns1__DrillReportPerfInfo
#define SOAP_TYPE_ns1__DrillReportPerfInfo (993)
/* complex XML schema type 'ns1:DrillReportPerfInfo': */
struct ns1__DrillReportPerfInfo {
        /** Optional element 'ns1:DTimOpen' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimOpen;
        /** Optional element 'ns1:DTimClose' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimClose;
        /** Optional element 'ns1:PerforationMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PerforationMdInterval;
        /** Optional element 'ns1:PerforationTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *PerforationTvdInterval;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28105 */
#ifndef SOAP_TYPE_ns1__DrillReportPorePressure
#define SOAP_TYPE_ns1__DrillReportPorePressure (994)
/* complex XML schema type 'ns1:DrillReportPorePressure': */
struct ns1__DrillReportPorePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns1:ReadingKind' of XML schema type 'ns1:ReadingKind' */
        enum ns1__ReadingKind ReadingKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EquivalentMudWeight' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *EquivalentMudWeight;
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28166 */
#ifndef SOAP_TYPE_ns1__DrillReportStatusInfo
#define SOAP_TYPE_ns1__DrillReportStatusInfo (995)
/* complex XML schema type 'ns1:DrillReportStatusInfo': */
struct ns1__DrillReportStatusInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:MdPlugTop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdPlugTop;
        /** Optional element 'ns1:DiaHole' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaHole;
        /** Optional element 'ns1:MdDiaHoleStart' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdDiaHoleStart;
        /** Optional element 'ns1:DiaPilot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaPilot;
        /** Optional element 'ns1:MdDiaPilotPlan' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdDiaPilotPlan;
        /** Optional element 'ns1:TvdDiaPilotPlan' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdDiaPilotPlan;
        /** Optional element 'ns1:TypeWellbore' of XML schema type 'ns1:WellboreType' */
        enum ns1__WellboreType *TypeWellbore;
        /** Optional element 'ns1:MdKickoff' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdKickoff;
        /** Optional element 'ns1:TvdKickoff' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *TvdKickoff;
        /** Optional element 'ns1:StrengthForm' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *StrengthForm;
        /** Optional element 'ns1:MdStrengthForm' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdStrengthForm;
        /** Optional element 'ns1:TvdStrengthForm' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdStrengthForm;
        /** Optional element 'ns1:DiaCsgLast' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaCsgLast;
        /** Optional element 'ns1:MdCsgLast' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCsgLast;
        /** Optional element 'ns1:TvdCsgLast' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdCsgLast;
        /** Optional element 'ns1:PresTestType' of XML schema type 'ns1:PresTestType' */
        enum ns1__PresTestType *PresTestType;
        /** Optional element 'ns1:MdPlanned' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdPlanned;
        /** Optional element 'ns1:DistDrill' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrill;
        /** Optional element 'ns1:Sum24Hr' of XML schema type 'ns2:String2000' */
        char *Sum24Hr;
        /** Optional element 'ns1:Forecast24Hr' of XML schema type 'ns2:String2000' */
        char *Forecast24Hr;
        /** Optional element 'ns1:RopCurrent' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopCurrent;
        /** Optional element 'ns1:RigUtilization' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *RigUtilization;
        /** Optional element 'ns1:ETimStart' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimStart;
        /** Optional element 'ns1:ETimSpud' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimSpud;
        /** Optional element 'ns1:ETimLoc' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimLoc;
        /** Optional element 'ns1:ETimDrill' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrill;
        /** Optional element 'ns1:RopAv' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopAv;
        /** Optional element 'ns1:Supervisor' of XML schema type 'ns2:String64' */
        char *Supervisor;
        /** Optional element 'ns1:Engineer' of XML schema type 'ns2:String64' */
        char *Engineer;
        /** Optional element 'ns1:Geologist' of XML schema type 'ns2:String64' */
        char *Geologist;
        /** Optional element 'ns1:ETimDrillRot' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrillRot;
        /** Optional element 'ns1:ETimDrillSlid' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrillSlid;
        /** Optional element 'ns1:ETimCirc' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimCirc;
        /** Optional element 'ns1:ETimReam' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimReam;
        /** Optional element 'ns1:ETimHold' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimHold;
        /** Optional element 'ns1:ETimSteering' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimSteering;
        /** Optional element 'ns1:DistDrillRot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillRot;
        /** Optional element 'ns1:DistDrillSlid' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillSlid;
        /** Optional element 'ns1:DistReam' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistReam;
        /** Optional element 'ns1:DistHold' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistHold;
        /** Optional element 'ns1:DistSteering' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistSteering;
        /** Optional element 'ns1:NumPob' of XML schema type 'xsd:long' */
        LONG64 *NumPob;
        /** Optional element 'ns1:NumContract' of XML schema type 'xsd:long' */
        LONG64 *NumContract;
        /** Optional element 'ns1:NumOperator' of XML schema type 'xsd:long' */
        LONG64 *NumOperator;
        /** Optional element 'ns1:NumService' of XML schema type 'xsd:long' */
        LONG64 *NumService;
        /** Optional element 'ns1:NumAFE' of XML schema type 'ns2:String64' */
        char *NumAFE;
        /** Optional element 'ns1:ConditionHole' of XML schema type 'ns2:String64' */
        char *ConditionHole;
        /** Optional element 'ns1:TvdLot' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdLot;
        /** Optional element 'ns1:PresLotEmw' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *PresLotEmw;
        /** Optional element 'ns1:PresKickTol' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresKickTol;
        /** Optional element 'ns1:VolKickTol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolKickTol;
        /** Optional element 'ns1:Maasp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Maasp;
        /** Optional element 'ns1:Tubular' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tubular;
        /** Sequence of elements 'ns1:ParentWellbore' of XML schema type 'ns2:DataObjectReference' stored in dynamic array ParentWellbore of length __sizeParentWellbore */
        int __sizeParentWellbore;
        struct ns2__DataObjectReference *ParentWellbore;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:ElevKelly' of XML schema type 'ns2:AbstractElevation' */
        struct ns2__AbstractElevation *ElevKelly;
        /** Optional element 'ns1:CostDay' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostDay;
        /** Optional element 'ns1:CostDayMud' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostDayMud;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28547 */
#ifndef SOAP_TYPE_ns1__DrillReportStratInfo
#define SOAP_TYPE_ns1__DrillReportStratInfo (1000)
/* complex XML schema type 'ns1:DrillReportStratInfo': */
struct ns1__DrillReportStratInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:MdTop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTop;
        /** Optional element 'ns1:TvdTop' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdTop;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28602 */
#ifndef SOAP_TYPE_ns1__DrillReportSurveyStation
#define SOAP_TYPE_ns1__DrillReportSurveyStation (1001)
/* complex XML schema type 'ns1:DrillReportSurveyStation': */
struct ns1__DrillReportSurveyStation {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:Incl' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Incl;
        /** Optional element 'ns1:Azi' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Azi;
        /** Optional element 'ns1:VertSect' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *VertSect;
        /** Optional element 'ns1:Dls' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *Dls;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Location' of XML schema type 'ns2:Abstract2dPosition' stored in dynamic array Location of length __sizeLocation */
        int __sizeLocation;
        struct ns2__Abstract2dPosition *Location;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:28679 */
#ifndef SOAP_TYPE_ns1__DrillReportSurveyStationReport
#define SOAP_TYPE_ns1__DrillReportSurveyStationReport (1004)
/* complex XML schema type 'ns1:DrillReportSurveyStationReport': */
struct ns1__DrillReportSurveyStationReport {
        /** Optional element 'ns1:AcquisitionRemark' of XML schema type 'ns2:String2000' */
        char *AcquisitionRemark;
        /** Optional element 'ns1:MagDeclUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *MagDeclUsed;
        /** Optional element 'ns1:MdMaxExtrapolated' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxExtrapolated;
        /** Optional element 'ns1:MdMaxMeasured' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxMeasured;
        /** Optional element 'ns1:MdTieOn' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTieOn;
        /** Optional element 'ns1:NominalCalcAlgorithm' of XML schema type 'ns1:TrajStnCalcAlgorithmExt' */
        char *NominalCalcAlgorithm;
        /** Optional element 'ns1:NominalTypeSurveyTool' of XML schema type 'ns1:TypeSurveyToolExt' */
        char *NominalTypeSurveyTool;
        /** Optional element 'ns1:NominalTypeTrajStation' of XML schema type 'ns1:TrajStationTypeExt' */
        char *NominalTypeTrajStation;
        /** Optional element 'ns1:TrajectoryOSDUIntegration' of XML schema type 'ns1:TrajectoryOSDUIntegration' */
        struct ns1__TrajectoryOSDUIntegration *TrajectoryOSDUIntegration;
        /** Optional element 'ns1:GridConUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *GridConUsed;
        /** Optional element 'ns1:GridScaleFactorUsed' of XML schema type 'ns2:LengthPerLengthMeasureExt' */
        struct ns2__LengthPerLengthMeasureExt *GridScaleFactorUsed;
        /** Optional element 'ns1:AziVertSect' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *AziVertSect;
        /** Optional element 'ns1:DispNsVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispNsVertSectOrig;
        /** Optional element 'ns1:DispEwVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispEwVertSectOrig;
        /** Optional element 'ns1:AziRef' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind *AziRef;
        /** Sequence of elements 'ns1:DrillReportSurveyStation' of XML schema type 'ns1:DrillReportSurveyStation' stored in dynamic array DrillReportSurveyStation of length __sizeDrillReportSurveyStation */
        int __sizeDrillReportSurveyStation;
        struct ns1__DrillReportSurveyStation *DrillReportSurveyStation;
};
#endif

/* testh.h:28799 */
#ifndef SOAP_TYPE_ns1__DrillReportWellboreInfo
#define SOAP_TYPE_ns1__DrillReportWellboreInfo (1013)
/* complex XML schema type 'ns1:DrillReportWellboreInfo': */
struct ns1__DrillReportWellboreInfo {
        /** Optional element 'ns1:DTimSpud' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimSpud;
        /** Optional element 'ns1:DTimPreSpud' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPreSpud;
        /** Optional element 'ns1:DateDrillComplete' of XML schema type 'xsd:date' */
        char *DateDrillComplete;
        /** Optional element 'ns1:Operator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Operator;
        /** Optional element 'ns1:DrillContractor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DrillContractor;
        /** Sequence of elements 'ns1:Rig' of XML schema type 'ns2:DataObjectReference' stored in dynamic array Rig of length __sizeRig */
        int __sizeRig;
        struct ns2__DataObjectReference *Rig;
};
#endif

/* testh.h:28854 */
#ifndef SOAP_TYPE_ns1__DrillReportWellTestInfo
#define SOAP_TYPE_ns1__DrillReportWellTestInfo (1014)
/* complex XML schema type 'ns1:DrillReportWellTestInfo': */
struct ns1__DrillReportWellTestInfo {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:TestType' of XML schema type 'ns1:WellTestType' */
        enum ns1__WellTestType *TestType;
        /** Optional element 'ns1:TestNumber' of XML schema type 'xsd:long' */
        LONG64 *TestNumber;
        /** Optional element 'ns1:TestMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *TestMdInterval;
        /** Optional element 'ns1:TestTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TestTvdInterval;
        /** Optional element 'ns1:ChokeOrificeSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ChokeOrificeSize;
        /** Optional element 'ns1:DensityOil' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensityOil;
        /** Optional element 'ns1:DensityWater' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensityWater;
        /** Optional element 'ns1:DensityGas' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensityGas;
        /** Optional element 'ns1:FlowRateOil' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRateOil;
        /** Optional element 'ns1:FlowRateWater' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRateWater;
        /** Optional element 'ns1:FlowRateGas' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRateGas;
        /** Optional element 'ns1:PresShutIn' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresShutIn;
        /** Optional element 'ns1:PresFlowing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresFlowing;
        /** Optional element 'ns1:PresBottom' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBottom;
        /** Optional element 'ns1:GasOilRatio' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *GasOilRatio;
        /** Optional element 'ns1:WaterOilRatio' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *WaterOilRatio;
        /** Optional element 'ns1:Chloride' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *Chloride;
        /** Optional element 'ns1:CarbonDioxide' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *CarbonDioxide;
        /** Optional element 'ns1:HydrogenSulfide' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *HydrogenSulfide;
        /** Optional element 'ns1:VolOilTotal' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolOilTotal;
        /** Optional element 'ns1:VolGasTotal' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolGasTotal;
        /** Optional element 'ns1:VolWaterTotal' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolWaterTotal;
        /** Optional element 'ns1:VolOilStored' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolOilStored;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29032 */
#ifndef SOAP_TYPE_ns1__Bop
#define SOAP_TYPE_ns1__Bop (1016)
/* complex XML schema type 'ns1:Bop': */
struct ns1__Bop {
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Optional element 'ns1:TypeConnectionBop' of XML schema type 'ns2:String64' */
        char *TypeConnectionBop;
        /** Optional element 'ns1:SizeConnectionBop' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeConnectionBop;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PresBopRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBopRating;
        /** Required nillable (xsi:nil when NULL) element 'ns1:SizeBopSys' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeBopSys;
        /** Optional element 'ns1:RotBop' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *RotBop;
        /** Optional element 'ns1:IdBoosterLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdBoosterLine;
        /** Optional element 'ns1:OdBoosterLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdBoosterLine;
        /** Optional element 'ns1:LenBoosterLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenBoosterLine;
        /** Optional element 'ns1:IdSurfLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdSurfLine;
        /** Optional element 'ns1:OdSurfLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdSurfLine;
        /** Optional element 'ns1:LenSurfLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenSurfLine;
        /** Optional element 'ns1:IdChkLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdChkLine;
        /** Optional element 'ns1:OdChkLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdChkLine;
        /** Optional element 'ns1:LenChkLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenChkLine;
        /** Optional element 'ns1:IdKillLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdKillLine;
        /** Optional element 'ns1:OdKillLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdKillLine;
        /** Optional element 'ns1:LenKillLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenKillLine;
        /** Optional element 'ns1:TypeDiverter' of XML schema type 'ns2:String64' */
        char *TypeDiverter;
        /** Optional element 'ns1:DiaDiverter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaDiverter;
        /** Optional element 'ns1:PresWorkDiverter' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresWorkDiverter;
        /** Optional element 'ns1:Accumulator' of XML schema type 'ns2:String64' */
        char *Accumulator;
        /** Optional element 'ns1:CapAccFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapAccFluid;
        /** Optional element 'ns1:PresAccPreCharge' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresAccPreCharge;
        /** Optional element 'ns1:VolAccPreCharge' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolAccPreCharge;
        /** Optional element 'ns1:PresAccOpRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresAccOpRating;
        /** Optional element 'ns1:TypeControlManifold' of XML schema type 'ns2:String64' */
        char *TypeControlManifold;
        /** Optional element 'ns1:DescControlManifold' of XML schema type 'ns2:String2000' */
        char *DescControlManifold;
        /** Optional element 'ns1:TypeChokeManifold' of XML schema type 'ns2:String64' */
        char *TypeChokeManifold;
        /** Optional element 'ns1:PresChokeManifold' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresChokeManifold;
        /** Sequence of elements 'ns1:BopComponent' of XML schema type 'ns1:BopComponent' stored in dynamic array BopComponent of length __sizeBopComponent */
        int __sizeBopComponent;
        struct ns1__BopComponent *BopComponent;
};
#endif

/* testh.h:29242 */
#ifndef SOAP_TYPE_ns1__BopComponent
#define SOAP_TYPE_ns1__BopComponent (1017)
/* complex XML schema type 'ns1:BopComponent': */
struct ns1__BopComponent {
        /** Optional element 'ns1:TypeBopComp' of XML schema type 'ns1:BopType' */
        enum ns1__BopType *TypeBopComp;
        /** Optional element 'ns1:DescComp' of XML schema type 'ns2:String64' */
        char *DescComp;
        /** Optional element 'ns1:IdPassThru' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdPassThru;
        /** Optional element 'ns1:PresWork' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresWork;
        /** Optional element 'ns1:DiaCloseMn' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaCloseMn;
        /** Optional element 'ns1:DiaCloseMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaCloseMx;
        /** Optional element 'ns1:Nomenclature' of XML schema type 'ns2:String64' */
        char *Nomenclature;
        /** Optional element 'ns1:IsVariable' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsVariable;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29338 */
#ifndef SOAP_TYPE_ns1__Centrifuge
#define SOAP_TYPE_ns1__Centrifuge (1020)
/* complex XML schema type 'ns1:Centrifuge': */
struct ns1__Centrifuge {
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:CapFlow' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *CapFlow;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29420 */
#ifndef SOAP_TYPE_ns1__Degasser
#define SOAP_TYPE_ns1__Degasser (1021)
/* complex XML schema type 'ns1:Degasser': */
struct ns1__Degasser {
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Optional element 'ns1:Height' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Height;
        /** Optional element 'ns1:Len' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Len;
        /** Optional element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Optional element 'ns1:CapFlow' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *CapFlow;
        /** Optional element 'ns1:AreaSeparatorFlow' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *AreaSeparatorFlow;
        /** Optional element 'ns1:HtMudSeal' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtMudSeal;
        /** Optional element 'ns1:IdInlet' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdInlet;
        /** Optional element 'ns1:IdVentLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdVentLine;
        /** Optional element 'ns1:LenVentLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenVentLine;
        /** Optional element 'ns1:CapGasSep' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *CapGasSep;
        /** Optional element 'ns1:CapBlowdown' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *CapBlowdown;
        /** Optional element 'ns1:PresRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRating;
        /** Optional element 'ns1:TempRating' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempRating;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29573 */
#ifndef SOAP_TYPE_ns1__Hydrocyclone
#define SOAP_TYPE_ns1__Hydrocyclone (1022)
/* complex XML schema type 'ns1:Hydrocyclone': */
struct ns1__Hydrocyclone {
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:DescCone' of XML schema type 'ns2:String64' */
        char *DescCone;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29655 */
#ifndef SOAP_TYPE_ns1__MudPump
#define SOAP_TYPE_ns1__MudPump (1023)
/* complex XML schema type 'ns1:MudPump': */
struct ns1__MudPump {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Index' of XML schema type 'xsd:long' */
        LONG64 Index;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Optional element 'ns1:TypePump' of XML schema type 'ns1:PumpType' */
        enum ns1__PumpType *TypePump;
        /** Optional element 'ns1:NumCyl' of XML schema type 'xsd:long' */
        LONG64 *NumCyl;
        /** Optional element 'ns1:OdRod' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdRod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:IdLiner' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdLiner;
        /** Optional element 'ns1:PumpAction' of XML schema type 'ns1:PumpActionIntegerCode' */
        LONG64 *PumpAction;
        /** Optional element 'ns1:Eff' of XML schema type 'ns2:PowerPerPowerMeasure' */
        struct ns2__PowerPerPowerMeasure *Eff;
        /** Optional element 'ns1:LenStroke' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenStroke;
        /** Optional element 'ns1:PresMx' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMx;
        /** Optional element 'ns1:PowHydMx' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *PowHydMx;
        /** Optional element 'ns1:SpmMx' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *SpmMx;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Displacement' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Displacement;
        /** Optional element 'ns1:PresDamp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDamp;
        /** Optional element 'ns1:VolDamp' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolDamp;
        /** Optional element 'ns1:PowMechMx' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *PowMechMx;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29815 */
#ifndef SOAP_TYPE_ns1__Pit
#define SOAP_TYPE_ns1__Pit (1028)
/* complex XML schema type 'ns1:Pit': */
struct ns1__Pit {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Index' of XML schema type 'xsd:long' */
        LONG64 Index;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CapMx' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapMx;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Optional element 'ns1:TypePit' of XML schema type 'ns1:PitType' */
        enum ns1__PitType *TypePit;
        /** Optional element 'ns1:IsActive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsActive;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:29897 */
#ifndef SOAP_TYPE_ns1__Shaker
#define SOAP_TYPE_ns1__Shaker (1030)
/* complex XML schema type 'ns1:Shaker': */
struct ns1__Shaker {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:DTimInstall' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimInstall;
        /** Optional element 'ns1:DTimRemove' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRemove;
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:LocationShaker' of XML schema type 'ns2:String64' */
        char *LocationShaker;
        /** Optional element 'ns1:NumDecks' of XML schema type 'xsd:long' */
        LONG64 *NumDecks;
        /** Optional element 'ns1:NumCascLevel' of XML schema type 'xsd:long' */
        LONG64 *NumCascLevel;
        /** Optional element 'ns1:MudCleaner' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *MudCleaner;
        /** Optional element 'ns1:CapFlow' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *CapFlow;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Optional element 'ns1:SizeMeshMn' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeMeshMn;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:30017 */
#ifndef SOAP_TYPE_ns1__SurfaceEquipment
#define SOAP_TYPE_ns1__SurfaceEquipment (1031)
/* complex XML schema type 'ns1:SurfaceEquipment': */
struct ns1__SurfaceEquipment {
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:PresRating' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRating;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeSurfEquip' of XML schema type 'ns1:SurfEquipType' */
        enum ns1__SurfEquipType TypeSurfEquip;
        /** Optional element 'ns1:UsePumpDischarge' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UsePumpDischarge;
        /** Optional element 'ns1:UseStandpipe' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseStandpipe;
        /** Optional element 'ns1:UseHose' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseHose;
        /** Optional element 'ns1:UseSwivel' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseSwivel;
        /** Optional element 'ns1:UseKelly' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseKelly;
        /** Optional element 'ns1:UseTopStack' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseTopStack;
        /** Optional element 'ns1:UseInjStack' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseInjStack;
        /** Optional element 'ns1:UseSurfaceIron' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UseSurfaceIron;
        /** Optional element 'ns1:IdStandpipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdStandpipe;
        /** Optional element 'ns1:LenStandpipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenStandpipe;
        /** Optional element 'ns1:IdHose' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdHose;
        /** Optional element 'ns1:LenHose' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenHose;
        /** Optional element 'ns1:IdSwivel' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdSwivel;
        /** Optional element 'ns1:LenSwivel' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenSwivel;
        /** Optional element 'ns1:IdKelly' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdKelly;
        /** Optional element 'ns1:LenKelly' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenKelly;
        /** Optional element 'ns1:IdSurfaceIron' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdSurfaceIron;
        /** Optional element 'ns1:LenSurfaceIron' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenSurfaceIron;
        /** Optional element 'ns1:HtSurfaceIron' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtSurfaceIron;
        /** Optional element 'ns1:IdDischargeLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdDischargeLine;
        /** Optional element 'ns1:LenDischargeLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenDischargeLine;
        /** Optional element 'ns1:CtWrapType' of XML schema type 'ns2:String64' */
        char *CtWrapType;
        /** Optional element 'ns1:OdReel' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdReel;
        /** Optional element 'ns1:OdCore' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdCore;
        /** Optional element 'ns1:WidReelWrap' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *WidReelWrap;
        /** Optional element 'ns1:LenReel' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenReel;
        /** Optional element 'ns1:InjStkUp' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *InjStkUp;
        /** Optional element 'ns1:HtInjStk' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtInjStk;
        /** Optional element 'ns1:UmbInside' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *UmbInside;
        /** Optional element 'ns1:OdUmbilical' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdUmbilical;
        /** Optional element 'ns1:LenUmbilical' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenUmbilical;
        /** Optional element 'ns1:IdTopStk' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdTopStk;
        /** Optional element 'ns1:HtTopStk' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtTopStk;
        /** Optional element 'ns1:HtFlange' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtFlange;
};
#endif

/* testh.h:30257 */
#ifndef SOAP_TYPE_ns1__Chromatograph
#define SOAP_TYPE_ns1__Chromatograph (1032)
/* complex XML schema type 'ns1:Chromatograph': */
struct ns1__Chromatograph {
        /** Optional element 'ns1:ChromatographMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ChromatographMdInterval;
        /** Optional element 'ns1:DateTimeGasSampleProcessed' of XML schema type 'ns2:TimeStamp' */
        time_t *DateTimeGasSampleProcessed;
        /** Optional element 'ns1:ChromatographType' of XML schema type 'ns2:String64' */
        char *ChromatographType;
        /** Optional element 'ns1:ETimChromCycle' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimChromCycle;
        /** Optional element 'ns1:ChromReportTime' of XML schema type 'ns2:TimeStamp' */
        time_t *ChromReportTime;
        /** Optional element 'ns1:MudWeightIn' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MudWeightIn;
        /** Optional element 'ns1:MudWeightOut' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MudWeightOut;
        /** Optional element 'ns1:MethAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *MethAv;
        /** Optional element 'ns1:MethMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *MethMn;
        /** Optional element 'ns1:MethMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *MethMx;
        /** Optional element 'ns1:EthAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EthAv;
        /** Optional element 'ns1:EthMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EthMn;
        /** Optional element 'ns1:EthMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EthMx;
        /** Optional element 'ns1:PropAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PropAv;
        /** Optional element 'ns1:PropMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PropMn;
        /** Optional element 'ns1:PropMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PropMx;
        /** Optional element 'ns1:IbutAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IbutAv;
        /** Optional element 'ns1:IbutMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IbutMn;
        /** Optional element 'ns1:IbutMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IbutMx;
        /** Optional element 'ns1:NbutAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NbutAv;
        /** Optional element 'ns1:NbutMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NbutMn;
        /** Optional element 'ns1:NbutMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NbutMx;
        /** Optional element 'ns1:IpentAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IpentAv;
        /** Optional element 'ns1:IpentMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IpentMn;
        /** Optional element 'ns1:IpentMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IpentMx;
        /** Optional element 'ns1:NpentAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NpentAv;
        /** Optional element 'ns1:NpentMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NpentMn;
        /** Optional element 'ns1:NpentMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NpentMx;
        /** Optional element 'ns1:EpentAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EpentAv;
        /** Optional element 'ns1:EpentMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EpentMn;
        /** Optional element 'ns1:EpentMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *EpentMx;
        /** Optional element 'ns1:IhexAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IhexAv;
        /** Optional element 'ns1:IhexMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IhexMn;
        /** Optional element 'ns1:IhexMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *IhexMx;
        /** Optional element 'ns1:NhexAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NhexAv;
        /** Optional element 'ns1:NhexMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NhexMn;
        /** Optional element 'ns1:NhexMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NhexMx;
        /** Optional element 'ns1:Co2Av' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Co2Av;
        /** Optional element 'ns1:Co2Mn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Co2Mn;
        /** Optional element 'ns1:Co2Mx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Co2Mx;
        /** Optional element 'ns1:H2sAv' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *H2sAv;
        /** Optional element 'ns1:H2sMn' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *H2sMn;
        /** Optional element 'ns1:H2sMx' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *H2sMx;
        /** Optional element 'ns1:Acetylene' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Acetylene;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30540 */
#ifndef SOAP_TYPE_ns1__DrillingParameters
#define SOAP_TYPE_ns1__DrillingParameters (1033)
/* complex XML schema type 'ns1:DrillingParameters': */
struct ns1__DrillingParameters {
        /** Optional element 'ns1:Rop' of XML schema type 'ns1:RopStatistics' */
        struct ns1__RopStatistics *Rop;
        /** Optional element 'ns1:AverageWeightOnBit' of XML schema type 'ns1:WobStatistics' */
        struct ns1__WobStatistics *AverageWeightOnBit;
        /** Optional element 'ns1:AverageTorque' of XML schema type 'ns1:TorqueStatistics' */
        struct ns1__TorqueStatistics *AverageTorque;
        /** Optional element 'ns1:AverageTorqueCurrent' of XML schema type 'ns1:TorqueCurrentStatistics' */
        struct ns1__TorqueCurrentStatistics *AverageTorqueCurrent;
        /** Optional element 'ns1:AverageTurnRate' of XML schema type 'ns1:RpmStatistics' */
        struct ns1__RpmStatistics *AverageTurnRate;
        /** Optional element 'ns1:AverageMudDensity' of XML schema type 'ns1:MudDensityStatistics' */
        struct ns1__MudDensityStatistics *AverageMudDensity;
        /** Optional element 'ns1:AverageEcdAtTd' of XML schema type 'ns1:EcdStatistics' */
        struct ns1__EcdStatistics *AverageEcdAtTd;
        /** Optional element 'ns1:AverageDrillingCoefficient' of XML schema type 'ns1:DxcStatistics' */
        struct ns1__DxcStatistics *AverageDrillingCoefficient;
};
#endif

/* testh.h:30588 */
#ifndef SOAP_TYPE_ns1__DxcStatistics
#define SOAP_TYPE_ns1__DxcStatistics (1048)
/* complex XML schema type 'ns1:DxcStatistics': */
struct ns1__DxcStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30582 */
#ifndef SOAP_TYPE_ns1__EcdStatistics
#define SOAP_TYPE_ns1__EcdStatistics (1046)
/* complex XML schema type 'ns1:EcdStatistics': */
struct ns1__EcdStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30663 */
#ifndef SOAP_TYPE_ns1__GasInMud
#define SOAP_TYPE_ns1__GasInMud (1050)
/* complex XML schema type 'ns1:GasInMud': */
struct ns1__GasInMud {
        /** Optional element 'ns1:Average' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Average;
        /** Optional element 'ns1:Maximum' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Maximum;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30694 */
#ifndef SOAP_TYPE_ns1__GasPeak
#define SOAP_TYPE_ns1__GasPeak (1051)
/* complex XML schema type 'ns1:GasPeak': */
struct ns1__GasPeak {
        /** Required nillable (xsi:nil when NULL) element 'ns1:PeakType' of XML schema type 'ns1:GasPeakType' */
        enum ns1__GasPeakType PeakType;
        /** Optional element 'ns1:MdPeak' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MdPeak;
        /** Optional element 'ns1:AverageGas' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *AverageGas;
        /** Optional element 'ns1:PeakGas' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PeakGas;
        /** Optional element 'ns1:BackgroundGas' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *BackgroundGas;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30576 */
#ifndef SOAP_TYPE_ns1__MudDensityStatistics
#define SOAP_TYPE_ns1__MudDensityStatistics (1044)
/* complex XML schema type 'ns1:MudDensityStatistics': */
struct ns1__MudDensityStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30772 */
#ifndef SOAP_TYPE_ns1__MudGas
#define SOAP_TYPE_ns1__MudGas (1052)
/* complex XML schema type 'ns1:MudGas': */
struct ns1__MudGas {
        /** Optional element 'ns1:GasInMud' of XML schema type 'ns1:GasInMud' */
        struct ns1__GasInMud *GasInMud;
        /** Sequence of elements 'ns1:GasPeak' of XML schema type 'ns1:GasPeak' stored in dynamic array GasPeak of length __sizeGasPeak */
        int __sizeGasPeak;
        struct ns1__GasPeak *GasPeak;
};
#endif

/* testh.h:30802 */
#ifndef SOAP_TYPE_ns1__MudLogParameter
#define SOAP_TYPE_ns1__MudLogParameter (1055)
/* complex XML schema type 'ns1:MudLogParameter': */
struct ns1__MudLogParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__MudLogParameter when non-NULL */
        struct ns1__MudLogConcentrationParameter *ns1__MudLogConcentrationParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__MudLogParameter when non-NULL */
        struct ns1__MudLogForceParameter *ns1__MudLogForceParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__MudLogParameter when non-NULL */
        struct ns1__MudLogPressureGradientParameter *ns1__MudLogPressureGradientParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__MudLogParameter when non-NULL */
        struct ns1__MudLogPressureParameter *ns1__MudLogPressureParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__MudLogParameter when non-NULL */
        struct ns1__MudLogStringParameter *ns1__MudLogStringParameter;
};
#endif

/* testh.h:30546 */
#ifndef SOAP_TYPE_ns1__RopStatistics
#define SOAP_TYPE_ns1__RopStatistics (1034)
/* complex XML schema type 'ns1:RopStatistics': */
struct ns1__RopStatistics {
        /** Optional element 'ns1:Average' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *Average;
        /** Optional element 'ns1:Minimum' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *Minimum;
        /** Optional element 'ns1:Maximum' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *Maximum;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30570 */
#ifndef SOAP_TYPE_ns1__RpmStatistics
#define SOAP_TYPE_ns1__RpmStatistics (1042)
/* complex XML schema type 'ns1:RpmStatistics': */
struct ns1__RpmStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30564 */
#ifndef SOAP_TYPE_ns1__TorqueCurrentStatistics
#define SOAP_TYPE_ns1__TorqueCurrentStatistics (1040)
/* complex XML schema type 'ns1:TorqueCurrentStatistics': */
struct ns1__TorqueCurrentStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:ElectricCurrentMeasure' */
        struct ns2__ElectricCurrentMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30558 */
#ifndef SOAP_TYPE_ns1__TorqueStatistics
#define SOAP_TYPE_ns1__TorqueStatistics (1038)
/* complex XML schema type 'ns1:TorqueStatistics': */
struct ns1__TorqueStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:30552 */
#ifndef SOAP_TYPE_ns1__WobStatistics
#define SOAP_TYPE_ns1__WobStatistics (1036)
/* complex XML schema type 'ns1:WobStatistics': */
struct ns1__WobStatistics {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Average' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *Average;
        /** Optional element 'ns1:Channel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Channel;
};
#endif

/* testh.h:31010 */
#ifndef SOAP_TYPE_ns1__CuttingsIntervalLithology
#define SOAP_TYPE_ns1__CuttingsIntervalLithology (1070)
/* complex XML schema type 'ns1:CuttingsIntervalLithology': */
struct ns1__CuttingsIntervalLithology {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Kind' of XML schema type 'ns2:LithologyKindExt' */
        char *Kind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LithPc' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *LithPc;
        /** Optional element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns1:CodeLith' of XML schema type 'ns2:String64' */
        char *CodeLith;
        /** Optional element 'ns1:Color' of XML schema type 'ns2:String64' */
        char *Color;
        /** Optional element 'ns1:Texture' of XML schema type 'ns2:String64' */
        char *Texture;
        /** Optional element 'ns1:Hardness' of XML schema type 'ns2:String64' */
        char *Hardness;
        /** Optional element 'ns1:Compaction' of XML schema type 'ns2:String64' */
        char *Compaction;
        /** Optional element 'ns1:SizeGrain' of XML schema type 'ns2:String64' */
        char *SizeGrain;
        /** Optional element 'ns1:Roundness' of XML schema type 'ns2:String64' */
        char *Roundness;
        /** Optional element 'ns1:Sphericity' of XML schema type 'ns2:String64' */
        char *Sphericity;
        /** Optional element 'ns1:Sorting' of XML schema type 'ns2:String64' */
        char *Sorting;
        /** Optional element 'ns1:MatrixCement' of XML schema type 'ns2:MatrixCementKind' */
        enum ns2__MatrixCementKind *MatrixCement;
        /** Optional element 'ns1:PorosityVisible' of XML schema type 'ns2:String64' */
        char *PorosityVisible;
        /** Optional element 'ns1:PorosityFabric' of XML schema type 'ns2:String64' */
        char *PorosityFabric;
        /** Optional element 'ns1:Permeability' of XML schema type 'ns2:String64' */
        char *Permeability;
        /** Sequence of elements 'ns1:Shows' of XML schema type 'ns1:CuttingsIntervalShow' stored in dynamic array Shows of length __sizeShows */
        int __sizeShows;
        struct ns1__CuttingsIntervalShow *Shows;
        /** Sequence of elements 'ns1:Qualifier' of XML schema type 'ns1:LithologyQualifier' stored in dynamic array Qualifier of length __sizeQualifier */
        int __sizeQualifier;
        struct ns1__LithologyQualifier *Qualifier;
        /** Optional attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:31144 */
#ifndef SOAP_TYPE_ns1__CuttingsIntervalShow
#define SOAP_TYPE_ns1__CuttingsIntervalShow (1072)
/* complex XML schema type 'ns1:CuttingsIntervalShow': */
struct ns1__CuttingsIntervalShow {
        /** Optional element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns1:ShowRating' of XML schema type 'ns1:ShowRating' */
        enum ns1__ShowRating *ShowRating;
        /** Optional element 'ns1:StainColor' of XML schema type 'ns2:String64' */
        char *StainColor;
        /** Optional element 'ns1:StainDistr' of XML schema type 'ns2:String64' */
        char *StainDistr;
        /** Optional element 'ns1:StainPc' of XML schema type 'ns2:AreaPerAreaMeasure' */
        struct ns2__AreaPerAreaMeasure *StainPc;
        /** Optional element 'ns1:CutSpeed' of XML schema type 'ns1:ShowSpeed' */
        enum ns1__ShowSpeed *CutSpeed;
        /** Optional element 'ns1:CutColor' of XML schema type 'ns2:String64' */
        char *CutColor;
        /** Optional element 'ns1:CutStrength' of XML schema type 'ns2:String64' */
        char *CutStrength;
        /** Optional element 'ns1:CutForm' of XML schema type 'ns1:ShowLevel' */
        enum ns1__ShowLevel *CutForm;
        /** Optional element 'ns1:CutLevel' of XML schema type 'ns2:String64' */
        char *CutLevel;
        /** Optional element 'ns1:CutFlorForm' of XML schema type 'ns1:ShowLevel' */
        enum ns1__ShowLevel *CutFlorForm;
        /** Optional element 'ns1:CutFlorColor' of XML schema type 'ns2:String64' */
        char *CutFlorColor;
        /** Optional element 'ns1:CutFlorStrength' of XML schema type 'ns2:String64' */
        char *CutFlorStrength;
        /** Optional element 'ns1:CutFlorSpeed' of XML schema type 'ns1:ShowSpeed' */
        enum ns1__ShowSpeed *CutFlorSpeed;
        /** Optional element 'ns1:CutFlorLevel' of XML schema type 'ns1:ShowFluorescence' */
        enum ns1__ShowFluorescence *CutFlorLevel;
        /** Optional element 'ns1:NatFlorColor' of XML schema type 'ns2:String64' */
        char *NatFlorColor;
        /** Optional element 'ns1:NatFlorPc' of XML schema type 'ns2:AreaPerAreaMeasure' */
        struct ns2__AreaPerAreaMeasure *NatFlorPc;
        /** Optional element 'ns1:NatFlorLevel' of XML schema type 'ns1:ShowFluorescence' */
        enum ns1__ShowFluorescence *NatFlorLevel;
        /** Optional element 'ns1:NatFlorDesc' of XML schema type 'ns2:String64' */
        char *NatFlorDesc;
        /** Optional element 'ns1:ResidueColor' of XML schema type 'ns2:String64' */
        char *ResidueColor;
        /** Optional element 'ns1:ImpregnatedLitho' of XML schema type 'ns2:String64' */
        char *ImpregnatedLitho;
        /** Optional element 'ns1:Odor' of XML schema type 'ns2:String64' */
        char *Odor;
        /** Optional element 'ns1:CuttingFluid' of XML schema type 'ns2:String64' */
        char *CuttingFluid;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:31332 */
#ifndef SOAP_TYPE_ns1__InterpretedIntervalLithology
#define SOAP_TYPE_ns1__InterpretedIntervalLithology (1082)
/* complex XML schema type 'ns1:InterpretedIntervalLithology': */
struct ns1__InterpretedIntervalLithology {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Kind' of XML schema type 'ns2:LithologyKindExt' */
        char *Kind;
        /** Optional element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns1:CodeLith' of XML schema type 'ns2:String64' */
        char *CodeLith;
        /** Optional element 'ns1:Color' of XML schema type 'ns2:String64' */
        char *Color;
        /** Optional element 'ns1:Texture' of XML schema type 'ns2:String64' */
        char *Texture;
        /** Optional element 'ns1:Hardness' of XML schema type 'ns2:String64' */
        char *Hardness;
        /** Optional element 'ns1:Compaction' of XML schema type 'ns2:String64' */
        char *Compaction;
        /** Optional element 'ns1:SizeGrain' of XML schema type 'ns2:String64' */
        char *SizeGrain;
        /** Optional element 'ns1:Roundness' of XML schema type 'ns2:String64' */
        char *Roundness;
        /** Optional element 'ns1:Sorting' of XML schema type 'ns2:String64' */
        char *Sorting;
        /** Optional element 'ns1:Sphericity' of XML schema type 'ns2:String64' */
        char *Sphericity;
        /** Optional element 'ns1:MatrixCement' of XML schema type 'ns2:MatrixCementKind' */
        enum ns2__MatrixCementKind *MatrixCement;
        /** Optional element 'ns1:PorosityVisible' of XML schema type 'ns2:String64' */
        char *PorosityVisible;
        /** Optional element 'ns1:PorosityFabric' of XML schema type 'ns2:String64' */
        char *PorosityFabric;
        /** Optional element 'ns1:Permeability' of XML schema type 'ns2:String64' */
        char *Permeability;
        /** Sequence of elements 'ns1:Qualifier' of XML schema type 'ns1:LithologyQualifier' stored in dynamic array Qualifier of length __sizeQualifier */
        int __sizeQualifier;
        struct ns1__LithologyQualifier *Qualifier;
        /** Optional attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:31148 */
#ifndef SOAP_TYPE_ns1__LithologyQualifier
#define SOAP_TYPE_ns1__LithologyQualifier (1074)
/* complex XML schema type 'ns1:LithologyQualifier': */
struct ns1__LithologyQualifier {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Kind' of XML schema type 'ns2:LithologyQualifierKindExt' */
        char *Kind;
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:Abundance' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Abundance;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:31529 */
#ifndef SOAP_TYPE_ns1__SourceTrajectoryStation
#define SOAP_TYPE_ns1__SourceTrajectoryStation (1083)
/* complex XML schema type 'ns1:SourceTrajectoryStation': */
struct ns1__SourceTrajectoryStation {
        /** Required nillable (xsi:nil when NULL) element 'ns1:StationReference' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *StationReference;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
};
#endif

/* testh.h:31554 */
#ifndef SOAP_TYPE_ns1__StnTrajCorUsed
#define SOAP_TYPE_ns1__StnTrajCorUsed (1084)
/* complex XML schema type 'ns1:StnTrajCorUsed': */
struct ns1__StnTrajCorUsed {
        /** Optional element 'ns1:GravAxialAccelCor' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravAxialAccelCor;
        /** Optional element 'ns1:GravTran1AccelCor' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTran1AccelCor;
        /** Optional element 'ns1:GravTran2AccelCor' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTran2AccelCor;
        /** Optional element 'ns1:MagAxialDrlstrCor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagAxialDrlstrCor;
        /** Optional element 'ns1:MagTran1DrlstrCor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran1DrlstrCor;
        /** Optional element 'ns1:MagTran2DrlstrCor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran2DrlstrCor;
        /** Optional element 'ns1:MagTran1MSACor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran1MSACor;
        /** Optional element 'ns1:MagTran2MSACor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran2MSACor;
        /** Optional element 'ns1:MagAxialMSACor' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagAxialMSACor;
        /** Optional element 'ns1:SagIncCor' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *SagIncCor;
        /** Optional element 'ns1:SagAziCor' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *SagAziCor;
        /** Optional element 'ns1:StnMagDeclUsed' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *StnMagDeclUsed;
        /** Optional element 'ns1:StnGridConUsed' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *StnGridConUsed;
        /** Optional element 'ns1:StnGridScaleFactorUsed' of XML schema type 'ns2:LengthPerLengthMeasure' */
        struct ns2__LengthPerLengthMeasure *StnGridScaleFactorUsed;
        /** Optional element 'ns1:DirSensorOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DirSensorOffset;
};
#endif

/* testh.h:31663 */
#ifndef SOAP_TYPE_ns1__StnTrajMatrixCov
#define SOAP_TYPE_ns1__StnTrajMatrixCov (1089)
/* complex XML schema type 'ns1:StnTrajMatrixCov': */
struct ns1__StnTrajMatrixCov {
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceNN' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceNN;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceNE' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceNE;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceNVert' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceNVert;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceEE' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceEE;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceEVert' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceEVert;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VarianceVertVert' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *VarianceVertVert;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BiasN' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *BiasN;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BiasE' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *BiasE;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BiasVert' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *BiasVert;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sigma' of XML schema type 'xsd:double' */
        double Sigma;
};
#endif

/* testh.h:31740 */
#ifndef SOAP_TYPE_ns1__StnTrajRawData
#define SOAP_TYPE_ns1__StnTrajRawData (1090)
/* complex XML schema type 'ns1:StnTrajRawData': */
struct ns1__StnTrajRawData {
        /** Optional element 'ns1:GravAxialRaw' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravAxialRaw;
        /** Optional element 'ns1:GravTran1Raw' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTran1Raw;
        /** Optional element 'ns1:GravTran2Raw' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTran2Raw;
        /** Optional element 'ns1:MagAxialRaw' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagAxialRaw;
        /** Optional element 'ns1:MagTran1Raw' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran1Raw;
        /** Optional element 'ns1:MagTran2Raw' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTran2Raw;
};
#endif

/* testh.h:31793 */
#ifndef SOAP_TYPE_ns1__StnTrajValid
#define SOAP_TYPE_ns1__StnTrajValid (1091)
/* complex XML schema type 'ns1:StnTrajValid': */
struct ns1__StnTrajValid {
        /** Optional element 'ns1:MagTotalFieldCalc' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTotalFieldCalc;
        /** Optional element 'ns1:MagDipAngleCalc' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *MagDipAngleCalc;
        /** Optional element 'ns1:GravTotalFieldCalc' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTotalFieldCalc;
};
#endif

/* testh.h:28738 */
#ifndef SOAP_TYPE_ns1__TrajectoryOSDUIntegration
#define SOAP_TYPE_ns1__TrajectoryOSDUIntegration (1007)
/* complex XML schema type 'ns1:TrajectoryOSDUIntegration': */
struct ns1__TrajectoryOSDUIntegration {
        /** Optional element 'ns1:ActiveIndicator' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ActiveIndicator;
        /** Sequence of elements 'ns1:AppliedOperation' of XML schema type 'ns2:String256' stored in dynamic array AppliedOperation of length __sizeAppliedOperation */
        int __sizeAppliedOperation;
        char **AppliedOperation;
        /** Optional element 'ns1:IntermediaryServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IntermediaryServiceCompany;
        /** Optional element 'ns1:SurveyToolType' of XML schema type 'ns2:String256' */
        char *SurveyToolType;
        /** Optional element 'ns1:TrajectoryVersion' of XML schema type 'ns2:String64' */
        char *TrajectoryVersion;
};
#endif

/* testh.h:31877 */
#ifndef SOAP_TYPE_ns1__TrajectoryReport
#define SOAP_TYPE_ns1__TrajectoryReport (1093)
/* complex XML schema type 'ns1:TrajectoryReport': */
struct ns1__TrajectoryReport {
        /** Optional element 'ns1:AcquisitionRemark' of XML schema type 'ns2:String2000' */
        char *AcquisitionRemark;
        /** Optional element 'ns1:MagDeclUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *MagDeclUsed;
        /** Optional element 'ns1:MdMaxExtrapolated' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxExtrapolated;
        /** Optional element 'ns1:MdMaxMeasured' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxMeasured;
        /** Optional element 'ns1:MdTieOn' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTieOn;
        /** Optional element 'ns1:NominalCalcAlgorithm' of XML schema type 'ns1:TrajStnCalcAlgorithmExt' */
        char *NominalCalcAlgorithm;
        /** Optional element 'ns1:NominalTypeSurveyTool' of XML schema type 'ns1:TypeSurveyToolExt' */
        char *NominalTypeSurveyTool;
        /** Optional element 'ns1:NominalTypeTrajStation' of XML schema type 'ns1:TrajStationTypeExt' */
        char *NominalTypeTrajStation;
        /** Optional element 'ns1:TrajectoryOSDUIntegration' of XML schema type 'ns1:TrajectoryOSDUIntegration' */
        struct ns1__TrajectoryOSDUIntegration *TrajectoryOSDUIntegration;
        /** Optional element 'ns1:GridConUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *GridConUsed;
        /** Optional element 'ns1:GridScaleFactorUsed' of XML schema type 'ns2:LengthPerLengthMeasureExt' */
        struct ns2__LengthPerLengthMeasureExt *GridScaleFactorUsed;
        /** Optional element 'ns1:AziVertSect' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *AziVertSect;
        /** Optional element 'ns1:DispNsVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispNsVertSectOrig;
        /** Optional element 'ns1:DispEwVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispEwVertSectOrig;
        /** Optional element 'ns1:AziRef' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind *AziRef;
        /** Sequence of elements 'ns1:TrajectoryStation' of XML schema type 'ns1:TrajectoryStation' stored in dynamic array TrajectoryStation of length __sizeTrajectoryStation */
        int __sizeTrajectoryStation;
        struct ns1__TrajectoryStation *TrajectoryStation;
};
#endif

/* testh.h:31997 */
#ifndef SOAP_TYPE_ns1__TrajectoryStationOSDUIntegration
#define SOAP_TYPE_ns1__TrajectoryStationOSDUIntegration (1096)
/* complex XML schema type 'ns1:TrajectoryStationOSDUIntegration': */
struct ns1__TrajectoryStationOSDUIntegration {
        /** Optional element 'ns1:Easting' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Easting;
        /** Optional element 'ns1:Northing' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Northing;
        /** Optional element 'ns1:RadiusOfUncertainty' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RadiusOfUncertainty;
};
#endif

/* testh.h:32032 */
#ifndef SOAP_TYPE_ns1__TargetSection
#define SOAP_TYPE_ns1__TargetSection (1097)
/* complex XML schema type 'ns1:TargetSection': */
struct ns1__TargetSection {
        /** Required nillable (xsi:nil when NULL) element 'ns1:SectNumber' of XML schema type 'xsd:long' */
        LONG64 SectNumber;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeTargetSectionScope' of XML schema type 'ns1:TargetSectionScope' */
        enum ns1__TargetSectionScope TypeTargetSectionScope;
        /** Optional element 'ns1:LenRadius' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenRadius;
        /** Optional element 'ns1:AngleArc' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AngleArc;
        /** Optional element 'ns1:ThickAbove' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ThickAbove;
        /** Optional element 'ns1:ThickBelow' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ThickBelow;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Location' of XML schema type 'ns2:Abstract3dPosition' stored in dynamic array Location of length __sizeLocation */
        int __sizeLocation;
        struct ns2__Abstract3dPosition *Location;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32099 */
#ifndef SOAP_TYPE_ns1__AbstractOperatingRange
#define SOAP_TYPE_ns1__AbstractOperatingRange (1100)
/* complex XML schema type 'ns1:AbstractOperatingRange': */
struct ns1__AbstractOperatingRange {
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EndInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean EndInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:StartInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean StartInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Start' of XML schema type 'xsd:double' */
        double Start;
        /** Required nillable (xsi:nil when NULL) element 'ns1:End' of XML schema type 'xsd:double' */
        double End;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractOperatingRange when non-NULL */
        struct ns1__CustomOperatingRange *ns1__CustomOperatingRange;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractOperatingRange when non-NULL */
        struct ns1__PlaneAngleOperatingRange *ns1__PlaneAngleOperatingRange;
};
#endif

/* testh.h:32134 */
#ifndef SOAP_TYPE_ns1__Authorization
#define SOAP_TYPE_ns1__Authorization (1105)
/* complex XML schema type 'ns1:Authorization': */
struct ns1__Authorization {
        /** Required nillable (xsi:nil when NULL) element 'ns1:ApprovalAuthority' of XML schema type 'ns2:String64' */
        char *ApprovalAuthority;
        /** Optional element 'ns1:ApprovedBy' of XML schema type 'ns2:String64' */
        char *ApprovedBy;
        /** Optional element 'ns1:ApprovedOn' of XML schema type 'ns2:TimeStamp' */
        time_t *ApprovedOn;
        /** Optional element 'ns1:CheckedBy' of XML schema type 'ns2:String64' */
        char *CheckedBy;
        /** Optional element 'ns1:CheckedOn' of XML schema type 'ns2:TimeStamp' */
        time_t *CheckedOn;
        /** Optional element 'ns1:RevisionComment' of XML schema type 'ns2:String2000' */
        char *RevisionComment;
        /** Optional element 'ns1:RevisionDate' of XML schema type 'ns2:TimeStamp' */
        time_t *RevisionDate;
        /** Optional element 'ns1:Status' of XML schema type 'ns1:AuthorizationStatus' */
        enum ns1__AuthorizationStatus *Status;
};
#endif

/* testh.h:32166 */
#ifndef SOAP_TYPE_ns1__AzimuthFormula
#define SOAP_TYPE_ns1__AzimuthFormula (1107)
/* complex XML schema type 'ns1:AzimuthFormula': */
struct ns1__AzimuthFormula {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Formula' of XML schema type 'ns2:String2000' */
        char *Formula;
        /** Sequence of elements 'ns1:Parameter' of XML schema type 'ns1:Parameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns1__Parameter *Parameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AzimuthFormula when non-NULL */
        struct ns1__ContinuousAzimuthFormula *ns1__ContinuousAzimuthFormula;
};
#endif

/* testh.h:32187 */
#ifndef SOAP_TYPE_ns1__ContinuousGyro
#define SOAP_TYPE_ns1__ContinuousGyro (1112)
/* complex XML schema type 'ns1:ContinuousGyro': */
struct ns1__ContinuousGyro {
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisCombination' of XML schema type 'ns1:GyroAxisCombination' */
        enum ns1__GyroAxisCombination AxisCombination;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:GyroReinitializationDistance' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *GyroReinitializationDistance;
        /** Optional element 'ns1:NoiseReductionFactor' of XML schema type 'xsd:double' */
        double *NoiseReductionFactor;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Range' of XML schema type 'ns1:PlaneAngleOperatingRange' */
        struct ns1__PlaneAngleOperatingRange *Range;
        /** Optional element 'ns1:Speed' of XML schema type 'ns2:LengthPerTimeMeasureExt' */
        struct ns2__LengthPerTimeMeasureExt *Speed;
        /** Optional element 'ns1:Initialization' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *Initialization;
};
#endif

/* testh.h:32216 */
#ifndef SOAP_TYPE_ns1__ErrorTermValue
#define SOAP_TYPE_ns1__ErrorTermValue (1116)
/* complex XML schema type 'ns1:ErrorTermValue': */
struct ns1__ErrorTermValue {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Magnitude' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *Magnitude;
        /** Optional element 'ns1:MeanValue' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *MeanValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ErrorTerm' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ErrorTerm;
};
#endif

/* testh.h:32249 */
#ifndef SOAP_TYPE_ns1__GyroToolConfiguration
#define SOAP_TYPE_ns1__GyroToolConfiguration (1117)
/* complex XML schema type 'ns1:GyroToolConfiguration': */
struct ns1__GyroToolConfiguration {
        /** Optional element 'ns1:AccelerometerAxisCombination' of XML schema type 'ns1:AccelerometerAxisCombination' */
        enum ns1__AccelerometerAxisCombination *AccelerometerAxisCombination;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ExternalReference' of XML schema type 'xsd:boolean' */
        enum xsd__boolean ExternalReference;
        /** Sequence of elements 'ns1:ContinuousGyro' of XML schema type 'ns1:ContinuousGyro' stored in dynamic array ContinuousGyro of length __sizeContinuousGyro */
        int __sizeContinuousGyro;
        struct ns1__ContinuousGyro *ContinuousGyro;
        /** Optional element 'ns1:XyAccelerometer' of XML schema type 'ns1:XyAccelerometer' */
        struct ns1__XyAccelerometer *XyAccelerometer;
        /** Sequence of elements 'ns1:StationaryGyro' of XML schema type 'ns1:StationaryGyro' stored in dynamic array StationaryGyro of length __sizeStationaryGyro */
        int __sizeStationaryGyro;
        struct ns1__StationaryGyro *StationaryGyro;
};
#endif

/* testh.h:32280 */
#ifndef SOAP_TYPE_ns1__OperatingConstraints
#define SOAP_TYPE_ns1__OperatingConstraints (1124)
/* complex XML schema type 'ns1:OperatingConstraints': */
struct ns1__OperatingConstraints {
        /** Sequence of elements 'ns1:CustomLimits' of XML schema type 'ns2:GenericMeasure' stored in dynamic array CustomLimits of length __sizeCustomLimits */
        int __sizeCustomLimits;
        struct ns2__GenericMeasure *CustomLimits;
        /** Optional element 'ns1:HorizontalEastWestMaxValue' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *HorizontalEastWestMaxValue;
        /** Sequence of elements 'ns1:MdRange' of XML schema type 'ns2:MdInterval' stored in dynamic array MdRange of length __sizeMdRange */
        int __sizeMdRange;
        struct ns2__MdInterval *MdRange;
        /** Sequence of elements 'ns1:TvdRange' of XML schema type 'ns2:AbstractTvdInterval' stored in dynamic array TvdRange of length __sizeTvdRange */
        int __sizeTvdRange;
        struct ns2__AbstractTvdInterval *TvdRange;
        /** Optional element 'ns1:PressureLimit' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *PressureLimit;
        /** Optional element 'ns1:ThermodynamicTemperatureLimit' of XML schema type 'ns2:ThermodynamicTemperatureMeasureExt' */
        struct ns2__ThermodynamicTemperatureMeasureExt *ThermodynamicTemperatureLimit;
        /** Sequence of elements 'ns1:CustomRange' of XML schema type 'ns1:CustomOperatingRange' stored in dynamic array CustomRange of length __sizeCustomRange */
        int __sizeCustomRange;
        struct ns1__CustomOperatingRange *CustomRange;
        /** Sequence of elements 'ns1:LatitudeRange' of XML schema type 'ns1:PlaneAngleOperatingRange' stored in dynamic array LatitudeRange of length __sizeLatitudeRange */
        int __sizeLatitudeRange;
        struct ns1__PlaneAngleOperatingRange *LatitudeRange;
        /** Sequence of elements 'ns1:InclinationRange' of XML schema type 'ns1:PlaneAngleOperatingRange' stored in dynamic array InclinationRange of length __sizeInclinationRange */
        int __sizeInclinationRange;
        struct ns1__PlaneAngleOperatingRange *InclinationRange;
        /** Sequence of elements 'ns1:AzimuthRange' of XML schema type 'ns1:AzimuthRange' stored in dynamic array AzimuthRange of length __sizeAzimuthRange */
        int __sizeAzimuthRange;
        struct ns1__AzimuthRange *AzimuthRange;
};
#endif

/* testh.h:32172 */
#ifndef SOAP_TYPE_ns1__Parameter
#define SOAP_TYPE_ns1__Parameter (1108)
/* complex XML schema type 'ns1:Parameter': */
struct ns1__Parameter {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Formula' of XML schema type 'ns2:String2000' */
        char *Formula;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Title' of XML schema type 'ns2:String64' */
        char *Title;
};
#endif

/* testh.h:32267 */
#ifndef SOAP_TYPE_ns1__StationaryGyro
#define SOAP_TYPE_ns1__StationaryGyro (1122)
/* complex XML schema type 'ns1:StationaryGyro': */
struct ns1__StationaryGyro {
        /** Required nillable (xsi:nil when NULL) element 'ns1:AxisCombination' of XML schema type 'ns1:GyroAxisCombination' */
        enum ns1__GyroAxisCombination AxisCombination;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Range' of XML schema type 'ns1:PlaneAngleOperatingRange' */
        struct ns1__PlaneAngleOperatingRange *Range;
};
#endif

/* testh.h:32263 */
#ifndef SOAP_TYPE_ns1__XyAccelerometer
#define SOAP_TYPE_ns1__XyAccelerometer (1120)
/* complex XML schema type 'ns1:XyAccelerometer': */
struct ns1__XyAccelerometer {
        /** Required nillable (xsi:nil when NULL) element 'ns1:CantAngle' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *CantAngle;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Switching' of XML schema type 'xsd:boolean' */
        enum xsd__boolean Switching;
};
#endif

/* testh.h:32406 */
#ifndef SOAP_TYPE_ns1__SurveySection
#define SOAP_TYPE_ns1__SurveySection (1128)
/* complex XML schema type 'ns1:SurveySection': */
struct ns1__SurveySection {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Sequence' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 Sequence;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:SurveyCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *SurveyCompany;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NameTool' of XML schema type 'ns2:String64' */
        char *NameTool;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeTool' of XML schema type 'ns2:String64' */
        char *TypeTool;
        /** Optional element 'ns1:ModelError' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ModelError;
        /** Optional element 'ns1:Overwrite' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Overwrite;
        /** Optional element 'ns1:FrequencyMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FrequencyMx;
        /** Optional element 'ns1:ItemState' of XML schema type 'ns2:ExistenceKind' */
        enum ns2__ExistenceKind *ItemState;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32499 */
#ifndef SOAP_TYPE_ns1__ISO13503_USCORE2CrushTestData
#define SOAP_TYPE_ns1__ISO13503_USCORE2CrushTestData (1130)
/* complex XML schema type 'ns1:ISO13503_2CrushTestData': */
struct ns1__ISO13503_USCORE2CrushTestData {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Fines' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *Fines;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Stress' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Stress;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32534 */
#ifndef SOAP_TYPE_ns1__ISO13503_USCORE2SieveAnalysisData
#define SOAP_TYPE_ns1__ISO13503_USCORE2SieveAnalysisData (1131)
/* complex XML schema type 'ns1:ISO13503_2SieveAnalysisData': */
struct ns1__ISO13503_USCORE2SieveAnalysisData {
        /** Required nillable (xsi:nil when NULL) element 'ns1:PercentRetained' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *PercentRetained;
        /** Required nillable (xsi:nil when NULL) element 'ns1:SieveNumber' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 SieveNumber;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32569 */
#ifndef SOAP_TYPE_ns1__StimEvent
#define SOAP_TYPE_ns1__StimEvent (1132)
/* complex XML schema type 'ns1:StimEvent': */
struct ns1__StimEvent {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Number' of XML schema type 'ns2:PositiveLong' */
        LONG64 Number;
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Optional element 'ns1:NumStep' of XML schema type 'ns2:PositiveLong' */
        LONG64 *NumStep;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32624 */
#ifndef SOAP_TYPE_ns1__StimFetTest
#define SOAP_TYPE_ns1__StimFetTest (1133)
/* complex XML schema type 'ns1:StimFetTest': */
struct ns1__StimFetTest {
        /** Sequence of elements 'ns1:AnalysisMethod' of XML schema type 'ns1:StimFetTestAnalysisMethod' stored in dynamic array AnalysisMethod of length __sizeAnalysisMethod */
        int __sizeAnalysisMethod;
        enum ns1__StimFetTestAnalysisMethod *AnalysisMethod;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:EndPdlDuration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *EndPdlDuration;
        /** Optional element 'ns1:FluidEfficiency' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *FluidEfficiency;
        /** Optional element 'ns1:FractureCloseDuration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *FractureCloseDuration;
        /** Optional element 'ns1:FractureClosePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FractureClosePres;
        /** Optional element 'ns1:FractureExtensionPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FractureExtensionPres;
        /** Optional element 'ns1:FractureGradient' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradient;
        /** Optional element 'ns1:FractureLength' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FractureLength;
        /** Optional element 'ns1:FractureWidth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FractureWidth;
        /** Optional element 'ns1:NetPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *NetPres;
        /** Optional element 'ns1:PdlCoef' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *PdlCoef;
        /** Optional element 'ns1:PorePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PorePres;
        /** Optional element 'ns1:PseudoRadialPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PseudoRadialPres;
        /** Optional element 'ns1:ResidualPermeability' of XML schema type 'ns2:PermeabilityRockMeasure' */
        struct ns2__PermeabilityRockMeasure *ResidualPermeability;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32754 */
#ifndef SOAP_TYPE_ns1__StimFlowPath
#define SOAP_TYPE_ns1__StimFlowPath (1139)
/* complex XML schema type 'ns1:StimFlowPath': */
struct ns1__StimFlowPath {
        /** Optional element 'ns1:AvgPmaxPacPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPmaxPacPres;
        /** Optional element 'ns1:FrictionFactorOpenHole' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *FrictionFactorOpenHole;
        /** Optional element 'ns1:AvgPmaxWeaklinkPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPmaxWeaklinkPres;
        /** Optional element 'ns1:BreakDownPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *BreakDownPres;
        /** Optional element 'ns1:BridgePlugMD' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *BridgePlugMD;
        /** Optional element 'ns1:FractureGradient' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradient;
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:StimFlowPathType' */
        enum ns1__StimFlowPathType *Kind;
        /** Optional element 'ns1:MaxPmaxPacPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPmaxPacPres;
        /** Optional element 'ns1:MaxPmaxWeaklinkPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPmaxWeaklinkPres;
        /** Optional element 'ns1:PackerMD' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *PackerMD;
        /** Optional element 'ns1:FrictionFactorPipe' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *FrictionFactorPipe;
        /** Optional element 'ns1:TubingBottomMD' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *TubingBottomMD;
        /** Sequence of elements 'ns1:Tubular' of XML schema type 'ns1:StimTubular' stored in dynamic array Tubular of length __sizeTubular */
        int __sizeTubular;
        struct ns1__StimTubular *Tubular;
};
#endif

/* testh.h:32847 */
#ifndef SOAP_TYPE_ns1__StimFluid
#define SOAP_TYPE_ns1__StimFluid (1143)
/* complex XML schema type 'ns1:StimFluid': */
struct ns1__StimFluid {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:StimFluidKind' */
        enum ns1__StimFluidKind *Kind;
        /** Optional element 'ns1:Subtype' of XML schema type 'ns1:StimFluidSubtype' */
        enum ns1__StimFluidSubtype *Subtype;
        /** Optional element 'ns1:Purpose' of XML schema type 'ns2:String2000' */
        char *Purpose;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:Supplier' of XML schema type 'ns2:String2000' */
        char *Supplier;
        /** Optional element 'ns1:IsKillFluid' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsKillFluid;
        /** Optional element 'ns1:Volume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Volume;
        /** Optional element 'ns1:Density' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Density;
        /** Optional element 'ns1:FluidTemp' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *FluidTemp;
        /** Optional element 'ns1:GelStrength10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *GelStrength10Min;
        /** Optional element 'ns1:GelStrength10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *GelStrength10Sec;
        /** Optional element 'ns1:SpecificGravity' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *SpecificGravity;
        /** Optional element 'ns1:Viscosity' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *Viscosity;
        /** Optional element 'ns1:pH' of XML schema type 'ns2:UnitlessMeasure' */
        struct ns2__UnitlessMeasure *pH;
        /** Sequence of elements 'ns1:AdditiveConcentration' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array AdditiveConcentration of length __sizeAdditiveConcentration */
        int __sizeAdditiveConcentration;
        struct ns1__StimMaterialQuantity *AdditiveConcentration;
};
#endif

/* testh.h:32958 */
#ifndef SOAP_TYPE_ns1__StimISO13503_USCORE2Properties
#define SOAP_TYPE_ns1__StimISO13503_USCORE2Properties (1150)
/* complex XML schema type 'ns1:StimISO13503_2Properties': */
struct ns1__StimISO13503_USCORE2Properties {
        /** Optional element 'ns1:AbsoluteDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AbsoluteDensity;
        /** Optional element 'ns1:ClustersPercent' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *ClustersPercent;
        /** Optional element 'ns1:KValue' of XML schema type 'xsd:double' */
        double *KValue;
        /** Optional element 'ns1:MeanParticleDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MeanParticleDiameter;
        /** Optional element 'ns1:MedianParticleDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MedianParticleDiameter;
        /** Optional element 'ns1:SpecificGravity' of XML schema type 'xsd:double' */
        double *SpecificGravity;
        /** Optional element 'ns1:Roundness' of XML schema type 'xsd:double' */
        double *Roundness;
        /** Optional element 'ns1:AcidSolubility' of XML schema type 'ns2:MassPerMassMeasure' */
        struct ns2__MassPerMassMeasure *AcidSolubility;
        /** Optional element 'ns1:ApparentDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *ApparentDensity;
        /** Optional element 'ns1:BulkDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *BulkDensity;
        /** Optional element 'ns1:LossOnIgnition' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *LossOnIgnition;
        /** Optional element 'ns1:Sphericity' of XML schema type 'xsd:double' */
        double *Sphericity;
        /** Optional element 'ns1:Turbidity' of XML schema type 'xsd:double' */
        double *Turbidity;
        /** Sequence of elements 'ns1:CrushTestData' of XML schema type 'ns1:ISO13503_2CrushTestData' stored in dynamic array CrushTestData of length __sizeCrushTestData */
        int __sizeCrushTestData;
        struct ns1__ISO13503_USCORE2CrushTestData *CrushTestData;
        /** Sequence of elements 'ns1:SieveAnalysisData' of XML schema type 'ns1:ISO13503_2SieveAnalysisData' stored in dynamic array SieveAnalysisData of length __sizeSieveAnalysisData */
        int __sizeSieveAnalysisData;
        struct ns1__ISO13503_USCORE2SieveAnalysisData *SieveAnalysisData;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33068 */
#ifndef SOAP_TYPE_ns1__StimISO13503_USCORE5Point
#define SOAP_TYPE_ns1__StimISO13503_USCORE5Point (1153)
/* complex XML schema type 'ns1:StimISO13503_5Point': */
struct ns1__StimISO13503_USCORE5Point {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Conductivity' of XML schema type 'ns2:PermeabilityLengthMeasure' */
        struct ns2__PermeabilityLengthMeasure *Conductivity;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Temperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *Temperature;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Permeability' of XML schema type 'ns2:PermeabilityRockMeasure' */
        struct ns2__PermeabilityRockMeasure *Permeability;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Stress' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Stress;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33115 */
#ifndef SOAP_TYPE_ns1__StimJobDiagnosticSession
#define SOAP_TYPE_ns1__StimJobDiagnosticSession (1156)
/* complex XML schema type 'ns1:StimJobDiagnosticSession': */
struct ns1__StimJobDiagnosticSession {
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Optional element 'ns1:Number' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *Number;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:ChokeSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ChokeSize;
        /** Optional element 'ns1:DTimPumpOn' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPumpOn;
        /** Optional element 'ns1:DTimPumpOff' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPumpOff;
        /** Optional element 'ns1:PumpDuration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *PumpDuration;
        /** Optional element 'ns1:DTimWellShutin' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimWellShutin;
        /** Optional element 'ns1:DTimFractureClose' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimFractureClose;
        /** Optional element 'ns1:AvgBottomholeTreatmentPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgBottomholeTreatmentPres;
        /** Optional element 'ns1:AvgBottomholeTreatmentRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgBottomholeTreatmentRate;
        /** Optional element 'ns1:BaseFluidVol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *BaseFluidVol;
        /** Optional element 'ns1:BottomholeHydrostaticPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *BottomholeHydrostaticPres;
        /** Optional element 'ns1:BubblePointPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *BubblePointPres;
        /** Optional element 'ns1:FluidDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *FluidDensity;
        /** Optional element 'ns1:FractureClosePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FractureClosePres;
        /** Optional element 'ns1:FrictionPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FrictionPres;
        /** Optional element 'ns1:InitialShutinPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *InitialShutinPres;
        /** Optional element 'ns1:PorePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PorePres;
        /** Optional element 'ns1:WellboreVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *WellboreVolume;
        /** Optional element 'ns1:MdSurface' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdSurface;
        /** Optional element 'ns1:MdBottomhole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBottomhole;
        /** Optional element 'ns1:MdMidPerforation' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMidPerforation;
        /** Optional element 'ns1:TvdMidPerforation' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdMidPerforation;
        /** Optional element 'ns1:SurfaceTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *SurfaceTemperature;
        /** Optional element 'ns1:BottomholeTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *BottomholeTemperature;
        /** Optional element 'ns1:SurfaceFluidTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *SurfaceFluidTemperature;
        /** Optional element 'ns1:FluidCompressibility' of XML schema type 'ns2:IsothermalCompressibilityMeasure' */
        struct ns2__IsothermalCompressibilityMeasure *FluidCompressibility;
        /** Optional element 'ns1:ReservoirTotalCompressibility' of XML schema type 'ns2:IsothermalCompressibilityMeasure' */
        struct ns2__IsothermalCompressibilityMeasure *ReservoirTotalCompressibility;
        /** Optional element 'ns1:FluidNprimeFactor' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *FluidNprimeFactor;
        /** Optional element 'ns1:FluidKprimeFactor' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *FluidKprimeFactor;
        /** Optional element 'ns1:FluidSpecificHeat' of XML schema type 'ns2:SpecificHeatCapacityMeasure' */
        struct ns2__SpecificHeatCapacityMeasure *FluidSpecificHeat;
        /** Optional element 'ns1:FluidThermalConductivity' of XML schema type 'ns2:ThermalConductivityMeasure' */
        struct ns2__ThermalConductivityMeasure *FluidThermalConductivity;
        /** Optional element 'ns1:FluidThermalExpansionCoefficient' of XML schema type 'ns2:VolumetricThermalExpansionMeasure' */
        struct ns2__VolumetricThermalExpansionMeasure *FluidThermalExpansionCoefficient;
        /** Optional element 'ns1:FluidEfficiency' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *FluidEfficiency;
        /** Optional element 'ns1:FoamQuality' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *FoamQuality;
        /** Optional element 'ns1:PercentPad' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PercentPad;
        /** Optional element 'ns1:StageNumber' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *StageNumber;
        /** Optional element 'ns1:TemperatureCorrectionApplied' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TemperatureCorrectionApplied;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:FluidEfficiencyTest' of XML schema type 'ns1:StimFetTest' stored in dynamic array FluidEfficiencyTest of length __sizeFluidEfficiencyTest */
        int __sizeFluidEfficiencyTest;
        struct ns1__StimFetTest *FluidEfficiencyTest;
        /** Sequence of elements 'ns1:StepRateTest' of XML schema type 'ns1:StimStepTest' stored in dynamic array StepRateTest of length __sizeStepRateTest */
        int __sizeStepRateTest;
        struct ns1__StimStepTest *StepRateTest;
        /** Sequence of elements 'ns1:StepDownTest' of XML schema type 'ns1:StimStepDownTest' stored in dynamic array StepDownTest of length __sizeStepDownTest */
        int __sizeStepDownTest;
        struct ns1__StimStepDownTest *StepDownTest;
        /** Sequence of elements 'ns1:PumpFlowBackTest' of XML schema type 'ns1:StimPumpFlowBackTest' stored in dynamic array PumpFlowBackTest of length __sizePumpFlowBackTest */
        int __sizePumpFlowBackTest;
        struct ns1__StimPumpFlowBackTest *PumpFlowBackTest;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33418 */
#ifndef SOAP_TYPE_ns1__StimJobDiversion
#define SOAP_TYPE_ns1__StimJobDiversion (1173)
/* complex XML schema type 'ns1:StimJobDiversion': */
struct ns1__StimJobDiversion {
        /** Optional element 'ns1:Contractor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Contractor;
        /** Optional element 'ns1:Method' of XML schema type 'ns1:StimJobDiversionMethod' */
        enum ns1__StimJobDiversionMethod *Method;
        /** Optional element 'ns1:ToolDescription' of XML schema type 'ns2:String2000' */
        char *ToolDescription;
        /** Optional element 'ns1:ElementSpacing' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ElementSpacing;
};
#endif

/* testh.h:33459 */
#ifndef SOAP_TYPE_ns1__StimJobLogCatalog
#define SOAP_TYPE_ns1__StimJobLogCatalog (1175)
/* complex XML schema type 'ns1:StimJobLogCatalog': */
struct ns1__StimJobLogCatalog {
        /** Sequence of at least 1 elements 'ns1:JobLog' of XML schema type 'ns2:DataObjectReference' stored in dynamic array JobLog of length __sizeJobLog */
        int __sizeJobLog;
        struct ns2__DataObjectReference *JobLog;
};
#endif

/* testh.h:33480 */
#ifndef SOAP_TYPE_ns1__StimJobMaterialCatalog
#define SOAP_TYPE_ns1__StimJobMaterialCatalog (1176)
/* complex XML schema type 'ns1:StimJobMaterialCatalog': */
struct ns1__StimJobMaterialCatalog {
        /** Sequence of elements 'ns1:Additives' of XML schema type 'ns1:StimAdditive' stored in dynamic array Additives of length __sizeAdditives */
        int __sizeAdditives;
        struct ns1__StimAdditive *Additives;
        /** Sequence of elements 'ns1:ProppantAgents' of XML schema type 'ns1:StimProppantAgent' stored in dynamic array ProppantAgents of length __sizeProppantAgents */
        int __sizeProppantAgents;
        struct ns1__StimProppantAgent *ProppantAgents;
};
#endif

/* testh.h:33513 */
#ifndef SOAP_TYPE_ns1__StimJobStep
#define SOAP_TYPE_ns1__StimJobStep (1181)
/* complex XML schema type 'ns1:StimJobStep': */
struct ns1__StimJobStep {
        /** Optional element 'ns1:StepName' of XML schema type 'ns2:String2000' */
        char *StepName;
        /** Required nillable (xsi:nil when NULL) element 'ns1:StepNumber' of XML schema type 'ns2:PositiveLong' */
        LONG64 StepNumber;
        /** Optional element 'ns1:Kind' of XML schema type 'ns2:String2000' */
        char *Kind;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:AvgBaseFluidQuality' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *AvgBaseFluidQuality;
        /** Optional element 'ns1:AvgCO2BaseFluidQuality' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *AvgCO2BaseFluidQuality;
        /** Optional element 'ns1:AvgHydraulicPower' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *AvgHydraulicPower;
        /** Optional element 'ns1:AvgInternalPhaseFraction' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *AvgInternalPhaseFraction;
        /** Sequence of elements 'ns1:AvgMaterialUsedRate' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array AvgMaterialUsedRate of length __sizeAvgMaterialUsedRate */
        int __sizeAvgMaterialUsedRate;
        struct ns1__StimMaterialQuantity *AvgMaterialUsedRate;
        /** Sequence of elements 'ns1:AvgMaterialUseRateBottomhole' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array AvgMaterialUseRateBottomhole of length __sizeAvgMaterialUseRateBottomhole */
        int __sizeAvgMaterialUseRateBottomhole;
        struct ns1__StimMaterialQuantity *AvgMaterialUseRateBottomhole;
        /** Optional element 'ns1:AvgN2BaseFluidQuality' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *AvgN2BaseFluidQuality;
        /** Optional element 'ns1:AvgPresBottomhole' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresBottomhole;
        /** Optional element 'ns1:AvgPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresSurface;
        /** Optional element 'ns1:AvgPropConc' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgPropConc;
        /** Optional element 'ns1:AvgProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgProppantConcBottomhole;
        /** Optional element 'ns1:AvgProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgProppantConcSurface;
        /** Optional element 'ns1:AvgSlurryPropConc' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgSlurryPropConc;
        /** Optional element 'ns1:AvgSlurryRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgSlurryRate;
        /** Optional element 'ns1:AvgTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *AvgTemperature;
        /** Optional element 'ns1:AvgVolumeRateWellhead' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgVolumeRateWellhead;
        /** Optional element 'ns1:BallsRecovered' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *BallsRecovered;
        /** Optional element 'ns1:BallsUsed' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *BallsUsed;
        /** Optional element 'ns1:BaseFluidBypassVol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *BaseFluidBypassVol;
        /** Optional element 'ns1:BaseFluidVol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *BaseFluidVol;
        /** Optional element 'ns1:EndDirtyMaterialRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *EndDirtyMaterialRate;
        /** Sequence of elements 'ns1:EndMaterialUsedRate' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array EndMaterialUsedRate of length __sizeEndMaterialUsedRate */
        int __sizeEndMaterialUsedRate;
        struct ns1__StimMaterialQuantity *EndMaterialUsedRate;
        /** Sequence of elements 'ns1:EndMaterialUsedRateBottomhole' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array EndMaterialUsedRateBottomhole of length __sizeEndMaterialUsedRateBottomhole */
        int __sizeEndMaterialUsedRateBottomhole;
        struct ns1__StimMaterialQuantity *EndMaterialUsedRateBottomhole;
        /** Optional element 'ns1:EndPresBottomhole' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *EndPresBottomhole;
        /** Optional element 'ns1:EndPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *EndPresSurface;
        /** Optional element 'ns1:EndProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *EndProppantConcBottomhole;
        /** Optional element 'ns1:EndProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *EndProppantConcSurface;
        /** Optional element 'ns1:EndRateSurfaceCO2' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *EndRateSurfaceCO2;
        /** Optional element 'ns1:EndStdRateSurfaceN2' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *EndStdRateSurfaceN2;
        /** Optional element 'ns1:FluidVolBase' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolBase;
        /** Optional element 'ns1:FluidVolCirculated' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolCirculated;
        /** Optional element 'ns1:FluidVolPumped' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolPumped;
        /** Optional element 'ns1:FluidVolReturned' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolReturned;
        /** Optional element 'ns1:FluidVolSlurry' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolSlurry;
        /** Optional element 'ns1:FluidVolSqueezed' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolSqueezed;
        /** Optional element 'ns1:FluidVolWashed' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidVolWashed;
        /** Optional element 'ns1:FractureGradientFinal' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradientFinal;
        /** Optional element 'ns1:FractureGradientInitial' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradientInitial;
        /** Optional element 'ns1:FrictionFactor' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *FrictionFactor;
        /** Optional element 'ns1:MaxHydraulicPower' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *MaxHydraulicPower;
        /** Optional element 'ns1:MaxPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPresSurface;
        /** Optional element 'ns1:MaxProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MaxProppantConcBottomhole;
        /** Optional element 'ns1:MaxProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MaxProppantConcSurface;
        /** Optional element 'ns1:MaxSlurryPropConc' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MaxSlurryPropConc;
        /** Optional element 'ns1:MaxVolumeRateWellhead' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *MaxVolumeRateWellhead;
        /** Optional element 'ns1:PipeFrictionPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PipeFrictionPressure;
        /** Optional element 'ns1:PumpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *PumpTime;
        /** Optional element 'ns1:StartDirtyMaterialRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *StartDirtyMaterialRate;
        /** Sequence of elements 'ns1:StartMaterialUsedRate' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array StartMaterialUsedRate of length __sizeStartMaterialUsedRate */
        int __sizeStartMaterialUsedRate;
        struct ns1__StimMaterialQuantity *StartMaterialUsedRate;
        /** Sequence of elements 'ns1:StartMaterialUsedRateBottomHole' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array StartMaterialUsedRateBottomHole of length __sizeStartMaterialUsedRateBottomHole */
        int __sizeStartMaterialUsedRateBottomHole;
        struct ns1__StimMaterialQuantity *StartMaterialUsedRateBottomHole;
        /** Optional element 'ns1:StartPresBottomhole' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *StartPresBottomhole;
        /** Optional element 'ns1:StartPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *StartPresSurface;
        /** Optional element 'ns1:StartProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *StartProppantConcBottomhole;
        /** Optional element 'ns1:StartProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *StartProppantConcSurface;
        /** Optional element 'ns1:WellheadVol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *WellheadVol;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:MaterialUsed' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array MaterialUsed of length __sizeMaterialUsed */
        int __sizeMaterialUsed;
        struct ns1__StimMaterialQuantity *MaterialUsed;
        /** Sequence of elements 'ns1:MaxMaterialUsedRate' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array MaxMaterialUsedRate of length __sizeMaxMaterialUsedRate */
        int __sizeMaxMaterialUsedRate;
        struct ns1__StimMaterialQuantity *MaxMaterialUsedRate;
        /** Optional element 'ns1:Fluid' of XML schema type 'ns1:StimFluid' */
        struct ns1__StimFluid *Fluid;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33942 */
#ifndef SOAP_TYPE_ns1__StimMaterial
#define SOAP_TYPE_ns1__StimMaterial (1183)
/* complex XML schema type 'ns1:StimMaterial': */
struct ns1__StimMaterial {
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:StimMaterialKind' */
        enum ns1__StimMaterialKind *Kind;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Optional element 'ns1:Supplier' of XML schema type 'ns2:String2000' */
        char *Supplier;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__StimMaterial when non-NULL */
        struct ns1__StimAdditive *ns1__StimAdditive;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__StimMaterial when non-NULL */
        struct ns1__StimProppantAgent *ns1__StimProppantAgent;
};
#endif

/* testh.h:32941 */
#ifndef SOAP_TYPE_ns1__StimMaterialQuantity
#define SOAP_TYPE_ns1__StimMaterialQuantity (1148)
/* complex XML schema type 'ns1:StimMaterialQuantity': */
struct ns1__StimMaterialQuantity {
        /** Optional element 'ns1:Density' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Density;
        /** Optional element 'ns1:Mass' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *Mass;
        /** Optional element 'ns1:MassFlowRate' of XML schema type 'ns2:MassPerTimeMeasure' */
        struct ns2__MassPerTimeMeasure *MassFlowRate;
        /** Optional element 'ns1:StdVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *StdVolume;
        /** Optional element 'ns1:Volume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Volume;
        /** Optional element 'ns1:VolumeConcentration' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *VolumeConcentration;
        /** Optional element 'ns1:VolumetricFlowRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *VolumetricFlowRate;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Material' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Material;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34074 */
#ifndef SOAP_TYPE_ns1__StimPerforationClusterSet
#define SOAP_TYPE_ns1__StimPerforationClusterSet (1189)
/* complex XML schema type 'ns1:StimPerforationClusterSet': */
struct ns1__StimPerforationClusterSet {
        /** Sequence of at least 1 elements 'ns1:StimPerforationCluster' of XML schema type 'ns1:StimPerforationCluster' stored in dynamic array StimPerforationCluster of length __sizeStimPerforationCluster */
        int __sizeStimPerforationCluster;
        struct ns1__StimPerforationCluster *StimPerforationCluster;
};
#endif

/* testh.h:34095 */
#ifndef SOAP_TYPE_ns1__StimPressureFlowRate
#define SOAP_TYPE_ns1__StimPressureFlowRate (1192)
/* complex XML schema type 'ns1:StimPressureFlowRate': */
struct ns1__StimPressureFlowRate {
        /** Optional element 'ns1:Pressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Pressure;
        /** Optional element 'ns1:BottomholeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *BottomholeRate;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33395 */
#ifndef SOAP_TYPE_ns1__StimPumpFlowBackTest
#define SOAP_TYPE_ns1__StimPumpFlowBackTest (1171)
/* complex XML schema type 'ns1:StimPumpFlowBackTest': */
struct ns1__StimPumpFlowBackTest {
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:FlowBackVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FlowBackVolume;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:FractureCloseDuration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *FractureCloseDuration;
        /** Optional element 'ns1:PresCasing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCasing;
        /** Optional element 'ns1:PresTubing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTubing;
        /** Optional element 'ns1:FractureClosePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FractureClosePres;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:StimPumpFlowBackTestStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__StimPumpFlowBackTestStep *Step;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34192 */
#ifndef SOAP_TYPE_ns1__StimPumpFlowBackTestStep
#define SOAP_TYPE_ns1__StimPumpFlowBackTestStep (1193)
/* complex XML schema type 'ns1:StimPumpFlowBackTestStep': */
struct ns1__StimPumpFlowBackTestStep {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:FlowbackVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FlowbackVolume;
        /** Optional element 'ns1:FlowbackVolumeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowbackVolumeRate;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Number' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 Number;
        /** Optional element 'ns1:BottomholeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *BottomholeRate;
        /** Optional element 'ns1:Pres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Pres;
        /** Optional element 'ns1:PipeFriction' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PipeFriction;
        /** Optional element 'ns1:EntryFriction' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *EntryFriction;
        /** Optional element 'ns1:PerfFriction' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PerfFriction;
        /** Optional element 'ns1:NearWellboreFriction' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *NearWellboreFriction;
        /** Optional element 'ns1:SurfaceRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *SurfaceRate;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34312 */
#ifndef SOAP_TYPE_ns1__StimReservoirInterval
#define SOAP_TYPE_ns1__StimReservoirInterval (1195)
/* complex XML schema type 'ns1:StimReservoirInterval': */
struct ns1__StimReservoirInterval {
        /** Optional element 'ns1:LithMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *LithMdInterval;
        /** Optional element 'ns1:LithFormationPermeability' of XML schema type 'ns2:PermeabilityRockMeasure' */
        struct ns2__PermeabilityRockMeasure *LithFormationPermeability;
        /** Optional element 'ns1:LithYoungsModulus' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *LithYoungsModulus;
        /** Optional element 'ns1:LithPorePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *LithPorePres;
        /** Optional element 'ns1:LithNetPayThickness' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LithNetPayThickness;
        /** Optional element 'ns1:LithName' of XML schema type 'ns2:String2000' */
        char *LithName;
        /** Optional element 'ns1:GrossPayMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *GrossPayMdInterval;
        /** Optional element 'ns1:GrossPayThickness' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *GrossPayThickness;
        /** Optional element 'ns1:NetPayThickness' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *NetPayThickness;
        /** Optional element 'ns1:NetPayPorePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *NetPayPorePres;
        /** Optional element 'ns1:NetPayFluidCompressibility' of XML schema type 'ns2:IsothermalCompressibilityMeasure' */
        struct ns2__IsothermalCompressibilityMeasure *NetPayFluidCompressibility;
        /** Optional element 'ns1:NetPayFluidViscosity' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *NetPayFluidViscosity;
        /** Optional element 'ns1:NetPayName' of XML schema type 'ns2:String2000' */
        char *NetPayName;
        /** Optional element 'ns1:NetPayFormationPermeability' of XML schema type 'ns2:PermeabilityRockMeasure' */
        struct ns2__PermeabilityRockMeasure *NetPayFormationPermeability;
        /** Optional element 'ns1:LithPoissonsRatio' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *LithPoissonsRatio;
        /** Optional element 'ns1:NetPayFormationPorosity' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *NetPayFormationPorosity;
        /** Optional element 'ns1:FormationPermeability' of XML schema type 'ns2:PermeabilityRockMeasure' */
        struct ns2__PermeabilityRockMeasure *FormationPermeability;
        /** Optional element 'ns1:FormationPorosity' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *FormationPorosity;
        /** Optional element 'ns1:NameFormation' of XML schema type 'ns2:String2000' */
        char *NameFormation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34457 */
#ifndef SOAP_TYPE_ns1__StimShutInPressure
#define SOAP_TYPE_ns1__StimShutInPressure (1196)
/* complex XML schema type 'ns1:StimShutInPressure': */
struct ns1__StimShutInPressure {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Pressure;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TimeAfterShutin' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *TimeAfterShutin;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33387 */
#ifndef SOAP_TYPE_ns1__StimStepDownTest
#define SOAP_TYPE_ns1__StimStepDownTest (1169)
/* complex XML schema type 'ns1:StimStepDownTest': */
struct ns1__StimStepDownTest {
        /** Optional element 'ns1:InitialShutinPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *InitialShutinPres;
        /** Optional element 'ns1:BottomholeFluidDensity' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *BottomholeFluidDensity;
        /** Optional element 'ns1:DiameterEntryHole' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiameterEntryHole;
        /** Optional element 'ns1:PerforationCount' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *PerforationCount;
        /** Optional element 'ns1:DischargeCoefficient' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *DischargeCoefficient;
        /** Optional element 'ns1:EffectivePerfs' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *EffectivePerfs;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:StimPumpFlowBackTestStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__StimPumpFlowBackTestStep *Step;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:33376 */
#ifndef SOAP_TYPE_ns1__StimStepTest
#define SOAP_TYPE_ns1__StimStepTest (1167)
/* complex XML schema type 'ns1:StimStepTest': */
struct ns1__StimStepTest {
        /** Optional element 'ns1:FractureExtensionPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FractureExtensionPres;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:PresMeasurement' of XML schema type 'ns1:StimPressureFlowRate' stored in dynamic array PresMeasurement of length __sizePresMeasurement */
        int __sizePresMeasurement;
        struct ns1__StimPressureFlowRate *PresMeasurement;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:32830 */
#ifndef SOAP_TYPE_ns1__StimTubular
#define SOAP_TYPE_ns1__StimTubular (1141)
/* complex XML schema type 'ns1:StimTubular': */
struct ns1__StimTubular {
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Optional element 'ns1:Od' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Od;
        /** Optional element 'ns1:Weight' of XML schema type 'ns2:MassPerLengthMeasure' */
        struct ns2__MassPerLengthMeasure *Weight;
        /** Optional element 'ns1:TubularMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *TubularMdInterval;
        /** Optional element 'ns1:TubularTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TubularTvdInterval;
        /** Optional element 'ns1:VolumeFactor' of XML schema type 'ns2:VolumePerLengthMeasure' */
        struct ns2__VolumePerLengthMeasure *VolumeFactor;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34697 */
#ifndef SOAP_TYPE_ns1__AbstractItemWtOrVolPerUnit
#define SOAP_TYPE_ns1__AbstractItemWtOrVolPerUnit (1200)
/* complex XML schema type 'ns1:AbstractItemWtOrVolPerUnit': */
struct ns1__AbstractItemWtOrVolPerUnit {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractItemWtOrVolPerUnit when non-NULL */
        struct ns1__ItemVolPerUnit *ns1__ItemVolPerUnit;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__AbstractItemWtOrVolPerUnit when non-NULL */
        struct ns1__ItemWtPerUnit *ns1__ItemWtPerUnit;
};
#endif

/* testh.h:34714 */
#ifndef SOAP_TYPE_ns1__AnchorState
#define SOAP_TYPE_ns1__AnchorState (1205)
/* complex XML schema type 'ns1:AnchorState': */
struct ns1__AnchorState {
        /** Required nillable (xsi:nil when NULL) element 'ns1:AnchorName' of XML schema type 'ns2:String64' */
        char *AnchorName;
        /** Optional element 'ns1:AnchorAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AnchorAngle;
        /** Optional element 'ns1:AnchorTension' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *AnchorTension;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
};
#endif

/* testh.h:34755 */
#ifndef SOAP_TYPE_ns1__DayCost
#define SOAP_TYPE_ns1__DayCost (1206)
/* complex XML schema type 'ns1:DayCost': */
struct ns1__DayCost {
        /** Optional element 'ns1:NumAFE' of XML schema type 'ns2:String64' */
        char *NumAFE;
        /** Optional element 'ns1:CostGroup' of XML schema type 'ns2:String64' */
        char *CostGroup;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CostClass' of XML schema type 'ns2:String64' */
        char *CostClass;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CostCode' of XML schema type 'ns2:String64' */
        char *CostCode;
        /** Optional element 'ns1:CostSubCode' of XML schema type 'ns2:String64' */
        char *CostSubCode;
        /** Optional element 'ns1:CostItemDescription' of XML schema type 'ns2:String64' */
        char *CostItemDescription;
        /** Optional element 'ns1:ItemKind' of XML schema type 'ns2:UomEnum' */
        char *ItemKind;
        /** Optional element 'ns1:ItemSize' of XML schema type 'xsd:double' */
        double *ItemSize;
        /** Optional element 'ns1:QtyItem' of XML schema type 'xsd:double' */
        double *QtyItem;
        /** Optional element 'ns1:NumInvoice' of XML schema type 'ns2:String64' */
        char *NumInvoice;
        /** Optional element 'ns1:NumPO' of XML schema type 'ns2:String64' */
        char *NumPO;
        /** Optional element 'ns1:NumTicket' of XML schema type 'ns2:String64' */
        char *NumTicket;
        /** Optional element 'ns1:IsCarryOver' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsCarryOver;
        /** Optional element 'ns1:IsRental' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsRental;
        /** Sequence of elements 'ns1:NameTag' of XML schema type 'ns1:NameTag' stored in dynamic array NameTag of length __sizeNameTag */
        int __sizeNameTag;
        struct ns1__NameTag *NameTag;
        /** Optional element 'ns1:NumSerial' of XML schema type 'ns2:String64' */
        char *NumSerial;
        /** Optional element 'ns1:Vendor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Vendor;
        /** Optional element 'ns1:NumVendor' of XML schema type 'ns2:String64' */
        char *NumVendor;
        /** Optional element 'ns1:Pool' of XML schema type 'ns2:String64' */
        char *Pool;
        /** Optional element 'ns1:Estimated' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Estimated;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:CostAmount' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostAmount;
        /** Optional element 'ns1:CostPerItem' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostPerItem;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34923 */
#ifndef SOAP_TYPE_ns1__Hse
#define SOAP_TYPE_ns1__Hse (1207)
/* complex XML schema type 'ns1:Hse': */
struct ns1__Hse {
        /** Optional element 'ns1:DaysIncFree' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *DaysIncFree;
        /** Optional element 'ns1:LastCsgPresTest' of XML schema type 'ns2:TimeStamp' */
        time_t *LastCsgPresTest;
        /** Optional element 'ns1:PresLastCsg' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresLastCsg;
        /** Optional element 'ns1:LastBopPresTest' of XML schema type 'ns2:TimeStamp' */
        time_t *LastBopPresTest;
        /** Optional element 'ns1:NextBopPresTest' of XML schema type 'ns2:TimeStamp' */
        time_t *NextBopPresTest;
        /** Optional element 'ns1:PresStdPipe' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresStdPipe;
        /** Optional element 'ns1:PresKellyHose' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresKellyHose;
        /** Optional element 'ns1:PresDiverter' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDiverter;
        /** Optional element 'ns1:PresAnnular' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresAnnular;
        /** Optional element 'ns1:PresRams' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRams;
        /** Optional element 'ns1:PresChokeLine' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresChokeLine;
        /** Optional element 'ns1:PresChokeMan' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresChokeMan;
        /** Optional element 'ns1:LastFireBoatDrill' of XML schema type 'ns2:TimeStamp' */
        time_t *LastFireBoatDrill;
        /** Optional element 'ns1:LastAbandonDrill' of XML schema type 'ns2:TimeStamp' */
        time_t *LastAbandonDrill;
        /** Optional element 'ns1:LastRigInspection' of XML schema type 'ns2:TimeStamp' */
        time_t *LastRigInspection;
        /** Optional element 'ns1:LastSafetyMeeting' of XML schema type 'ns2:TimeStamp' */
        time_t *LastSafetyMeeting;
        /** Optional element 'ns1:LastSafetyInspection' of XML schema type 'ns2:TimeStamp' */
        time_t *LastSafetyInspection;
        /** Optional element 'ns1:LastTripDrill' of XML schema type 'ns2:TimeStamp' */
        time_t *LastTripDrill;
        /** Optional element 'ns1:LastDiverterDrill' of XML schema type 'ns2:TimeStamp' */
        time_t *LastDiverterDrill;
        /** Optional element 'ns1:LastBopDrill' of XML schema type 'ns2:TimeStamp' */
        time_t *LastBopDrill;
        /** Optional element 'ns1:RegAgencyInsp' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *RegAgencyInsp;
        /** Optional element 'ns1:NonComplianceIssued' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *NonComplianceIssued;
        /** Optional element 'ns1:NumStopCards' of XML schema type 'xsd:long' */
        LONG64 *NumStopCards;
        /** Optional element 'ns1:FluidDischarged' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FluidDischarged;
        /** Optional element 'ns1:VolCtgDischarged' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCtgDischarged;
        /** Optional element 'ns1:VolOilCtgDischarge' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolOilCtgDischarge;
        /** Optional element 'ns1:WasteDischarged' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *WasteDischarged;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:Incident' of XML schema type 'ns1:Incident' stored in dynamic array Incident of length __sizeIncident */
        int __sizeIncident;
        struct ns1__Incident *Incident;
};
#endif

/* testh.h:35095 */
#ifndef SOAP_TYPE_ns1__Incident
#define SOAP_TYPE_ns1__Incident (1208)
/* complex XML schema type 'ns1:Incident': */
struct ns1__Incident {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Optional element 'ns1:Reporter' of XML schema type 'ns2:String64' */
        char *Reporter;
        /** Optional element 'ns1:NumMinorInjury' of XML schema type 'xsd:long' */
        LONG64 *NumMinorInjury;
        /** Optional element 'ns1:NumMajorInjury' of XML schema type 'xsd:long' */
        LONG64 *NumMajorInjury;
        /** Optional element 'ns1:NumFatality' of XML schema type 'xsd:long' */
        LONG64 *NumFatality;
        /** Optional element 'ns1:IsNearMiss' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsNearMiss;
        /** Optional element 'ns1:DescLocation' of XML schema type 'ns2:String64' */
        char *DescLocation;
        /** Optional element 'ns1:DescAccident' of XML schema type 'ns2:String2000' */
        char *DescAccident;
        /** Optional element 'ns1:RemedialActionDesc' of XML schema type 'ns2:String2000' */
        char *RemedialActionDesc;
        /** Optional element 'ns1:CauseDesc' of XML schema type 'ns2:String2000' */
        char *CauseDesc;
        /** Optional element 'ns1:ETimLostGross' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimLostGross;
        /** Optional element 'ns1:CostLossGross' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostLossGross;
        /** Optional element 'ns1:ResponsibleCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ResponsibleCompany;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35221 */
#ifndef SOAP_TYPE_ns1__Inventory
#define SOAP_TYPE_ns1__Inventory (1210)
/* complex XML schema type 'ns1:Inventory': */
struct ns1__Inventory {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ItemWtOrVolPerUnit' of XML schema type 'ns1:AbstractItemWtOrVolPerUnit' */
        struct ns1__AbstractItemWtOrVolPerUnit *ItemWtOrVolPerUnit;
        /** Optional element 'ns1:PricePerUnit' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *PricePerUnit;
        /** Optional element 'ns1:QtyStart' of XML schema type 'xsd:double' */
        double *QtyStart;
        /** Optional element 'ns1:QtyAdjustment' of XML schema type 'xsd:double' */
        double *QtyAdjustment;
        /** Optional element 'ns1:QtyReceived' of XML schema type 'xsd:double' */
        double *QtyReceived;
        /** Optional element 'ns1:QtyReturned' of XML schema type 'xsd:double' */
        double *QtyReturned;
        /** Optional element 'ns1:QtyUsed' of XML schema type 'xsd:double' */
        double *QtyUsed;
        /** Optional element 'ns1:CostItem' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostItem;
        /** Optional element 'ns1:QtyOnLocation' of XML schema type 'xsd:double' */
        double *QtyOnLocation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35312 */
#ifndef SOAP_TYPE_ns1__MudLosses
#define SOAP_TYPE_ns1__MudLosses (1212)
/* complex XML schema type 'ns1:MudLosses': */
struct ns1__MudLosses {
        /** Optional element 'ns1:VolLostShakerSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostShakerSurf;
        /** Optional element 'ns1:VolLostMudCleanerSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostMudCleanerSurf;
        /** Optional element 'ns1:VolLostPitsSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostPitsSurf;
        /** Optional element 'ns1:VolLostTrippingSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostTrippingSurf;
        /** Optional element 'ns1:VolLostOtherSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostOtherSurf;
        /** Optional element 'ns1:VolTotMudLostSurf' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTotMudLostSurf;
        /** Optional element 'ns1:VolLostCircHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostCircHole;
        /** Optional element 'ns1:VolLostCsgHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostCsgHole;
        /** Optional element 'ns1:VolLostCmtHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostCmtHole;
        /** Optional element 'ns1:VolLostBhdCsgHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostBhdCsgHole;
        /** Optional element 'ns1:VolLostAbandonHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostAbandonHole;
        /** Optional element 'ns1:VolLostOtherHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolLostOtherHole;
        /** Optional element 'ns1:VolTotMudLostHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTotMudLostHole;
};
#endif

/* testh.h:35407 */
#ifndef SOAP_TYPE_ns1__MudVolume
#define SOAP_TYPE_ns1__MudVolume (1213)
/* complex XML schema type 'ns1:MudVolume': */
struct ns1__MudVolume {
        /** Optional element 'ns1:VolTotMudStart' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTotMudStart;
        /** Optional element 'ns1:VolMudDumped' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudDumped;
        /** Optional element 'ns1:VolMudReceived' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudReceived;
        /** Optional element 'ns1:VolMudReturned' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudReturned;
        /** Optional element 'ns1:VolMudBuilt' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudBuilt;
        /** Optional element 'ns1:VolMudString' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudString;
        /** Optional element 'ns1:VolMudCasing' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudCasing;
        /** Optional element 'ns1:VolMudHole' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudHole;
        /** Optional element 'ns1:VolMudRiser' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudRiser;
        /** Optional element 'ns1:VolTotMudEnd' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolTotMudEnd;
        /** Optional element 'ns1:MudLosses' of XML schema type 'ns1:MudLosses' */
        struct ns1__MudLosses *MudLosses;
};
#endif

/* testh.h:35486 */
#ifndef SOAP_TYPE_ns1__Personnel
#define SOAP_TYPE_ns1__Personnel (1215)
/* complex XML schema type 'ns1:Personnel': */
struct ns1__Personnel {
        /** Optional element 'ns1:Company' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Company;
        /** Optional element 'ns1:TypeService' of XML schema type 'ns2:String64' */
        char *TypeService;
        /** Optional element 'ns1:NumPeople' of XML schema type 'xsd:long' */
        LONG64 *NumPeople;
        /** Optional element 'ns1:TotalTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *TotalTime;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35541 */
#ifndef SOAP_TYPE_ns1__PitVolume
#define SOAP_TYPE_ns1__PitVolume (1216)
/* complex XML schema type 'ns1:PitVolume': */
struct ns1__PitVolume {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pit' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Pit;
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Required nillable (xsi:nil when NULL) element 'ns1:VolPit' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolPit;
        /** Optional element 'ns1:DensFluid' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensFluid;
        /** Optional element 'ns1:DescFluid' of XML schema type 'ns2:String64' */
        char *DescFluid;
        /** Optional element 'ns1:VisFunnel' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *VisFunnel;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35608 */
#ifndef SOAP_TYPE_ns1__PumpOp
#define SOAP_TYPE_ns1__PumpOp (1217)
/* complex XML schema type 'ns1:PumpOp': */
struct ns1__PumpOp {
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pump' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Pump;
        /** Optional element 'ns1:TypeOperation' of XML schema type 'ns1:PumpOpType' */
        enum ns1__PumpOpType *TypeOperation;
        /** Optional element 'ns1:IdLiner' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdLiner;
        /** Optional element 'ns1:LenStroke' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenStroke;
        /** Required nillable (xsi:nil when NULL) element 'ns1:RateStroke' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RateStroke;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Pressure;
        /** Optional element 'ns1:PcEfficiency' of XML schema type 'ns2:PowerPerPowerMeasure' */
        struct ns2__PowerPerPowerMeasure *PcEfficiency;
        /** Optional element 'ns1:PumpOutput' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *PumpOutput;
        /** Optional element 'ns1:MdBit' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBit;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35699 */
#ifndef SOAP_TYPE_ns1__RigResponse
#define SOAP_TYPE_ns1__RigResponse (1219)
/* complex XML schema type 'ns1:RigResponse': */
struct ns1__RigResponse {
        /** Optional element 'ns1:RigHeading' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RigHeading;
        /** Optional element 'ns1:RigHeave' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RigHeave;
        /** Optional element 'ns1:RigPitchAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RigPitchAngle;
        /** Optional element 'ns1:RigRollAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RigRollAngle;
        /** Optional element 'ns1:RiserAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RiserAngle;
        /** Optional element 'ns1:RiserDirection' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RiserDirection;
        /** Optional element 'ns1:RiserTension' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RiserTension;
        /** Optional element 'ns1:VariableDeckLoad' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *VariableDeckLoad;
        /** Optional element 'ns1:TotalDeckLoad' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *TotalDeckLoad;
        /** Optional element 'ns1:GuideBaseAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *GuideBaseAngle;
        /** Optional element 'ns1:BallJointAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *BallJointAngle;
        /** Optional element 'ns1:BallJointDirection' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *BallJointDirection;
        /** Optional element 'ns1:OffsetRig' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OffsetRig;
        /** Optional element 'ns1:LoadLeg1' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *LoadLeg1;
        /** Optional element 'ns1:LoadLeg2' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *LoadLeg2;
        /** Optional element 'ns1:LoadLeg3' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *LoadLeg3;
        /** Optional element 'ns1:LoadLeg4' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *LoadLeg4;
        /** Optional element 'ns1:PenetrationLeg1' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PenetrationLeg1;
        /** Optional element 'ns1:PenetrationLeg2' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PenetrationLeg2;
        /** Optional element 'ns1:PenetrationLeg3' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PenetrationLeg3;
        /** Optional element 'ns1:PenetrationLeg4' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PenetrationLeg4;
        /** Optional element 'ns1:DispRig' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispRig;
        /** Optional element 'ns1:MeanDraft' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MeanDraft;
        /** Sequence of elements 'ns1:AnchorState' of XML schema type 'ns1:AnchorState' stored in dynamic array AnchorState of length __sizeAnchorState */
        int __sizeAnchorState;
        struct ns1__AnchorState *AnchorState;
};
#endif

/* testh.h:35858 */
#ifndef SOAP_TYPE_ns1__Scr
#define SOAP_TYPE_ns1__Scr (1221)
/* complex XML schema type 'ns1:Scr': */
struct ns1__Scr {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Pump' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Pump;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeScr' of XML schema type 'ns1:ScrType' */
        enum ns1__ScrType TypeScr;
        /** Required nillable (xsi:nil when NULL) element 'ns1:RateStroke' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RateStroke;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PresRecorded' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresRecorded;
        /** Optional element 'ns1:MdBit' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBit;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35925 */
#ifndef SOAP_TYPE_ns1__ShakerOp
#define SOAP_TYPE_ns1__ShakerOp (1222)
/* complex XML schema type 'ns1:ShakerOp': */
struct ns1__ShakerOp {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Shaker' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Shaker;
        /** Optional element 'ns1:MdHole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHole;
        /** Optional element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns1:HoursRun' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *HoursRun;
        /** Optional element 'ns1:PcScreenCovered' of XML schema type 'ns2:AreaPerAreaMeasure' */
        struct ns2__AreaPerAreaMeasure *PcScreenCovered;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:ShakerScreen' of XML schema type 'ns1:ShakerScreen' */
        struct ns1__ShakerScreen *ShakerScreen;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:35965 */
#ifndef SOAP_TYPE_ns1__ShakerScreen
#define SOAP_TYPE_ns1__ShakerScreen (1223)
/* complex XML schema type 'ns1:ShakerScreen': */
struct ns1__ShakerScreen {
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:NumDeck' of XML schema type 'xsd:long' */
        LONG64 *NumDeck;
        /** Optional element 'ns1:MeshX' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MeshX;
        /** Optional element 'ns1:MeshY' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MeshY;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:Model' of XML schema type 'ns2:String64' */
        char *Model;
        /** Optional element 'ns1:CutPoint' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *CutPoint;
};
#endif

/* testh.h:36053 */
#ifndef SOAP_TYPE_ns1__SupportCraft
#define SOAP_TYPE_ns1__SupportCraft (1225)
/* complex XML schema type 'ns1:SupportCraft': */
struct ns1__SupportCraft {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeSupportCraft' of XML schema type 'ns1:SupportCraftType' */
        enum ns1__SupportCraftType TypeSupportCraft;
        /** Optional element 'ns1:DTimArrived' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimArrived;
        /** Optional element 'ns1:DTimDeparted' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimDeparted;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36114 */
#ifndef SOAP_TYPE_ns1__Weather
#define SOAP_TYPE_ns1__Weather (1226)
/* complex XML schema type 'ns1:Weather': */
struct ns1__Weather {
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Optional element 'ns1:Agency' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Agency;
        /** Optional element 'ns1:BarometricPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *BarometricPressure;
        /** Optional element 'ns1:BeaufortScaleNumber' of XML schema type 'ns1:BeaufortScaleIntegerCode' */
        LONG64 *BeaufortScaleNumber;
        /** Optional element 'ns1:TempSurfaceMn' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempSurfaceMn;
        /** Optional element 'ns1:TempSurfaceMx' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempSurfaceMx;
        /** Optional element 'ns1:TempWindChill' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempWindChill;
        /** Optional element 'ns1:Tempsea' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *Tempsea;
        /** Optional element 'ns1:Visibility' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Visibility;
        /** Optional element 'ns1:AziWave' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AziWave;
        /** Optional element 'ns1:HtWave' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtWave;
        /** Optional element 'ns1:SignificantWave' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SignificantWave;
        /** Optional element 'ns1:MaxWave' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MaxWave;
        /** Optional element 'ns1:PeriodWave' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *PeriodWave;
        /** Optional element 'ns1:AziWind' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AziWind;
        /** Optional element 'ns1:VelWind' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *VelWind;
        /** Optional element 'ns1:TypePrecip' of XML schema type 'ns2:String64' */
        char *TypePrecip;
        /** Optional element 'ns1:AmtPrecip' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *AmtPrecip;
        /** Optional element 'ns1:CoverCloud' of XML schema type 'ns2:String64' */
        char *CoverCloud;
        /** Optional element 'ns1:CeilingCloud' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *CeilingCloud;
        /** Optional element 'ns1:CurrentSea' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *CurrentSea;
        /** Optional element 'ns1:AziCurrentSea' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *AziCurrentSea;
        /** Optional element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36283 */
#ifndef SOAP_TYPE_ns1__PPFGChannelOSDUIntegration
#define SOAP_TYPE_ns1__PPFGChannelOSDUIntegration (1228)
/* complex XML schema type 'ns1:PPFGChannelOSDUIntegration': */
struct ns1__PPFGChannelOSDUIntegration {
        /** Optional element 'ns1:RecordDate' of XML schema type 'ns2:TimeStamp' */
        time_t *RecordDate;
};
#endif

/* testh.h:36306 */
#ifndef SOAP_TYPE_ns1__PPFGChannelSetOSDUIntegration
#define SOAP_TYPE_ns1__PPFGChannelSetOSDUIntegration (1229)
/* complex XML schema type 'ns1:PPFGChannelSetOSDUIntegration': */
struct ns1__PPFGChannelSetOSDUIntegration {
        /** Optional element 'ns1:RecordDate' of XML schema type 'ns2:TimeStamp' */
        time_t *RecordDate;
};
#endif

/* testh.h:36329 */
#ifndef SOAP_TYPE_ns1__PPFGLogOSDUIntegration
#define SOAP_TYPE_ns1__PPFGLogOSDUIntegration (1230)
/* complex XML schema type 'ns1:PPFGLogOSDUIntegration': */
struct ns1__PPFGLogOSDUIntegration {
        /** Optional element 'ns1:RecordDate' of XML schema type 'ns2:TimeStamp' */
        time_t *RecordDate;
};
#endif

/* testh.h:36352 */
#ifndef SOAP_TYPE_ns1__ContactIntervalSet
#define SOAP_TYPE_ns1__ContactIntervalSet (1231)
/* complex XML schema type 'ns1:ContactIntervalSet': */
struct ns1__ContactIntervalSet {
        /** Sequence of elements 'ns1:GravelPackInterval' of XML schema type 'ns1:GravelPackInterval' stored in dynamic array GravelPackInterval of length __sizeGravelPackInterval */
        int __sizeGravelPackInterval;
        struct ns1__GravelPackInterval *GravelPackInterval;
        /** Sequence of elements 'ns1:OpenHoleInterval' of XML schema type 'ns1:OpenHoleInterval' stored in dynamic array OpenHoleInterval of length __sizeOpenHoleInterval */
        int __sizeOpenHoleInterval;
        struct ns1__OpenHoleInterval *OpenHoleInterval;
        /** Sequence of elements 'ns1:PerforationSetInterval' of XML schema type 'ns1:PerforationSetInterval' stored in dynamic array PerforationSetInterval of length __sizePerforationSetInterval */
        int __sizePerforationSetInterval;
        struct ns1__PerforationSetInterval *PerforationSetInterval;
        /** Sequence of elements 'ns1:SlotsInterval' of XML schema type 'ns1:SlotsInterval' stored in dynamic array SlotsInterval of length __sizeSlotsInterval */
        int __sizeSlotsInterval;
        struct ns1__SlotsInterval *SlotsInterval;
};
#endif

/* testh.h:36356 */
#ifndef SOAP_TYPE_ns1__GravelPackInterval
#define SOAP_TYPE_ns1__GravelPackInterval (1232)
/* complex XML schema type 'ns1:GravelPackInterval': */
struct ns1__GravelPackInterval {
        /** Optional element 'ns1:DownholeString' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *DownholeString;
        /** Optional element 'ns1:GravelPackMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *GravelPackMdInterval;
        /** Optional element 'ns1:GravelPackTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *GravelPackTvdInterval;
        /** Optional element 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EventHistory;
        /** Sequence of elements 'ns1:GeologyFeature' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array GeologyFeature of length __sizeGeologyFeature */
        int __sizeGeologyFeature;
        struct ns2__DataObjectComponentReference *GeologyFeature;
        /** Sequence of elements 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' stored in dynamic array GeologicUnitInterpretation of length __sizeGeologicUnitInterpretation */
        int __sizeGeologicUnitInterpretation;
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns1:IntervalStatusHistory' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns1__IntervalStatusHistory *StatusHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36437 */
#ifndef SOAP_TYPE_ns1__IntervalStatusHistory
#define SOAP_TYPE_ns1__IntervalStatusHistory (1240)
/* complex XML schema type 'ns1:IntervalStatusHistory': */
struct ns1__IntervalStatusHistory {
        /** Optional element 'ns1:PhysicalStatus' of XML schema type 'ns1:PhysicalStatus' */
        enum ns1__PhysicalStatus *PhysicalStatus;
        /** Optional element 'ns1:StartDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDate;
        /** Optional element 'ns1:EndDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDate;
        /** Optional element 'ns1:StatusMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StatusMdInterval;
        /** Optional element 'ns1:AllocationFactor' of XML schema type 'ns1:NonNegativeFraction' */
        double *AllocationFactor;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36360 */
#ifndef SOAP_TYPE_ns1__OpenHoleInterval
#define SOAP_TYPE_ns1__OpenHoleInterval (1234)
/* complex XML schema type 'ns1:OpenHoleInterval': */
struct ns1__OpenHoleInterval {
        /** Optional element 'ns1:BoreholeString' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *BoreholeString;
        /** Optional element 'ns1:OpenHoleMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *OpenHoleMdInterval;
        /** Optional element 'ns1:OpenHoleTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *OpenHoleTvdInterval;
        /** Optional element 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EventHistory;
        /** Sequence of elements 'ns1:GeologyFeature' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array GeologyFeature of length __sizeGeologyFeature */
        int __sizeGeologyFeature;
        struct ns2__DataObjectComponentReference *GeologyFeature;
        /** Sequence of elements 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' stored in dynamic array GeologicUnitInterpretation of length __sizeGeologicUnitInterpretation */
        int __sizeGeologicUnitInterpretation;
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns1:IntervalStatusHistory' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns1__IntervalStatusHistory *StatusHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36364 */
#ifndef SOAP_TYPE_ns1__PerforationSetInterval
#define SOAP_TYPE_ns1__PerforationSetInterval (1236)
/* complex XML schema type 'ns1:PerforationSetInterval': */
struct ns1__PerforationSetInterval {
        /** Optional element 'ns1:PerforationSet' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *PerforationSet;
        /** Optional element 'ns1:PerforationSetMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PerforationSetMdInterval;
        /** Optional element 'ns1:PerforationSetTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *PerforationSetTvdInterval;
        /** Optional element 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EventHistory;
        /** Sequence of elements 'ns1:GeologyFeature' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array GeologyFeature of length __sizeGeologyFeature */
        int __sizeGeologyFeature;
        struct ns2__DataObjectComponentReference *GeologyFeature;
        /** Sequence of elements 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' stored in dynamic array GeologicUnitInterpretation of length __sizeGeologicUnitInterpretation */
        int __sizeGeologicUnitInterpretation;
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:PerforationStatusHistory' of XML schema type 'ns1:PerforationStatusHistory' stored in dynamic array PerforationStatusHistory of length __sizePerforationStatusHistory */
        int __sizePerforationStatusHistory;
        struct ns1__PerforationStatusHistory *PerforationStatusHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36646 */
#ifndef SOAP_TYPE_ns1__PerforationStatusHistory
#define SOAP_TYPE_ns1__PerforationStatusHistory (1244)
/* complex XML schema type 'ns1:PerforationStatusHistory': */
struct ns1__PerforationStatusHistory {
        /** Optional element 'ns1:PerforationStatus' of XML schema type 'ns1:PerforationStatus' */
        enum ns1__PerforationStatus *PerforationStatus;
        /** Optional element 'ns1:StartDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDate;
        /** Optional element 'ns1:EndDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDate;
        /** Optional element 'ns1:PerforationMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PerforationMdInterval;
        /** Optional element 'ns1:PerforationTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *PerforationTvdInterval;
        /** Optional element 'ns1:AllocationFactor' of XML schema type 'ns1:NonNegativeFraction' */
        double *AllocationFactor;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36368 */
#ifndef SOAP_TYPE_ns1__SlotsInterval
#define SOAP_TYPE_ns1__SlotsInterval (1238)
/* complex XML schema type 'ns1:SlotsInterval': */
struct ns1__SlotsInterval {
        /** Sequence of elements 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' stored in dynamic array GeologicUnitInterpretation of length __sizeGeologicUnitInterpretation */
        int __sizeGeologicUnitInterpretation;
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Optional element 'ns1:StringEquipment' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *StringEquipment;
        /** Optional element 'ns1:SlottedMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *SlottedMdInterval;
        /** Optional element 'ns1:SlottedTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *SlottedTvdInterval;
        /** Optional element 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' */
        struct ns1__EventInfo *EventHistory;
        /** Sequence of elements 'ns1:GeologyFeature' of XML schema type 'ns2:DataObjectComponentReference' stored in dynamic array GeologyFeature of length __sizeGeologyFeature */
        int __sizeGeologyFeature;
        struct ns2__DataObjectComponentReference *GeologyFeature;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns1:IntervalStatusHistory' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns1__IntervalStatusHistory *StatusHistory;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36809 */
#ifndef SOAP_TYPE_ns1__CompletionStatusHistory
#define SOAP_TYPE_ns1__CompletionStatusHistory (1247)
/* complex XML schema type 'ns1:CompletionStatusHistory': */
struct ns1__CompletionStatusHistory {
        /** Optional element 'ns1:Status' of XML schema type 'ns1:CompletionStatus' */
        enum ns1__CompletionStatus *Status;
        /** Optional element 'ns1:StartDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDate;
        /** Optional element 'ns1:EndDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDate;
        /** Optional element 'ns1:PerforationMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PerforationMdInterval;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:36872 */
#ifndef SOAP_TYPE_ns2__AbstractGrowingObjectPart
#define SOAP_TYPE_ns2__AbstractGrowingObjectPart (1249)
/* complex XML schema type 'ns2:AbstractGrowingObjectPart': */
struct ns2__AbstractGrowingObjectPart {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObjectPart when non-NULL */
        struct ns2__AbstractMdGrowingPart *ns2__AbstractMdGrowingPart;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObjectPart when non-NULL */
        struct ns2__AbstractMdIntervalGrowingPart *ns2__AbstractMdIntervalGrowingPart;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObjectPart when non-NULL */
        struct ns2__AbstractTimeGrowingPart *ns2__AbstractTimeGrowingPart;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObjectPart when non-NULL */
        struct ns2__AbstractTimeIntervalGrowingPart *ns2__AbstractTimeIntervalGrowingPart;
};
#endif

/* testh.h:36975 */
#ifndef SOAP_TYPE_ns2__AbstractObject
#define SOAP_TYPE_ns2__AbstractObject (1258)
/* complex XML schema type 'ns2:AbstractObject': */
struct ns2__AbstractObject {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__AbstractActiveObject *ns2__AbstractActiveObject;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__AbstractReferencePoint *ns2__AbstractReferencePoint;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Abstract2dCrs *ns2__Abstract2dCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__AbstractCompoundCrs *ns2__AbstractCompoundCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Geocentric3dCrs *ns2__Geocentric3dCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Geographic3dCrs *ns2__Geographic3dCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__VerticalCrs *ns2__VerticalCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__PropertyKind *ns2__PropertyKind;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__PropertyKindDictionary *ns2__PropertyKindDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__TimeSeries *ns2__TimeSeries;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__BusinessAssociate *ns2__BusinessAssociate;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Activity *ns2__Activity;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__ActivityTemplate *ns2__ActivityTemplate;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Aggregate *ns2__Aggregate;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__Attachment *ns2__Attachment;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__CollectionsToDataobjectsAssociationSet *ns2__CollectionsToDataobjectsAssociationSet;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__DataobjectCollection *ns2__DataobjectCollection;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__ColumnBasedTable *ns2__ColumnBasedTable;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__DataAssuranceRecord *ns2__DataAssuranceRecord;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns2__GraphicalInformationSet *ns2__GraphicalInformationSet;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__BhaRun *ns1__BhaRun;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__FluidsReport *ns1__FluidsReport;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__Tubular *ns1__Tubular;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__CementJob *ns1__CementJob;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__CementJobEvaluation *ns1__CementJobEvaluation;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__DepthRegImage *ns1__DepthRegImage;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ChannelKind *ns1__ChannelKind;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ChannelKindDictionary *ns1__ChannelKindDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__LoggingToolKind *ns1__LoggingToolKind;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__LoggingToolKindDictionary *ns1__LoggingToolKindDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__DownholeComponent *ns1__DownholeComponent;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WellCMLedger *ns1__WellCMLedger;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__DrillReport *ns1__DrillReport;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__Target *ns1__Target;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ErrorTerm *ns1__ErrorTerm;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ErrorTermDictionary *ns1__ErrorTermDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ToolErrorModel *ns1__ToolErrorModel;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__ToolErrorModelDictionary *ns1__ToolErrorModelDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WeightingFunction *ns1__WeightingFunction;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WeightingFunctionDictionary *ns1__WeightingFunctionDictionary;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__SurveyProgram *ns1__SurveyProgram;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__StimJob *ns1__StimJob;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__StimJobStage *ns1__StimJobStage;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__StimPerforationCluster *ns1__StimPerforationCluster;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__OpsReport *ns1__OpsReport;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__Risk *ns1__Risk;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WellboreCompletion *ns1__WellboreCompletion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WellCompletion *ns1__WellCompletion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WellboreMarker *ns1__WellboreMarker;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractObject when non-NULL */
        struct ns1__WellboreMarkerSet *ns1__WellboreMarkerSet;
};
#endif

/* testh.h:30814 */
#ifndef SOAP_TYPE_ns2__Citation
#define SOAP_TYPE_ns2__Citation (1056)
/* complex XML schema type 'ns2:Citation': */
struct ns2__Citation {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String256' */
        char *Title;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Originator' of XML schema type 'ns2:String64' */
        char *Originator;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Format' of XML schema type 'ns2:String2000' */
        char *Format;
        /** Optional element 'ns2:Editor' of XML schema type 'ns2:String64' */
        char *Editor;
        /** Optional element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t *LastUpdate;
        /** Optional element 'ns2:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns2:EditorHistory' of XML schema type 'ns2:String64' stored in dynamic array EditorHistory of length __sizeEditorHistory */
        int __sizeEditorHistory;
        char **EditorHistory;
        /** Optional element 'ns2:DescriptiveKeywords' of XML schema type 'ns2:String2000' */
        char *DescriptiveKeywords;
};
#endif

/* testh.h:37009 */
#ifndef SOAP_TYPE_ns2__CustomData
#define SOAP_TYPE_ns2__CustomData (1264)
/* complex XML schema type 'ns2:CustomData': */
struct ns2__CustomData {
        /** Sequence of elements '-any' of XML schema type 'xsd:anyType' stored in dynamic array __any of length __size */
        int __size;
        char **__any;
};
#endif

/* testh.h:20819 */
#ifndef SOAP_TYPE_ns2__ExtensionNameValue
#define SOAP_TYPE_ns2__ExtensionNameValue (692)
/* complex XML schema type 'ns2:ExtensionNameValue': */
struct ns2__ExtensionNameValue {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'ns2:StringMeasure' */
        struct ns2__StringMeasure *Value;
        /** Optional element 'ns2:MeasureClass' of XML schema type 'ns2:MeasureClass' */
        enum ns2__MeasureClass *MeasureClass;
        /** Optional element 'ns2:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t *DTim;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Description' of XML schema type 'ns2:String2000' */
        char *Description;
};
#endif

/* testh.h:37325 */
#ifndef SOAP_TYPE_ns2__GrowingObjectIndex
#define SOAP_TYPE_ns2__GrowingObjectIndex (1369)
/* complex XML schema type 'ns2:GrowingObjectIndex': */
struct ns2__GrowingObjectIndex {
        /** Required nillable (xsi:nil when NULL) element 'ns2:IndexKind' of XML schema type 'ns2:DataIndexKind' */
        enum ns2__DataIndexKind IndexKind;
        /** Optional element 'ns2:IndexPropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *IndexPropertyKind;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Direction' of XML schema type 'ns2:IndexDirection' */
        enum ns2__IndexDirection Direction;
        /** Optional element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:36979 */
#ifndef SOAP_TYPE_ns2__ObjectAlias
#define SOAP_TYPE_ns2__ObjectAlias (1259)
/* complex XML schema type 'ns2:ObjectAlias': */
struct ns2__ObjectAlias {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Identifier' of XML schema type 'ns2:String64' */
        char *Identifier;
        /** Optional element 'ns2:IdentifierKind' of XML schema type 'ns2:AliasIdentifierKindExt' */
        char *IdentifierKind;
        /** Optional element 'ns2:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns2:EffectiveDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDateTime;
        /** Optional element 'ns2:TerminationDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *TerminationDateTime;
        /** Required attribute 'authority' of XML schema type 'ns2:String64' */
        char *authority;
};
#endif

/* testh.h:37417 */
#ifndef SOAP_TYPE_ns2__AbstractHorizontalCoordinates
#define SOAP_TYPE_ns2__AbstractHorizontalCoordinates (1370)
/* complex XML schema type 'ns2:AbstractHorizontalCoordinates': */
struct ns2__AbstractHorizontalCoordinates {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractHorizontalCoordinates when non-NULL */
        struct ns2__GeographicCoordinates *ns2__GeographicCoordinates;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractHorizontalCoordinates when non-NULL */
        struct ns2__ProjectedCoordinates *ns2__ProjectedCoordinates;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractHorizontalCoordinates when non-NULL */
        struct ns2__PublicLandSurveySystemCoordinates *ns2__PublicLandSurveySystemCoordinates;
};
#endif

/* testh.h:21487 */
#ifndef SOAP_TYPE_ns2__AbstractPosition
#define SOAP_TYPE_ns2__AbstractPosition (726)
/* complex XML schema type 'ns2:AbstractPosition': */
struct ns2__AbstractPosition {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPosition when non-NULL */
        struct ns2__Abstract2dPosition *ns2__Abstract2dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPosition when non-NULL */
        struct ns2__Abstract3dPosition *ns2__Abstract3dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPosition when non-NULL */
        struct ns2__AbstractCompoundPosition *ns2__AbstractCompoundPosition;
};
#endif

/* testh.h:37464 */
#ifndef SOAP_TYPE_ns2__HorizontalCoordinates
#define SOAP_TYPE_ns2__HorizontalCoordinates (1381)
/* complex XML schema type 'ns2:HorizontalCoordinates': */
struct ns2__HorizontalCoordinates {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
};
#endif

/* testh.h:37481 */
#ifndef SOAP_TYPE_ns2__VerticalPosition1d
#define SOAP_TYPE_ns2__VerticalPosition1d (1382)
/* complex XML schema type 'ns2:VerticalPosition1d': */
struct ns2__VerticalPosition1d {
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double VerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
};
#endif

/* testh.h:23105 */
#ifndef SOAP_TYPE_ns2__ComponentReference
#define SOAP_TYPE_ns2__ComponentReference (803)
/* complex XML schema type 'ns2:ComponentReference': */
struct ns2__ComponentReference {
        /** Required nillable (xsi:nil when NULL) element 'ns2:QualifiedType' of XML schema type 'ns2:QualifiedType' */
        char *QualifiedType;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uid' of XML schema type 'ns2:String64' */
        char *Uid;
        /** Optional element 'ns2:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
};
#endif

/* testh.h:26799 */
#ifndef SOAP_TYPE_ns2__DataObjectComponentReference
#define SOAP_TYPE_ns2__DataObjectComponentReference (957)
/* complex XML schema type 'ns2:DataObjectComponentReference': */
struct ns2__DataObjectComponentReference {
        /** Required nillable (xsi:nil when NULL) element 'ns2:DataObject' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataObject;
        /** Sequence of at least 1 elements 'ns2:Component' of XML schema type 'ns2:ComponentReference' stored in dynamic array Component of length __sizeComponent */
        int __sizeComponent;
        struct ns2__ComponentReference *Component;
};
#endif

/* testh.h:20825 */
#ifndef SOAP_TYPE_ns2__DataObjectReference
#define SOAP_TYPE_ns2__DataObjectReference (694)
/* complex XML schema type 'ns2:DataObjectReference': */
struct ns2__DataObjectReference {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uuid' of XML schema type 'ns2:UuidString' */
        char *Uuid;
        /** Optional element 'ns2:ObjectVersion' of XML schema type 'ns2:String64' */
        char *ObjectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:QualifiedType' of XML schema type 'ns2:QualifiedType' */
        char *QualifiedType;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:EnergisticsUri' of XML schema type 'xsd:anyURI' */
        char *EnergisticsUri;
        /** Sequence of elements 'ns2:LocatorUrl' of XML schema type 'xsd:anyURI' stored in dynamic array LocatorUrl of length __sizeLocatorUrl */
        int __sizeLocatorUrl;
        char **LocatorUrl;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:37646 */
#ifndef SOAP_TYPE_ns2__ExternalDataArray
#define SOAP_TYPE_ns2__ExternalDataArray (1384)
/* complex XML schema type 'ns2:ExternalDataArray': */
struct ns2__ExternalDataArray {
        /** Sequence of at least 1 elements 'ns2:ExternalDataArrayPart' of XML schema type 'ns2:ExternalDataArrayPart' stored in dynamic array ExternalDataArrayPart of length __sizeExternalDataArrayPart */
        int __sizeExternalDataArrayPart;
        struct ns2__ExternalDataArrayPart *ExternalDataArrayPart;
};
#endif

/* testh.h:37650 */
#ifndef SOAP_TYPE_ns2__ExternalDataArrayPart
#define SOAP_TYPE_ns2__ExternalDataArrayPart (1385)
/* complex XML schema type 'ns2:ExternalDataArrayPart': */
struct ns2__ExternalDataArrayPart {
        /** Sequence of at least 1 elements 'ns2:Count' of XML schema type 'ns2:PositiveLong' stored in dynamic array Count of length __sizeCount */
        int __sizeCount;
        LONG64 *Count;
        /** Required nillable (xsi:nil when NULL) element 'ns2:PathInExternalFile' of XML schema type 'ns2:String2000' */
        char *PathInExternalFile;
        /** Sequence of at least 1 elements 'ns2:StartIndex' of XML schema type 'ns2:NonNegativeLong' stored in dynamic array StartIndex of length __sizeStartIndex */
        int __sizeStartIndex;
        LONG64 *StartIndex;
        /** Required nillable (xsi:nil when NULL) element 'ns2:URI' of XML schema type 'ns2:String2000' */
        char *URI;
        /** Optional element 'ns2:MimeType' of XML schema type 'ns2:String2000' */
        char *MimeType;
};
#endif

/* testh.h:28520 */
#ifndef SOAP_TYPE_ns2__AbstractElevation
#define SOAP_TYPE_ns2__AbstractElevation (998)
/* complex XML schema type 'ns2:AbstractElevation': */
struct ns2__AbstractElevation {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Elevation' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Elevation;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractElevation when non-NULL */
        struct ns2__DatumElevation *ns2__DatumElevation;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractElevation when non-NULL */
        struct ns2__ReferencePointElevation *ns2__ReferencePointElevation;
};
#endif

/* testh.h:24569 */
#ifndef SOAP_TYPE_ns2__AbstractInterval
#define SOAP_TYPE_ns2__AbstractInterval (856)
/* complex XML schema type 'ns2:AbstractInterval': */
struct ns2__AbstractInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__AbstractPressureInterval *ns2__AbstractPressureInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__AbstractTvdInterval *ns2__AbstractTvdInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__DateTimeInterval *ns2__DateTimeInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__ElapsedTimeInterval *ns2__ElapsedTimeInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__ScalarInterval *ns2__ScalarInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns2__TemperatureInterval *ns2__TemperatureInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractInterval when non-NULL */
        struct ns1__PassIndexedDepthInterval *ns1__PassIndexedDepthInterval;
};
#endif

/* testh.h:37800 */
#ifndef SOAP_TYPE_ns2__AbstractValueArray
#define SOAP_TYPE_ns2__AbstractValueArray (1405)
/* complex XML schema type 'ns2:AbstractValueArray': */
struct ns2__AbstractValueArray {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractValueArray when non-NULL */
        struct ns2__AbstractBooleanArray *ns2__AbstractBooleanArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractValueArray when non-NULL */
        struct ns2__AbstractNumericArray *ns2__AbstractNumericArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractValueArray when non-NULL */
        struct ns2__AbstractStringArray *ns2__AbstractStringArray;
};
#endif

/* testh.h:20878 */
#ifndef SOAP_TYPE_ns2__AbstractVerticalDepth
#define SOAP_TYPE_ns2__AbstractVerticalDepth (698)
/* complex XML schema type 'ns2:AbstractVerticalDepth': */
struct ns2__AbstractVerticalDepth {
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalDepth' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *VerticalDepth;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalDepth when non-NULL */
        struct ns2__DatumVerticalDepth *ns2__DatumVerticalDepth;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalDepth when non-NULL */
        struct ns2__ReferencePointVerticalDepth *ns2__ReferencePointVerticalDepth;
};
#endif

/* testh.h:37848 */
#ifndef SOAP_TYPE_ns2__BooleanArrayStatistics
#define SOAP_TYPE_ns2__BooleanArrayStatistics (1416)
/* complex XML schema type 'ns2:BooleanArrayStatistics': */
struct ns2__BooleanArrayStatistics {
        /** Optional element 'ns2:ModePercentage' of XML schema type 'xsd:double' */
        double *ModePercentage;
        /** Optional element 'ns2:ValuesMode' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ValuesMode;
};
#endif

/* testh.h:37865 */
#ifndef SOAP_TYPE_ns2__FloatingPointArrayStatistics
#define SOAP_TYPE_ns2__FloatingPointArrayStatistics (1417)
/* complex XML schema type 'ns2:FloatingPointArrayStatistics': */
struct ns2__FloatingPointArrayStatistics {
        /** Optional element 'ns2:ValidValueCount' of XML schema type 'xsd:long' */
        LONG64 *ValidValueCount;
        /** Optional element 'ns2:MinimumValue' of XML schema type 'xsd:double' */
        double *MinimumValue;
        /** Optional element 'ns2:MaximumValue' of XML schema type 'xsd:double' */
        double *MaximumValue;
        /** Optional element 'ns2:ValuesMean' of XML schema type 'xsd:double' */
        double *ValuesMean;
        /** Optional element 'ns2:ValuesMedian' of XML schema type 'xsd:double' */
        double *ValuesMedian;
        /** Optional element 'ns2:ValuesMode' of XML schema type 'xsd:double' */
        double *ValuesMode;
        /** Optional element 'ns2:ModePercentage' of XML schema type 'xsd:double' */
        double *ModePercentage;
        /** Optional element 'ns2:ValuesStandardDeviation' of XML schema type 'xsd:double' */
        double *ValuesStandardDeviation;
};
#endif

/* testh.h:37894 */
#ifndef SOAP_TYPE_ns2__IntegerArrayStatistics
#define SOAP_TYPE_ns2__IntegerArrayStatistics (1418)
/* complex XML schema type 'ns2:IntegerArrayStatistics': */
struct ns2__IntegerArrayStatistics {
        /** Optional element 'ns2:ValidValueCount' of XML schema type 'xsd:long' */
        LONG64 *ValidValueCount;
        /** Optional element 'ns2:MinimumValue' of XML schema type 'xsd:long' */
        LONG64 *MinimumValue;
        /** Optional element 'ns2:MaximumValue' of XML schema type 'xsd:long' */
        LONG64 *MaximumValue;
        /** Optional element 'ns2:ValuesMedian' of XML schema type 'xsd:long' */
        LONG64 *ValuesMedian;
        /** Optional element 'ns2:ValuesMode' of XML schema type 'xsd:long' */
        LONG64 *ValuesMode;
        /** Optional element 'ns2:ModePercentage' of XML schema type 'xsd:double' */
        double *ModePercentage;
};
#endif

/* testh.h:37929 */
#ifndef SOAP_TYPE_ns2__JaggedArray
#define SOAP_TYPE_ns2__JaggedArray (1419)
/* complex XML schema type 'ns2:JaggedArray': */
struct ns2__JaggedArray {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Elements' of XML schema type 'ns2:AbstractValueArray' */
        struct ns2__AbstractValueArray *Elements;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CumulativeLength' of XML schema type 'ns2:AbstractIntegerArray' */
        struct ns2__AbstractIntegerArray *CumulativeLength;
};
#endif

/* testh.h:20475 */
#ifndef SOAP_TYPE_ns2__MeasuredDepth
#define SOAP_TYPE_ns2__MeasuredDepth (666)
/* complex XML schema type 'ns2:MeasuredDepth': */
struct ns2__MeasuredDepth {
        /** Required nillable (xsi:nil when NULL) element 'ns2:MeasuredDepth' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *MeasuredDepth;
        /** Optional element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:37979 */
#ifndef SOAP_TYPE_ns2__StringArrayStatistics
#define SOAP_TYPE_ns2__StringArrayStatistics (1423)
/* complex XML schema type 'ns2:StringArrayStatistics': */
struct ns2__StringArrayStatistics {
        /** Optional element 'ns2:ModePercentage' of XML schema type 'xsd:double' */
        double *ModePercentage;
        /** Optional element 'ns2:ValuesMode' of XML schema type 'xsd:string' */
        char *ValuesMode;
};
#endif

/* testh.h:38002 */
#ifndef SOAP_TYPE_ns2__AbstractGeographic2dCrs
#define SOAP_TYPE_ns2__AbstractGeographic2dCrs (1424)
/* complex XML schema type 'ns2:AbstractGeographic2dCrs': */
struct ns2__AbstractGeographic2dCrs {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGeographic2dCrs when non-NULL */
        struct ns2__GeodeticEpsgCrs *ns2__GeodeticEpsgCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGeographic2dCrs when non-NULL */
        struct ns2__GeodeticLocalAuthorityCrs *ns2__GeodeticLocalAuthorityCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGeographic2dCrs when non-NULL */
        struct ns2__GeodeticUnknownCrs *ns2__GeodeticUnknownCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGeographic2dCrs when non-NULL */
        struct ns2__GeodeticWktCrs *ns2__GeodeticWktCrs;
};
#endif

/* testh.h:38029 */
#ifndef SOAP_TYPE_ns2__AbstractProjectedCrs
#define SOAP_TYPE_ns2__AbstractProjectedCrs (1433)
/* complex XML schema type 'ns2:AbstractProjectedCrs': */
struct ns2__AbstractProjectedCrs {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractProjectedCrs when non-NULL */
        struct ns2__ProjectedEpsgCrs *ns2__ProjectedEpsgCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractProjectedCrs when non-NULL */
        struct ns2__ProjectedLocalAuthorityCrs *ns2__ProjectedLocalAuthorityCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractProjectedCrs when non-NULL */
        struct ns2__ProjectedUnknownCrs *ns2__ProjectedUnknownCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractProjectedCrs when non-NULL */
        struct ns2__ProjectedWktCrs *ns2__ProjectedWktCrs;
};
#endif

/* testh.h:38056 */
#ifndef SOAP_TYPE_ns2__AbstractVerticalCrs
#define SOAP_TYPE_ns2__AbstractVerticalCrs (1442)
/* complex XML schema type 'ns2:AbstractVerticalCrs': */
struct ns2__AbstractVerticalCrs {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalCrs when non-NULL */
        struct ns2__VerticalEpsgCrs *ns2__VerticalEpsgCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalCrs when non-NULL */
        struct ns2__VerticalLocalAuthorityCrs *ns2__VerticalLocalAuthorityCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalCrs when non-NULL */
        struct ns2__VerticalUnknownCrs *ns2__VerticalUnknownCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractVerticalCrs when non-NULL */
        struct ns2__VerticalWktCrs *ns2__VerticalWktCrs;
};
#endif

/* testh.h:38077 */
#ifndef SOAP_TYPE_ns2__HorizontalAxes
#define SOAP_TYPE_ns2__HorizontalAxes (1451)
/* complex XML schema type 'ns2:HorizontalAxes': */
struct ns2__HorizontalAxes {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Direction1' of XML schema type 'ns2:AxisDirectionKind' */
        enum ns2__AxisDirectionKind Direction1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Direction2' of XML schema type 'ns2:AxisDirectionKind' */
        enum ns2__AxisDirectionKind Direction2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthAndTimeUomExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsTime' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsTime;
};
#endif

/* testh.h:38106 */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemLocation
#define SOAP_TYPE_ns2__PublicLandSurveySystemLocation (1452)
/* complex XML schema type 'ns2:PublicLandSurveySystemLocation': */
struct ns2__PublicLandSurveySystemLocation {
        /** Optional element 'ns2:PrincipalMeridian' of XML schema type 'ns2:PrincipalMeridian' */
        enum ns2__PrincipalMeridian *PrincipalMeridian;
        /** Optional element 'ns2:Range' of XML schema type 'xsd:long' */
        LONG64 *Range;
        /** Optional element 'ns2:RangeDir' of XML schema type 'ns2:EastOrWest' */
        enum ns2__EastOrWest *RangeDir;
        /** Optional element 'ns2:Township' of XML schema type 'xsd:long' */
        LONG64 *Township;
        /** Optional element 'ns2:TownshipDir' of XML schema type 'ns2:NorthOrSouth' */
        enum ns2__NorthOrSouth *TownshipDir;
        /** Optional element 'ns2:Section' of XML schema type 'ns2:SectionNumber' */
        char *Section;
        /** Optional element 'ns2:QuarterSection' of XML schema type 'ns2:PublicLandSurveySystemQuarterSection' */
        char *QuarterSection;
        /** Optional element 'ns2:QuarterTownship' of XML schema type 'ns2:PublicLandSurveySystemQuarterTownship' */
        char *QuarterTownship;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AxisOrder' of XML schema type 'ns2:AxisOrder2d' */
        enum ns2__AxisOrder2d AxisOrder;
};
#endif

/* testh.h:38169 */
#ifndef SOAP_TYPE_ns2__Vector
#define SOAP_TYPE_ns2__Vector (1456)
/* complex XML schema type 'ns2:Vector': */
struct ns2__Vector {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Component1' of XML schema type 'xsd:double' */
        double Component1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Component2' of XML schema type 'xsd:double' */
        double Component2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Component3' of XML schema type 'xsd:double' */
        double Component3;
};
#endif

/* testh.h:38188 */
#ifndef SOAP_TYPE_ns2__VerticalAxis
#define SOAP_TYPE_ns2__VerticalAxis (1457)
/* complex XML schema type 'ns2:VerticalAxis': */
struct ns2__VerticalAxis {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Direction' of XML schema type 'ns2:VerticalDirection' */
        enum ns2__VerticalDirection Direction;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthAndTimeUomExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsTime' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsTime;	/**< initialized with default value = (enum xsd__boolean)0 */
};
#endif

/* testh.h:38216 */
#ifndef SOAP_TYPE_ns2__AbstractPressureValue
#define SOAP_TYPE_ns2__AbstractPressureValue (1458)
/* complex XML schema type 'ns2:AbstractPressureValue': */
struct ns2__AbstractPressureValue {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureValue when non-NULL */
        struct ns2__AbsolutePressure *ns2__AbsolutePressure;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureValue when non-NULL */
        struct ns2__GaugePressure *ns2__GaugePressure;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureValue when non-NULL */
        struct ns2__RelativePressure *ns2__RelativePressure;
};
#endif

/* testh.h:38243 */
#ifndef SOAP_TYPE_ns2__AbstractTemperaturePressure
#define SOAP_TYPE_ns2__AbstractTemperaturePressure (1465)
/* complex XML schema type 'ns2:AbstractTemperaturePressure': */
struct ns2__AbstractTemperaturePressure {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractTemperaturePressure when non-NULL */
        struct ns2__ReferenceTemperaturePressure *ns2__ReferenceTemperaturePressure;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractTemperaturePressure when non-NULL */
        struct ns2__TemperaturePressure *ns2__TemperaturePressure;
};
#endif

/* testh.h:38264 */
#ifndef SOAP_TYPE_ns2__DensityValue
#define SOAP_TYPE_ns2__DensityValue (1470)
/* complex XML schema type 'ns2:DensityValue': */
struct ns2__DensityValue {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Density' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *Density;
        /** Optional element 'ns2:MeasurementPressureTemperature' of XML schema type 'ns2:AbstractTemperaturePressure' */
        struct ns2__AbstractTemperaturePressure *MeasurementPressureTemperature;
};
#endif

/* testh.h:38289 */
#ifndef SOAP_TYPE_ns2__FlowRateValue
#define SOAP_TYPE_ns2__FlowRateValue (1472)
/* complex XML schema type 'ns2:FlowRateValue': */
struct ns2__FlowRateValue {
        /** Required nillable (xsi:nil when NULL) element 'ns2:FlowRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowRate;
        /** Optional element 'ns2:MeasurementPressureTemperature' of XML schema type 'ns2:AbstractTemperaturePressure' */
        struct ns2__AbstractTemperaturePressure *MeasurementPressureTemperature;
};
#endif

/* testh.h:38310 */
#ifndef SOAP_TYPE_ns2__PressureValue
#define SOAP_TYPE_ns2__PressureValue (1473)
/* complex XML schema type 'ns2:PressureValue': */
struct ns2__PressureValue {
        /** Required nillable (xsi:nil when NULL) element 'ns2:AbstractPressureValue' of XML schema type 'ns2:AbstractPressureValue' */
        struct ns2__AbstractPressureValue *AbstractPressureValue;
};
#endif

/* testh.h:38329 */
#ifndef SOAP_TYPE_ns2__VolumeValue
#define SOAP_TYPE_ns2__VolumeValue (1475)
/* complex XML schema type 'ns2:VolumeValue': */
struct ns2__VolumeValue {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Volume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *Volume;
        /** Optional element 'ns2:MeasurementPressureTemperature' of XML schema type 'ns2:AbstractTemperaturePressure' */
        struct ns2__AbstractTemperaturePressure *MeasurementPressureTemperature;
};
#endif

/* testh.h:37007 */
#ifndef SOAP_TYPE_ns2__OSDUIntegration
#define SOAP_TYPE_ns2__OSDUIntegration (1262)
/* complex XML schema type 'ns2:OSDUIntegration': */
struct ns2__OSDUIntegration {
        /** Sequence of elements 'ns2:LineageAssertions' of XML schema type 'ns2:OSDULineageAssertion' stored in dynamic array LineageAssertions of length __sizeLineageAssertions */
        int __sizeLineageAssertions;
        struct ns2__OSDULineageAssertion *LineageAssertions;
        /** Sequence of elements 'ns2:OwnerGroup' of XML schema type 'ns2:String256' stored in dynamic array OwnerGroup of length __sizeOwnerGroup */
        int __sizeOwnerGroup;
        char **OwnerGroup;
        /** Sequence of elements 'ns2:ViewerGroup' of XML schema type 'ns2:String256' stored in dynamic array ViewerGroup of length __sizeViewerGroup */
        int __sizeViewerGroup;
        char **ViewerGroup;
        /** Sequence of elements 'ns2:LegalTags' of XML schema type 'ns2:String256' stored in dynamic array LegalTags of length __sizeLegalTags */
        int __sizeLegalTags;
        char **LegalTags;
        /** Optional element 'ns2:OSDUGeoJSON' of XML schema type 'xsd:string' */
        char *OSDUGeoJSON;
        /** Optional element 'ns2:WGS84Latitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *WGS84Latitude;
        /** Optional element 'ns2:WGS84Longitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *WGS84Longitude;
        /** Optional element 'ns2:WGS84LocationMetadata' of XML schema type 'ns2:OSDUSpatialLocationIntegration' */
        struct ns2__OSDUSpatialLocationIntegration *WGS84LocationMetadata;
        /** Optional element 'ns2:Field' of XML schema type 'ns2:String64' */
        char *Field;
        /** Optional element 'ns2:Country' of XML schema type 'ns2:String64' */
        char *Country;
        /** Optional element 'ns2:State' of XML schema type 'ns2:String64' */
        char *State;
        /** Optional element 'ns2:County' of XML schema type 'ns2:String64' */
        char *County;
        /** Optional element 'ns2:City' of XML schema type 'ns2:String64' */
        char *City;
        /** Optional element 'ns2:Region' of XML schema type 'ns2:String64' */
        char *Region;
        /** Optional element 'ns2:District' of XML schema type 'ns2:String64' */
        char *District;
        /** Optional element 'ns2:Block' of XML schema type 'ns2:String64' */
        char *Block;
        /** Optional element 'ns2:Prospect' of XML schema type 'ns2:String64' */
        char *Prospect;
        /** Optional element 'ns2:Play' of XML schema type 'ns2:String64' */
        char *Play;
        /** Optional element 'ns2:Basin' of XML schema type 'ns2:String64' */
        char *Basin;
};
#endif

/* testh.h:38358 */
#ifndef SOAP_TYPE_ns2__OSDULineageAssertion
#define SOAP_TYPE_ns2__OSDULineageAssertion (1476)
/* complex XML schema type 'ns2:OSDULineageAssertion': */
struct ns2__OSDULineageAssertion {
        /** Required nillable (xsi:nil when NULL) element 'ns2:ID' of XML schema type 'ns2:String256' */
        char *ID;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LineageRelationshipKind' of XML schema type 'ns2:OSDULineageRelationshipKind' */
        enum ns2__OSDULineageRelationshipKind LineageRelationshipKind;
};
#endif

/* testh.h:38448 */
#ifndef SOAP_TYPE_ns2__OSDUReferencePointIntegration
#define SOAP_TYPE_ns2__OSDUReferencePointIntegration (1478)
/* complex XML schema type 'ns2:OSDUReferencePointIntegration': */
struct ns2__OSDUReferencePointIntegration {
        /** Optional element 'ns2:EffectiveDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDateTime;
        /** Optional element 'ns2:TerminationDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *TerminationDateTime;
};
#endif

/* testh.h:21493 */
#ifndef SOAP_TYPE_ns2__OSDUSpatialLocationIntegration
#define SOAP_TYPE_ns2__OSDUSpatialLocationIntegration (728)
/* complex XML schema type 'ns2:OSDUSpatialLocationIntegration': */
struct ns2__OSDUSpatialLocationIntegration {
        /** Optional element 'ns2:SpatialLocationCoordinatesDate' of XML schema type 'ns2:TimeStamp' */
        time_t *SpatialLocationCoordinatesDate;
        /** Optional element 'ns2:QuantitativeAccuracyBand' of XML schema type 'ns2:String64' */
        char *QuantitativeAccuracyBand;
        /** Optional element 'ns2:QualitativeSpatialAccuracyType' of XML schema type 'ns2:String64' */
        char *QualitativeSpatialAccuracyType;
        /** Optional element 'ns2:CoordinateQualityCheckPerformedBy' of XML schema type 'ns2:String64' */
        char *CoordinateQualityCheckPerformedBy;
        /** Optional element 'ns2:CoordinateQualityCheckDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *CoordinateQualityCheckDateTime;
        /** Sequence of elements 'ns2:CoordinateQualityCheckRemark' of XML schema type 'ns2:String256' stored in dynamic array CoordinateQualityCheckRemark of length __sizeCoordinateQualityCheckRemark */
        int __sizeCoordinateQualityCheckRemark;
        char **CoordinateQualityCheckRemark;
        /** Sequence of elements 'ns2:AppliedOperation' of XML schema type 'ns2:String256' stored in dynamic array AppliedOperation of length __sizeAppliedOperation */
        int __sizeAppliedOperation;
        char **AppliedOperation;
};
#endif

/* testh.h:38540 */
#ifndef SOAP_TYPE_ns2__FacilityLifecyclePeriod
#define SOAP_TYPE_ns2__FacilityLifecyclePeriod (1479)
/* complex XML schema type 'ns2:FacilityLifecyclePeriod': */
struct ns2__FacilityLifecyclePeriod {
        /** Required nillable (xsi:nil when NULL) element 'ns2:State' of XML schema type 'ns2:FacilityLifecycleStateExt' */
        char *State;
        /** Optional element 'ns2:StartDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDateTime;
        /** Optional element 'ns2:EndDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDateTime;
};
#endif

/* testh.h:38575 */
#ifndef SOAP_TYPE_ns2__FacilityOperator
#define SOAP_TYPE_ns2__FacilityOperator (1480)
/* complex XML schema type 'ns2:FacilityOperator': */
struct ns2__FacilityOperator {
        /** Required nillable (xsi:nil when NULL) element 'ns2:BusinessAssociate' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *BusinessAssociate;
        /** Optional element 'ns2:EffectiveDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDateTime;
        /** Optional element 'ns2:TerminationDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *TerminationDateTime;
};
#endif

/* testh.h:38611 */
#ifndef SOAP_TYPE_ns2__GeologicTime
#define SOAP_TYPE_ns2__GeologicTime (1481)
/* complex XML schema type 'ns2:GeologicTime': */
struct ns2__GeologicTime {
        /** Optional element 'ns2:AgeOffsetAttribute' of XML schema type 'xsd:long' */
        LONG64 *AgeOffsetAttribute;
        /** Required nillable (xsi:nil when NULL) element 'ns2:DateTime' of XML schema type 'ns2:TimeStamp' */
        time_t DateTime;
};
#endif

/* testh.h:38641 */
#ifndef SOAP_TYPE_ns2__PropertyKindFacet
#define SOAP_TYPE_ns2__PropertyKindFacet (1482)
/* complex XML schema type 'ns2:PropertyKindFacet': */
struct ns2__PropertyKindFacet {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Facet' of XML schema type 'ns2:FacetExt' */
        char *Facet;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Kind' of XML schema type 'ns2:FacetKind' */
        enum ns2__FacetKind Kind;
};
#endif

/* testh.h:38671 */
#ifndef SOAP_TYPE_ns2__TimeIndex
#define SOAP_TYPE_ns2__TimeIndex (1483)
/* complex XML schema type 'ns2:TimeIndex': */
struct ns2__TimeIndex {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 Index;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TimeSeries' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *TimeSeries;
};
#endif

/* testh.h:38692 */
#ifndef SOAP_TYPE_ns2__TimeOrIntervalSeries
#define SOAP_TYPE_ns2__TimeOrIntervalSeries (1484)
/* complex XML schema type 'ns2:TimeOrIntervalSeries': */
struct ns2__TimeOrIntervalSeries {
        /** Required nillable (xsi:nil when NULL) element 'ns2:UseInterval' of XML schema type 'xsd:boolean' */
        enum xsd__boolean UseInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TimeSeries' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *TimeSeries;
};
#endif

/* testh.h:38713 */
#ifndef SOAP_TYPE_ns2__TimeSeriesParentage
#define SOAP_TYPE_ns2__TimeSeriesParentage (1485)
/* complex XML schema type 'ns2:TimeSeriesParentage': */
struct ns2__TimeSeriesParentage {
        /** Required nillable (xsi:nil when NULL) element 'ns2:HasOverlap' of XML schema type 'xsd:boolean' */
        enum xsd__boolean HasOverlap;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ParentTimeIndex' of XML schema type 'ns2:TimeIndex' */
        struct ns2__TimeIndex *ParentTimeIndex;
};
#endif

/* testh.h:38738 */
#ifndef SOAP_TYPE_ns2__WellStatusPeriod
#define SOAP_TYPE_ns2__WellStatusPeriod (1487)
/* complex XML schema type 'ns2:WellStatusPeriod': */
struct ns2__WellStatusPeriod {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Status' of XML schema type 'ns2:WellStatus' */
        enum ns2__WellStatus Status;
        /** Optional element 'ns2:StartDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDateTime;
        /** Optional element 'ns2:EndDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDateTime;
};
#endif

/* testh.h:38773 */
#ifndef SOAP_TYPE_ns2__GeneralAddress
#define SOAP_TYPE_ns2__GeneralAddress (1488)
/* complex XML schema type 'ns2:GeneralAddress': */
struct ns2__GeneralAddress {
        /** Optional element 'ns2:Name' of XML schema type 'ns2:String64' */
        char *Name;
        /** Sequence of 1 to 4 elements 'ns2:Street' of XML schema type 'ns2:String64' stored in dynamic array Street of length __sizeStreet */
        int __sizeStreet;
        char **Street;
        /** Required nillable (xsi:nil when NULL) element 'ns2:City' of XML schema type 'ns2:String64' */
        char *City;
        /** Optional element 'ns2:Country' of XML schema type 'ns2:String64' */
        char *Country;
        /** Required nillable (xsi:nil when NULL) element 'ns2:County' of XML schema type 'ns2:String64' */
        char *County;
        /** Optional element 'ns2:PostalCode' of XML schema type 'ns2:String64' */
        char *PostalCode;
        /** Required nillable (xsi:nil when NULL) element 'ns2:State' of XML schema type 'ns2:String64' */
        char *State;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Province' of XML schema type 'ns2:String64' */
        char *Province;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'kind' of XML schema type 'ns2:AddressKindEnum' */
        enum ns2__AddressKindEnum *kind;
};
#endif

/* testh.h:38852 */
#ifndef SOAP_TYPE_ns2__PersonName
#define SOAP_TYPE_ns2__PersonName (1490)
/* complex XML schema type 'ns2:PersonName': */
struct ns2__PersonName {
        /** Optional element 'ns2:Prefix' of XML schema type 'ns2:String64' */
        char *Prefix;
        /** Required nillable (xsi:nil when NULL) element 'ns2:First' of XML schema type 'ns2:String64' */
        char *First;
        /** Optional element 'ns2:Middle' of XML schema type 'ns2:String64' */
        char *Middle;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Last' of XML schema type 'ns2:String64' */
        char *Last;
        /** Sequence of 0 to 9 elements 'ns2:Suffix' of XML schema type 'ns2:String64' stored in dynamic array Suffix of length __sizeSuffix */
        int __sizeSuffix;
        char **Suffix;
};
#endif

/* testh.h:38901 */
#ifndef SOAP_TYPE_ns2__PhoneNumberStruct
#define SOAP_TYPE_ns2__PhoneNumberStruct (1491)
/* complex XML schema type 'ns2:PhoneNumberStruct': */
struct ns2__PhoneNumberStruct {
        /** Required attribute 'type' of XML schema type 'ns2:PhoneType' */
        enum ns2__PhoneType type;
        /** Optional attribute 'qualifier' of XML schema type 'ns2:AddressQualifier' */
        enum ns2__AddressQualifier *qualifier;
        /** Optional attribute 'extension' of XML schema type 'ns2:String64' */
        char *extension;
        char *__mixed;
};
#endif

/* testh.h:38948 */
#ifndef SOAP_TYPE_ns2__AbstractActivityParameter
#define SOAP_TYPE_ns2__AbstractActivityParameter (1493)
/* complex XML schema type 'ns2:AbstractActivityParameter': */
struct ns2__AbstractActivityParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActivityParameter when non-NULL */
        struct ns2__DataObjectParameter *ns2__DataObjectParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActivityParameter when non-NULL */
        struct ns2__DoubleQuantityParameter *ns2__DoubleQuantityParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActivityParameter when non-NULL */
        struct ns2__IntegerQuantityParameter *ns2__IntegerQuantityParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActivityParameter when non-NULL */
        struct ns2__StringParameter *ns2__StringParameter;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActivityParameter when non-NULL */
        struct ns2__TimeIndexParameter *ns2__TimeIndexParameter;
};
#endif

/* testh.h:38976 */
#ifndef SOAP_TYPE_ns2__AbstractParameterKey
#define SOAP_TYPE_ns2__AbstractParameterKey (1494)
/* complex XML schema type 'ns2:AbstractParameterKey': */
struct ns2__AbstractParameterKey {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractParameterKey when non-NULL */
        struct ns2__DoubleParameterKey *ns2__DoubleParameterKey;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractParameterKey when non-NULL */
        struct ns2__IntegerParameterKey *ns2__IntegerParameterKey;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractParameterKey when non-NULL */
        struct ns2__ObjectParameterKey *ns2__ObjectParameterKey;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractParameterKey when non-NULL */
        struct ns2__StringParameterKey *ns2__StringParameterKey;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractParameterKey when non-NULL */
        struct ns2__TimeIndexParameterKey *ns2__TimeIndexParameterKey;
};
#endif

/* testh.h:39037 */
#ifndef SOAP_TYPE_ns2__ParameterTemplate
#define SOAP_TYPE_ns2__ParameterTemplate (1516)
/* complex XML schema type 'ns2:ParameterTemplate': */
struct ns2__ParameterTemplate {
        /** Sequence of elements 'ns2:AllowedKind' of XML schema type 'ns2:ActivityParameterKind' stored in dynamic array AllowedKind of length __sizeAllowedKind */
        int __sizeAllowedKind;
        enum ns2__ActivityParameterKind *AllowedKind;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsInput' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsInput;
        /** Sequence of elements 'ns2:KeyConstraint' of XML schema type 'ns2:String2000' stored in dynamic array KeyConstraint of length __sizeKeyConstraint */
        int __sizeKeyConstraint;
        char **KeyConstraint;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsOutput' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsOutput;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:DataObjectContentType' of XML schema type 'ns2:String2000' */
        char *DataObjectContentType;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxOccurs' of XML schema type 'xsd:long' */
        LONG64 MaxOccurs;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinOccurs' of XML schema type 'xsd:long' */
        LONG64 MinOccurs;
        /** Optional element 'ns2:Constraint' of XML schema type 'ns2:String2000' */
        char *Constraint;
        /** Sequence of elements 'ns2:DefaultValue' of XML schema type 'ns2:AbstractActivityParameter' stored in dynamic array DefaultValue of length __sizeDefaultValue */
        int __sizeDefaultValue;
        struct ns2__AbstractActivityParameter *DefaultValue;
};
#endif

/* testh.h:39121 */
#ifndef SOAP_TYPE_ns2__SingleCollectionAssociation
#define SOAP_TYPE_ns2__SingleCollectionAssociation (1519)
/* complex XML schema type 'ns2:SingleCollectionAssociation': */
struct ns2__SingleCollectionAssociation {
        /** Optional element 'ns2:HomogeneousDatatype' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *HomogeneousDatatype;
        /** Sequence of at least 1 elements 'ns2:Dataobject' of XML schema type 'ns2:DataObjectReference' stored in dynamic array Dataobject of length __sizeDataobject */
        int __sizeDataobject;
        struct ns2__DataObjectReference *Dataobject;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Collection' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Collection;
};
#endif

/* testh.h:39150 */
#ifndef SOAP_TYPE_ns2__Column
#define SOAP_TYPE_ns2__Column (1520)
/* complex XML schema type 'ns2:Column': */
struct ns2__Column {
        /** Optional element 'ns2:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns2:Title' of XML schema type 'ns2:String64' */
        char *Title;
        /** Optional element 'ns2:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ValueCountPerRow' of XML schema type 'ns2:PositiveLong' */
        LONG64 ValueCountPerRow;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:PropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *PropertyKind;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:AbstractValueArray' */
        struct ns2__AbstractValueArray *Values;
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Sequence of elements 'ns2:Facet' of XML schema type 'ns2:PropertyKindFacet' stored in dynamic array Facet of length __sizeFacet */
        int __sizeFacet;
        struct ns2__PropertyKindFacet *Facet;
};
#endif

/* testh.h:39206 */
#ifndef SOAP_TYPE_ns2__NestedColumnBasedTable
#define SOAP_TYPE_ns2__NestedColumnBasedTable (1522)
/* complex XML schema type 'ns2:NestedColumnBasedTable': */
struct ns2__NestedColumnBasedTable {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String256' */
        char *Title;
        /** Optional element 'ns2:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Sequence of elements 'ns2:KeyColumn' of XML schema type 'ns2:Column' stored in dynamic array KeyColumn of length __sizeKeyColumn */
        int __sizeKeyColumn;
        struct ns2__Column *KeyColumn;
        /** Sequence of at least 1 elements 'ns2:Column' of XML schema type 'ns2:Column' stored in dynamic array Column of length __sizeColumn */
        int __sizeColumn;
        struct ns2__Column *Column;
};
#endif

/* testh.h:39235 */
#ifndef SOAP_TYPE_ns2__FailingRule
#define SOAP_TYPE_ns2__FailingRule (1524)
/* complex XML schema type 'ns2:FailingRule': */
struct ns2__FailingRule {
        /** Required nillable (xsi:nil when NULL) element 'ns2:RuleId' of XML schema type 'ns2:String64' */
        char *RuleId;
        /** Optional element 'ns2:RuleName' of XML schema type 'ns2:String2000' */
        char *RuleName;
        /** Optional element 'ns2:Severity' of XML schema type 'ns2:String64' */
        char *Severity;
        /** Sequence of elements 'ns2:FailingRuleExtensions' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array FailingRuleExtensions of length __sizeFailingRuleExtensions */
        int __sizeFailingRuleExtensions;
        struct ns2__ExtensionNameValue *FailingRuleExtensions;
};
#endif

/* testh.h:39281 */
#ifndef SOAP_TYPE_ns2__IndexRange
#define SOAP_TYPE_ns2__IndexRange (1525)
/* complex XML schema type 'ns2:IndexRange': */
struct ns2__IndexRange {
        /** Required nillable (xsi:nil when NULL) element 'ns2:IndexMinimum' of XML schema type 'ns2:String64' */
        char *IndexMinimum;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IndexMaximum' of XML schema type 'ns2:String64' */
        char *IndexMaximum;
};
#endif

/* testh.h:39306 */
#ifndef SOAP_TYPE_ns2__AbstractGraphicalInformation
#define SOAP_TYPE_ns2__AbstractGraphicalInformation (1526)
/* complex XML schema type 'ns2:AbstractGraphicalInformation': */
struct ns2__AbstractGraphicalInformation {
        /** Sequence of at least 1 elements 'ns2:TargetObject' of XML schema type 'ns2:DataObjectReference' stored in dynamic array TargetObject of length __sizeTargetObject */
        int __sizeTargetObject;
        struct ns2__DataObjectReference *TargetObject;
};
#endif

/* testh.h:37071 */
#ifndef SOAP_TYPE_ns1__BhaRun
#define SOAP_TYPE_ns1__BhaRun (1306)
/* complex XML schema type 'ns1:BhaRun': */
struct ns1__BhaRun {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimStop' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStop;
        /** Optional element 'ns1:DTimStartDrilling' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStartDrilling;
        /** Optional element 'ns1:DTimStopDrilling' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStopDrilling;
        /** Optional element 'ns1:PlanDogleg' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *PlanDogleg;
        /** Optional element 'ns1:ActDogleg' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *ActDogleg;
        /** Optional element 'ns1:ActDoglegMx' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *ActDoglegMx;
        /** Optional element 'ns1:BhaRunStatus' of XML schema type 'ns1:BhaStatus' */
        enum ns1__BhaStatus *BhaRunStatus;
        /** Optional element 'ns1:NumBitRun' of XML schema type 'xsd:long' */
        LONG64 *NumBitRun;
        /** Optional element 'ns1:NumStringRun' of XML schema type 'xsd:long' */
        LONG64 *NumStringRun;
        /** Optional element 'ns1:ReasonTrip' of XML schema type 'ns2:String2000' */
        char *ReasonTrip;
        /** Optional element 'ns1:ObjectiveBha' of XML schema type 'ns2:String2000' */
        char *ObjectiveBha;
        /** Sequence of elements 'ns1:DrillingParams' of XML schema type 'ns1:DrillingParams' stored in dynamic array DrillingParams of length __sizeDrillingParams */
        int __sizeDrillingParams;
        struct ns1__DrillingParams *DrillingParams;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:Tubular' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tubular;
};
#endif

/* testh.h:37073 */
#ifndef SOAP_TYPE_ns1__FluidsReport
#define SOAP_TYPE_ns1__FluidsReport (1308)
/* complex XML schema type 'ns1:FluidsReport': */
struct ns1__FluidsReport {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:NumReport' of XML schema type 'xsd:long' */
        LONG64 *NumReport;
        /** Sequence of elements 'ns1:Fluid' of XML schema type 'ns1:Fluid' stored in dynamic array Fluid of length __sizeFluid */
        int __sizeFluid;
        struct ns1__Fluid *Fluid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:21586 */
#ifndef SOAP_TYPE_ns1__BendAngle
#define SOAP_TYPE_ns1__BendAngle (733)
/* complex XML schema type 'ns1:BendAngle': */
struct ns1__BendAngle {
        /** Optional element 'ns1:BendAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *BendAngle;
};
#endif

/* testh.h:21588 */
#ifndef SOAP_TYPE_ns1__BendOffset
#define SOAP_TYPE_ns1__BendOffset (735)
/* complex XML schema type 'ns1:BendOffset': */
struct ns1__BendOffset {
        /** Optional element 'ns1:BendOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *BendOffset;
};
#endif

/* testh.h:37075 */
#ifndef SOAP_TYPE_ns1__Tubular
#define SOAP_TYPE_ns1__Tubular (1310)
/* complex XML schema type 'ns1:Tubular': */
struct ns1__Tubular {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:MixedString' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *MixedString;
        /** Optional element 'ns1:NominalDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *NominalDiameter;
        /** Optional element 'ns1:TubularOSDUIntegration' of XML schema type 'ns1:TubularOSDUIntegration' */
        struct ns1__TubularOSDUIntegration *TubularOSDUIntegration;
        /** Sequence of elements 'ns1:TubularUmbilical' of XML schema type 'ns1:TubularUmbilical' stored in dynamic array TubularUmbilical of length __sizeTubularUmbilical */
        int __sizeTubularUmbilical;
        struct ns1__TubularUmbilical *TubularUmbilical;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeTubularAssy' of XML schema type 'ns1:TubularAssembly' */
        enum ns1__TubularAssembly TypeTubularAssy;
        /** Optional element 'ns1:ValveFloat' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ValveFloat;
        /** Optional element 'ns1:SourceNuclear' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *SourceNuclear;
        /** Optional element 'ns1:DiaHoleAssy' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaHoleAssy;
        /** Sequence of elements 'ns1:TubularComponent' of XML schema type 'ns1:TubularComponent' stored in dynamic array TubularComponent of length __sizeTubularComponent */
        int __sizeTubularComponent;
        struct ns1__TubularComponent *TubularComponent;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:23721 */
#ifndef SOAP_TYPE_ns1__CementDesignStage
#define SOAP_TYPE_ns1__CementDesignStage (823)
/* complex XML schema type 'ns1:CementDesignStage': */
struct ns1__CementDesignStage {
        /** Optional element 'ns1:AnnularFlowAfter' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AnnularFlowAfter;
        /** Optional element 'ns1:ReciprocationSlackoff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationSlackoff;
        /** Optional element 'ns1:BotPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *BotPlug;
        /** Optional element 'ns1:BotPlugNumber' of XML schema type 'xsd:long' */
        LONG64 *BotPlugNumber;
        /** Optional element 'ns1:DiaTailPipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaTailPipe;
        /** Optional element 'ns1:DisplacementFluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *DisplacementFluid;
        /** Optional element 'ns1:ETimPresHeld' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPresHeld;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:FlowrateMudCirc' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMudCirc;
        /** Optional element 'ns1:Gel10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Min;
        /** Optional element 'ns1:Gel10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Sec;
        /** Optional element 'ns1:MdCircOut' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCircOut;
        /** Optional element 'ns1:MdCoilTbg' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCoilTbg;
        /** Optional element 'ns1:MdString' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdString;
        /** Optional element 'ns1:MdTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTool;
        /** Optional element 'ns1:MixMethod' of XML schema type 'ns2:String64' */
        char *MixMethod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumStage' of XML schema type 'xsd:long' */
        LONG64 NumStage;
        /** Optional element 'ns1:ReciprocationOverpull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationOverpull;
        /** Optional element 'ns1:PillBelowPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PillBelowPlug;
        /** Optional element 'ns1:PlugCatcher' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PlugCatcher;
        /** Optional element 'ns1:PresBackPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBackPressure;
        /** Optional element 'ns1:PresBump' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBump;
        /** Optional element 'ns1:PresCoilTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgEnd;
        /** Optional element 'ns1:PresCoilTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgStart;
        /** Optional element 'ns1:PresCsgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgEnd;
        /** Optional element 'ns1:PresCsgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgStart;
        /** Optional element 'ns1:PresDisplace' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDisplace;
        /** Optional element 'ns1:PresHeld' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresHeld;
        /** Optional element 'ns1:PresMudCirc' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMudCirc;
        /** Optional element 'ns1:PresTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgEnd;
        /** Optional element 'ns1:PresTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgStart;
        /** Optional element 'ns1:PvMud' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *PvMud;
        /** Optional element 'ns1:SqueezeObjective' of XML schema type 'ns2:String64' */
        char *SqueezeObjective;
        /** Optional element 'ns1:StageMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StageMdInterval;
        /** Optional element 'ns1:TailPipePerf' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipePerf;
        /** Optional element 'ns1:TailPipeUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipeUsed;
        /** Optional element 'ns1:TempBHCT' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHCT;
        /** Optional element 'ns1:TempBHST' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHST;
        /** Optional element 'ns1:TopPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TopPlug;
        /** Optional element 'ns1:TypeOriginalMud' of XML schema type 'ns2:String64' */
        char *TypeOriginalMud;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeStage' of XML schema type 'ns2:String64' */
        char *TypeStage;
        /** Optional element 'ns1:VolCircPrior' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCircPrior;
        /** Optional element 'ns1:VolCsgIn' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgIn;
        /** Optional element 'ns1:VolCsgOut' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgOut;
        /** Optional element 'ns1:VolDisplaceFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolDisplaceFluid;
        /** Optional element 'ns1:VolExcess' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolExcess;
        /** Optional element 'ns1:VolExcessMethod' of XML schema type 'ns2:String64' */
        char *VolExcessMethod;
        /** Optional element 'ns1:VolMudLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudLost;
        /** Optional element 'ns1:VolReturns' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolReturns;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Optional element 'ns1:YpMud' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *YpMud;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:CementPumpScheduleStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__CementPumpScheduleStep *Step;
        /** Sequence of elements 'ns1:OriginalFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array OriginalFluidLocation of length __sizeOriginalFluidLocation */
        int __sizeOriginalFluidLocation;
        struct ns1__FluidLocation *OriginalFluidLocation;
        /** Sequence of elements 'ns1:EndingFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array EndingFluidLocation of length __sizeEndingFluidLocation */
        int __sizeEndingFluidLocation;
        struct ns1__FluidLocation *EndingFluidLocation;
};
#endif

/* testh.h:37077 */
#ifndef SOAP_TYPE_ns1__CementJob
#define SOAP_TYPE_ns1__CementJob (1312)
/* complex XML schema type 'ns1:CementJob': */
struct ns1__CementJob {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:JobType' of XML schema type 'ns1:CementJobType' */
        enum ns1__CementJobType *JobType;
        /** Optional element 'ns1:JobConfig' of XML schema type 'ns2:String2000' */
        char *JobConfig;
        /** Optional element 'ns1:NameCementedString' of XML schema type 'ns2:String64' */
        char *NameCementedString;
        /** Optional element 'ns1:NameWorkString' of XML schema type 'ns2:String64' */
        char *NameWorkString;
        /** Optional element 'ns1:OffshoreJob' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *OffshoreJob;
        /** Optional element 'ns1:MdWater' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MdWater;
        /** Optional element 'ns1:ReturnsToSeabed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ReturnsToSeabed;
        /** Optional element 'ns1:MdPrevShoe' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdPrevShoe;
        /** Optional element 'ns1:MdHole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHole;
        /** Optional element 'ns1:TvdPrevShoe' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdPrevShoe;
        /** Optional element 'ns1:MdStringSet' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdStringSet;
        /** Optional element 'ns1:TvdStringSet' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdStringSet;
        /** Optional element 'ns1:TypePlug' of XML schema type 'ns2:String64' */
        char *TypePlug;
        /** Optional element 'ns1:NameCementString' of XML schema type 'ns2:String64' */
        char *NameCementString;
        /** Optional element 'ns1:TypeSqueeze' of XML schema type 'ns2:String64' */
        char *TypeSqueeze;
        /** Optional element 'ns1:MdSqueeze' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdSqueeze;
        /** Optional element 'ns1:ToolCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ToolCompany;
        /** Optional element 'ns1:TypeTool' of XML schema type 'ns2:String64' */
        char *TypeTool;
        /** Optional element 'ns1:CoilTubing' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CoilTubing;
        /** Optional element 'ns1:HoleConfig' of XML schema type 'ns1:WellboreGeometryReport' */
        struct ns1__WellboreGeometryReport *HoleConfig;
        /** Optional element 'ns1:JobReport' of XML schema type 'ns1:CementJobReport' */
        struct ns1__CementJobReport *JobReport;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:Design' of XML schema type 'ns1:CementJobDesign' */
        struct ns1__CementJobDesign *Design;
        /** Sequence of elements 'ns1:CementingFluid' of XML schema type 'ns1:CementingFluid' stored in dynamic array CementingFluid of length __sizeCementingFluid */
        int __sizeCementingFluid;
        struct ns1__CementingFluid *CementingFluid;
};
#endif

/* testh.h:23375 */
#ifndef SOAP_TYPE_ns1__CementJobDesign
#define SOAP_TYPE_ns1__CementJobDesign (814)
/* complex XML schema type 'ns1:CementJobDesign': */
struct ns1__CementJobDesign {
        /** Optional element 'ns1:CementEngr' of XML schema type 'ns2:String64' */
        char *CementEngr;
        /** Optional element 'ns1:ETimWaitingOnCement' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimWaitingOnCement;
        /** Optional element 'ns1:PlugInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PlugInterval;
        /** Optional element 'ns1:MdHole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHole;
        /** Optional element 'ns1:Contractor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Contractor;
        /** Optional element 'ns1:RpmPipe' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipe;
        /** Optional element 'ns1:TqInitPipeRot' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqInitPipeRot;
        /** Optional element 'ns1:TqPipeAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeAv;
        /** Optional element 'ns1:TqPipeMx' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeMx;
        /** Optional element 'ns1:OverPull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *OverPull;
        /** Optional element 'ns1:SlackOff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *SlackOff;
        /** Optional element 'ns1:RpmPipeRecip' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipeRecip;
        /** Optional element 'ns1:LenPipeRecipStroke' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenPipeRecipStroke;
        /** Optional element 'ns1:Reciprocating' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Reciprocating;
        /** Sequence of at least 1 elements 'ns1:CementDesignStage' of XML schema type 'ns1:CementStageDesign' stored in dynamic array CementDesignStage of length __sizeCementDesignStage */
        int __sizeCementDesignStage;
        struct ns1__CementStageDesign *CementDesignStage;
};
#endif

/* testh.h:37079 */
#ifndef SOAP_TYPE_ns1__CementJobEvaluation
#define SOAP_TYPE_ns1__CementJobEvaluation (1314)
/* complex XML schema type 'ns1:CementJobEvaluation': */
struct ns1__CementJobEvaluation {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:PresTest' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTest;
        /** Optional element 'ns1:ETimTest' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimTest;
        /** Optional element 'ns1:CementShoeCollar' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CementShoeCollar;
        /** Optional element 'ns1:CetRun' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CetRun;
        /** Optional element 'ns1:CetBondQual' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CetBondQual;
        /** Optional element 'ns1:CblRun' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CblRun;
        /** Optional element 'ns1:CblBondQual' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CblBondQual;
        /** Optional element 'ns1:CblPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *CblPres;
        /** Optional element 'ns1:TempSurvey' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TempSurvey;
        /** Optional element 'ns1:ETimCementLog' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimCementLog;
        /** Optional element 'ns1:FormPit' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FormPit;
        /** Optional element 'ns1:ToolCompanyPit' of XML schema type 'ns2:String64' */
        char *ToolCompanyPit;
        /** Optional element 'ns1:ETimPitStart' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPitStart;
        /** Optional element 'ns1:MdCementTop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCementTop;
        /** Optional element 'ns1:TopCementMethod' of XML schema type 'ns2:String64' */
        char *TopCementMethod;
        /** Optional element 'ns1:TocOK' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TocOK;
        /** Optional element 'ns1:JobRating' of XML schema type 'ns2:String64' */
        char *JobRating;
        /** Optional element 'ns1:RemedialCement' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *RemedialCement;
        /** Optional element 'ns1:NumRemedial' of XML schema type 'xsd:long' */
        LONG64 *NumRemedial;
        /** Optional element 'ns1:FailureMethod' of XML schema type 'ns2:String64' */
        char *FailureMethod;
        /** Optional element 'ns1:LinerTop' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LinerTop;
        /** Optional element 'ns1:LinerLap' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LinerLap;
        /** Optional element 'ns1:ETimBeforeTest' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimBeforeTest;
        /** Optional element 'ns1:TestNegativeTool' of XML schema type 'ns2:String64' */
        char *TestNegativeTool;
        /** Optional element 'ns1:TestNegativeEmw' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *TestNegativeEmw;
        /** Optional element 'ns1:TestPositiveTool' of XML schema type 'ns2:String64' */
        char *TestPositiveTool;
        /** Optional element 'ns1:TestPositiveEmw' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *TestPositiveEmw;
        /** Optional element 'ns1:CementFoundOnTool' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CementFoundOnTool;
        /** Optional element 'ns1:MdDVTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdDVTool;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CementJob' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *CementJob;
};
#endif

/* testh.h:23377 */
#ifndef SOAP_TYPE_ns1__CementJobReport
#define SOAP_TYPE_ns1__CementJobReport (816)
/* complex XML schema type 'ns1:CementJobReport': */
struct ns1__CementJobReport {
        /** Optional element 'ns1:CementEngr' of XML schema type 'ns2:String64' */
        char *CementEngr;
        /** Optional element 'ns1:ETimWaitingOnCement' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimWaitingOnCement;
        /** Optional element 'ns1:PlugInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *PlugInterval;
        /** Optional element 'ns1:MdHole' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHole;
        /** Optional element 'ns1:Contractor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Contractor;
        /** Optional element 'ns1:RpmPipe' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipe;
        /** Optional element 'ns1:TqInitPipeRot' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqInitPipeRot;
        /** Optional element 'ns1:TqPipeAv' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeAv;
        /** Optional element 'ns1:TqPipeMx' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqPipeMx;
        /** Optional element 'ns1:OverPull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *OverPull;
        /** Optional element 'ns1:SlackOff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *SlackOff;
        /** Optional element 'ns1:RpmPipeRecip' of XML schema type 'ns2:AngularVelocityMeasure' */
        struct ns2__AngularVelocityMeasure *RpmPipeRecip;
        /** Optional element 'ns1:LenPipeRecipStroke' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenPipeRecipStroke;
        /** Optional element 'ns1:Reciprocating' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Reciprocating;
        /** Optional element 'ns1:DTimJobEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimJobEnd;
        /** Optional element 'ns1:DTimJobStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimJobStart;
        /** Optional element 'ns1:DTimPlugSet' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPlugSet;
        /** Optional element 'ns1:CementDrillOut' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CementDrillOut;
        /** Optional element 'ns1:DTimCementDrillOut' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimCementDrillOut;
        /** Optional element 'ns1:DTimSqueeze' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimSqueeze;
        /** Optional element 'ns1:DTimPipeRotStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPipeRotStart;
        /** Optional element 'ns1:DTimPipeRotEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPipeRotEnd;
        /** Optional element 'ns1:DTimRecipStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRecipStart;
        /** Optional element 'ns1:DTimRecipEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimRecipEnd;
        /** Optional element 'ns1:DensMeasBy' of XML schema type 'ns2:String64' */
        char *DensMeasBy;
        /** Sequence of at least 1 elements 'ns1:CementReportStage' of XML schema type 'ns1:CementStageReport' stored in dynamic array CementReportStage of length __sizeCementReportStage */
        int __sizeCementReportStage;
        struct ns1__CementStageReport *CementReportStage;
};
#endif

/* testh.h:23723 */
#ifndef SOAP_TYPE_ns1__CementStageDesign
#define SOAP_TYPE_ns1__CementStageDesign (825)
/* complex XML schema type 'ns1:CementStageDesign': */
struct ns1__CementStageDesign {
        /** Optional element 'ns1:AnnularFlowAfter' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AnnularFlowAfter;
        /** Optional element 'ns1:ReciprocationSlackoff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationSlackoff;
        /** Optional element 'ns1:BotPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *BotPlug;
        /** Optional element 'ns1:BotPlugNumber' of XML schema type 'xsd:long' */
        LONG64 *BotPlugNumber;
        /** Optional element 'ns1:DiaTailPipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaTailPipe;
        /** Optional element 'ns1:DisplacementFluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *DisplacementFluid;
        /** Optional element 'ns1:ETimPresHeld' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPresHeld;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:FlowrateMudCirc' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMudCirc;
        /** Optional element 'ns1:Gel10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Min;
        /** Optional element 'ns1:Gel10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Sec;
        /** Optional element 'ns1:MdCircOut' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCircOut;
        /** Optional element 'ns1:MdCoilTbg' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCoilTbg;
        /** Optional element 'ns1:MdString' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdString;
        /** Optional element 'ns1:MdTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTool;
        /** Optional element 'ns1:MixMethod' of XML schema type 'ns2:String64' */
        char *MixMethod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumStage' of XML schema type 'xsd:long' */
        LONG64 NumStage;
        /** Optional element 'ns1:ReciprocationOverpull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationOverpull;
        /** Optional element 'ns1:PillBelowPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PillBelowPlug;
        /** Optional element 'ns1:PlugCatcher' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PlugCatcher;
        /** Optional element 'ns1:PresBackPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBackPressure;
        /** Optional element 'ns1:PresBump' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBump;
        /** Optional element 'ns1:PresCoilTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgEnd;
        /** Optional element 'ns1:PresCoilTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgStart;
        /** Optional element 'ns1:PresCsgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgEnd;
        /** Optional element 'ns1:PresCsgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgStart;
        /** Optional element 'ns1:PresDisplace' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDisplace;
        /** Optional element 'ns1:PresHeld' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresHeld;
        /** Optional element 'ns1:PresMudCirc' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMudCirc;
        /** Optional element 'ns1:PresTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgEnd;
        /** Optional element 'ns1:PresTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgStart;
        /** Optional element 'ns1:PvMud' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *PvMud;
        /** Optional element 'ns1:SqueezeObjective' of XML schema type 'ns2:String64' */
        char *SqueezeObjective;
        /** Optional element 'ns1:StageMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StageMdInterval;
        /** Optional element 'ns1:TailPipePerf' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipePerf;
        /** Optional element 'ns1:TailPipeUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipeUsed;
        /** Optional element 'ns1:TempBHCT' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHCT;
        /** Optional element 'ns1:TempBHST' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHST;
        /** Optional element 'ns1:TopPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TopPlug;
        /** Optional element 'ns1:TypeOriginalMud' of XML schema type 'ns2:String64' */
        char *TypeOriginalMud;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeStage' of XML schema type 'ns2:String64' */
        char *TypeStage;
        /** Optional element 'ns1:VolCircPrior' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCircPrior;
        /** Optional element 'ns1:VolCsgIn' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgIn;
        /** Optional element 'ns1:VolCsgOut' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgOut;
        /** Optional element 'ns1:VolDisplaceFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolDisplaceFluid;
        /** Optional element 'ns1:VolExcess' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolExcess;
        /** Optional element 'ns1:VolExcessMethod' of XML schema type 'ns2:String64' */
        char *VolExcessMethod;
        /** Optional element 'ns1:VolMudLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudLost;
        /** Optional element 'ns1:VolReturns' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolReturns;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Optional element 'ns1:YpMud' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *YpMud;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:CementPumpScheduleStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__CementPumpScheduleStep *Step;
        /** Sequence of elements 'ns1:OriginalFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array OriginalFluidLocation of length __sizeOriginalFluidLocation */
        int __sizeOriginalFluidLocation;
        struct ns1__FluidLocation *OriginalFluidLocation;
        /** Sequence of elements 'ns1:EndingFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array EndingFluidLocation of length __sizeEndingFluidLocation */
        int __sizeEndingFluidLocation;
        struct ns1__FluidLocation *EndingFluidLocation;
};
#endif

/* testh.h:23725 */
#ifndef SOAP_TYPE_ns1__CementStageReport
#define SOAP_TYPE_ns1__CementStageReport (827)
/* complex XML schema type 'ns1:CementStageReport': */
struct ns1__CementStageReport {
        /** Optional element 'ns1:AnnularFlowAfter' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AnnularFlowAfter;
        /** Optional element 'ns1:ReciprocationSlackoff' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationSlackoff;
        /** Optional element 'ns1:BotPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *BotPlug;
        /** Optional element 'ns1:BotPlugNumber' of XML schema type 'xsd:long' */
        LONG64 *BotPlugNumber;
        /** Optional element 'ns1:DiaTailPipe' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaTailPipe;
        /** Optional element 'ns1:DisplacementFluid' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *DisplacementFluid;
        /** Optional element 'ns1:ETimPresHeld' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimPresHeld;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Optional element 'ns1:FlowrateMudCirc' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateMudCirc;
        /** Optional element 'ns1:Gel10Min' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Min;
        /** Optional element 'ns1:Gel10Sec' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Gel10Sec;
        /** Optional element 'ns1:MdCircOut' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCircOut;
        /** Optional element 'ns1:MdCoilTbg' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCoilTbg;
        /** Optional element 'ns1:MdString' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdString;
        /** Optional element 'ns1:MdTool' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTool;
        /** Optional element 'ns1:MixMethod' of XML schema type 'ns2:String64' */
        char *MixMethod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:NumStage' of XML schema type 'xsd:long' */
        LONG64 NumStage;
        /** Optional element 'ns1:ReciprocationOverpull' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *ReciprocationOverpull;
        /** Optional element 'ns1:PillBelowPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PillBelowPlug;
        /** Optional element 'ns1:PlugCatcher' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PlugCatcher;
        /** Optional element 'ns1:PresBackPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBackPressure;
        /** Optional element 'ns1:PresBump' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBump;
        /** Optional element 'ns1:PresCoilTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgEnd;
        /** Optional element 'ns1:PresCoilTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCoilTbgStart;
        /** Optional element 'ns1:PresCsgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgEnd;
        /** Optional element 'ns1:PresCsgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresCsgStart;
        /** Optional element 'ns1:PresDisplace' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresDisplace;
        /** Optional element 'ns1:PresHeld' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresHeld;
        /** Optional element 'ns1:PresMudCirc' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresMudCirc;
        /** Optional element 'ns1:PresTbgEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgEnd;
        /** Optional element 'ns1:PresTbgStart' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresTbgStart;
        /** Optional element 'ns1:PvMud' of XML schema type 'ns2:DynamicViscosityMeasure' */
        struct ns2__DynamicViscosityMeasure *PvMud;
        /** Optional element 'ns1:SqueezeObjective' of XML schema type 'ns2:String64' */
        char *SqueezeObjective;
        /** Optional element 'ns1:StageMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *StageMdInterval;
        /** Optional element 'ns1:TailPipePerf' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipePerf;
        /** Optional element 'ns1:TailPipeUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TailPipeUsed;
        /** Optional element 'ns1:TempBHCT' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHCT;
        /** Optional element 'ns1:TempBHST' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TempBHST;
        /** Optional element 'ns1:TopPlug' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *TopPlug;
        /** Optional element 'ns1:TypeOriginalMud' of XML schema type 'ns2:String64' */
        char *TypeOriginalMud;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeStage' of XML schema type 'ns2:String64' */
        char *TypeStage;
        /** Optional element 'ns1:VolCircPrior' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCircPrior;
        /** Optional element 'ns1:VolCsgIn' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgIn;
        /** Optional element 'ns1:VolCsgOut' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolCsgOut;
        /** Optional element 'ns1:VolDisplaceFluid' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolDisplaceFluid;
        /** Optional element 'ns1:VolExcess' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolExcess;
        /** Optional element 'ns1:VolExcessMethod' of XML schema type 'ns2:String64' */
        char *VolExcessMethod;
        /** Optional element 'ns1:VolMudLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolMudLost;
        /** Optional element 'ns1:VolReturns' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolReturns;
        /** Optional element 'ns1:WtMud' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *WtMud;
        /** Optional element 'ns1:YpMud' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *YpMud;
        /** Sequence of elements 'ns1:Step' of XML schema type 'ns1:CementPumpScheduleStep' stored in dynamic array Step of length __sizeStep */
        int __sizeStep;
        struct ns1__CementPumpScheduleStep *Step;
        /** Sequence of elements 'ns1:OriginalFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array OriginalFluidLocation of length __sizeOriginalFluidLocation */
        int __sizeOriginalFluidLocation;
        struct ns1__FluidLocation *OriginalFluidLocation;
        /** Sequence of elements 'ns1:EndingFluidLocation' of XML schema type 'ns1:FluidLocation' stored in dynamic array EndingFluidLocation of length __sizeEndingFluidLocation */
        int __sizeEndingFluidLocation;
        struct ns1__FluidLocation *EndingFluidLocation;
        /** Optional element 'ns1:DTimMixStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimMixStart;
        /** Optional element 'ns1:DTimPumpStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPumpStart;
        /** Optional element 'ns1:DTimPumpEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPumpEnd;
        /** Optional element 'ns1:DTimDisplaceStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimDisplaceStart;
        /** Optional element 'ns1:PresBreakDown' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresBreakDown;
        /** Optional element 'ns1:FlowrateBreakDown' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateBreakDown;
        /** Optional element 'ns1:FlowrateDisplaceAv' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateDisplaceAv;
        /** Optional element 'ns1:FlowrateDisplaceMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateDisplaceMx;
        /** Optional element 'ns1:PresSqueezeAv' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresSqueezeAv;
        /** Optional element 'ns1:PresSqueezeEnd' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresSqueezeEnd;
        /** Optional element 'ns1:PresSqueezeHeld' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PresSqueezeHeld;
        /** Optional element 'ns1:ETimMudCirculation' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimMudCirculation;
        /** Optional element 'ns1:PresSqueeze' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresSqueeze;
        /** Optional element 'ns1:FlowrateSqueezeAv' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateSqueezeAv;
        /** Optional element 'ns1:FlowrateSqueezeMx' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateSqueezeMx;
        /** Optional element 'ns1:FlowrateEnd' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateEnd;
        /** Optional element 'ns1:FlowratePumpStart' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowratePumpStart;
        /** Optional element 'ns1:FlowratePumpEnd' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowratePumpEnd;
        /** Optional element 'ns1:VisFunnelMud' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *VisFunnelMud;
        /** Optional element 'ns1:PlugBumped' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PlugBumped;
        /** Optional element 'ns1:SqueezeObtained' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *SqueezeObtained;
        /** Optional element 'ns1:PresPriorBump' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresPriorBump;
        /** Optional element 'ns1:FloatHeld' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *FloatHeld;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:37081 */
#ifndef SOAP_TYPE_ns1__DepthRegImage
#define SOAP_TYPE_ns1__DepthRegImage (1316)
/* complex XML schema type 'ns1:DepthRegImage': */
struct ns1__DepthRegImage {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:FileNameType' of XML schema type 'ns1:FileNameType' */
        enum ns1__FileNameType *FileNameType;
        /** Optional element 'ns1:Mimetype' of XML schema type 'ns1:MimeType' */
        enum ns1__MimeType *Mimetype;
        /** Required nillable (xsi:nil when NULL) element 'ns1:FileName' of XML schema type 'ns2:String64' */
        char *FileName;
        /** Optional element 'ns1:FileSize' of XML schema type 'ns2:DigitalStorageMeasure' */
        struct ns2__DigitalStorageMeasure *FileSize;
        /** Optional element 'ns1:Checksum' of XML schema type 'ns1:MessageDigestType' */
        enum ns1__MessageDigestType *Checksum;
        /** Optional element 'ns1:ImagePixelWidth' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *ImagePixelWidth;
        /** Optional element 'ns1:ImagePixelHeight' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *ImagePixelHeight;
        /** Optional element 'ns1:Version' of XML schema type 'ns2:String64' */
        char *Version;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ImageBoundary' of XML schema type 'ns1:DepthRegRectangle' */
        struct ns1__DepthRegRectangle *ImageBoundary;
        /** Optional element 'ns1:HeaderSection' of XML schema type 'ns1:DepthRegLogRect' */
        struct ns1__DepthRegLogRect *HeaderSection;
        /** Sequence of elements 'ns1:LogSection' of XML schema type 'ns1:DepthRegLogSection' stored in dynamic array LogSection of length __sizeLogSection */
        int __sizeLogSection;
        struct ns1__DepthRegLogSection *LogSection;
        /** Sequence of elements 'ns1:AlternateSection' of XML schema type 'ns1:DepthRegLogRect' stored in dynamic array AlternateSection of length __sizeAlternateSection */
        int __sizeAlternateSection;
        struct ns1__DepthRegLogRect *AlternateSection;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:37778 */
#ifndef SOAP_TYPE_ns1__PassIndexedDepthInterval
#define SOAP_TYPE_ns1__PassIndexedDepthInterval (1403)
/* complex XML schema type 'ns1:PassIndexedDepthInterval': */
struct ns1__PassIndexedDepthInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *ns2__Comment;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Start' of XML schema type 'ns1:PassIndexedDepth' */
        struct ns1__PassIndexedDepth *Start;
        /** Required nillable (xsi:nil when NULL) element 'ns1:End' of XML schema type 'ns1:PassIndexedDepth' */
        struct ns1__PassIndexedDepth *End;
};
#endif

/* testh.h:37083 */
#ifndef SOAP_TYPE_ns1__ChannelKind
#define SOAP_TYPE_ns1__ChannelKind (1318)
/* complex XML schema type 'ns1:ChannelKind': */
struct ns1__ChannelKind {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompanyName' of XML schema type 'ns2:String256' */
        char *LoggingCompanyName;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 LoggingCompanyCode;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Mnemonic' of XML schema type 'ns2:String64' */
        char *Mnemonic;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *PropertyKind;
        /** Optional element 'ns1:MnemonicLIS' of XML schema type 'ns2:String64' */
        char *MnemonicLIS;
        /** Sequence of elements 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' stored in dynamic array LoggingToolKind of length __sizeLoggingToolKind */
        int __sizeLoggingToolKind;
        struct ns2__DataObjectReference *LoggingToolKind;
};
#endif

/* testh.h:37085 */
#ifndef SOAP_TYPE_ns1__ChannelKindDictionary
#define SOAP_TYPE_ns1__ChannelKindDictionary (1320)
/* complex XML schema type 'ns1:ChannelKindDictionary': */
struct ns1__ChannelKindDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns1:ChannelKind' of XML schema type 'ns1:ChannelKind' stored in dynamic array ChannelKind of length __sizeChannelKind */
        int __sizeChannelKind;
        struct ns1__ChannelKind *ChannelKind;
};
#endif

/* testh.h:37087 */
#ifndef SOAP_TYPE_ns1__LoggingToolKind
#define SOAP_TYPE_ns1__LoggingToolKind (1322)
/* complex XML schema type 'ns1:LoggingToolKind': */
struct ns1__LoggingToolKind {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompanyName' of XML schema type 'ns2:String256' */
        char *LoggingCompanyName;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 LoggingCompanyCode;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Identifier' of XML schema type 'ns2:String64' */
        char *Identifier;
        /** Optional element 'ns1:GroupIdentifier' of XML schema type 'ns2:String64' */
        char *GroupIdentifier;
        /** Optional element 'ns1:MarketingName' of XML schema type 'ns2:String64' */
        char *MarketingName;
        /** Optional element 'ns1:Class' of XML schema type 'ns1:LoggingToolClassExt' */
        char *Class;
        /** Optional element 'ns1:ClassDescription' of XML schema type 'ns2:String256' */
        char *ClassDescription;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
};
#endif

/* testh.h:37089 */
#ifndef SOAP_TYPE_ns1__LoggingToolKindDictionary
#define SOAP_TYPE_ns1__LoggingToolKindDictionary (1324)
/* complex XML schema type 'ns1:LoggingToolKindDictionary': */
struct ns1__LoggingToolKindDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns1:LoggingToolKind' of XML schema type 'ns1:LoggingToolKind' stored in dynamic array LoggingToolKind of length __sizeLoggingToolKind */
        int __sizeLoggingToolKind;
        struct ns1__LoggingToolKind *LoggingToolKind;
};
#endif

/* testh.h:25422 */
#ifndef SOAP_TYPE_ns1__CasingConnectionType
#define SOAP_TYPE_ns1__CasingConnectionType (874)
/* complex XML schema type 'ns1:CasingConnectionType': */
struct ns1__CasingConnectionType {
        /** Required nillable (xsi:nil when NULL) element 'ns1:CasingConnectionType' of XML schema type 'ns1:CasingConnectionTypes' */
        enum ns1__CasingConnectionTypes CasingConnectionType;
};
#endif

/* testh.h:37091 */
#ifndef SOAP_TYPE_ns1__DownholeComponent
#define SOAP_TYPE_ns1__DownholeComponent (1326)
/* complex XML schema type 'ns1:DownholeComponent': */
struct ns1__DownholeComponent {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:StartDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StartDate;
        /** Optional element 'ns1:EndDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EndDate;
        /** Optional element 'ns1:WellHead' of XML schema type 'ns1:DownholeString' */
        struct ns1__DownholeString *WellHead;
        /** Optional element 'ns1:BoreholeStringSet' of XML schema type 'ns1:BoreholeStringSet' */
        struct ns1__BoreholeStringSet *BoreholeStringSet;
        /** Optional element 'ns1:DownholeStringSet' of XML schema type 'ns1:DownholeStringSet' */
        struct ns1__DownholeStringSet *DownholeStringSet;
        /** Optional element 'ns1:EquipmentSet' of XML schema type 'ns1:EquipmentSet' */
        struct ns1__EquipmentSet *EquipmentSet;
        /** Optional element 'ns1:PerforationSets' of XML schema type 'ns1:PerforationSets' */
        struct ns1__PerforationSets *PerforationSets;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Well' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Well;
};
#endif

/* testh.h:21922 */
#ifndef SOAP_TYPE_ns1__EquipmentConnection
#define SOAP_TYPE_ns1__EquipmentConnection (750)
/* complex XML schema type 'ns1:EquipmentConnection': */
struct ns1__EquipmentConnection {
        /** Optional element 'ns1:Id' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Id;
        /** Optional element 'ns1:Od' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Od;
        /** Optional element 'ns1:Len' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Len;
        /** Optional element 'ns1:TypeThread' of XML schema type 'ns2:String64' */
        char *TypeThread;
        /** Optional element 'ns1:SizeThread' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeThread;
        /** Optional element 'ns1:TensYield' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *TensYield;
        /** Optional element 'ns1:TqYield' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqYield;
        /** Optional element 'ns1:Position' of XML schema type 'ns1:ConnectionPosition' */
        enum ns1__ConnectionPosition *Position;
        /** Optional element 'ns1:CriticalCrossSection' of XML schema type 'ns2:AreaMeasure' */
        struct ns2__AreaMeasure *CriticalCrossSection;
        /** Optional element 'ns1:PresLeak' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresLeak;
        /** Optional element 'ns1:TqMakeup' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *TqMakeup;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Equipment' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *Equipment;
        /** Optional element 'ns1:RadialOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RadialOffset;
        /** Optional element 'ns1:ConnectionForm' of XML schema type 'ns1:ConnectionFormType' */
        enum ns1__ConnectionFormType *ConnectionForm;
        /** Optional element 'ns1:ConnectionUpset' of XML schema type 'ns2:String64' */
        char *ConnectionUpset;
        /** Optional element 'ns1:ConnectionType' of XML schema type 'ns1:AbstractConnectionType' */
        struct ns1__AbstractConnectionType *ConnectionType;
};
#endif

/* testh.h:25424 */
#ifndef SOAP_TYPE_ns1__OtherConnectionType
#define SOAP_TYPE_ns1__OtherConnectionType (876)
/* complex XML schema type 'ns1:OtherConnectionType': */
struct ns1__OtherConnectionType {
        /** Required nillable (xsi:nil when NULL) element 'ns1:OtherConnectionType' of XML schema type 'ns1:OtherConnectionTypes' */
        enum ns1__OtherConnectionTypes OtherConnectionType;
};
#endif

/* testh.h:25426 */
#ifndef SOAP_TYPE_ns1__RodConnectionType
#define SOAP_TYPE_ns1__RodConnectionType (878)
/* complex XML schema type 'ns1:RodConnectionType': */
struct ns1__RodConnectionType {
        /** Required nillable (xsi:nil when NULL) element 'ns1:RodConnectionType' of XML schema type 'ns1:RodConnectionTypes' */
        enum ns1__RodConnectionTypes RodConnectionType;
};
#endif

/* testh.h:25428 */
#ifndef SOAP_TYPE_ns1__TubingConnectionType
#define SOAP_TYPE_ns1__TubingConnectionType (880)
/* complex XML schema type 'ns1:TubingConnectionType': */
struct ns1__TubingConnectionType {
        /** Required nillable (xsi:nil when NULL) element 'ns1:TubingConnectionType' of XML schema type 'ns1:TubingConnectionTypes' */
        enum ns1__TubingConnectionTypes TubingConnectionType;
};
#endif

/* testh.h:26754 */
#ifndef SOAP_TYPE_ns1__AcidizeFracExtension
#define SOAP_TYPE_ns1__AcidizeFracExtension (932)
/* complex XML schema type 'ns1:AcidizeFracExtension': */
struct ns1__AcidizeFracExtension {
        /** Optional element 'ns1:StimJobID' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *StimJobID;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26756 */
#ifndef SOAP_TYPE_ns1__BHPExtension
#define SOAP_TYPE_ns1__BHPExtension (934)
/* complex XML schema type 'ns1:BHPExtension': */
struct ns1__BHPExtension {
        /** Optional element 'ns1:BHPRefID' of XML schema type 'ns2:String64' */
        char *BHPRefID;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26758 */
#ifndef SOAP_TYPE_ns1__CementExtension
#define SOAP_TYPE_ns1__CementExtension (936)
/* complex XML schema type 'ns1:CementExtension': */
struct ns1__CementExtension {
        /** Optional element 'ns1:CementJob' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *CementJob;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26760 */
#ifndef SOAP_TYPE_ns1__CleanFillExtension
#define SOAP_TYPE_ns1__CleanFillExtension (938)
/* complex XML schema type 'ns1:CleanFillExtension': */
struct ns1__CleanFillExtension {
        /** Optional element 'ns1:FillCleaningMethod' of XML schema type 'ns2:String64' */
        char *FillCleaningMethod;
        /** Optional element 'ns1:ToolSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ToolSize;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26762 */
#ifndef SOAP_TYPE_ns1__DirectionalSurveyExtension
#define SOAP_TYPE_ns1__DirectionalSurveyExtension (940)
/* complex XML schema type 'ns1:DirectionalSurveyExtension': */
struct ns1__DirectionalSurveyExtension {
        /** Optional element 'ns1:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26764 */
#ifndef SOAP_TYPE_ns1__DownholeExtension
#define SOAP_TYPE_ns1__DownholeExtension (942)
/* complex XML schema type 'ns1:DownholeExtension': */
struct ns1__DownholeExtension {
        /** Optional element 'ns1:DownholeComponent' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DownholeComponent;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26766 */
#ifndef SOAP_TYPE_ns1__FluidReportExtension
#define SOAP_TYPE_ns1__FluidReportExtension (944)
/* complex XML schema type 'ns1:FluidReportExtension': */
struct ns1__FluidReportExtension {
        /** Optional element 'ns1:FluidsReport' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *FluidsReport;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26768 */
#ifndef SOAP_TYPE_ns1__JobExtension
#define SOAP_TYPE_ns1__JobExtension (946)
/* complex XML schema type 'ns1:JobExtension': */
struct ns1__JobExtension {
        /** Optional element 'ns1:JobReason' of XML schema type 'ns2:String2000' */
        char *JobReason;
        /** Optional element 'ns1:JobStatus' of XML schema type 'ns2:String64' */
        char *JobStatus;
        /** Optional element 'ns1:PrimaryMotivationForJob' of XML schema type 'ns2:String64' */
        char *PrimaryMotivationForJob;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26770 */
#ifndef SOAP_TYPE_ns1__LostCirculationExtension
#define SOAP_TYPE_ns1__LostCirculationExtension (948)
/* complex XML schema type 'ns1:LostCirculationExtension': */
struct ns1__LostCirculationExtension {
        /** Optional element 'ns1:VolumeLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeLost;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26772 */
#ifndef SOAP_TYPE_ns1__PerforatingExtension
#define SOAP_TYPE_ns1__PerforatingExtension (950)
/* complex XML schema type 'ns1:PerforatingExtension': */
struct ns1__PerforatingExtension {
        /** Required nillable (xsi:nil when NULL) element 'ns1:PerforationSet' of XML schema type 'ns2:DataObjectComponentReference' */
        struct ns2__DataObjectComponentReference *PerforationSet;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Sequence of elements 'ns1:Perforating' of XML schema type 'ns1:Perforating' stored in dynamic array Perforating of length __sizePerforating */
        int __sizePerforating;
        struct ns1__Perforating *Perforating;
};
#endif

/* testh.h:26774 */
#ifndef SOAP_TYPE_ns1__PressureTestExtension
#define SOAP_TYPE_ns1__PressureTestExtension (952)
/* complex XML schema type 'ns1:PressureTestExtension': */
struct ns1__PressureTestExtension {
        /** Optional element 'ns1:DiaOrificeSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaOrificeSize;
        /** Optional element 'ns1:DTimeNextTestDate' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimeNextTestDate;
        /** Optional element 'ns1:FlowrateRateBled' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowrateRateBled;
        /** Optional element 'ns1:IdentifierJob' of XML schema type 'ns2:String64' */
        char *IdentifierJob;
        /** Optional element 'ns1:IsSuccess' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsSuccess;
        /** Optional element 'ns1:MaxPressureDuration' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPressureDuration;
        /** Optional element 'ns1:CirculatingPosition' of XML schema type 'ns2:String64' */
        char *CirculatingPosition;
        /** Optional element 'ns1:FluidBledType' of XML schema type 'ns2:String64' */
        char *FluidBledType;
        /** Optional element 'ns1:OrientationMethod' of XML schema type 'ns2:String64' */
        char *OrientationMethod;
        /** Optional element 'ns1:TestFluidType' of XML schema type 'ns2:String64' */
        char *TestFluidType;
        /** Optional element 'ns1:TestSubType' of XML schema type 'ns2:String64' */
        char *TestSubType;
        /** Optional element 'ns1:TestType' of XML schema type 'ns2:String64' */
        char *TestType;
        /** Optional element 'ns1:AnnulusPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AnnulusPressure;
        /** Optional element 'ns1:WellPressureUsed' of XML schema type 'ns2:String64' */
        char *WellPressureUsed;
        /** Optional element 'ns1:Str10Reference' of XML schema type 'ns2:String64' */
        char *Str10Reference;
        /** Optional element 'ns1:UidAssembly' of XML schema type 'ns2:String64' */
        char *UidAssembly;
        /** Optional element 'ns1:VolumeBled' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeBled;
        /** Optional element 'ns1:VolumeLost' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeLost;
        /** Optional element 'ns1:VolumePumped' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumePumped;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:26776 */
#ifndef SOAP_TYPE_ns1__WaitingOnExtension
#define SOAP_TYPE_ns1__WaitingOnExtension (954)
/* complex XML schema type 'ns1:WaitingOnExtension': */
struct ns1__WaitingOnExtension {
        /** Optional element 'ns1:SubCategory' of XML schema type 'ns2:String64' */
        char *SubCategory;
        /** Optional element 'ns1:ChargeTypeCode' of XML schema type 'ns2:String64' */
        char *ChargeTypeCode;
        /** Optional element 'ns1:BusinessOrgWaitingOn' of XML schema type 'ns2:String64' */
        char *BusinessOrgWaitingOn;
        /** Optional element 'ns1:IsNoChargeToProducer' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsNoChargeToProducer;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
};
#endif

/* testh.h:37093 */
#ifndef SOAP_TYPE_ns1__WellCMLedger
#define SOAP_TYPE_ns1__WellCMLedger (1328)
/* complex XML schema type 'ns1:WellCMLedger': */
struct ns1__WellCMLedger {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:ParentEvent' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ParentEvent;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:Duration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *Duration;
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Optional element 'ns1:EventOrder' of XML schema type 'xsd:long' */
        LONG64 *EventOrder;
        /** Sequence of elements 'ns1:Rig' of XML schema type 'ns2:DataObjectReference' stored in dynamic array Rig of length __sizeRig */
        int __sizeRig;
        struct ns2__DataObjectReference *Rig;
        /** Optional element 'ns1:ActivityCode' of XML schema type 'ns1:DrillActivityCode' */
        enum ns1__DrillActivityCode *ActivityCode;
        /** Optional element 'ns1:Type' of XML schema type 'ns1:EventType' */
        struct ns1__EventType *Type;
        /** Optional element 'ns1:IsPlan' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsPlan;
        /** Optional element 'ns1:WorkOrderID' of XML schema type 'ns2:String64' */
        char *WorkOrderID;
        /** Optional element 'ns1:BusinessAssociate' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *BusinessAssociate;
        /** Optional element 'ns1:ResponsiblePerson' of XML schema type 'ns2:String64' */
        char *ResponsiblePerson;
        /** Optional element 'ns1:Contact' of XML schema type 'ns2:String64' */
        char *Contact;
        /** Optional element 'ns1:Nonproductive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Nonproductive;
        /** Optional element 'ns1:Trouble' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Trouble;
        /** Optional element 'ns1:PreventiveMaintenance' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *PreventiveMaintenance;
        /** Optional element 'ns1:Unplanned' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Unplanned;
        /** Optional element 'ns1:Phase' of XML schema type 'ns2:String64' */
        char *Phase;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Optional element 'ns1:Description' of XML schema type 'ns2:String2000' */
        char *Description;
        /** Optional element 'ns1:DownholeComponentReference' of XML schema type 'ns1:DownholeComponentReference' */
        struct ns1__DownholeComponentReference *DownholeComponentReference;
        /** Sequence of elements 'ns1:EventExtension' of XML schema type 'ns1:AbstractEventExtension' stored in dynamic array EventExtension of length __sizeEventExtension */
        int __sizeEventExtension;
        struct ns1__AbstractEventExtension *EventExtension;
        /** Sequence of elements 'ns1:Cost' of XML schema type 'ns1:DayCost' stored in dynamic array Cost of length __sizeCost */
        int __sizeCost;
        struct ns1__DayCost *Cost;
        /** Optional element 'ns1:Participant' of XML schema type 'ns1:Participant' */
        struct ns1__Participant *Participant;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:EventType' of XML schema type 'ns1:EventType' */
        struct ns1__EventType *EventType;
};
#endif

/* testh.h:27202 */
#ifndef SOAP_TYPE_ns1__BottomHoleCirculatingTemperature
#define SOAP_TYPE_ns1__BottomHoleCirculatingTemperature (970)
/* complex XML schema type 'ns1:BottomHoleCirculatingTemperature': */
struct ns1__BottomHoleCirculatingTemperature {
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomHoleTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *BottomHoleTemperature;
};
#endif

/* testh.h:27204 */
#ifndef SOAP_TYPE_ns1__BottomHoleStaticTemperature
#define SOAP_TYPE_ns1__BottomHoleStaticTemperature (972)
/* complex XML schema type 'ns1:BottomHoleStaticTemperature': */
struct ns1__BottomHoleStaticTemperature {
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomHoleTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *BottomHoleTemperature;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ETimStatic' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimStatic;
};
#endif

/* testh.h:37095 */
#ifndef SOAP_TYPE_ns1__DrillReport
#define SOAP_TYPE_ns1__DrillReport (1330)
/* complex XML schema type 'ns1:DrillReport': */
struct ns1__DrillReport {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t DTimStart;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t DTimEnd;
        /** Optional element 'ns1:VersionKind' of XML schema type 'ns1:OpsReportVersion' */
        enum ns1__OpsReportVersion *VersionKind;
        /** Optional element 'ns1:CreateDate' of XML schema type 'ns2:TimeStamp' */
        time_t *CreateDate;
        /** Sequence of elements 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' stored in dynamic array Datum of length __sizeDatum */
        int __sizeDatum;
        struct ns2__DataObjectReference *Datum;
        /** Sequence of elements 'ns1:BitRecord' of XML schema type 'ns1:BitRecord' stored in dynamic array BitRecord of length __sizeBitRecord */
        int __sizeBitRecord;
        struct ns1__BitRecord *BitRecord;
        /** Optional element 'ns1:WellboreInfo' of XML schema type 'ns1:DrillReportWellboreInfo' */
        struct ns1__DrillReportWellboreInfo *WellboreInfo;
        /** Sequence of elements 'ns1:StatusInfo' of XML schema type 'ns1:DrillReportStatusInfo' stored in dynamic array StatusInfo of length __sizeStatusInfo */
        int __sizeStatusInfo;
        struct ns1__DrillReportStatusInfo *StatusInfo;
        /** Sequence of elements 'ns1:Fluid' of XML schema type 'ns1:Fluid' stored in dynamic array Fluid of length __sizeFluid */
        int __sizeFluid;
        struct ns1__Fluid *Fluid;
        /** Sequence of elements 'ns1:PorePressure' of XML schema type 'ns1:DrillReportPorePressure' stored in dynamic array PorePressure of length __sizePorePressure */
        int __sizePorePressure;
        struct ns1__DrillReportPorePressure *PorePressure;
        /** Optional element 'ns1:ExtendedReport' of XML schema type 'ns1:TimestampedCommentString' */
        struct ns1__TimestampedCommentString *ExtendedReport;
        /** Optional element 'ns1:SurveyStations' of XML schema type 'ns1:DrillReportSurveyStationReport' */
        struct ns1__DrillReportSurveyStationReport *SurveyStations;
        /** Sequence of elements 'ns1:DrillActivity' of XML schema type 'ns1:DrillActivity' stored in dynamic array DrillActivity of length __sizeDrillActivity */
        int __sizeDrillActivity;
        struct ns1__DrillActivity *DrillActivity;
        /** Sequence of elements 'ns1:LogInfo' of XML schema type 'ns1:DrillReportLogInfo' stored in dynamic array LogInfo of length __sizeLogInfo */
        int __sizeLogInfo;
        struct ns1__DrillReportLogInfo *LogInfo;
        /** Sequence of elements 'ns1:CoreInfo' of XML schema type 'ns1:DrillReportCoreInfo' stored in dynamic array CoreInfo of length __sizeCoreInfo */
        int __sizeCoreInfo;
        struct ns1__DrillReportCoreInfo *CoreInfo;
        /** Sequence of elements 'ns1:WellTestInfo' of XML schema type 'ns1:DrillReportWellTestInfo' stored in dynamic array WellTestInfo of length __sizeWellTestInfo */
        int __sizeWellTestInfo;
        struct ns1__DrillReportWellTestInfo *WellTestInfo;
        /** Sequence of elements 'ns1:FormTestInfo' of XML schema type 'ns1:DrillReportFormTestInfo' stored in dynamic array FormTestInfo of length __sizeFormTestInfo */
        int __sizeFormTestInfo;
        struct ns1__DrillReportFormTestInfo *FormTestInfo;
        /** Sequence of elements 'ns1:LithShowInfo' of XML schema type 'ns1:DrillReportLithShowInfo' stored in dynamic array LithShowInfo of length __sizeLithShowInfo */
        int __sizeLithShowInfo;
        struct ns1__DrillReportLithShowInfo *LithShowInfo;
        /** Sequence of elements 'ns1:EquipFailureInfo' of XML schema type 'ns1:DrillReportEquipFailureInfo' stored in dynamic array EquipFailureInfo of length __sizeEquipFailureInfo */
        int __sizeEquipFailureInfo;
        struct ns1__DrillReportEquipFailureInfo *EquipFailureInfo;
        /** Sequence of elements 'ns1:ControlIncidentInfo' of XML schema type 'ns1:DrillReportControlIncidentInfo' stored in dynamic array ControlIncidentInfo of length __sizeControlIncidentInfo */
        int __sizeControlIncidentInfo;
        struct ns1__DrillReportControlIncidentInfo *ControlIncidentInfo;
        /** Sequence of elements 'ns1:StratInfo' of XML schema type 'ns1:DrillReportStratInfo' stored in dynamic array StratInfo of length __sizeStratInfo */
        int __sizeStratInfo;
        struct ns1__DrillReportStratInfo *StratInfo;
        /** Sequence of elements 'ns1:PerfInfo' of XML schema type 'ns1:DrillReportPerfInfo' stored in dynamic array PerfInfo of length __sizePerfInfo */
        int __sizePerfInfo;
        struct ns1__DrillReportPerfInfo *PerfInfo;
        /** Sequence of elements 'ns1:GasReadingInfo' of XML schema type 'ns1:DrillReportGasReadingInfo' stored in dynamic array GasReadingInfo of length __sizeGasReadingInfo */
        int __sizeGasReadingInfo;
        struct ns1__DrillReportGasReadingInfo *GasReadingInfo;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:30828 */
#ifndef SOAP_TYPE_ns1__MudLogConcentrationParameter
#define SOAP_TYPE_ns1__MudLogConcentrationParameter (1058)
/* complex XML schema type 'ns1:MudLogConcentrationParameter': */
struct ns1__MudLogConcentrationParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:VolumePerVolumeMeasureExt' */
        struct ns2__VolumePerVolumeMeasureExt *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ConcentrationParameterKind' of XML schema type 'ns1:ConcentrationParameterKind' */
        enum ns1__ConcentrationParameterKind ConcentrationParameterKind;
};
#endif

/* testh.h:30830 */
#ifndef SOAP_TYPE_ns1__MudLogForceParameter
#define SOAP_TYPE_ns1__MudLogForceParameter (1060)
/* complex XML schema type 'ns1:MudLogForceParameter': */
struct ns1__MudLogForceParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:ForceMeasureExt' */
        struct ns2__ForceMeasureExt *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ForceParameterKind' of XML schema type 'ns1:ForceParameterKind' */
        enum ns1__ForceParameterKind ForceParameterKind;
};
#endif

/* testh.h:30832 */
#ifndef SOAP_TYPE_ns1__MudLogPressureGradientParameter
#define SOAP_TYPE_ns1__MudLogPressureGradientParameter (1062)
/* complex XML schema type 'ns1:MudLogPressureGradientParameter': */
struct ns1__MudLogPressureGradientParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:ForcePerVolumeMeasureExt' */
        struct ns2__ForcePerVolumeMeasureExt *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PressureGradientParameterKind' of XML schema type 'ns1:PressureGradientParameterKind' */
        enum ns1__PressureGradientParameterKind PressureGradientParameterKind;
};
#endif

/* testh.h:30834 */
#ifndef SOAP_TYPE_ns1__MudLogPressureParameter
#define SOAP_TYPE_ns1__MudLogPressureParameter (1064)
/* complex XML schema type 'ns1:MudLogPressureParameter': */
struct ns1__MudLogPressureParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PressureParameterKind' of XML schema type 'ns1:PressureParameterKind' */
        enum ns1__PressureParameterKind PressureParameterKind;
};
#endif

/* testh.h:30836 */
#ifndef SOAP_TYPE_ns1__MudLogStringParameter
#define SOAP_TYPE_ns1__MudLogStringParameter (1066)
/* complex XML schema type 'ns1:MudLogStringParameter': */
struct ns1__MudLogStringParameter {
        /** Optional element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Comments' of XML schema type 'ns2:String2000' */
        char *Comments;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Value' of XML schema type 'ns2:String64' */
        char *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MudLogStringParameterKind' of XML schema type 'ns1:MudLogStringParameterKind' */
        enum ns1__MudLogStringParameterKind MudLogStringParameterKind;
};
#endif

/* testh.h:37097 */
#ifndef SOAP_TYPE_ns1__Target
#define SOAP_TYPE_ns1__Target (1332)
/* complex XML schema type 'ns1:Target': */
struct ns1__Target {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:DispNsCenter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispNsCenter;
        /** Optional element 'ns1:DispEwCenter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispEwCenter;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:DispNsOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispNsOffset;
        /** Optional element 'ns1:DispEwOffset' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispEwOffset;
        /** Optional element 'ns1:ThickAbove' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ThickAbove;
        /** Optional element 'ns1:ThickBelow' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ThickBelow;
        /** Optional element 'ns1:Dip' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Dip;
        /** Optional element 'ns1:Strike' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Strike;
        /** Optional element 'ns1:Rotation' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Rotation;
        /** Optional element 'ns1:LenMajorAxis' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *LenMajorAxis;
        /** Optional element 'ns1:WidMinorAxis' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *WidMinorAxis;
        /** Optional element 'ns1:TargetScope' of XML schema type 'ns1:TargetScopeExt' */
        char *TargetScope;
        /** Optional element 'ns1:DispNsSectOrig' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispNsSectOrig;
        /** Optional element 'ns1:DispEwSectOrig' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispEwSectOrig;
        /** Optional element 'ns1:AziRef' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind *AziRef;
        /** Optional element 'ns1:CatTarg' of XML schema type 'ns1:TargetCategoryExt' */
        char *CatTarg;
        /** Sequence of elements 'ns1:Location' of XML schema type 'ns2:Abstract3dPosition' stored in dynamic array Location of length __sizeLocation */
        int __sizeLocation;
        struct ns2__Abstract3dPosition *Location;
        /** Sequence of elements 'ns1:TargetSection' of XML schema type 'ns1:TargetSection' stored in dynamic array TargetSection of length __sizeTargetSection */
        int __sizeTargetSection;
        struct ns1__TargetSection *TargetSection;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:ParentTarget' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ParentTarget;
};
#endif

/* testh.h:32174 */
#ifndef SOAP_TYPE_ns1__ContinuousAzimuthFormula
#define SOAP_TYPE_ns1__ContinuousAzimuthFormula (1110)
/* complex XML schema type 'ns1:ContinuousAzimuthFormula': */
struct ns1__ContinuousAzimuthFormula {
        /** Required nillable (xsi:nil when NULL) element 'ns1:Formula' of XML schema type 'ns2:String2000' */
        char *Formula;
        /** Sequence of elements 'ns1:Parameter' of XML schema type 'ns1:Parameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns1__Parameter *Parameter;
        /** Optional element 'ns1:GyroAxis' of XML schema type 'ns1:GyroAxisCombination' */
        enum ns1__GyroAxisCombination *GyroAxis;
};
#endif

/* testh.h:32119 */
#ifndef SOAP_TYPE_ns1__CustomOperatingRange
#define SOAP_TYPE_ns1__CustomOperatingRange (1101)
/* complex XML schema type 'ns1:CustomOperatingRange': */
struct ns1__CustomOperatingRange {
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EndInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean EndInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:StartInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean StartInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Start' of XML schema type 'xsd:double' */
        double Start;
        /** Required nillable (xsi:nil when NULL) element 'ns1:End' of XML schema type 'xsd:double' */
        double End;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Title' of XML schema type 'ns2:String64' */
        char *Title;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:UomEnum' */
        char *Uom;
};
#endif

/* testh.h:37099 */
#ifndef SOAP_TYPE_ns1__ErrorTerm
#define SOAP_TYPE_ns1__ErrorTerm (1334)
/* complex XML schema type 'ns1:ErrorTerm': */
struct ns1__ErrorTerm {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:GyroMode' of XML schema type 'ns1:GyroMode' */
        enum ns1__GyroMode *GyroMode;
        /** Optional element 'ns1:MeasureClass' of XML schema type 'ns2:MeasureClass' */
        enum ns2__MeasureClass *MeasureClass;
        /** Required nillable (xsi:nil when NULL) element 'ns1:PropagationMode' of XML schema type 'ns1:ErrorPropagationMode' */
        enum ns1__ErrorPropagationMode PropagationMode;
        /** Required nillable (xsi:nil when NULL) element 'ns1:WeightingFunction' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *WeightingFunction;
};
#endif

/* testh.h:37101 */
#ifndef SOAP_TYPE_ns1__ErrorTermDictionary
#define SOAP_TYPE_ns1__ErrorTermDictionary (1336)
/* complex XML schema type 'ns1:ErrorTermDictionary': */
struct ns1__ErrorTermDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 2 elements 'ns1:ErrorTerm' of XML schema type 'ns1:ErrorTerm' stored in dynamic array ErrorTerm of length __sizeErrorTerm */
        int __sizeErrorTerm;
        struct ns1__ErrorTerm *ErrorTerm;
};
#endif

/* testh.h:32121 */
#ifndef SOAP_TYPE_ns1__PlaneAngleOperatingRange
#define SOAP_TYPE_ns1__PlaneAngleOperatingRange (1103)
/* complex XML schema type 'ns1:PlaneAngleOperatingRange': */
struct ns1__PlaneAngleOperatingRange {
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EndInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean EndInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:StartInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean StartInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Start' of XML schema type 'xsd:double' */
        double Start;
        /** Required nillable (xsi:nil when NULL) element 'ns1:End' of XML schema type 'xsd:double' */
        double End;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:PlaneAngleUomExt' */
        char *Uom;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__PlaneAngleOperatingRange when non-NULL */
        struct ns1__AzimuthRange *ns1__AzimuthRange;
};
#endif

/* testh.h:37103 */
#ifndef SOAP_TYPE_ns1__ToolErrorModel
#define SOAP_TYPE_ns1__ToolErrorModel (1338)
/* complex XML schema type 'ns1:ToolErrorModel': */
struct ns1__ToolErrorModel {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:Application' of XML schema type 'ns2:String2000' */
        char *Application;
        /** Optional element 'ns1:Source' of XML schema type 'ns2:String2000' */
        char *Source;
        /** Optional element 'ns1:ToolKind' of XML schema type 'ns1:ToolKind' */
        enum ns1__ToolKind *ToolKind;
        /** Sequence of at least 1 elements 'ns1:ToolSubKind' of XML schema type 'ns1:ToolSubKindExt' stored in dynamic array ToolSubKind of length __sizeToolSubKind */
        int __sizeToolSubKind;
        char **ToolSubKind;
        /** Sequence of elements 'ns1:OperatingCondition' of XML schema type 'ns1:OperatingConditionExt' stored in dynamic array OperatingCondition of length __sizeOperatingCondition */
        int __sizeOperatingCondition;
        char **OperatingCondition;
        /** Optional element 'ns1:SurveyRunDateEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *SurveyRunDateEnd;
        /** Sequence of elements 'ns1:CorrectionConsidered' of XML schema type 'ns1:CorrectionConsideredExt' stored in dynamic array CorrectionConsidered of length __sizeCorrectionConsidered */
        int __sizeCorrectionConsidered;
        char **CorrectionConsidered;
        /** Optional element 'ns1:SurveyRunDateStart' of XML schema type 'ns2:TimeStamp' */
        time_t *SurveyRunDateStart;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MisalignmentMode' of XML schema type 'ns1:MisalignmentMode' */
        enum ns1__MisalignmentMode MisalignmentMode;
        /** Optional element 'ns1:OperatingConstraints' of XML schema type 'ns1:OperatingConstraints' */
        struct ns1__OperatingConstraints *OperatingConstraints;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Authorization' of XML schema type 'ns1:Authorization' */
        struct ns1__Authorization *Authorization;
        /** Sequence of elements 'ns1:ErrorTermValue' of XML schema type 'ns1:ErrorTermValue' stored in dynamic array ErrorTermValue of length __sizeErrorTermValue */
        int __sizeErrorTermValue;
        struct ns1__ErrorTermValue *ErrorTermValue;
        /** Optional element 'ns1:GyroToolConfiguration' of XML schema type 'ns1:GyroToolConfiguration' */
        struct ns1__GyroToolConfiguration *GyroToolConfiguration;
        /** Optional element 'ns1:Replaces' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Replaces;
};
#endif

/* testh.h:37105 */
#ifndef SOAP_TYPE_ns1__ToolErrorModelDictionary
#define SOAP_TYPE_ns1__ToolErrorModelDictionary (1340)
/* complex XML schema type 'ns1:ToolErrorModelDictionary': */
struct ns1__ToolErrorModelDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 2 elements 'ns1:ToolErrorModel' of XML schema type 'ns1:ToolErrorModel' stored in dynamic array ToolErrorModel of length __sizeToolErrorModel */
        int __sizeToolErrorModel;
        struct ns1__ToolErrorModel *ToolErrorModel;
};
#endif

/* testh.h:37107 */
#ifndef SOAP_TYPE_ns1__WeightingFunction
#define SOAP_TYPE_ns1__WeightingFunction (1342)
/* complex XML schema type 'ns1:WeightingFunction': */
struct ns1__WeightingFunction {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:ErrorKind' */
        enum ns1__ErrorKind *Kind;
        /** Sequence of elements 'ns1:Source' of XML schema type 'ns2:String64' stored in dynamic array Source of length __sizeSource */
        int __sizeSource;
        char **Source;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DepthFormula' of XML schema type 'ns2:String2000' */
        char *DepthFormula;
        /** Required nillable (xsi:nil when NULL) element 'ns1:InclinationFormula' of XML schema type 'ns2:String2000' */
        char *InclinationFormula;
        /** Optional element 'ns1:SingularityNorthFormula' of XML schema type 'ns2:String2000' */
        char *SingularityNorthFormula;
        /** Optional element 'ns1:SingularityEastFormula' of XML schema type 'ns2:String2000' */
        char *SingularityEastFormula;
        /** Optional element 'ns1:SingularityVerticalFormula' of XML schema type 'ns2:String2000' */
        char *SingularityVerticalFormula;
        /** Required nillable (xsi:nil when NULL) element 'ns1:AzimuthFormula' of XML schema type 'ns1:AzimuthFormula' */
        struct ns1__AzimuthFormula *AzimuthFormula;
        /** Sequence of 0 to 3 elements 'ns1:ContinuousAzimuthFormula' of XML schema type 'ns1:ContinuousAzimuthFormula' stored in dynamic array ContinuousAzimuthFormula of length __sizeContinuousAzimuthFormula */
        int __sizeContinuousAzimuthFormula;
        struct ns1__ContinuousAzimuthFormula *ContinuousAzimuthFormula;
};
#endif

/* testh.h:37109 */
#ifndef SOAP_TYPE_ns1__WeightingFunctionDictionary
#define SOAP_TYPE_ns1__WeightingFunctionDictionary (1344)
/* complex XML schema type 'ns1:WeightingFunctionDictionary': */
struct ns1__WeightingFunctionDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 2 elements 'ns1:WeightingFunction' of XML schema type 'ns1:WeightingFunction' stored in dynamic array WeightingFunction of length __sizeWeightingFunction */
        int __sizeWeightingFunction;
        struct ns1__WeightingFunction *WeightingFunction;
};
#endif

/* testh.h:37111 */
#ifndef SOAP_TYPE_ns1__SurveyProgram
#define SOAP_TYPE_ns1__SurveyProgram (1346)
/* complex XML schema type 'ns1:SurveyProgram': */
struct ns1__SurveyProgram {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:SurveyVer' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 SurveyVer;
        /** Optional element 'ns1:Engineer' of XML schema type 'ns2:String64' */
        char *Engineer;
        /** Optional element 'ns1:Final' of XML schema type 'ns2:String64' */
        char *Final;
        /** Sequence of elements 'ns1:SurveySection' of XML schema type 'ns1:SurveySection' stored in dynamic array SurveySection of length __sizeSurveySection */
        int __sizeSurveySection;
        struct ns1__SurveySection *SurveySection;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:33488 */
#ifndef SOAP_TYPE_ns1__StimAdditive
#define SOAP_TYPE_ns1__StimAdditive (1177)
/* complex XML schema type 'ns1:StimAdditive': */
struct ns1__StimAdditive {
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:StimMaterialKind' */
        enum ns1__StimMaterialKind *Kind;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Optional element 'ns1:Supplier' of XML schema type 'ns2:String2000' */
        char *Supplier;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional element 'ns1:AdditiveKind' of XML schema type 'ns1:StimAdditiveKind' */
        enum ns1__StimAdditiveKind *AdditiveKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Type' of XML schema type 'ns2:String2000' */
        char *Type;
        /** Required nillable (xsi:nil when NULL) element 'ns1:SupplierCode' of XML schema type 'ns2:String2000' */
        char *SupplierCode;
};
#endif

/* testh.h:37113 */
#ifndef SOAP_TYPE_ns1__StimJob
#define SOAP_TYPE_ns1__StimJob (1348)
/* complex XML schema type 'ns1:StimJob': */
struct ns1__StimJob {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:AvgJobPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgJobPres;
        /** Optional element 'ns1:BottomholeStaticTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *BottomholeStaticTemperature;
        /** Required nillable (xsi:nil when NULL) element 'ns1:CustomerName' of XML schema type 'ns2:String2000' */
        char *CustomerName;
        /** Optional element 'ns1:DTimArrival' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimArrival;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:FlowBackPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FlowBackPres;
        /** Optional element 'ns1:FlowBackRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *FlowBackRate;
        /** Optional element 'ns1:FlowBackVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *FlowBackVolume;
        /** Optional element 'ns1:FluidEfficiency' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *FluidEfficiency;
        /** Optional element 'ns1:HhpOrdered' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpOrdered;
        /** Optional element 'ns1:HhpUsed' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpUsed;
        /** Optional element 'ns1:JobPerforationClusters' of XML schema type 'ns1:StimPerforationClusterSet' */
        struct ns1__StimPerforationClusterSet *JobPerforationClusters;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Kind' of XML schema type 'ns2:String2000' */
        char *Kind;
        /** Optional element 'ns1:MaxFluidRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *MaxFluidRate;
        /** Optional element 'ns1:MaxJobPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxJobPres;
        /** Optional element 'ns1:PIDXCommodityCode' of XML schema type 'ns1:PIDXCommodityCode' */
        enum ns1__PIDXCommodityCode *PIDXCommodityCode;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ServiceCompany;
        /** Optional element 'ns1:StageCount' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *StageCount;
        /** Optional element 'ns1:Supervisor' of XML schema type 'ns2:String64' */
        char *Supervisor;
        /** Optional element 'ns1:TotalJobVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *TotalJobVolume;
        /** Optional element 'ns1:TotalProppantInFormation' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *TotalProppantInFormation;
        /** Optional element 'ns1:TotalProppantUsed' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *TotalProppantUsed;
        /** Optional element 'ns1:TotalPumpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *TotalPumpTime;
        /** Optional element 'ns1:TreatingBottomholeTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *TreatingBottomholeTemperature;
        /** Sequence of elements 'ns1:JobStage' of XML schema type 'ns1:StimJobStage' stored in dynamic array JobStage of length __sizeJobStage */
        int __sizeJobStage;
        struct ns1__StimJobStage *JobStage;
        /** Sequence of elements 'ns1:MaterialUsed' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array MaterialUsed of length __sizeMaterialUsed */
        int __sizeMaterialUsed;
        struct ns1__StimMaterialQuantity *MaterialUsed;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:MaterialCatalog' of XML schema type 'ns1:StimJobMaterialCatalog' */
        struct ns1__StimJobMaterialCatalog *MaterialCatalog;
        /** Sequence of elements 'ns1:LogCatalog' of XML schema type 'ns1:StimJobLogCatalog' stored in dynamic array LogCatalog of length __sizeLogCatalog */
        int __sizeLogCatalog;
        struct ns1__StimJobLogCatalog *LogCatalog;
};
#endif

/* testh.h:37115 */
#ifndef SOAP_TYPE_ns1__StimJobStage
#define SOAP_TYPE_ns1__StimJobStage (1350)
/* complex XML schema type 'ns1:StimJobStage': */
struct ns1__StimJobStage {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:Number' of XML schema type 'ns2:PositiveLong' */
        LONG64 *Number;
        /** Optional element 'ns1:FractureHeight' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FractureHeight;
        /** Optional element 'ns1:PercentPad' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PercentPad;
        /** Optional element 'ns1:StagePerforationClusters' of XML schema type 'ns1:StimPerforationClusterSet' */
        struct ns1__StimPerforationClusterSet *StagePerforationClusters;
        /** Optional element 'ns1:AvgBaseFluidReturnVolumeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgBaseFluidReturnVolumeRate;
        /** Optional element 'ns1:AvgBHStaticTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *AvgBHStaticTemperature;
        /** Optional element 'ns1:AvgBHTreatingTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *AvgBHTreatingTemperature;
        /** Optional element 'ns1:AvgBottomholePumpedVolumeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgBottomholePumpedVolumeRate;
        /** Optional element 'ns1:AvgConductivity' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *AvgConductivity;
        /** Optional element 'ns1:AvgFractureWidth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *AvgFractureWidth;
        /** Optional element 'ns1:AvgHydraulicPower' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *AvgHydraulicPower;
        /** Optional element 'ns1:AvgPresAnnulus' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresAnnulus;
        /** Optional element 'ns1:AvgPresCasing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresCasing;
        /** Optional element 'ns1:AvgPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresSurface;
        /** Optional element 'ns1:AvgPresTubing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *AvgPresTubing;
        /** Optional element 'ns1:AvgProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgProppantConcBottomhole;
        /** Optional element 'ns1:AvgProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *AvgProppantConcSurface;
        /** Optional element 'ns1:AvgSlurryReturnVolumeRate' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *AvgSlurryReturnVolumeRate;
        /** Optional element 'ns1:BreakDownPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *BreakDownPres;
        /** Optional element 'ns1:ClosureDuration' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ClosureDuration;
        /** Optional element 'ns1:ClosurePres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *ClosurePres;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:FormationBreakLengthPerDay' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FormationBreakLengthPerDay;
        /** Optional element 'ns1:FormationName' of XML schema type 'ns2:String2000' */
        char *FormationName;
        /** Optional element 'ns1:FormationProppantMass' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *FormationProppantMass;
        /** Optional element 'ns1:FractureGradientFinal' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradientFinal;
        /** Optional element 'ns1:FractureGradientInitial' of XML schema type 'ns2:ForcePerVolumeMeasure' */
        struct ns2__ForcePerVolumeMeasure *FractureGradientInitial;
        /** Optional element 'ns1:FractureLength' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *FractureLength;
        /** Optional element 'ns1:FrictionPressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FrictionPressure;
        /** Optional element 'ns1:HhpOrderedCO2' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpOrderedCO2;
        /** Optional element 'ns1:HhpOrderedFluid' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpOrderedFluid;
        /** Optional element 'ns1:HhpUsedCO2' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpUsedCO2;
        /** Optional element 'ns1:HhpUsedFluid' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *HhpUsedFluid;
        /** Optional element 'ns1:InitialShutinPres' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *InitialShutinPres;
        /** Optional element 'ns1:MaxFluidVolumeRateAnnulus' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *MaxFluidVolumeRateAnnulus;
        /** Optional element 'ns1:MaxFluidVolumeRateCasing' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *MaxFluidVolumeRateCasing;
        /** Optional element 'ns1:MaxFluidVolumeRateTubing' of XML schema type 'ns2:VolumePerTimeMeasure' */
        struct ns2__VolumePerTimeMeasure *MaxFluidVolumeRateTubing;
        /** Optional element 'ns1:MaxHydraulicPower' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *MaxHydraulicPower;
        /** Optional element 'ns1:MaxPresAnnulus' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPresAnnulus;
        /** Optional element 'ns1:MaxPresCasing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPresCasing;
        /** Optional element 'ns1:MaxPresSurface' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPresSurface;
        /** Optional element 'ns1:MaxPresTubing' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *MaxPresTubing;
        /** Optional element 'ns1:MaxProppantConcBottomhole' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MaxProppantConcBottomhole;
        /** Optional element 'ns1:MaxProppantConcSurface' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *MaxProppantConcSurface;
        /** Optional element 'ns1:MdFormationBottom' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdFormationBottom;
        /** Optional element 'ns1:MdFormationTop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdFormationTop;
        /** Optional element 'ns1:MdOpenHoleBottom' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdOpenHoleBottom;
        /** Optional element 'ns1:MdOpenHoleTop' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdOpenHoleTop;
        /** Optional element 'ns1:NetPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *NetPres;
        /** Optional element 'ns1:OpenHoleDiameter' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OpenHoleDiameter;
        /** Optional element 'ns1:OpenHoleName' of XML schema type 'ns2:String2000' */
        char *OpenHoleName;
        /** Optional element 'ns1:PercentProppantPumped' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *PercentProppantPumped;
        /** Optional element 'ns1:PerfBallCount' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *PerfBallCount;
        /** Optional element 'ns1:PerfBallSize' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *PerfBallSize;
        /** Optional element 'ns1:PerfProppantConc' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *PerfProppantConc;
        /** Optional element 'ns1:ProppantHeight' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *ProppantHeight;
        /** Optional element 'ns1:ScreenedOut' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ScreenedOut;
        /** Optional element 'ns1:ScreenOutPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *ScreenOutPres;
        /** Optional element 'ns1:TechnologyType' of XML schema type 'ns2:String64' */
        char *TechnologyType;
        /** Optional element 'ns1:TotalProppantInFormation' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *TotalProppantInFormation;
        /** Optional element 'ns1:TotalPumpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *TotalPumpTime;
        /** Optional element 'ns1:TotalVolume' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *TotalVolume;
        /** Optional element 'ns1:TvdFormationBottom' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdFormationBottom;
        /** Optional element 'ns1:TvdFormationTop' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdFormationTop;
        /** Optional element 'ns1:TvdOpenHoleBottom' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdOpenHoleBottom;
        /** Optional element 'ns1:TvdOpenHoleTop' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdOpenHoleTop;
        /** Optional element 'ns1:VolumeBody' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeBody;
        /** Optional element 'ns1:VolumeFlush' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumeFlush;
        /** Optional element 'ns1:VolumePad' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolumePad;
        /** Optional element 'ns1:WaterSource' of XML schema type 'ns2:String2000' */
        char *WaterSource;
        /** Optional element 'ns1:WellboreProppantMass' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *WellboreProppantMass;
        /** Sequence of elements 'ns1:PdatSession' of XML schema type 'ns1:StimJobDiagnosticSession' stored in dynamic array PdatSession of length __sizePdatSession */
        int __sizePdatSession;
        struct ns1__StimJobDiagnosticSession *PdatSession;
        /** Sequence of elements 'ns1:ShutInPres' of XML schema type 'ns1:StimShutInPressure' stored in dynamic array ShutInPres of length __sizeShutInPres */
        int __sizeShutInPres;
        struct ns1__StimShutInPressure *ShutInPres;
        /** Sequence of elements 'ns1:JobEvent' of XML schema type 'ns1:StimEvent' stored in dynamic array JobEvent of length __sizeJobEvent */
        int __sizeJobEvent;
        struct ns1__StimEvent *JobEvent;
        /** Sequence of elements 'ns1:JobStep' of XML schema type 'ns1:StimJobStep' stored in dynamic array JobStep of length __sizeJobStep */
        int __sizeJobStep;
        struct ns1__StimJobStep *JobStep;
        /** Sequence of elements 'ns1:MaxMaterialUsageRate' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array MaxMaterialUsageRate of length __sizeMaxMaterialUsageRate */
        int __sizeMaxMaterialUsageRate;
        struct ns1__StimMaterialQuantity *MaxMaterialUsageRate;
        /** Sequence of elements 'ns1:MaterialUsed' of XML schema type 'ns1:StimMaterialQuantity' stored in dynamic array MaterialUsed of length __sizeMaterialUsed */
        int __sizeMaterialUsed;
        struct ns1__StimMaterialQuantity *MaterialUsed;
        /** Optional element 'ns1:FlowPath' of XML schema type 'ns1:StimFlowPath' */
        struct ns1__StimFlowPath *FlowPath;
        /** Sequence of elements 'ns1:ReservoirInterval' of XML schema type 'ns1:StimReservoirInterval' stored in dynamic array ReservoirInterval of length __sizeReservoirInterval */
        int __sizeReservoirInterval;
        struct ns1__StimReservoirInterval *ReservoirInterval;
        /** Sequence of elements 'ns1:StimStageLog' of XML schema type 'ns2:DataObjectReference' stored in dynamic array StimStageLog of length __sizeStimStageLog */
        int __sizeStimStageLog;
        struct ns2__DataObjectReference *StimStageLog;
        /** Optional element 'ns1:Diversion' of XML schema type 'ns1:StimJobDiversion' */
        struct ns1__StimJobDiversion *Diversion;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
};
#endif

/* testh.h:34078 */
#ifndef SOAP_TYPE_ns1__StimPerforationCluster
#define SOAP_TYPE_ns1__StimPerforationCluster (1190)
/* complex XML schema type 'ns1:StimPerforationCluster': */
struct ns1__StimPerforationCluster {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:MdPerforatedInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdPerforatedInterval;
        /** Optional element 'ns1:TvdPerforatedInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *TvdPerforatedInterval;
        /** Optional element 'ns1:Type' of XML schema type 'ns2:String64' */
        char *Type;
        /** Optional element 'ns1:PerforationCount' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *PerforationCount;
        /** Optional element 'ns1:Size' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Size;
        /** Optional element 'ns1:DensityPerforation' of XML schema type 'ns2:ReciprocalLengthMeasure' */
        struct ns2__ReciprocalLengthMeasure *DensityPerforation;
        /** Optional element 'ns1:PhasingPerforation' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *PhasingPerforation;
        /** Optional element 'ns1:FrictionFactor' of XML schema type 'xsd:double' */
        double *FrictionFactor;
        /** Optional element 'ns1:FrictionPres' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *FrictionPres;
        /** Optional element 'ns1:DischargeCoefficient' of XML schema type 'xsd:double' */
        double *DischargeCoefficient;
};
#endif

/* testh.h:33496 */
#ifndef SOAP_TYPE_ns1__StimProppantAgent
#define SOAP_TYPE_ns1__StimProppantAgent (1179)
/* complex XML schema type 'ns1:StimProppantAgent': */
struct ns1__StimProppantAgent {
        /** Optional element 'ns1:Kind' of XML schema type 'ns1:StimMaterialKind' */
        enum ns1__StimMaterialKind *Kind;
        /** Optional element 'ns1:Name' of XML schema type 'ns2:String2000' */
        char *Name;
        /** Optional element 'ns1:Supplier' of XML schema type 'ns2:String2000' */
        char *Supplier;
        /** Sequence of elements 'ns1:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional element 'ns1:FrictionCoefficientLaminar' of XML schema type 'xsd:double' */
        double *FrictionCoefficientLaminar;
        /** Optional element 'ns1:FrictionCoefficientTurbulent' of XML schema type 'xsd:double' */
        double *FrictionCoefficientTurbulent;
        /** Optional element 'ns1:MassAbsorptionCoefficient' of XML schema type 'ns2:AreaPerMassMeasure' */
        struct ns2__AreaPerMassMeasure *MassAbsorptionCoefficient;
        /** Optional element 'ns1:MeshSizeHigh' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *MeshSizeHigh;
        /** Optional element 'ns1:MeshSizeLow' of XML schema type 'ns2:NonNegativeLong' */
        LONG64 *MeshSizeLow;
        /** Optional element 'ns1:UnconfinedCompressiveStrength' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *UnconfinedCompressiveStrength;
        /** Optional element 'ns1:ProppantAgentKind' of XML schema type 'ns1:ProppantAgentKind' */
        enum ns1__ProppantAgentKind *ProppantAgentKind;
        /** Sequence of elements 'ns1:ISO13503_2Properties' of XML schema type 'ns1:StimISO13503_2Properties' stored in dynamic array ISO13503_USCORE2Properties of length __sizeISO13503_USCORE2Properties */
        int __sizeISO13503_USCORE2Properties;
        struct ns1__StimISO13503_USCORE2Properties *ISO13503_USCORE2Properties;
        /** Sequence of elements 'ns1:ISO13503_5Point' of XML schema type 'ns1:StimISO13503_5Point' stored in dynamic array ISO13503_USCORE5Point of length __sizeISO13503_USCORE5Point */
        int __sizeISO13503_USCORE5Point;
        struct ns1__StimISO13503_USCORE5Point *ISO13503_USCORE5Point;
};
#endif

/* testh.h:34699 */
#ifndef SOAP_TYPE_ns1__ItemVolPerUnit
#define SOAP_TYPE_ns1__ItemVolPerUnit (1201)
/* complex XML schema type 'ns1:ItemVolPerUnit': */
struct ns1__ItemVolPerUnit {
        /** Required nillable (xsi:nil when NULL) element 'ns1:ItemVolPerUnit' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *ItemVolPerUnit;
};
#endif

/* testh.h:34701 */
#ifndef SOAP_TYPE_ns1__ItemWtPerUnit
#define SOAP_TYPE_ns1__ItemWtPerUnit (1203)
/* complex XML schema type 'ns1:ItemWtPerUnit': */
struct ns1__ItemWtPerUnit {
        /** Required nillable (xsi:nil when NULL) element 'ns1:ItemWtPerUnit' of XML schema type 'ns2:MassMeasure' */
        struct ns2__MassMeasure *ItemWtPerUnit;
};
#endif

/* testh.h:37119 */
#ifndef SOAP_TYPE_ns1__OpsReport
#define SOAP_TYPE_ns1__OpsReport (1353)
/* complex XML schema type 'ns1:OpsReport': */
struct ns1__OpsReport {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:ConditionHole' of XML schema type 'ns2:String64' */
        char *ConditionHole;
        /** Optional element 'ns1:CostDay' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostDay;
        /** Optional element 'ns1:CostDayMud' of XML schema type 'ns2:Cost' */
        struct ns2__Cost *CostDayMud;
        /** Optional element 'ns1:DiaCsgLast' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaCsgLast;
        /** Optional element 'ns1:DiaHole' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaHole;
        /** Optional element 'ns1:DistDrill' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrill;
        /** Optional element 'ns1:DistDrillRot' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillRot;
        /** Optional element 'ns1:DistDrillSlid' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistDrillSlid;
        /** Optional element 'ns1:DistHold' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistHold;
        /** Optional element 'ns1:DistReam' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistReam;
        /** Optional element 'ns1:DistSteering' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DistSteering;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DTim' of XML schema type 'ns2:TimeStamp' */
        time_t DTim;
        /** Optional element 'ns1:Engineer' of XML schema type 'ns2:String64' */
        char *Engineer;
        /** Optional element 'ns1:ETimCirc' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimCirc;
        /** Optional element 'ns1:ETimDrill' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrill;
        /** Optional element 'ns1:ETimDrillRot' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrillRot;
        /** Optional element 'ns1:ETimDrillSlid' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimDrillSlid;
        /** Optional element 'ns1:ETimHold' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimHold;
        /** Optional element 'ns1:ETimLoc' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimLoc;
        /** Optional element 'ns1:ETimReam' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimReam;
        /** Optional element 'ns1:ETimSpud' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimSpud;
        /** Optional element 'ns1:ETimStart' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimStart;
        /** Optional element 'ns1:ETimSteering' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *ETimSteering;
        /** Optional element 'ns1:Forecast24Hr' of XML schema type 'ns2:String2000' */
        char *Forecast24Hr;
        /** Optional element 'ns1:Geologist' of XML schema type 'ns2:String64' */
        char *Geologist;
        /** Optional element 'ns1:Lithology' of XML schema type 'ns2:String64' */
        char *Lithology;
        /** Optional element 'ns1:Maasp' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Maasp;
        /** Optional element 'ns1:MdCsgLast' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdCsgLast;
        /** Optional element 'ns1:MdPlanned' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdPlanned;
        /** Optional element 'ns1:MdReport' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdReport;
        /** Optional element 'ns1:NameFormation' of XML schema type 'ns2:String64' */
        char *NameFormation;
        /** Optional element 'ns1:NumAFE' of XML schema type 'ns2:String64' */
        char *NumAFE;
        /** Optional element 'ns1:NumContract' of XML schema type 'xsd:long' */
        LONG64 *NumContract;
        /** Optional element 'ns1:NumOperator' of XML schema type 'xsd:long' */
        LONG64 *NumOperator;
        /** Optional element 'ns1:NumPob' of XML schema type 'xsd:long' */
        LONG64 *NumPob;
        /** Optional element 'ns1:NumService' of XML schema type 'xsd:long' */
        LONG64 *NumService;
        /** Optional element 'ns1:PresKickTol' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *PresKickTol;
        /** Optional element 'ns1:PresLotEmw' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *PresLotEmw;
        /** Optional element 'ns1:RigUtilization' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *RigUtilization;
        /** Optional element 'ns1:RopAv' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopAv;
        /** Optional element 'ns1:RopCurrent' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *RopCurrent;
        /** Optional element 'ns1:StatusCurrent' of XML schema type 'ns2:String2000' */
        char *StatusCurrent;
        /** Optional element 'ns1:Sum24Hr' of XML schema type 'ns2:String2000' */
        char *Sum24Hr;
        /** Optional element 'ns1:Supervisor' of XML schema type 'ns2:String64' */
        char *Supervisor;
        /** Optional element 'ns1:Tubular' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Tubular;
        /** Optional element 'ns1:TvdCsgLast' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdCsgLast;
        /** Optional element 'ns1:TvdLot' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdLot;
        /** Optional element 'ns1:TvdReport' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdReport;
        /** Optional element 'ns1:VolKickTol' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *VolKickTol;
        /** Sequence of elements 'ns1:Activity' of XML schema type 'ns1:DrillActivity' stored in dynamic array Activity of length __sizeActivity */
        int __sizeActivity;
        struct ns1__DrillActivity *Activity;
        /** Sequence of elements 'ns1:DrillingParams' of XML schema type 'ns1:DrillingParams' stored in dynamic array DrillingParams of length __sizeDrillingParams */
        int __sizeDrillingParams;
        struct ns1__DrillingParams *DrillingParams;
        /** Optional element 'ns1:WbGeometry' of XML schema type 'ns1:WellboreGeometryReport' */
        struct ns1__WellboreGeometryReport *WbGeometry;
        /** Sequence of elements 'ns1:DayCost' of XML schema type 'ns1:DayCost' stored in dynamic array DayCost of length __sizeDayCost */
        int __sizeDayCost;
        struct ns1__DayCost *DayCost;
        /** Optional element 'ns1:TrajectoryStations' of XML schema type 'ns1:TrajectoryReport' */
        struct ns1__TrajectoryReport *TrajectoryStations;
        /** Sequence of elements 'ns1:Fluid' of XML schema type 'ns1:Fluid' stored in dynamic array Fluid of length __sizeFluid */
        int __sizeFluid;
        struct ns1__Fluid *Fluid;
        /** Sequence of elements 'ns1:Scr' of XML schema type 'ns1:Scr' stored in dynamic array Scr of length __sizeScr */
        int __sizeScr;
        struct ns1__Scr *Scr;
        /** Optional element 'ns1:RigResponse' of XML schema type 'ns1:RigResponse' */
        struct ns1__RigResponse *RigResponse;
        /** Sequence of elements 'ns1:ShakerOp' of XML schema type 'ns1:ShakerOp' stored in dynamic array ShakerOp of length __sizeShakerOp */
        int __sizeShakerOp;
        struct ns1__ShakerOp *ShakerOp;
        /** Optional element 'ns1:Hse' of XML schema type 'ns1:Hse' */
        struct ns1__Hse *Hse;
        /** Sequence of elements 'ns1:SupportCraft' of XML schema type 'ns1:SupportCraft' stored in dynamic array SupportCraft of length __sizeSupportCraft */
        int __sizeSupportCraft;
        struct ns1__SupportCraft *SupportCraft;
        /** Sequence of elements 'ns1:Weather' of XML schema type 'ns1:Weather' stored in dynamic array Weather of length __sizeWeather */
        int __sizeWeather;
        struct ns1__Weather *Weather;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:MudVolume' of XML schema type 'ns1:MudVolume' */
        struct ns1__MudVolume *MudVolume;
        /** Sequence of elements 'ns1:BulkInventory' of XML schema type 'ns1:Inventory' stored in dynamic array BulkInventory of length __sizeBulkInventory */
        int __sizeBulkInventory;
        struct ns1__Inventory *BulkInventory;
        /** Sequence of elements 'ns1:MudInventory' of XML schema type 'ns1:Inventory' stored in dynamic array MudInventory of length __sizeMudInventory */
        int __sizeMudInventory;
        struct ns1__Inventory *MudInventory;
        /** Sequence of elements 'ns1:Personnel' of XML schema type 'ns1:Personnel' stored in dynamic array Personnel of length __sizePersonnel */
        int __sizePersonnel;
        struct ns1__Personnel *Personnel;
        /** Sequence of elements 'ns1:PumpOp' of XML schema type 'ns1:PumpOp' stored in dynamic array PumpOp of length __sizePumpOp */
        int __sizePumpOp;
        struct ns1__PumpOp *PumpOp;
        /** Sequence of elements 'ns1:PitVolume' of XML schema type 'ns1:PitVolume' stored in dynamic array PitVolume of length __sizePitVolume */
        int __sizePitVolume;
        struct ns1__PitVolume *PitVolume;
};
#endif

/* testh.h:37121 */
#ifndef SOAP_TYPE_ns1__Risk
#define SOAP_TYPE_ns1__Risk (1355)
/* complex XML schema type 'ns1:Risk': */
struct ns1__Risk {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Type' of XML schema type 'ns1:RiskType' */
        enum ns1__RiskType Type;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Category' of XML schema type 'ns1:RiskCategory' */
        enum ns1__RiskCategory Category;
        /** Optional element 'ns1:SubCategory' of XML schema type 'ns1:RiskSubCategory' */
        enum ns1__RiskSubCategory *SubCategory;
        /** Optional element 'ns1:ExtendCategory' of XML schema type 'ns2:String64' */
        char *ExtendCategory;
        /** Sequence of elements 'ns1:AffectedPersonnel' of XML schema type 'ns1:RiskAffectedPersonnel' stored in dynamic array AffectedPersonnel of length __sizeAffectedPersonnel */
        int __sizeAffectedPersonnel;
        enum ns1__RiskAffectedPersonnel *AffectedPersonnel;
        /** Optional element 'ns1:DTimStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStart;
        /** Optional element 'ns1:DTimEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimEnd;
        /** Optional element 'ns1:MdHoleStart' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHoleStart;
        /** Optional element 'ns1:MdHoleEnd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdHoleEnd;
        /** Optional element 'ns1:TvdHoleStart' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdHoleStart;
        /** Optional element 'ns1:TvdHoleEnd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdHoleEnd;
        /** Optional element 'ns1:MdBitStart' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBitStart;
        /** Optional element 'ns1:MdBitEnd' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBitEnd;
        /** Optional element 'ns1:DiaHole' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaHole;
        /** Optional element 'ns1:SeverityLevel' of XML schema type 'ns1:LevelIntegerCode' */
        LONG64 *SeverityLevel;
        /** Optional element 'ns1:ProbabilityLevel' of XML schema type 'ns1:LevelIntegerCode' */
        LONG64 *ProbabilityLevel;
        /** Optional element 'ns1:Summary' of XML schema type 'ns2:String2000' */
        char *Summary;
        /** Optional element 'ns1:Details' of XML schema type 'ns2:String2000' */
        char *Details;
        /** Optional element 'ns1:Identification' of XML schema type 'ns2:String2000' */
        char *Identification;
        /** Optional element 'ns1:Contingency' of XML schema type 'ns2:String2000' */
        char *Contingency;
        /** Sequence of elements 'ns1:Mitigation' of XML schema type 'ns2:String2000' stored in dynamic array Mitigation of length __sizeMitigation */
        int __sizeMitigation;
        char **Mitigation;
        /** Sequence of elements 'ns1:ObjectReference' of XML schema type 'ns2:DataObjectReference' stored in dynamic array ObjectReference of length __sizeObjectReference */
        int __sizeObjectReference;
        struct ns2__DataObjectReference *ObjectReference;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:37123 */
#ifndef SOAP_TYPE_ns1__WellboreCompletion
#define SOAP_TYPE_ns1__WellboreCompletion (1357)
/* complex XML schema type 'ns1:WellboreCompletion': */
struct ns1__WellboreCompletion {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:WellboreCompletionNo' of XML schema type 'ns2:String64' */
        char *WellboreCompletionNo;
        /** Optional element 'ns1:WellboreCompletionAlias' of XML schema type 'ns2:String64' */
        char *WellboreCompletionAlias;
        /** Sequence of elements 'ns1:EventHistory' of XML schema type 'ns1:EventInfo' stored in dynamic array EventHistory of length __sizeEventHistory */
        int __sizeEventHistory;
        struct ns1__EventInfo *EventHistory;
        /** Optional element 'ns1:WellboreCompletionDate' of XML schema type 'ns2:TimeStamp' */
        time_t *WellboreCompletionDate;
        /** Optional element 'ns1:SuffixAPI' of XML schema type 'ns2:String64' */
        char *SuffixAPI;
        /** Optional element 'ns1:CompletionMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *CompletionMdInterval;
        /** Optional element 'ns1:CompletionTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *CompletionTvdInterval;
        /** Optional element 'ns1:CurrentStatus' of XML schema type 'ns1:CompletionStatus' */
        enum ns1__CompletionStatus *CurrentStatus;
        /** Optional element 'ns1:StatusDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StatusDate;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns1:CompletionStatusHistory' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns1__CompletionStatusHistory *StatusHistory;
        /** Optional element 'ns1:ContactIntervalSet' of XML schema type 'ns1:ContactIntervalSet' */
        struct ns1__ContactIntervalSet *ContactIntervalSet;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ReferenceWellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferenceWellbore;
        /** Optional element 'ns1:WellCompletion' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *WellCompletion;
};
#endif

/* testh.h:37125 */
#ifndef SOAP_TYPE_ns1__WellCompletion
#define SOAP_TYPE_ns1__WellCompletion (1359)
/* complex XML schema type 'ns1:WellCompletion': */
struct ns1__WellCompletion {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:FieldID' of XML schema type 'ns2:String64' */
        char *FieldID;
        /** Optional element 'ns1:FieldCode' of XML schema type 'ns2:String64' */
        char *FieldCode;
        /** Optional element 'ns1:FieldType' of XML schema type 'ns2:String64' */
        char *FieldType;
        /** Optional element 'ns1:EffectiveDate' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDate;
        /** Optional element 'ns1:ExpiredDate' of XML schema type 'ns2:TimeStamp' */
        time_t *ExpiredDate;
        /** Optional element 'ns1:E_P_RightsID' of XML schema type 'ns2:String64' */
        char *E_USCOREP_USCORERightsID;
        /** Optional element 'ns1:CurrentStatus' of XML schema type 'ns1:CompletionStatus' */
        enum ns1__CompletionStatus *CurrentStatus;
        /** Optional element 'ns1:StatusDate' of XML schema type 'ns2:TimeStamp' */
        time_t *StatusDate;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns1:CompletionStatusHistory' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns1__CompletionStatusHistory *StatusHistory;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Well' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Well;
};
#endif

/* testh.h:37127 */
#ifndef SOAP_TYPE_ns1__WellboreMarker
#define SOAP_TYPE_ns1__WellboreMarker (1361)
/* complex XML schema type 'ns1:WellboreMarker': */
struct ns1__WellboreMarker {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns1:ChronostratigraphicTop' of XML schema type 'ns1:GeochronologicalUnit' */
        struct ns1__GeochronologicalUnit *ChronostratigraphicTop;
        /** Optional element 'ns1:LithostratigraphicTop' of XML schema type 'ns1:LithostratigraphicUnit' */
        struct ns1__LithostratigraphicUnit *LithostratigraphicTop;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:DipAngle' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *DipAngle;
        /** Optional element 'ns1:DipDirection' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *DipDirection;
        /** Optional element 'ns1:DipDirectionRef' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind *DipDirectionRef;
        /** Optional element 'ns1:ObservationNumber' of XML schema type 'xsd:long' */
        LONG64 *ObservationNumber;
        /** Optional element 'ns1:StratigraphyKind' of XML schema type 'ns1:StratigraphyKindExt' */
        char *StratigraphyKind;
        /** Optional element 'ns1:StratigraphyKindQualifier' of XML schema type 'ns1:StratigraphyKindQualifierExt' */
        char *StratigraphyKindQualifier;
        /** Optional element 'ns1:GeologicAge' of XML schema type 'ns2:TimeMeasureExt' */
        struct ns2__TimeMeasureExt *GeologicAge;
        /** Optional element 'ns1:MarkerQualifier' of XML schema type 'ns1:MarkerQualifierExt' */
        char *MarkerQualifier;
        /** Optional element 'ns1:PointOfInterest' of XML schema type 'ns1:WellborePointOfInterestExt' */
        char *PointOfInterest;
        /** Optional element 'ns1:HighConfidenceMdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *HighConfidenceMdInterval;
        /** Optional element 'ns1:GeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *GeologicUnitInterpretation;
        /** Optional element 'ns1:WellboreMarkerKind' of XML schema type 'ns1:WellboreMarkerKindExt' */
        char *WellboreMarkerKind;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
};
#endif

/* testh.h:37129 */
#ifndef SOAP_TYPE_ns1__WellboreMarkerSet
#define SOAP_TYPE_ns1__WellboreMarkerSet (1363)
/* complex XML schema type 'ns1:WellboreMarkerSet': */
struct ns1__WellboreMarkerSet {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MarkerSetInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MarkerSetInterval;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:FormationMarker' of XML schema type 'ns1:WellboreMarker' stored in dynamic array FormationMarker of length __sizeFormationMarker */
        int __sizeFormationMarker;
        struct ns1__WellboreMarker *FormationMarker;
};
#endif

/* testh.h:37031 */
#ifndef SOAP_TYPE_ns2__AbstractActiveObject
#define SOAP_TYPE_ns2__AbstractActiveObject (1266)
/* complex XML schema type 'ns2:AbstractActiveObject': */
struct ns2__AbstractActiveObject {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ActiveStatus;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns2__AbstractGrowingObject *ns2__AbstractGrowingObject;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__Wellbore *ns1__Wellbore;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__Well *ns1__Well;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__Channel *ns1__Channel;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__ChannelSet *ns1__ChannelSet;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__Log *ns1__Log;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__Rig *ns1__Rig;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__RigUtilization *ns1__RigUtilization;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractActiveObject when non-NULL */
        struct ns1__WellboreGeology *ns1__WellboreGeology;
};
#endif

/* testh.h:36900 */
#ifndef SOAP_TYPE_ns2__AbstractMdGrowingPart
#define SOAP_TYPE_ns2__AbstractMdGrowingPart (1250)
/* complex XML schema type 'ns2:AbstractMdGrowingPart': */
struct ns2__AbstractMdGrowingPart {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingPart when non-NULL */
        struct ns1__TrajectoryStation *ns1__TrajectoryStation;
};
#endif

/* testh.h:36902 */
#ifndef SOAP_TYPE_ns2__AbstractMdIntervalGrowingPart
#define SOAP_TYPE_ns2__AbstractMdIntervalGrowingPart (1252)
/* complex XML schema type 'ns2:AbstractMdIntervalGrowingPart': */
struct ns2__AbstractMdIntervalGrowingPart {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdIntervalGrowingPart when non-NULL */
        struct ns1__WellboreGeometrySection *ns1__WellboreGeometrySection;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdIntervalGrowingPart when non-NULL */
        struct ns1__MudlogReportInterval *ns1__MudlogReportInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdIntervalGrowingPart when non-NULL */
        struct ns1__CuttingsGeologyInterval *ns1__CuttingsGeologyInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdIntervalGrowingPart when non-NULL */
        struct ns1__InterpretedGeologyInterval *ns1__InterpretedGeologyInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdIntervalGrowingPart when non-NULL */
        struct ns1__ShowEvaluationInterval *ns1__ShowEvaluationInterval;
};
#endif

/* testh.h:36904 */
#ifndef SOAP_TYPE_ns2__AbstractTimeGrowingPart
#define SOAP_TYPE_ns2__AbstractTimeGrowingPart (1254)
/* complex XML schema type 'ns2:AbstractTimeGrowingPart': */
struct ns2__AbstractTimeGrowingPart {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Time' of XML schema type 'ns2:TimeStamp' */
        time_t Time;
};
#endif

/* testh.h:36906 */
#ifndef SOAP_TYPE_ns2__AbstractTimeIntervalGrowingPart
#define SOAP_TYPE_ns2__AbstractTimeIntervalGrowingPart (1256)
/* complex XML schema type 'ns2:AbstractTimeIntervalGrowingPart': */
struct ns2__AbstractTimeIntervalGrowingPart {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TimeInterval' of XML schema type 'ns2:DateTimeInterval' */
        struct ns2__DateTimeInterval *TimeInterval;
};
#endif

/* testh.h:28656 */
#ifndef SOAP_TYPE_ns2__Abstract2dPosition
#define SOAP_TYPE_ns2__Abstract2dPosition (1002)
/* complex XML schema type 'ns2:Abstract2dPosition': */
struct ns2__Abstract2dPosition {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract2dPosition when non-NULL */
        struct ns2__AbstractCartesian2dPosition *ns2__AbstractCartesian2dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract2dPosition when non-NULL */
        struct ns2__Geographic2dPosition *ns2__Geographic2dPosition;
};
#endif

/* testh.h:32080 */
#ifndef SOAP_TYPE_ns2__Abstract3dPosition
#define SOAP_TYPE_ns2__Abstract3dPosition (1098)
/* complex XML schema type 'ns2:Abstract3dPosition': */
struct ns2__Abstract3dPosition {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract3dPosition when non-NULL */
        struct ns2__Geocentric3dPosition *ns2__Geocentric3dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract3dPosition when non-NULL */
        struct ns2__Geographic3dPosition *ns2__Geographic3dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract3dPosition when non-NULL */
        struct ns2__LocalEngineering3dPosition *ns2__LocalEngineering3dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract3dPosition when non-NULL */
        struct ns2__Projected3dPosition *ns2__Projected3dPosition;
};
#endif

/* testh.h:37451 */
#ifndef SOAP_TYPE_ns2__AbstractCompoundPosition
#define SOAP_TYPE_ns2__AbstractCompoundPosition (1379)
/* complex XML schema type 'ns2:AbstractCompoundPosition': */
struct ns2__AbstractCompoundPosition {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundPosition when non-NULL */
        struct ns2__EngineeringCompoundPosition *ns2__EngineeringCompoundPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundPosition when non-NULL */
        struct ns2__GeographicCompoundPosition *ns2__GeographicCompoundPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundPosition when non-NULL */
        struct ns2__ProjectedCompoundPosition *ns2__ProjectedCompoundPosition;
};
#endif

/* testh.h:37033 */
#ifndef SOAP_TYPE_ns2__AbstractReferencePoint
#define SOAP_TYPE_ns2__AbstractReferencePoint (1268)
/* complex XML schema type 'ns2:AbstractReferencePoint': */
struct ns2__AbstractReferencePoint {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:ReferencePointKindExt' */
        char *Kind;
        /** Optional element 'ns2:OSDUReferencePointIntegration' of XML schema type 'ns2:OSDUReferencePointIntegration' */
        struct ns2__OSDUReferencePointIntegration *OSDUReferencePointIntegration;
        /** Optional element 'ns2:UncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *UncertaintyVectorAtOneSigma;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractReferencePoint when non-NULL */
        struct ns2__RecursiveReferencePoint *ns2__RecursiveReferencePoint;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractReferencePoint when non-NULL */
        struct ns2__ReferencePointInACrs *ns2__ReferencePointInACrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractReferencePoint when non-NULL */
        struct ns2__ReferencePointInALocalEngineeringCompoundCrs *ns2__ReferencePointInALocalEngineeringCompoundCrs;
};
#endif

/* testh.h:37423 */
#ifndef SOAP_TYPE_ns2__GeographicCoordinates
#define SOAP_TYPE_ns2__GeographicCoordinates (1371)
/* complex XML schema type 'ns2:GeographicCoordinates': */
struct ns2__GeographicCoordinates {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Crs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Crs;
};
#endif

/* testh.h:37425 */
#ifndef SOAP_TYPE_ns2__ProjectedCoordinates
#define SOAP_TYPE_ns2__ProjectedCoordinates (1373)
/* complex XML schema type 'ns2:ProjectedCoordinates': */
struct ns2__ProjectedCoordinates {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Crs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Crs;
};
#endif

/* testh.h:37427 */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemCoordinates
#define SOAP_TYPE_ns2__PublicLandSurveySystemCoordinates (1375)
/* complex XML schema type 'ns2:PublicLandSurveySystemCoordinates': */
struct ns2__PublicLandSurveySystemCoordinates {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:PublicLandSurveySystem' of XML schema type 'ns2:PublicLandSurveySystemLocation' */
        struct ns2__PublicLandSurveySystemLocation *PublicLandSurveySystem;
};
#endif

/* testh.h:37802 */
#ifndef SOAP_TYPE_ns2__AbstractBooleanArray
#define SOAP_TYPE_ns2__AbstractBooleanArray (1406)
/* complex XML schema type 'ns2:AbstractBooleanArray': */
struct ns2__AbstractBooleanArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:BooleanArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__BooleanArrayStatistics *Statistics;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractBooleanArray when non-NULL */
        struct ns2__BooleanArrayFromIndexArray *ns2__BooleanArrayFromIndexArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractBooleanArray when non-NULL */
        struct ns2__BooleanConstantArray *ns2__BooleanConstantArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractBooleanArray when non-NULL */
        struct ns2__BooleanExternalArray *ns2__BooleanExternalArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractBooleanArray when non-NULL */
        struct ns2__BooleanXmlArray *ns2__BooleanXmlArray;
};
#endif

/* testh.h:37804 */
#ifndef SOAP_TYPE_ns2__AbstractNumericArray
#define SOAP_TYPE_ns2__AbstractNumericArray (1408)
/* complex XML schema type 'ns2:AbstractNumericArray': */
struct ns2__AbstractNumericArray {
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractNumericArray when non-NULL */
        struct ns2__AbstractFloatingPointArray *ns2__AbstractFloatingPointArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractNumericArray when non-NULL */
        struct ns2__AbstractIntegerArray *ns2__AbstractIntegerArray;
};
#endif

/* testh.h:37764 */
#ifndef SOAP_TYPE_ns2__AbstractPressureInterval
#define SOAP_TYPE_ns2__AbstractPressureInterval (1391)
/* complex XML schema type 'ns2:AbstractPressureInterval': */
struct ns2__AbstractPressureInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureInterval when non-NULL */
        struct ns2__AbsolutePressureInterval *ns2__AbsolutePressureInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureInterval when non-NULL */
        struct ns2__GaugePressureInterval *ns2__GaugePressureInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractPressureInterval when non-NULL */
        struct ns2__RelativePressureInterval *ns2__RelativePressureInterval;
};
#endif

/* testh.h:37806 */
#ifndef SOAP_TYPE_ns2__AbstractStringArray
#define SOAP_TYPE_ns2__AbstractStringArray (1410)
/* complex XML schema type 'ns2:AbstractStringArray': */
struct ns2__AbstractStringArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:StringArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__StringArrayStatistics *Statistics;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractStringArray when non-NULL */
        struct ns2__StringConstantArray *ns2__StringConstantArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractStringArray when non-NULL */
        struct ns2__StringExternalArray *ns2__StringExternalArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractStringArray when non-NULL */
        struct ns2__StringXmlArray *ns2__StringXmlArray;
};
#endif

/* testh.h:25490 */
#ifndef SOAP_TYPE_ns2__AbstractTvdInterval
#define SOAP_TYPE_ns2__AbstractTvdInterval (887)
/* complex XML schema type 'ns2:AbstractTvdInterval': */
struct ns2__AbstractTvdInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMin' of XML schema type 'xsd:double' */
        double TvdMin;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMax' of XML schema type 'xsd:double' */
        double TvdMax;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthUomExt' */
        char *Uom;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractTvdInterval when non-NULL */
        struct ns2__DatumTvdInterval *ns2__DatumTvdInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractTvdInterval when non-NULL */
        struct ns2__ReferencePointTvdInterval *ns2__ReferencePointTvdInterval;
};
#endif

/* testh.h:37768 */
#ifndef SOAP_TYPE_ns2__DateTimeInterval
#define SOAP_TYPE_ns2__DateTimeInterval (1394)
/* complex XML schema type 'ns2:DateTimeInterval': */
struct ns2__DateTimeInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:StartTime' of XML schema type 'ns2:TimeStamp' */
        time_t StartTime;
        /** Required nillable (xsi:nil when NULL) element 'ns2:EndTime' of XML schema type 'ns2:TimeStamp' */
        time_t EndTime;
};
#endif

/* testh.h:37727 */
#ifndef SOAP_TYPE_ns2__DatumElevation
#define SOAP_TYPE_ns2__DatumElevation (1387)
/* complex XML schema type 'ns2:DatumElevation': */
struct ns2__DatumElevation {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Elevation' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Elevation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:37833 */
#ifndef SOAP_TYPE_ns2__DatumVerticalDepth
#define SOAP_TYPE_ns2__DatumVerticalDepth (1412)
/* complex XML schema type 'ns2:DatumVerticalDepth': */
struct ns2__DatumVerticalDepth {
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalDepth' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *VerticalDepth;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Optional element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:37770 */
#ifndef SOAP_TYPE_ns2__ElapsedTimeInterval
#define SOAP_TYPE_ns2__ElapsedTimeInterval (1396)
/* complex XML schema type 'ns2:ElapsedTimeInterval': */
struct ns2__ElapsedTimeInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:StartElapsedTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *StartElapsedTime;
        /** Required nillable (xsi:nil when NULL) element 'ns2:EndElapsedTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *EndElapsedTime;
};
#endif

/* testh.h:23307 */
#ifndef SOAP_TYPE_ns2__MdInterval
#define SOAP_TYPE_ns2__MdInterval (812)
/* complex XML schema type 'ns2:MdInterval': */
struct ns2__MdInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdMin' of XML schema type 'xsd:double' */
        double MdMin;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdMax' of XML schema type 'xsd:double' */
        double MdMax;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthUomExt' */
        char *Uom;
        /** Optional element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:37729 */
#ifndef SOAP_TYPE_ns2__ReferencePointElevation
#define SOAP_TYPE_ns2__ReferencePointElevation (1389)
/* complex XML schema type 'ns2:ReferencePointElevation': */
struct ns2__ReferencePointElevation {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Elevation' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Elevation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferencePoint' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferencePoint;
};
#endif

/* testh.h:37835 */
#ifndef SOAP_TYPE_ns2__ReferencePointVerticalDepth
#define SOAP_TYPE_ns2__ReferencePointVerticalDepth (1414)
/* complex XML schema type 'ns2:ReferencePointVerticalDepth': */
struct ns2__ReferencePointVerticalDepth {
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalDepth' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *VerticalDepth;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferencePoint' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferencePoint;
};
#endif

/* testh.h:37774 */
#ifndef SOAP_TYPE_ns2__ScalarInterval
#define SOAP_TYPE_ns2__ScalarInterval (1399)
/* complex XML schema type 'ns2:ScalarInterval': */
struct ns2__ScalarInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinValue' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *MinValue;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxValue' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *MaxValue;
};
#endif

/* testh.h:37776 */
#ifndef SOAP_TYPE_ns2__TemperatureInterval
#define SOAP_TYPE_ns2__TemperatureInterval (1401)
/* complex XML schema type 'ns2:TemperatureInterval': */
struct ns2__TemperatureInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasureExt' */
        struct ns2__ThermodynamicTemperatureMeasureExt *MinTemperature;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxTemperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasureExt' */
        struct ns2__ThermodynamicTemperatureMeasureExt *MaxTemperature;
};
#endif

/* testh.h:37035 */
#ifndef SOAP_TYPE_ns2__Abstract2dCrs
#define SOAP_TYPE_ns2__Abstract2dCrs (1270)
/* complex XML schema type 'ns2:Abstract2dCrs': */
struct ns2__Abstract2dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract2dCrs when non-NULL */
        struct ns2__Cartesian2dCrs *ns2__Cartesian2dCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Abstract2dCrs when non-NULL */
        struct ns2__Geographic2dCrs *ns2__Geographic2dCrs;
};
#endif

/* testh.h:37037 */
#ifndef SOAP_TYPE_ns2__AbstractCompoundCrs
#define SOAP_TYPE_ns2__AbstractCompoundCrs (1272)
/* complex XML schema type 'ns2:AbstractCompoundCrs': */
struct ns2__AbstractCompoundCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundCrs when non-NULL */
        struct ns2__GeographicCompoundCrs *ns2__GeographicCompoundCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundCrs when non-NULL */
        struct ns2__LocalEngineeringCompoundCrs *ns2__LocalEngineeringCompoundCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCompoundCrs when non-NULL */
        struct ns2__ProjectedCompoundCrs *ns2__ProjectedCompoundCrs;
};
#endif

/* testh.h:37039 */
#ifndef SOAP_TYPE_ns2__Geocentric3dCrs
#define SOAP_TYPE_ns2__Geocentric3dCrs (1274)
/* complex XML schema type 'ns2:Geocentric3dCrs': */
struct ns2__Geocentric3dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
};
#endif

/* testh.h:38004 */
#ifndef SOAP_TYPE_ns2__GeodeticEpsgCrs
#define SOAP_TYPE_ns2__GeodeticEpsgCrs (1425)
/* complex XML schema type 'ns2:GeodeticEpsgCrs': */
struct ns2__GeodeticEpsgCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:EpsgCode' of XML schema type 'ns2:PositiveLong' */
        LONG64 EpsgCode;
};
#endif

/* testh.h:38006 */
#ifndef SOAP_TYPE_ns2__GeodeticLocalAuthorityCrs
#define SOAP_TYPE_ns2__GeodeticLocalAuthorityCrs (1427)
/* complex XML schema type 'ns2:GeodeticLocalAuthorityCrs': */
struct ns2__GeodeticLocalAuthorityCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalAuthorityCrsName' of XML schema type 'ns2:AuthorityQualifiedName' */
        struct ns2__AuthorityQualifiedName *LocalAuthorityCrsName;
};
#endif

/* testh.h:38008 */
#ifndef SOAP_TYPE_ns2__GeodeticUnknownCrs
#define SOAP_TYPE_ns2__GeodeticUnknownCrs (1429)
/* complex XML schema type 'ns2:GeodeticUnknownCrs': */
struct ns2__GeodeticUnknownCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Unknown' of XML schema type 'ns2:String2000' */
        char *Unknown;
};
#endif

/* testh.h:38010 */
#ifndef SOAP_TYPE_ns2__GeodeticWktCrs
#define SOAP_TYPE_ns2__GeodeticWktCrs (1431)
/* complex XML schema type 'ns2:GeodeticWktCrs': */
struct ns2__GeodeticWktCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:WellKnownText' of XML schema type 'xsd:string' */
        char *WellKnownText;
};
#endif

/* testh.h:37041 */
#ifndef SOAP_TYPE_ns2__Geographic3dCrs
#define SOAP_TYPE_ns2__Geographic3dCrs (1276)
/* complex XML schema type 'ns2:Geographic3dCrs': */
struct ns2__Geographic3dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
};
#endif

/* testh.h:38031 */
#ifndef SOAP_TYPE_ns2__ProjectedEpsgCrs
#define SOAP_TYPE_ns2__ProjectedEpsgCrs (1434)
/* complex XML schema type 'ns2:ProjectedEpsgCrs': */
struct ns2__ProjectedEpsgCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:EpsgCode' of XML schema type 'ns2:PositiveLong' */
        LONG64 EpsgCode;
};
#endif

/* testh.h:38033 */
#ifndef SOAP_TYPE_ns2__ProjectedLocalAuthorityCrs
#define SOAP_TYPE_ns2__ProjectedLocalAuthorityCrs (1436)
/* complex XML schema type 'ns2:ProjectedLocalAuthorityCrs': */
struct ns2__ProjectedLocalAuthorityCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalAuthorityCrsName' of XML schema type 'ns2:AuthorityQualifiedName' */
        struct ns2__AuthorityQualifiedName *LocalAuthorityCrsName;
};
#endif

/* testh.h:38035 */
#ifndef SOAP_TYPE_ns2__ProjectedUnknownCrs
#define SOAP_TYPE_ns2__ProjectedUnknownCrs (1438)
/* complex XML schema type 'ns2:ProjectedUnknownCrs': */
struct ns2__ProjectedUnknownCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Unknown' of XML schema type 'ns2:String2000' */
        char *Unknown;
};
#endif

/* testh.h:38037 */
#ifndef SOAP_TYPE_ns2__ProjectedWktCrs
#define SOAP_TYPE_ns2__ProjectedWktCrs (1440)
/* complex XML schema type 'ns2:ProjectedWktCrs': */
struct ns2__ProjectedWktCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:WellKnownText' of XML schema type 'xsd:string' */
        char *WellKnownText;
};
#endif

/* testh.h:37043 */
#ifndef SOAP_TYPE_ns2__VerticalCrs
#define SOAP_TYPE_ns2__VerticalCrs (1278)
/* complex XML schema type 'ns2:VerticalCrs': */
struct ns2__VerticalCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Direction' of XML schema type 'ns2:VerticalDirection' */
        enum ns2__VerticalDirection Direction;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AbstractVerticalCrs' of XML schema type 'ns2:AbstractVerticalCrs' */
        struct ns2__AbstractVerticalCrs *AbstractVerticalCrs;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthUomExt' */
        char *uom;
};
#endif

/* testh.h:38058 */
#ifndef SOAP_TYPE_ns2__VerticalEpsgCrs
#define SOAP_TYPE_ns2__VerticalEpsgCrs (1443)
/* complex XML schema type 'ns2:VerticalEpsgCrs': */
struct ns2__VerticalEpsgCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:EpsgCode' of XML schema type 'ns2:PositiveLong' */
        LONG64 EpsgCode;
};
#endif

/* testh.h:38060 */
#ifndef SOAP_TYPE_ns2__VerticalLocalAuthorityCrs
#define SOAP_TYPE_ns2__VerticalLocalAuthorityCrs (1445)
/* complex XML schema type 'ns2:VerticalLocalAuthorityCrs': */
struct ns2__VerticalLocalAuthorityCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalAuthorityCrsName' of XML schema type 'ns2:AuthorityQualifiedName' */
        struct ns2__AuthorityQualifiedName *LocalAuthorityCrsName;
};
#endif

/* testh.h:38062 */
#ifndef SOAP_TYPE_ns2__VerticalUnknownCrs
#define SOAP_TYPE_ns2__VerticalUnknownCrs (1447)
/* complex XML schema type 'ns2:VerticalUnknownCrs': */
struct ns2__VerticalUnknownCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Unknown' of XML schema type 'ns2:String2000' */
        char *Unknown;
};
#endif

/* testh.h:38064 */
#ifndef SOAP_TYPE_ns2__VerticalWktCrs
#define SOAP_TYPE_ns2__VerticalWktCrs (1449)
/* complex XML schema type 'ns2:VerticalWktCrs': */
struct ns2__VerticalWktCrs {
        /** Required nillable (xsi:nil when NULL) element 'ns2:WellKnownText' of XML schema type 'xsd:string' */
        char *WellKnownText;
};
#endif

/* testh.h:38218 */
#ifndef SOAP_TYPE_ns2__AbsolutePressure
#define SOAP_TYPE_ns2__AbsolutePressure (1459)
/* complex XML schema type 'ns2:AbsolutePressure': */
struct ns2__AbsolutePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns2:AbsolutePressure' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *AbsolutePressure;
};
#endif

/* testh.h:38220 */
#ifndef SOAP_TYPE_ns2__GaugePressure
#define SOAP_TYPE_ns2__GaugePressure (1461)
/* complex XML schema type 'ns2:GaugePressure': */
struct ns2__GaugePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns2:GaugePressure' of XML schema type 'ns2:PressureMeasureExt' */
        struct ns2__PressureMeasureExt *GaugePressure;
        /** Optional element 'ns2:ReferencePressure' of XML schema type 'ns2:ReferencePressure' */
        struct ns2__ReferencePressure *ReferencePressure;
};
#endif

/* testh.h:38245 */
#ifndef SOAP_TYPE_ns2__ReferenceTemperaturePressure
#define SOAP_TYPE_ns2__ReferenceTemperaturePressure (1466)
/* complex XML schema type 'ns2:ReferenceTemperaturePressure': */
struct ns2__ReferenceTemperaturePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferenceTempPres' of XML schema type 'ns2:ReferenceConditionExt' */
        char *ReferenceTempPres;
};
#endif

/* testh.h:38222 */
#ifndef SOAP_TYPE_ns2__RelativePressure
#define SOAP_TYPE_ns2__RelativePressure (1463)
/* complex XML schema type 'ns2:RelativePressure': */
struct ns2__RelativePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns2:RelativePressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *RelativePressure;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferencePressure' of XML schema type 'ns2:ReferencePressure' */
        struct ns2__ReferencePressure *ReferencePressure;
};
#endif

/* testh.h:38247 */
#ifndef SOAP_TYPE_ns2__TemperaturePressure
#define SOAP_TYPE_ns2__TemperaturePressure (1468)
/* complex XML schema type 'ns2:TemperaturePressure': */
struct ns2__TemperaturePressure {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Temperature' of XML schema type 'ns2:ThermodynamicTemperatureMeasure' */
        struct ns2__ThermodynamicTemperatureMeasure *Temperature;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Pressure' of XML schema type 'ns2:PressureMeasure' */
        struct ns2__PressureMeasure *Pressure;
};
#endif

/* testh.h:37045 */
#ifndef SOAP_TYPE_ns2__PropertyKind
#define SOAP_TYPE_ns2__PropertyKind (1280)
/* complex XML schema type 'ns2:PropertyKind': */
struct ns2__PropertyKind {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsAbstract' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsAbstract;
        /** Optional element 'ns2:DeprecationDate' of XML schema type 'ns2:TimeStamp' */
        time_t *DeprecationDate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:QuantityClass' of XML schema type 'ns2:QuantityClassKindExt' */
        char *QuantityClass;
        /** Optional element 'ns2:Parent' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Parent;
};
#endif

/* testh.h:37047 */
#ifndef SOAP_TYPE_ns2__PropertyKindDictionary
#define SOAP_TYPE_ns2__PropertyKindDictionary (1282)
/* complex XML schema type 'ns2:PropertyKindDictionary': */
struct ns2__PropertyKindDictionary {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 2 elements 'ns2:PropertyKind' of XML schema type 'ns2:PropertyKind' stored in dynamic array PropertyKind of length __sizePropertyKind */
        int __sizePropertyKind;
        struct ns2__PropertyKind *PropertyKind;
};
#endif

/* testh.h:37049 */
#ifndef SOAP_TYPE_ns2__TimeSeries
#define SOAP_TYPE_ns2__TimeSeries (1284)
/* complex XML schema type 'ns2:TimeSeries': */
struct ns2__TimeSeries {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns2:Time' of XML schema type 'ns2:GeologicTime' stored in dynamic array Time of length __sizeTime */
        int __sizeTime;
        struct ns2__GeologicTime *Time;
        /** Optional element 'ns2:TimeStep' of XML schema type 'ns2:AbstractIntegerArray' */
        struct ns2__AbstractIntegerArray *TimeStep;
        /** Optional element 'ns2:TimeSeriesParentage' of XML schema type 'ns2:TimeSeriesParentage' */
        struct ns2__TimeSeriesParentage *TimeSeriesParentage;
};
#endif

/* testh.h:37051 */
#ifndef SOAP_TYPE_ns2__BusinessAssociate
#define SOAP_TYPE_ns2__BusinessAssociate (1286)
/* complex XML schema type 'ns2:BusinessAssociate': */
struct ns2__BusinessAssociate {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Name' of XML schema type 'ns2:String256' */
        char *Name;
        /** Optional element 'ns2:AuthorityCode' of XML schema type 'ns2:String64' */
        char *AuthorityCode;
        /** Optional element 'ns2:OrganizationKind' of XML schema type 'ns2:OrganizationKindExt' */
        char *OrganizationKind;
        /** Sequence of elements 'ns2:Role' of XML schema type 'ns2:NameStruct' stored in dynamic array Role of length __sizeRole */
        int __sizeRole;
        struct ns2__NameStruct *Role;
        /** Optional element 'ns2:Address' of XML schema type 'ns2:GeneralAddress' */
        struct ns2__GeneralAddress *Address;
        /** Sequence of elements 'ns2:Contact' of XML schema type 'ns2:String64' stored in dynamic array Contact of length __sizeContact */
        int __sizeContact;
        char **Contact;
        /** Sequence of elements 'ns2:PhoneNumber' of XML schema type 'ns2:PhoneNumberStruct' stored in dynamic array PhoneNumber of length __sizePhoneNumber */
        int __sizePhoneNumber;
        struct ns2__PhoneNumberStruct *PhoneNumber;
        /** Sequence of elements 'ns2:Email' of XML schema type 'ns2:EmailQualifierStruct' stored in dynamic array Email of length __sizeEmail */
        int __sizeEmail;
        struct ns2__EmailQualifierStruct *Email;
        /** Optional element 'ns2:EffectiveDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EffectiveDateTime;
        /** Optional element 'ns2:TerminationDateTime' of XML schema type 'ns2:TimeStamp' */
        time_t *TerminationDateTime;
        /** Optional element 'ns2:Purpose' of XML schema type 'ns2:String2000' */
        char *Purpose;
        /** Optional element 'ns2:IsInternal' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsInternal;
        /** Optional element 'ns2:AssociatedWith' of XML schema type 'ns2:String64' */
        char *AssociatedWith;
        /** Optional element 'ns2:PersonnelCount' of XML schema type 'xsd:nonNegativeInteger' */
        char *PersonnelCount;
        /** Optional element 'ns2:PersonName' of XML schema type 'ns2:PersonName' */
        struct ns2__PersonName *PersonName;
};
#endif

/* testh.h:37053 */
#ifndef SOAP_TYPE_ns2__Activity
#define SOAP_TYPE_ns2__Activity (1288)
/* complex XML schema type 'ns2:Activity': */
struct ns2__Activity {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Parent' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Parent;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActivityDescriptor' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ActivityDescriptor;
        /** Sequence of at least 1 elements 'ns2:Parameter' of XML schema type 'ns2:AbstractActivityParameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns2__AbstractActivityParameter *Parameter;
};
#endif

/* testh.h:37055 */
#ifndef SOAP_TYPE_ns2__ActivityTemplate
#define SOAP_TYPE_ns2__ActivityTemplate (1290)
/* complex XML schema type 'ns2:ActivityTemplate': */
struct ns2__ActivityTemplate {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns2:Parameter' of XML schema type 'ns2:ParameterTemplate' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns2__ParameterTemplate *Parameter;
};
#endif

/* testh.h:38978 */
#ifndef SOAP_TYPE_ns2__DataObjectParameter
#define SOAP_TYPE_ns2__DataObjectParameter (1496)
/* complex XML schema type 'ns2:DataObjectParameter': */
struct ns2__DataObjectParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Required nillable (xsi:nil when NULL) element 'ns2:DataObject' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataObject;
};
#endif

/* testh.h:38980 */
#ifndef SOAP_TYPE_ns2__DoubleQuantityParameter
#define SOAP_TYPE_ns2__DoubleQuantityParameter (1498)
/* complex XML schema type 'ns2:DoubleQuantityParameter': */
struct ns2__DoubleQuantityParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:double' */
        double Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Optional element 'ns2:CustomUnitDictionary' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *CustomUnitDictionary;
};
#endif

/* testh.h:39012 */
#ifndef SOAP_TYPE_ns2__DoubleParameterKey
#define SOAP_TYPE_ns2__DoubleParameterKey (1506)
/* complex XML schema type 'ns2:DoubleParameterKey': */
struct ns2__DoubleParameterKey {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:double' */
        double Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Optional element 'ns2:CustomUnitDictionary' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *CustomUnitDictionary;
};
#endif

/* testh.h:38982 */
#ifndef SOAP_TYPE_ns2__IntegerQuantityParameter
#define SOAP_TYPE_ns2__IntegerQuantityParameter (1500)
/* complex XML schema type 'ns2:IntegerQuantityParameter': */
struct ns2__IntegerQuantityParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:long' */
        LONG64 Value;
};
#endif

/* testh.h:39014 */
#ifndef SOAP_TYPE_ns2__IntegerParameterKey
#define SOAP_TYPE_ns2__IntegerParameterKey (1508)
/* complex XML schema type 'ns2:IntegerParameterKey': */
struct ns2__IntegerParameterKey {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:long' */
        LONG64 Value;
};
#endif

/* testh.h:39016 */
#ifndef SOAP_TYPE_ns2__ObjectParameterKey
#define SOAP_TYPE_ns2__ObjectParameterKey (1510)
/* complex XML schema type 'ns2:ObjectParameterKey': */
struct ns2__ObjectParameterKey {
        /** Required nillable (xsi:nil when NULL) element 'ns2:DataObject' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataObject;
};
#endif

/* testh.h:38984 */
#ifndef SOAP_TYPE_ns2__StringParameter
#define SOAP_TYPE_ns2__StringParameter (1502)
/* complex XML schema type 'ns2:StringParameter': */
struct ns2__StringParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'ns2:String2000' */
        char *Value;
};
#endif

/* testh.h:39018 */
#ifndef SOAP_TYPE_ns2__StringParameterKey
#define SOAP_TYPE_ns2__StringParameterKey (1512)
/* complex XML schema type 'ns2:StringParameterKey': */
struct ns2__StringParameterKey {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'ns2:String2000' */
        char *Value;
};
#endif

/* testh.h:38986 */
#ifndef SOAP_TYPE_ns2__TimeIndexParameter
#define SOAP_TYPE_ns2__TimeIndexParameter (1504)
/* complex XML schema type 'ns2:TimeIndexParameter': */
struct ns2__TimeIndexParameter {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Title' of XML schema type 'ns2:String2000' */
        char *Title;
        /** Optional element 'ns2:Index' of XML schema type 'xsd:long' */
        LONG64 *Index;
        /** Optional element 'ns2:Selection' of XML schema type 'ns2:String2000' */
        char *Selection;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IsUncertain' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsUncertain;
        /** Sequence of elements 'ns2:Key' of XML schema type 'ns2:AbstractParameterKey' stored in dynamic array Key of length __sizeKey */
        int __sizeKey;
        struct ns2__AbstractParameterKey *Key;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TimeIndex' of XML schema type 'ns2:TimeIndex' */
        struct ns2__TimeIndex *TimeIndex;
};
#endif

/* testh.h:39020 */
#ifndef SOAP_TYPE_ns2__TimeIndexParameterKey
#define SOAP_TYPE_ns2__TimeIndexParameterKey (1514)
/* complex XML schema type 'ns2:TimeIndexParameterKey': */
struct ns2__TimeIndexParameterKey {
        /** Required nillable (xsi:nil when NULL) element 'ns2:TimeIndex' of XML schema type 'ns2:TimeIndex' */
        struct ns2__TimeIndex *TimeIndex;
};
#endif

/* testh.h:37057 */
#ifndef SOAP_TYPE_ns2__Aggregate
#define SOAP_TYPE_ns2__Aggregate (1292)
/* complex XML schema type 'ns2:Aggregate': */
struct ns2__Aggregate {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns2:AggregateMember' of XML schema type 'ns2:AbstractObject' stored in dynamic array AggregateMember of length __sizeAggregateMember */
        int __sizeAggregateMember;
        struct ns2__AbstractObject *AggregateMember;
};
#endif

/* testh.h:37059 */
#ifndef SOAP_TYPE_ns2__Attachment
#define SOAP_TYPE_ns2__Attachment (1294)
/* complex XML schema type 'ns2:Attachment': */
struct ns2__Attachment {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns2:SubObjectReference' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *SubObjectReference;
        /** Optional element 'ns2:IndexableElementType' of XML schema type 'ns2:IndexableElement' */
        enum ns2__IndexableElement *IndexableElementType;
        /** Optional element 'ns2:IndexableElementIndex' of XML schema type 'xsd:long' */
        LONG64 *IndexableElementIndex;
        /** Optional element 'ns2:MdBit' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBit;
        /** Optional element 'ns2:Category' of XML schema type 'ns2:String64' */
        char *Category;
        /** Optional element 'ns2:FileName' of XML schema type 'ns2:String64' */
        char *FileName;
        /** Optional element 'ns2:FileType' of XML schema type 'ns2:String64' */
        char *FileType;
        /** Optional element 'ns2:ContentUri' of XML schema type 'xsd:anyURI' */
        char *ContentUri;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Content' of XML schema type 'xsd:base64Binary' */
        struct xsd__base64Binary Content;
        /** Optional element 'ns2:ObjectReference' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ObjectReference;
};
#endif

/* testh.h:37061 */
#ifndef SOAP_TYPE_ns2__CollectionsToDataobjectsAssociationSet
#define SOAP_TYPE_ns2__CollectionsToDataobjectsAssociationSet (1296)
/* complex XML schema type 'ns2:CollectionsToDataobjectsAssociationSet': */
struct ns2__CollectionsToDataobjectsAssociationSet {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns2:SingleCollectionAssociation' of XML schema type 'ns2:SingleCollectionAssociation' stored in dynamic array SingleCollectionAssociation of length __sizeSingleCollectionAssociation */
        int __sizeSingleCollectionAssociation;
        struct ns2__SingleCollectionAssociation *SingleCollectionAssociation;
};
#endif

/* testh.h:37063 */
#ifndef SOAP_TYPE_ns2__DataobjectCollection
#define SOAP_TYPE_ns2__DataobjectCollection (1298)
/* complex XML schema type 'ns2:DataobjectCollection': */
struct ns2__DataobjectCollection {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:CollectionKindExt' */
        char *Kind;
        /** Optional element 'ns2:HomogeneousDatatype' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *HomogeneousDatatype;
};
#endif

/* testh.h:37065 */
#ifndef SOAP_TYPE_ns2__ColumnBasedTable
#define SOAP_TYPE_ns2__ColumnBasedTable (1300)
/* complex XML schema type 'ns2:ColumnBasedTable': */
struct ns2__ColumnBasedTable {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of at least 1 elements 'ns2:Column' of XML schema type 'ns2:Column' stored in dynamic array Column of length __sizeColumn */
        int __sizeColumn;
        struct ns2__Column *Column;
        /** Sequence of elements 'ns2:KeyColumn' of XML schema type 'ns2:Column' stored in dynamic array KeyColumn of length __sizeKeyColumn */
        int __sizeKeyColumn;
        struct ns2__Column *KeyColumn;
};
#endif

/* testh.h:37067 */
#ifndef SOAP_TYPE_ns2__DataAssuranceRecord
#define SOAP_TYPE_ns2__DataAssuranceRecord (1302)
/* complex XML schema type 'ns2:DataAssuranceRecord': */
struct ns2__DataAssuranceRecord {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:PolicyId' of XML schema type 'ns2:String64' */
        char *PolicyId;
        /** Optional element 'ns2:PolicyName' of XML schema type 'ns2:String2000' */
        char *PolicyName;
        /** Optional element 'ns2:ReferencedElementName' of XML schema type 'ns2:String64' */
        char *ReferencedElementName;
        /** Optional element 'ns2:ReferencedComponent' of XML schema type 'ns2:ComponentReference' */
        struct ns2__ComponentReference *ReferencedComponent;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Origin' of XML schema type 'ns2:String2000' */
        char *Origin;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Conformance' of XML schema type 'xsd:boolean' */
        enum xsd__boolean Conformance;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Date' of XML schema type 'ns2:TimeStamp' */
        time_t Date;
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Optional element 'ns2:IndexRange' of XML schema type 'ns2:IndexRange' */
        struct ns2__IndexRange *IndexRange;
        /** Sequence of elements 'ns2:FailingRules' of XML schema type 'ns2:FailingRule' stored in dynamic array FailingRules of length __sizeFailingRules */
        int __sizeFailingRules;
        struct ns2__FailingRule *FailingRules;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferencedData' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferencedData;
};
#endif

/* testh.h:37069 */
#ifndef SOAP_TYPE_ns2__GraphicalInformationSet
#define SOAP_TYPE_ns2__GraphicalInformationSet (1304)
/* complex XML schema type 'ns2:GraphicalInformationSet': */
struct ns2__GraphicalInformationSet {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Sequence of elements 'ns2:GraphicalInformation' of XML schema type 'ns2:AbstractGraphicalInformation' stored in dynamic array GraphicalInformation of length __sizeGraphicalInformation */
        int __sizeGraphicalInformation;
        struct ns2__AbstractGraphicalInformation *GraphicalInformation;
};
#endif

/* testh.h:47023 */
#ifndef SOAP_TYPE_ns1__Wellbore
#define SOAP_TYPE_ns1__Wellbore (1651)
/* complex XML schema type 'ns1:Wellbore': */
struct ns1__Wellbore {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:GeographicBottomHoleLocation' of XML schema type 'ns1:BottomHoleLocation' */
        struct ns1__BottomHoleLocation *GeographicBottomHoleLocation;
        /** Optional element 'ns1:Number' of XML schema type 'ns2:String64' */
        char *Number;
        /** Optional element 'ns1:ProjectedBottomHoleLocation' of XML schema type 'ns1:BottomHoleLocation' */
        struct ns1__BottomHoleLocation *ProjectedBottomHoleLocation;
        /** Optional element 'ns1:SuffixAPI' of XML schema type 'ns2:String64' */
        char *SuffixAPI;
        /** Optional element 'ns1:NumLicense' of XML schema type 'ns2:String64' */
        char *NumLicense;
        /** Sequence of elements 'ns1:LicenseHistory' of XML schema type 'ns1:LicensePeriod' stored in dynamic array LicenseHistory of length __sizeLicenseHistory */
        int __sizeLicenseHistory;
        struct ns1__LicensePeriod *LicenseHistory;
        /** Optional element 'ns1:NumGovt' of XML schema type 'ns2:String64' */
        char *NumGovt;
        /** Optional element 'ns1:UniqueIdentifier' of XML schema type 'ns2:String64' */
        char *UniqueIdentifier;
        /** Optional element 'ns1:SlotName' of XML schema type 'ns2:String64' */
        char *SlotName;
        /** Optional element 'ns1:Operator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Operator;
        /** Optional element 'ns1:OriginalOperator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *OriginalOperator;
        /** Sequence of elements 'ns1:OperatorHistory' of XML schema type 'ns2:FacilityOperator' stored in dynamic array OperatorHistory of length __sizeOperatorHistory */
        int __sizeOperatorHistory;
        struct ns2__FacilityOperator *OperatorHistory;
        /** Optional element 'ns1:DataSourceOrganization' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSourceOrganization;
        /** Optional element 'ns1:LifecycleState' of XML schema type 'ns2:FacilityLifecycleStateExt' */
        char *LifecycleState;
        /** Sequence of elements 'ns1:LifecycleHistory' of XML schema type 'ns2:FacilityLifecyclePeriod' stored in dynamic array LifecycleHistory of length __sizeLifecycleHistory */
        int __sizeLifecycleHistory;
        struct ns2__FacilityLifecyclePeriod *LifecycleHistory;
        /** Optional element 'ns1:StatusWellbore' of XML schema type 'ns2:WellStatus' */
        enum ns2__WellStatus *StatusWellbore;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns2:WellStatusPeriod' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns2__WellStatusPeriod *StatusHistory;
        /** Optional element 'ns1:PurposeWellbore' of XML schema type 'ns1:WellPurpose' */
        enum ns1__WellPurpose *PurposeWellbore;
        /** Sequence of elements 'ns1:PurposeHistory' of XML schema type 'ns1:WellPurposePeriod' stored in dynamic array PurposeHistory of length __sizePurposeHistory */
        int __sizePurposeHistory;
        struct ns1__WellPurposePeriod *PurposeHistory;
        /** Optional element 'ns1:TypeWellbore' of XML schema type 'ns1:WellboreType' */
        enum ns1__WellboreType *TypeWellbore;
        /** Optional element 'ns1:Shape' of XML schema type 'ns1:WellboreShape' */
        enum ns1__WellboreShape *Shape;
        /** Optional element 'ns1:FluidWellbore' of XML schema type 'ns1:WellFluid' */
        enum ns1__WellFluid *FluidWellbore;
        /** Optional element 'ns1:DTimKickoff' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimKickoff;
        /** Optional element 'ns1:AchievedTD' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AchievedTD;
        /** Optional element 'ns1:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *Md;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:MdBit' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdBit;
        /** Optional element 'ns1:TvdBit' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdBit;
        /** Optional element 'ns1:MdKickoff' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdKickoff;
        /** Optional element 'ns1:TvdKickoff' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdKickoff;
        /** Optional element 'ns1:MdPlanned' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdPlanned;
        /** Optional element 'ns1:TvdPlanned' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdPlanned;
        /** Optional element 'ns1:MdSubSeaPlanned' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdSubSeaPlanned;
        /** Optional element 'ns1:TvdSubSeaPlanned' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *TvdSubSeaPlanned;
        /** Optional element 'ns1:DayTarget' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *DayTarget;
        /** Sequence of elements 'ns1:TargetFormation' of XML schema type 'ns2:String64' stored in dynamic array TargetFormation of length __sizeTargetFormation */
        int __sizeTargetFormation;
        char **TargetFormation;
        /** Optional element 'ns1:TargetGeologicUnitInterpretation' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *TargetGeologicUnitInterpretation;
        /** Optional element 'ns1:DefaultMdDatum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DefaultMdDatum;
        /** Optional element 'ns1:DefaultTvdDatum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DefaultTvdDatum;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Well' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Well;
        /** Optional element 'ns1:ParentWellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ParentWellbore;
};
#endif

/* testh.h:47025 */
#ifndef SOAP_TYPE_ns1__Well
#define SOAP_TYPE_ns1__Well (1653)
/* complex XML schema type 'ns1:Well': */
struct ns1__Well {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:UniqueIdentifier' of XML schema type 'ns2:String64' */
        char *UniqueIdentifier;
        /** Optional element 'ns1:NameLegal' of XML schema type 'ns2:String64' */
        char *NameLegal;
        /** Optional element 'ns1:NumGovt' of XML schema type 'ns2:String64' */
        char *NumGovt;
        /** Optional element 'ns1:NumAPI' of XML schema type 'ns2:String64' */
        char *NumAPI;
        /** Optional element 'ns1:OperatingEnvironment' of XML schema type 'ns1:OperatingEnvironmentExt' */
        char *OperatingEnvironment;
        /** Optional element 'ns1:TimeZone' of XML schema type 'ns2:TimeZone' */
        char *TimeZone;
        /** Optional element 'ns1:Basin' of XML schema type 'ns2:String64' */
        char *Basin;
        /** Optional element 'ns1:Play' of XML schema type 'ns2:String64' */
        char *Play;
        /** Optional element 'ns1:Prospect' of XML schema type 'ns2:String64' */
        char *Prospect;
        /** Optional element 'ns1:Field' of XML schema type 'ns2:String64' */
        char *Field;
        /** Optional element 'ns1:Country' of XML schema type 'ns2:String64' */
        char *Country;
        /** Optional element 'ns1:State' of XML schema type 'ns2:String64' */
        char *State;
        /** Optional element 'ns1:County' of XML schema type 'ns2:String64' */
        char *County;
        /** Optional element 'ns1:Region' of XML schema type 'ns2:String64' */
        char *Region;
        /** Optional element 'ns1:District' of XML schema type 'ns2:String64' */
        char *District;
        /** Optional element 'ns1:NumLicense' of XML schema type 'ns2:String64' */
        char *NumLicense;
        /** Optional element 'ns1:DTimLicense' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimLicense;
        /** Sequence of elements 'ns1:LicenseHistory' of XML schema type 'ns1:LicensePeriod' stored in dynamic array LicenseHistory of length __sizeLicenseHistory */
        int __sizeLicenseHistory;
        struct ns1__LicensePeriod *LicenseHistory;
        /** Optional element 'ns1:Block' of XML schema type 'ns2:String64' */
        char *Block;
        /** Optional element 'ns1:InterestType' of XML schema type 'ns1:WellInterestExt' */
        char *InterestType;
        /** Optional element 'ns1:PcInterest' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *PcInterest;
        /** Optional element 'ns1:SlotName' of XML schema type 'ns2:String64' */
        char *SlotName;
        /** Optional element 'ns1:LifeCycleState' of XML schema type 'ns2:FacilityLifecycleStateExt' */
        char *LifeCycleState;
        /** Sequence of elements 'ns1:LifeCycleHistory' of XML schema type 'ns2:FacilityLifecyclePeriod' stored in dynamic array LifeCycleHistory of length __sizeLifeCycleHistory */
        int __sizeLifeCycleHistory;
        struct ns2__FacilityLifecyclePeriod *LifeCycleHistory;
        /** Optional element 'ns1:Operator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Operator;
        /** Optional element 'ns1:OperatorDiv' of XML schema type 'ns2:String64' */
        char *OperatorDiv;
        /** Optional element 'ns1:OriginalOperator' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *OriginalOperator;
        /** Sequence of elements 'ns1:OperatorHistory' of XML schema type 'ns2:FacilityOperator' stored in dynamic array OperatorHistory of length __sizeOperatorHistory */
        int __sizeOperatorHistory;
        struct ns2__FacilityOperator *OperatorHistory;
        /** Optional element 'ns1:StatusWell' of XML schema type 'ns2:WellStatus' */
        enum ns2__WellStatus *StatusWell;
        /** Sequence of elements 'ns1:StatusHistory' of XML schema type 'ns2:WellStatusPeriod' stored in dynamic array StatusHistory of length __sizeStatusHistory */
        int __sizeStatusHistory;
        struct ns2__WellStatusPeriod *StatusHistory;
        /** Optional element 'ns1:PurposeWell' of XML schema type 'ns1:WellPurpose' */
        enum ns1__WellPurpose *PurposeWell;
        /** Sequence of elements 'ns1:PurposeHistory' of XML schema type 'ns1:WellPurposePeriod' stored in dynamic array PurposeHistory of length __sizePurposeHistory */
        int __sizePurposeHistory;
        struct ns1__WellPurposePeriod *PurposeHistory;
        /** Optional element 'ns1:FluidWell' of XML schema type 'ns1:WellFluid' */
        enum ns1__WellFluid *FluidWell;
        /** Optional element 'ns1:DirectionWell' of XML schema type 'ns1:WellDirection' */
        enum ns1__WellDirection *DirectionWell;
        /** Optional element 'ns1:DTimSpud' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimSpud;
        /** Optional element 'ns1:DTimPa' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimPa;
        /** Optional element 'ns1:WaterDepth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *WaterDepth;
        /** Optional element 'ns1:InformationalGeographicLocationWGS84' of XML schema type 'ns2:Geographic2dPosition' */
        struct ns2__Geographic2dPosition *InformationalGeographicLocationWGS84;
        /** Optional element 'ns1:InformationalProjectedLocation' of XML schema type 'ns2:Projected2dPosition' */
        struct ns2__Projected2dPosition *InformationalProjectedLocation;
        /** Optional element 'ns1:DataSourceOrganization' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSourceOrganization;
        /** Optional element 'ns1:WellheadElevation' of XML schema type 'ns2:AbstractElevation' */
        struct ns2__AbstractElevation *WellheadElevation;
        /** Optional element 'ns1:GroundElevation' of XML schema type 'ns2:AbstractElevation' */
        struct ns2__AbstractElevation *GroundElevation;
        /** Sequence of elements 'ns1:WellSurfaceLocation' of XML schema type 'ns2:AbstractPosition' stored in dynamic array WellSurfaceLocation of length __sizeWellSurfaceLocation */
        int __sizeWellSurfaceLocation;
        struct ns2__AbstractPosition *WellSurfaceLocation;
};
#endif

/* testh.h:24354 */
#ifndef SOAP_TYPE_ns1__WellboreGeometrySection
#define SOAP_TYPE_ns1__WellboreGeometrySection (838)
/* complex XML schema type 'ns1:WellboreGeometrySection': */
struct ns1__WellboreGeometrySection {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Optional element 'ns1:TypeHoleCasing' of XML schema type 'ns1:HoleCasingType' */
        enum ns1__HoleCasingType *TypeHoleCasing;
        /** Optional element 'ns1:SectionTvdInterval' of XML schema type 'ns2:AbstractTvdInterval' */
        struct ns2__AbstractTvdInterval *SectionTvdInterval;
        /** Optional element 'ns1:IdSection' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *IdSection;
        /** Optional element 'ns1:OdSection' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *OdSection;
        /** Optional element 'ns1:WtPerLen' of XML schema type 'ns2:MassPerLengthMeasure' */
        struct ns2__MassPerLengthMeasure *WtPerLen;
        /** Optional element 'ns1:Grade' of XML schema type 'ns2:String64' */
        char *Grade;
        /** Optional element 'ns1:CurveConductor' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CurveConductor;
        /** Optional element 'ns1:DiaDrift' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DiaDrift;
        /** Optional element 'ns1:FactFric' of XML schema type 'xsd:double' */
        double *FactFric;
        /** Sequence of elements 'ns1:BhaRun' of XML schema type 'ns2:DataObjectReference' stored in dynamic array BhaRun of length __sizeBhaRun */
        int __sizeBhaRun;
        struct ns2__DataObjectReference *BhaRun;
};
#endif

/* testh.h:47027 */
#ifndef SOAP_TYPE_ns1__Channel
#define SOAP_TYPE_ns1__Channel (1655)
/* complex XML schema type 'ns1:Channel': */
struct ns1__Channel {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Mnemonic' of XML schema type 'ns2:String64' */
        char *Mnemonic;
        /** Required nillable (xsi:nil when NULL) element 'ns1:GlobalMnemonic' of XML schema type 'ns2:String64' */
        char *GlobalMnemonic;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DataKind' of XML schema type 'ns1:ChannelDataKind' */
        enum ns1__ChannelDataKind DataKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Optional element 'ns1:Source' of XML schema type 'ns2:String64' */
        char *Source;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ChannelPropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChannelPropertyKind;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:ChannelKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChannelKind;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:SensorOffset' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *SensorOffset;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:IsContinuous' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsContinuous;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:ChannelOSDUIntegration' of XML schema type 'ns1:ChannelOSDUIntegration' */
        struct ns1__ChannelOSDUIntegration *ChannelOSDUIntegration;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
        /** Optional element 'ns1:SeismicReferenceElevation' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *SeismicReferenceElevation;
        /** Optional element 'ns1:Data' of XML schema type 'ns1:ChannelData' */
        struct ns1__ChannelData *Data;
        /** Optional element 'ns1:DataSource' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSource;
        /** Sequence of at least 1 elements 'ns1:Index' of XML schema type 'ns1:ChannelIndex' stored in dynamic array Index of length __sizeIndex */
        int __sizeIndex;
        struct ns1__ChannelIndex *Index;
        /** Sequence of elements 'ns1:DerivedFrom' of XML schema type 'ns2:DataObjectReference' stored in dynamic array DerivedFrom of length __sizeDerivedFrom */
        int __sizeDerivedFrom;
        struct ns2__DataObjectReference *DerivedFrom;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:AxisDefinition' of XML schema type 'ns1:LogChannelAxis' stored in dynamic array AxisDefinition of length __sizeAxisDefinition */
        int __sizeAxisDefinition;
        struct ns1__LogChannelAxis *AxisDefinition;
        /** Sequence of elements 'ns1:PointMetadata' of XML schema type 'ns1:PointMetadata' stored in dynamic array PointMetadata of length __sizePointMetadata */
        int __sizePointMetadata;
        struct ns1__PointMetadata *PointMetadata;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__Channel when non-NULL */
        struct ns1__PPFGChannel *ns1__PPFGChannel;
};
#endif

/* testh.h:47029 */
#ifndef SOAP_TYPE_ns1__ChannelSet
#define SOAP_TYPE_ns1__ChannelSet (1657)
/* complex XML schema type 'ns1:ChannelSet': */
struct ns1__ChannelSet {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Optional element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:LoggingToolClassLongName' of XML schema type 'ns2:String256' */
        char *LoggingToolClassLongName;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:ChannelSetOSDUIntegration' of XML schema type 'ns1:ChannelSetOSDUIntegration' */
        struct ns1__ChannelSetOSDUIntegration *ChannelSetOSDUIntegration;
        /** Sequence of elements 'ns1:Index' of XML schema type 'ns1:ChannelIndex' stored in dynamic array Index of length __sizeIndex */
        int __sizeIndex;
        struct ns1__ChannelIndex *Index;
        /** Sequence of elements 'ns1:Channel' of XML schema type 'ns1:Channel' stored in dynamic array Channel of length __sizeChannel */
        int __sizeChannel;
        struct ns1__Channel *Channel;
        /** Optional element 'ns1:Data' of XML schema type 'ns1:ChannelData' */
        struct ns1__ChannelData *Data;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:DataSource' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSource;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__ChannelSet when non-NULL */
        struct ns1__PPFGChannelSet *ns1__PPFGChannelSet;
};
#endif

/* testh.h:47031 */
#ifndef SOAP_TYPE_ns1__Log
#define SOAP_TYPE_ns1__Log (1659)
/* complex XML schema type 'ns1:Log': */
struct ns1__Log {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Optional element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:LoggingToolClassLongName' of XML schema type 'ns2:String256' */
        char *LoggingToolClassLongName;
        /** Optional element 'ns1:LoggingServicePeriod' of XML schema type 'ns2:DateTimeInterval' */
        struct ns2__DateTimeInterval *LoggingServicePeriod;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:LogOSDUIntegration' of XML schema type 'ns1:LogOSDUIntegration' */
        struct ns1__LogOSDUIntegration *LogOSDUIntegration;
        /** Sequence of elements 'ns1:ChannelSet' of XML schema type 'ns1:ChannelSet' stored in dynamic array ChannelSet of length __sizeChannelSet */
        int __sizeChannelSet;
        struct ns1__ChannelSet *ChannelSet;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns1__Log when non-NULL */
        struct ns1__PPFGLog *ns1__PPFGLog;
};
#endif

/* testh.h:47033 */
#ifndef SOAP_TYPE_ns1__Rig
#define SOAP_TYPE_ns1__Rig (1661)
/* complex XML schema type 'ns1:Rig': */
struct ns1__Rig {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:Owner' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Owner;
        /** Optional element 'ns1:TypeRig' of XML schema type 'ns1:RigType' */
        enum ns1__RigType *TypeRig;
        /** Optional element 'ns1:Manufacturer' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Manufacturer;
        /** Optional element 'ns1:YearEntService' of XML schema type 'xsd:gYear' */
        char *YearEntService;
        /** Optional element 'ns1:ClassRig' of XML schema type 'ns2:String64' */
        char *ClassRig;
        /** Optional element 'ns1:Approvals' of XML schema type 'ns2:String64' */
        char *Approvals;
        /** Optional element 'ns1:Registration' of XML schema type 'ns2:String64' */
        char *Registration;
        /** Optional element 'ns1:TelNumber' of XML schema type 'ns2:String64' */
        char *TelNumber;
        /** Optional element 'ns1:FaxNumber' of XML schema type 'ns2:String64' */
        char *FaxNumber;
        /** Optional element 'ns1:EmailAddress' of XML schema type 'ns2:String64' */
        char *EmailAddress;
        /** Optional element 'ns1:NameContact' of XML schema type 'ns2:String64' */
        char *NameContact;
        /** Optional element 'ns1:RatingDrillDepth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RatingDrillDepth;
        /** Optional element 'ns1:RatingWaterDepth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RatingWaterDepth;
        /** Optional element 'ns1:IsOffshore' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsOffshore;
        /** Optional element 'ns1:TypeDerrick' of XML schema type 'ns1:DerrickType' */
        enum ns1__DerrickType *TypeDerrick;
        /** Optional element 'ns1:RatingDerrick' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingDerrick;
        /** Optional element 'ns1:HtDerrick' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HtDerrick;
        /** Optional element 'ns1:CapWindDerrick' of XML schema type 'ns2:LengthPerTimeMeasure' */
        struct ns2__LengthPerTimeMeasure *CapWindDerrick;
        /** Optional element 'ns1:NumCranes' of XML schema type 'xsd:long' */
        LONG64 *NumCranes;
};
#endif

/* testh.h:47035 */
#ifndef SOAP_TYPE_ns1__RigUtilization
#define SOAP_TYPE_ns1__RigUtilization (1663)
/* complex XML schema type 'ns1:RigUtilization': */
struct ns1__RigUtilization {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:StartOperationTime' of XML schema type 'ns2:TimeStamp' */
        time_t *StartOperationTime;
        /** Optional element 'ns1:EndOperationTime' of XML schema type 'ns2:TimeStamp' */
        time_t *EndOperationTime;
        /** Optional element 'ns1:StartHoleDepth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *StartHoleDepth;
        /** Optional element 'ns1:EndHoleDepth' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *EndHoleDepth;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
        /** Optional element 'ns1:AirGap' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *AirGap;
        /** Optional element 'ns1:WtBlock' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *WtBlock;
        /** Optional element 'ns1:RatingBlock' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingBlock;
        /** Optional element 'ns1:NumBlockLines' of XML schema type 'xsd:long' */
        LONG64 *NumBlockLines;
        /** Optional element 'ns1:TypeHook' of XML schema type 'ns2:String64' */
        char *TypeHook;
        /** Optional element 'ns1:RatingHkld' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingHkld;
        /** Optional element 'ns1:SizeDrillLine' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeDrillLine;
        /** Optional element 'ns1:TypeDrawWorks' of XML schema type 'ns1:DrawWorksType' */
        enum ns1__DrawWorksType *TypeDrawWorks;
        /** Optional element 'ns1:PowerDrawWorks' of XML schema type 'ns2:PowerMeasure' */
        struct ns2__PowerMeasure *PowerDrawWorks;
        /** Optional element 'ns1:RatingDrawWorks' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingDrawWorks;
        /** Optional element 'ns1:MotorDrawWorks' of XML schema type 'ns2:String64' */
        char *MotorDrawWorks;
        /** Optional element 'ns1:DescBrake' of XML schema type 'ns2:String64' */
        char *DescBrake;
        /** Optional element 'ns1:TypeSwivel' of XML schema type 'ns2:String64' */
        char *TypeSwivel;
        /** Optional element 'ns1:RatingSwivel' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingSwivel;
        /** Optional element 'ns1:RotSystem' of XML schema type 'ns1:DriveType' */
        enum ns1__DriveType *RotSystem;
        /** Optional element 'ns1:DescRotSystem' of XML schema type 'ns2:String64' */
        char *DescRotSystem;
        /** Optional element 'ns1:RatingTqRotSys' of XML schema type 'ns2:MomentOfForceMeasure' */
        struct ns2__MomentOfForceMeasure *RatingTqRotSys;
        /** Optional element 'ns1:RotSizeOpening' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *RotSizeOpening;
        /** Optional element 'ns1:RatingRotSystem' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *RatingRotSystem;
        /** Optional element 'ns1:ScrSystem' of XML schema type 'ns2:String64' */
        char *ScrSystem;
        /** Optional element 'ns1:PipeHandlingSystem' of XML schema type 'ns2:String64' */
        char *PipeHandlingSystem;
        /** Optional element 'ns1:CapBulkMud' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapBulkMud;
        /** Optional element 'ns1:CapLiquidMud' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapLiquidMud;
        /** Optional element 'ns1:CapDrillWater' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapDrillWater;
        /** Optional element 'ns1:CapPotableWater' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapPotableWater;
        /** Optional element 'ns1:CapFuel' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapFuel;
        /** Optional element 'ns1:CapBulkCement' of XML schema type 'ns2:VolumeMeasure' */
        struct ns2__VolumeMeasure *CapBulkCement;
        /** Optional element 'ns1:MainEngine' of XML schema type 'ns2:String64' */
        char *MainEngine;
        /** Optional element 'ns1:Generator' of XML schema type 'ns2:String64' */
        char *Generator;
        /** Optional element 'ns1:CementUnit' of XML schema type 'ns2:String64' */
        char *CementUnit;
        /** Optional element 'ns1:NumBunks' of XML schema type 'xsd:long' */
        LONG64 *NumBunks;
        /** Optional element 'ns1:BunksPerRoom' of XML schema type 'xsd:long' */
        LONG64 *BunksPerRoom;
        /** Optional element 'ns1:NumAnch' of XML schema type 'xsd:long' */
        LONG64 *NumAnch;
        /** Optional element 'ns1:MoorType' of XML schema type 'ns2:String64' */
        char *MoorType;
        /** Optional element 'ns1:NumGuideTens' of XML schema type 'xsd:long' */
        LONG64 *NumGuideTens;
        /** Optional element 'ns1:NumRiserTens' of XML schema type 'xsd:long' */
        LONG64 *NumRiserTens;
        /** Optional element 'ns1:VarDeckLdMx' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *VarDeckLdMx;
        /** Optional element 'ns1:VdlStorm' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *VdlStorm;
        /** Optional element 'ns1:NumThrusters' of XML schema type 'xsd:long' */
        LONG64 *NumThrusters;
        /** Optional element 'ns1:Azimuthing' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Azimuthing;
        /** Optional element 'ns1:MotionCompensationMn' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *MotionCompensationMn;
        /** Optional element 'ns1:MotionCompensationMx' of XML schema type 'ns2:ForceMeasure' */
        struct ns2__ForceMeasure *MotionCompensationMx;
        /** Optional element 'ns1:StrokeMotionCompensation' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *StrokeMotionCompensation;
        /** Optional element 'ns1:RiserAngleLimit' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *RiserAngleLimit;
        /** Optional element 'ns1:HeaveMx' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *HeaveMx;
        /** Optional element 'ns1:Gantry' of XML schema type 'ns2:String64' */
        char *Gantry;
        /** Optional element 'ns1:Flares' of XML schema type 'ns2:String64' */
        char *Flares;
        /** Optional element 'ns1:Bop' of XML schema type 'ns1:Bop' */
        struct ns1__Bop *Bop;
        /** Sequence of elements 'ns1:Pit' of XML schema type 'ns1:Pit' stored in dynamic array Pit of length __sizePit */
        int __sizePit;
        struct ns1__Pit *Pit;
        /** Sequence of elements 'ns1:Pump' of XML schema type 'ns1:MudPump' stored in dynamic array Pump of length __sizePump */
        int __sizePump;
        struct ns1__MudPump *Pump;
        /** Sequence of elements 'ns1:Centrifuge' of XML schema type 'ns1:Centrifuge' stored in dynamic array Centrifuge of length __sizeCentrifuge */
        int __sizeCentrifuge;
        struct ns1__Centrifuge *Centrifuge;
        /** Sequence of elements 'ns1:Hydrocyclone' of XML schema type 'ns1:Hydrocyclone' stored in dynamic array Hydrocyclone of length __sizeHydrocyclone */
        int __sizeHydrocyclone;
        struct ns1__Hydrocyclone *Hydrocyclone;
        /** Sequence of elements 'ns1:Degasser' of XML schema type 'ns1:Degasser' stored in dynamic array Degasser of length __sizeDegasser */
        int __sizeDegasser;
        struct ns1__Degasser *Degasser;
        /** Optional element 'ns1:SurfaceEquipment' of XML schema type 'ns1:SurfaceEquipment' */
        struct ns1__SurfaceEquipment *SurfaceEquipment;
        /** Sequence of elements 'ns1:Shaker' of XML schema type 'ns1:Shaker' stored in dynamic array Shaker of length __sizeShaker */
        int __sizeShaker;
        struct ns1__Shaker *Shaker;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:BhaRun' of XML schema type 'ns2:DataObjectReference' stored in dynamic array BhaRun of length __sizeBhaRun */
        int __sizeBhaRun;
        struct ns2__DataObjectReference *BhaRun;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Rig' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Rig;
};
#endif

/* testh.h:47142 */
#ifndef SOAP_TYPE_ns1__MudlogReportInterval
#define SOAP_TYPE_ns1__MudlogReportInterval (1669)
/* complex XML schema type 'ns1:MudlogReportInterval': */
struct ns1__MudlogReportInterval {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Optional element 'ns1:CuttingsGeologyInterval' of XML schema type 'ns1:CuttingsGeologyInterval' */
        struct ns1__CuttingsGeologyInterval *CuttingsGeologyInterval;
        /** Optional element 'ns1:InterpretedGeologyInterval' of XML schema type 'ns1:InterpretedGeologyInterval' */
        struct ns1__InterpretedGeologyInterval *InterpretedGeologyInterval;
        /** Optional element 'ns1:ShowEvaluationInterval' of XML schema type 'ns1:ShowEvaluationInterval' */
        struct ns1__ShowEvaluationInterval *ShowEvaluationInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomsUpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *BottomsUpTime;
        /** Optional element 'ns1:Chromatograph' of XML schema type 'ns1:Chromatograph' */
        struct ns1__Chromatograph *Chromatograph;
        /** Sequence of elements 'ns1:DrillingParameters' of XML schema type 'ns1:DrillingParameters' stored in dynamic array DrillingParameters of length __sizeDrillingParameters */
        int __sizeDrillingParameters;
        struct ns1__DrillingParameters *DrillingParameters;
        /** Sequence of elements 'ns1:MudGas' of XML schema type 'ns1:MudGas' stored in dynamic array MudGas of length __sizeMudGas */
        int __sizeMudGas;
        struct ns1__MudGas *MudGas;
};
#endif

/* testh.h:47144 */
#ifndef SOAP_TYPE_ns1__CuttingsGeologyInterval
#define SOAP_TYPE_ns1__CuttingsGeologyInterval (1671)
/* complex XML schema type 'ns1:CuttingsGeologyInterval': */
struct ns1__CuttingsGeologyInterval {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Optional element 'ns1:DensBulk' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensBulk;
        /** Optional element 'ns1:DensShale' of XML schema type 'ns2:MassPerVolumeMeasure' */
        struct ns2__MassPerVolumeMeasure *DensShale;
        /** Optional element 'ns1:Calcite' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Calcite;
        /** Optional element 'ns1:CalcStab' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *CalcStab;
        /** Optional element 'ns1:Cec' of XML schema type 'ns2:DimensionlessMeasure' */
        struct ns2__DimensionlessMeasure *Cec;
        /** Optional element 'ns1:Dolomite' of XML schema type 'ns2:VolumePerVolumeMeasure' */
        struct ns2__VolumePerVolumeMeasure *Dolomite;
        /** Optional element 'ns1:SizeMin' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeMin;
        /** Optional element 'ns1:SizeMax' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *SizeMax;
        /** Optional element 'ns1:Qft' of XML schema type 'ns2:IlluminanceMeasure' */
        struct ns2__IlluminanceMeasure *Qft;
        /** Optional element 'ns1:CleaningMethod' of XML schema type 'ns2:String64' */
        char *CleaningMethod;
        /** Optional element 'ns1:DryingMethod' of XML schema type 'ns2:String64' */
        char *DryingMethod;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomsUpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *BottomsUpTime;
        /** Sequence of elements 'ns1:CuttingsIntervalLithology' of XML schema type 'ns1:CuttingsIntervalLithology' stored in dynamic array CuttingsIntervalLithology of length __sizeCuttingsIntervalLithology */
        int __sizeCuttingsIntervalLithology;
        struct ns1__CuttingsIntervalLithology *CuttingsIntervalLithology;
};
#endif

/* testh.h:47146 */
#ifndef SOAP_TYPE_ns1__InterpretedGeologyInterval
#define SOAP_TYPE_ns1__InterpretedGeologyInterval (1673)
/* complex XML schema type 'ns1:InterpretedGeologyInterval': */
struct ns1__InterpretedGeologyInterval {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Sequence of elements 'ns1:GeochronologicalUnit' of XML schema type 'ns1:GeochronologicalUnit' stored in dynamic array GeochronologicalUnit of length __sizeGeochronologicalUnit */
        int __sizeGeochronologicalUnit;
        struct ns1__GeochronologicalUnit *GeochronologicalUnit;
        /** Sequence of elements 'ns1:LithostratigraphicUnit' of XML schema type 'ns1:LithostratigraphicUnit' stored in dynamic array LithostratigraphicUnit of length __sizeLithostratigraphicUnit */
        int __sizeLithostratigraphicUnit;
        struct ns1__LithostratigraphicUnit *LithostratigraphicUnit;
        /** Optional element 'ns1:InterpretedLithology' of XML schema type 'ns1:InterpretedIntervalLithology' */
        struct ns1__InterpretedIntervalLithology *InterpretedLithology;
};
#endif

/* testh.h:47148 */
#ifndef SOAP_TYPE_ns1__ShowEvaluationInterval
#define SOAP_TYPE_ns1__ShowEvaluationInterval (1675)
/* complex XML schema type 'ns1:ShowEvaluationInterval': */
struct ns1__ShowEvaluationInterval {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ShowFluid' of XML schema type 'ns1:ShowFluid' */
        enum ns1__ShowFluid ShowFluid;
        /** Optional element 'ns1:ShowRating' of XML schema type 'ns1:ShowRating' */
        enum ns1__ShowRating *ShowRating;
        /** Required nillable (xsi:nil when NULL) element 'ns1:BottomsUpTime' of XML schema type 'ns2:TimeMeasure' */
        struct ns2__TimeMeasure *BottomsUpTime;
};
#endif

/* testh.h:47037 */
#ifndef SOAP_TYPE_ns1__WellboreGeology
#define SOAP_TYPE_ns1__WellboreGeology (1665)
/* complex XML schema type 'ns1:WellboreGeology': */
struct ns1__WellboreGeology {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns1:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:CuttingsGeology' of XML schema type 'ns1:CuttingsGeology' */
        struct ns1__CuttingsGeology *CuttingsGeology;
        /** Optional element 'ns1:InterpretedGeology' of XML schema type 'ns1:InterpretedGeology' */
        struct ns1__InterpretedGeology *InterpretedGeology;
        /** Optional element 'ns1:ShowEvaluation' of XML schema type 'ns1:ShowEvaluation' */
        struct ns1__ShowEvaluation *ShowEvaluation;
};
#endif

/* testh.h:31980 */
#ifndef SOAP_TYPE_ns1__TrajectoryStation
#define SOAP_TYPE_ns1__TrajectoryStation (1094)
/* complex XML schema type 'ns1:TrajectoryStation': */
struct ns1__TrajectoryStation {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Creation' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__Creation;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LastUpdate' of XML schema type 'ns2:TimeStamp' */
        time_t ns2__LastUpdate;
        /** Optional element 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' */
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uid' of XML schema type 'ns2:String64' */
        char *uid;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Md' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *ns2__Md;
        /** Optional element 'ns1:Closure' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *Closure;
        /** Optional element 'ns1:ClosureDirection' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *ClosureDirection;
        /** Optional element 'ns1:DispLatitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *DispLatitude;
        /** Optional element 'ns1:DispLongitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *DispLongitude;
        /** Optional element 'ns1:OriginalLatitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *OriginalLatitude;
        /** Optional element 'ns1:OriginalLongitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *OriginalLongitude;
        /** Optional element 'ns1:TrajectoryStationOSDUIntegration' of XML schema type 'ns1:TrajectoryStationOSDUIntegration' */
        struct ns1__TrajectoryStationOSDUIntegration *TrajectoryStationOSDUIntegration;
        /** Optional element 'ns1:TrueClosure' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *TrueClosure;
        /** Optional element 'ns1:TrueClosureDirection' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *TrueClosureDirection;
        /** Optional element 'ns1:WGS84Latitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *WGS84Latitude;
        /** Optional element 'ns1:WGS84Longitude' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *WGS84Longitude;
        /** Optional element 'ns1:ManuallyEntered' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *ManuallyEntered;
        /** Optional element 'ns1:Target' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Target;
        /** Optional element 'ns1:DTimStn' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimStn;
        /** Required nillable (xsi:nil when NULL) element 'ns1:TypeTrajStation' of XML schema type 'ns1:TrajStationType' */
        enum ns1__TrajStationType TypeTrajStation;
        /** Optional element 'ns1:TypeSurveyTool' of XML schema type 'ns1:TypeSurveyTool' */
        enum ns1__TypeSurveyTool *TypeSurveyTool;
        /** Optional element 'ns1:CalcAlgorithm' of XML schema type 'ns1:TrajStnCalcAlgorithm' */
        enum ns1__TrajStnCalcAlgorithm *CalcAlgorithm;
        /** Optional element 'ns1:Tvd' of XML schema type 'ns2:AbstractVerticalDepth' */
        struct ns2__AbstractVerticalDepth *Tvd;
        /** Optional element 'ns1:Incl' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Incl;
        /** Optional element 'ns1:Azi' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Azi;
        /** Optional element 'ns1:Mtf' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Mtf;
        /** Optional element 'ns1:Gtf' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *Gtf;
        /** Optional element 'ns1:DispNs' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispNs;
        /** Optional element 'ns1:DispEw' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *DispEw;
        /** Optional element 'ns1:VertSect' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *VertSect;
        /** Optional element 'ns1:Dls' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *Dls;
        /** Optional element 'ns1:RateTurn' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *RateTurn;
        /** Optional element 'ns1:RateBuild' of XML schema type 'ns2:AnglePerLengthMeasure' */
        struct ns2__AnglePerLengthMeasure *RateBuild;
        /** Optional element 'ns1:MdDelta' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *MdDelta;
        /** Optional element 'ns1:TvdDelta' of XML schema type 'ns2:LengthMeasure' */
        struct ns2__LengthMeasure *TvdDelta;
        /** Optional element 'ns1:GravTotalUncert' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTotalUncert;
        /** Optional element 'ns1:DipAngleUncert' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *DipAngleUncert;
        /** Optional element 'ns1:MagTotalUncert' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTotalUncert;
        /** Optional element 'ns1:GravAccelCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *GravAccelCorUsed;
        /** Optional element 'ns1:MagXAxialCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *MagXAxialCorUsed;
        /** Optional element 'ns1:SagCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *SagCorUsed;
        /** Optional element 'ns1:MagDrlstrCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *MagDrlstrCorUsed;
        /** Optional element 'ns1:InfieldRefCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *InfieldRefCorUsed;
        /** Optional element 'ns1:InterpolatedInfieldRefCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *InterpolatedInfieldRefCorUsed;
        /** Optional element 'ns1:InHoleRefCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *InHoleRefCorUsed;
        /** Optional element 'ns1:AxialMagInterferenceCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *AxialMagInterferenceCorUsed;
        /** Optional element 'ns1:CosagCorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *CosagCorUsed;
        /** Optional element 'ns1:MSACorUsed' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *MSACorUsed;
        /** Optional element 'ns1:GravTotalFieldReference' of XML schema type 'ns2:LinearAccelerationMeasure' */
        struct ns2__LinearAccelerationMeasure *GravTotalFieldReference;
        /** Optional element 'ns1:MagTotalFieldReference' of XML schema type 'ns2:MagneticFluxDensityMeasure' */
        struct ns2__MagneticFluxDensityMeasure *MagTotalFieldReference;
        /** Optional element 'ns1:MagDipAngleReference' of XML schema type 'ns2:PlaneAngleMeasure' */
        struct ns2__PlaneAngleMeasure *MagDipAngleReference;
        /** Optional element 'ns1:MagModelUsed' of XML schema type 'ns2:String64' */
        char *MagModelUsed;
        /** Optional element 'ns1:MagModelValid' of XML schema type 'ns2:String64' */
        char *MagModelValid;
        /** Optional element 'ns1:GeoModelUsed' of XML schema type 'ns2:String64' */
        char *GeoModelUsed;
        /** Optional element 'ns1:StatusTrajStation' of XML schema type 'ns1:TrajStationStatus' */
        enum ns1__TrajStationStatus *StatusTrajStation;
        /** Optional element 'ns1:RawData' of XML schema type 'ns1:StnTrajRawData' */
        struct ns1__StnTrajRawData *RawData;
        /** Optional element 'ns1:CorUsed' of XML schema type 'ns1:StnTrajCorUsed' */
        struct ns1__StnTrajCorUsed *CorUsed;
        /** Optional element 'ns1:Valid' of XML schema type 'ns1:StnTrajValid' */
        struct ns1__StnTrajValid *Valid;
        /** Optional element 'ns1:MatrixCov' of XML schema type 'ns1:StnTrajMatrixCov' */
        struct ns1__StnTrajMatrixCov *MatrixCov;
        /** Sequence of elements 'ns1:Location' of XML schema type 'ns2:AbstractPosition' stored in dynamic array Location of length __sizeLocation */
        int __sizeLocation;
        struct ns2__AbstractPosition *Location;
        /** Sequence of elements 'ns1:SourceStation' of XML schema type 'ns1:SourceTrajectoryStation' stored in dynamic array SourceStation of length __sizeSourceStation */
        int __sizeSourceStation;
        struct ns1__SourceTrajectoryStation *SourceStation;
        /** Optional element 'ns1:ToolErrorModel' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ToolErrorModel;
};
#endif

/* testh.h:32334 */
#ifndef SOAP_TYPE_ns1__AzimuthRange
#define SOAP_TYPE_ns1__AzimuthRange (1126)
/* complex XML schema type 'ns1:AzimuthRange': */
struct ns1__AzimuthRange {
        /** Optional element 'ns1:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns1:EndInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean EndInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:StartInclusive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean StartInclusive;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Start' of XML schema type 'xsd:double' */
        double Start;
        /** Required nillable (xsi:nil when NULL) element 'ns1:End' of XML schema type 'xsd:double' */
        double End;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:PlaneAngleUomExt' */
        char *Uom;
        /** Required nillable (xsi:nil when NULL) element 'ns1:IsMagneticNorth' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IsMagneticNorth;
};
#endif

/* testh.h:47021 */
#ifndef SOAP_TYPE_ns2__AbstractGrowingObject
#define SOAP_TYPE_ns2__AbstractGrowingObject (1649)
/* complex XML schema type 'ns2:AbstractGrowingObject': */
struct ns2__AbstractGrowingObject {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *Index;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObject when non-NULL */
        struct ns2__AbstractMdGrowingObject *ns2__AbstractMdGrowingObject;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractGrowingObject when non-NULL */
        struct ns2__AbstractTimeGrowingObject *ns2__AbstractTimeGrowingObject;
};
#endif

/* testh.h:47259 */
#ifndef SOAP_TYPE_ns2__AbstractCartesian2dPosition
#define SOAP_TYPE_ns2__AbstractCartesian2dPosition (1678)
/* complex XML schema type 'ns2:AbstractCartesian2dPosition': */
struct ns2__AbstractCartesian2dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCartesian2dPosition when non-NULL */
        struct ns2__LocalEngineering2dPosition *ns2__LocalEngineering2dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCartesian2dPosition when non-NULL */
        struct ns2__Projected2dPosition *ns2__Projected2dPosition;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractCartesian2dPosition when non-NULL */
        struct ns2__PublicLandSurveySystem2dPosition *ns2__PublicLandSurveySystem2dPosition;
};
#endif

/* testh.h:47301 */
#ifndef SOAP_TYPE_ns2__EngineeringCompoundPosition
#define SOAP_TYPE_ns2__EngineeringCompoundPosition (1690)
/* complex XML schema type 'ns2:EngineeringCompoundPosition': */
struct ns2__EngineeringCompoundPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double VerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalEngineeringCompoundCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LocalEngineeringCompoundCrs;
};
#endif

/* testh.h:47278 */
#ifndef SOAP_TYPE_ns2__Geocentric3dPosition
#define SOAP_TYPE_ns2__Geocentric3dPosition (1682)
/* complex XML schema type 'ns2:Geocentric3dPosition': */
struct ns2__Geocentric3dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate3' of XML schema type 'xsd:double' */
        double Coordinate3;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Geocentric3dCrs' of XML schema type 'ns2:Geocentric3dCrs' */
        struct ns2__Geocentric3dCrs *Geocentric3dCrs;
};
#endif

/* testh.h:47261 */
#ifndef SOAP_TYPE_ns2__Geographic2dPosition
#define SOAP_TYPE_ns2__Geographic2dPosition (1680)
/* complex XML schema type 'ns2:Geographic2dPosition': */
struct ns2__Geographic2dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Latitude' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *Latitude;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Longitude' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *Longitude;
        /** Optional element 'ns2:Epoch' of XML schema type 'xsd:double' */
        double *Epoch;
        /** Required nillable (xsi:nil when NULL) element 'ns2:GeographicCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *GeographicCrs;
};
#endif

/* testh.h:47280 */
#ifndef SOAP_TYPE_ns2__Geographic3dPosition
#define SOAP_TYPE_ns2__Geographic3dPosition (1684)
/* complex XML schema type 'ns2:Geographic3dPosition': */
struct ns2__Geographic3dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Latitude' of XML schema type 'xsd:double' */
        double Latitude;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Longitude' of XML schema type 'xsd:double' */
        double Longitude;
        /** Required nillable (xsi:nil when NULL) element 'ns2:EllipsoidalHeight' of XML schema type 'xsd:double' */
        double EllipsoidalHeight;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Geographic3dCrs' of XML schema type 'ns2:Geographic3dCrs' */
        struct ns2__Geographic3dCrs *Geographic3dCrs;
};
#endif

/* testh.h:47303 */
#ifndef SOAP_TYPE_ns2__GeographicCompoundPosition
#define SOAP_TYPE_ns2__GeographicCompoundPosition (1692)
/* complex XML schema type 'ns2:GeographicCompoundPosition': */
struct ns2__GeographicCompoundPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Latitude' of XML schema type 'xsd:double' */
        double Latitude;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Longitude' of XML schema type 'xsd:double' */
        double Longitude;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double VerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:GeographicCompoundCrs' of XML schema type 'ns2:GeographicCompoundCrs' */
        struct ns2__GeographicCompoundCrs *GeographicCompoundCrs;
};
#endif

/* testh.h:47282 */
#ifndef SOAP_TYPE_ns2__LocalEngineering3dPosition
#define SOAP_TYPE_ns2__LocalEngineering3dPosition (1686)
/* complex XML schema type 'ns2:LocalEngineering3dPosition': */
struct ns2__LocalEngineering3dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double VerticalCoordinate;
};
#endif

/* testh.h:47284 */
#ifndef SOAP_TYPE_ns2__Projected3dPosition
#define SOAP_TYPE_ns2__Projected3dPosition (1688)
/* complex XML schema type 'ns2:Projected3dPosition': */
struct ns2__Projected3dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:EllipsoidalHeight' of XML schema type 'xsd:double' */
        double EllipsoidalHeight;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ProjectedCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ProjectedCrs;
};
#endif

/* testh.h:47305 */
#ifndef SOAP_TYPE_ns2__ProjectedCompoundPosition
#define SOAP_TYPE_ns2__ProjectedCompoundPosition (1694)
/* complex XML schema type 'ns2:ProjectedCompoundPosition': */
struct ns2__ProjectedCompoundPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double VerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ProjectedCompoundCrs' of XML schema type 'ns2:ProjectedCompoundCrs' */
        struct ns2__ProjectedCompoundCrs *ProjectedCompoundCrs;
};
#endif

/* testh.h:47387 */
#ifndef SOAP_TYPE_ns2__RecursiveReferencePoint
#define SOAP_TYPE_ns2__RecursiveReferencePoint (1698)
/* complex XML schema type 'ns2:RecursiveReferencePoint': */
struct ns2__RecursiveReferencePoint {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:ReferencePointKindExt' */
        char *Kind;
        /** Optional element 'ns2:OSDUReferencePointIntegration' of XML schema type 'ns2:OSDUReferencePointIntegration' */
        struct ns2__OSDUReferencePointIntegration *OSDUReferencePointIntegration;
        /** Optional element 'ns2:UncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *UncertaintyVectorAtOneSigma;
        /** Optional element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double *VerticalCoordinate;
        /** Optional element 'ns2:HorizontalCoordinates' of XML schema type 'ns2:HorizontalCoordinates' */
        struct ns2__HorizontalCoordinates *HorizontalCoordinates;
        /** Required nillable (xsi:nil when NULL) element 'ns2:BaseReferencePoint' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *BaseReferencePoint;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__RecursiveReferencePoint when non-NULL */
        struct ns2__ReferencePointInAWellbore *ns2__ReferencePointInAWellbore;
};
#endif

/* testh.h:47389 */
#ifndef SOAP_TYPE_ns2__ReferencePointInACrs
#define SOAP_TYPE_ns2__ReferencePointInACrs (1700)
/* complex XML schema type 'ns2:ReferencePointInACrs': */
struct ns2__ReferencePointInACrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:ReferencePointKindExt' */
        char *Kind;
        /** Optional element 'ns2:OSDUReferencePointIntegration' of XML schema type 'ns2:OSDUReferencePointIntegration' */
        struct ns2__OSDUReferencePointIntegration *OSDUReferencePointIntegration;
        /** Optional element 'ns2:UncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *UncertaintyVectorAtOneSigma;
        /** Optional element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
        /** Optional element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double *VerticalCoordinate;
        /** Optional element 'ns2:HorizontalCoordinates' of XML schema type 'ns2:AbstractHorizontalCoordinates' */
        struct ns2__AbstractHorizontalCoordinates *HorizontalCoordinates;
};
#endif

/* testh.h:47391 */
#ifndef SOAP_TYPE_ns2__ReferencePointInALocalEngineeringCompoundCrs
#define SOAP_TYPE_ns2__ReferencePointInALocalEngineeringCompoundCrs (1702)
/* complex XML schema type 'ns2:ReferencePointInALocalEngineeringCompoundCrs': */
struct ns2__ReferencePointInALocalEngineeringCompoundCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:ReferencePointKindExt' */
        char *Kind;
        /** Optional element 'ns2:OSDUReferencePointIntegration' of XML schema type 'ns2:OSDUReferencePointIntegration' */
        struct ns2__OSDUReferencePointIntegration *OSDUReferencePointIntegration;
        /** Optional element 'ns2:UncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *UncertaintyVectorAtOneSigma;
        /** Optional element 'ns2:HorizontalCoordinates' of XML schema type 'ns2:HorizontalCoordinates' */
        struct ns2__HorizontalCoordinates *HorizontalCoordinates;
        /** Optional element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double *VerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Crs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Crs;
};
#endif

/* testh.h:47537 */
#ifndef SOAP_TYPE_ns2__AbsolutePressureInterval
#define SOAP_TYPE_ns2__AbsolutePressureInterval (1717)
/* complex XML schema type 'ns2:AbsolutePressureInterval': */
struct ns2__AbsolutePressureInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinPressure' of XML schema type 'ns2:AbsolutePressure' */
        struct ns2__AbsolutePressure *MinPressure;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxPressure' of XML schema type 'ns2:AbsolutePressure' */
        struct ns2__AbsolutePressure *MaxPressure;
};
#endif

/* testh.h:47512 */
#ifndef SOAP_TYPE_ns2__AbstractFloatingPointArray
#define SOAP_TYPE_ns2__AbstractFloatingPointArray (1714)
/* complex XML schema type 'ns2:AbstractFloatingPointArray': */
struct ns2__AbstractFloatingPointArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:FloatingPointArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__FloatingPointArrayStatistics *Statistics;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractFloatingPointArray when non-NULL */
        struct ns2__FloatingPointConstantArray *ns2__FloatingPointConstantArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractFloatingPointArray when non-NULL */
        struct ns2__FloatingPointExternalArray *ns2__FloatingPointExternalArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractFloatingPointArray when non-NULL */
        struct ns2__FloatingPointLatticeArray *ns2__FloatingPointLatticeArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractFloatingPointArray when non-NULL */
        struct ns2__FloatingPointXmlArray *ns2__FloatingPointXmlArray;
};
#endif

/* testh.h:37941 */
#ifndef SOAP_TYPE_ns2__AbstractIntegerArray
#define SOAP_TYPE_ns2__AbstractIntegerArray (1421)
/* complex XML schema type 'ns2:AbstractIntegerArray': */
struct ns2__AbstractIntegerArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractIntegerArray when non-NULL */
        struct ns2__IntegerArrayFromBooleanMaskArray *ns2__IntegerArrayFromBooleanMaskArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractIntegerArray when non-NULL */
        struct ns2__IntegerConstantArray *ns2__IntegerConstantArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractIntegerArray when non-NULL */
        struct ns2__IntegerExternalArray *ns2__IntegerExternalArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractIntegerArray when non-NULL */
        struct ns2__IntegerLatticeArray *ns2__IntegerLatticeArray;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractIntegerArray when non-NULL */
        struct ns2__IntegerXmlArray *ns2__IntegerXmlArray;
};
#endif

/* testh.h:47489 */
#ifndef SOAP_TYPE_ns2__BooleanArrayFromIndexArray
#define SOAP_TYPE_ns2__BooleanArrayFromIndexArray (1706)
/* complex XML schema type 'ns2:BooleanArrayFromIndexArray': */
struct ns2__BooleanArrayFromIndexArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:BooleanArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__BooleanArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Count' of XML schema type 'ns2:PositiveLong' */
        LONG64 Count;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Indices' of XML schema type 'ns2:AbstractIntegerArray' */
        struct ns2__AbstractIntegerArray *Indices;
        /** Required nillable (xsi:nil when NULL) element 'ns2:IndexIsTrue' of XML schema type 'xsd:boolean' */
        enum xsd__boolean IndexIsTrue;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
};
#endif

/* testh.h:47491 */
#ifndef SOAP_TYPE_ns2__BooleanConstantArray
#define SOAP_TYPE_ns2__BooleanConstantArray (1708)
/* complex XML schema type 'ns2:BooleanConstantArray': */
struct ns2__BooleanConstantArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:BooleanArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__BooleanArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:boolean' */
        enum xsd__boolean Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Count' of XML schema type 'ns2:PositiveLong' */
        LONG64 Count;
};
#endif

/* testh.h:47493 */
#ifndef SOAP_TYPE_ns2__BooleanExternalArray
#define SOAP_TYPE_ns2__BooleanExternalArray (1710)
/* complex XML schema type 'ns2:BooleanExternalArray': */
struct ns2__BooleanExternalArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:BooleanArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__BooleanArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:ExternalDataArray' */
        struct ns2__ExternalDataArray *Values;
};
#endif

/* testh.h:47495 */
#ifndef SOAP_TYPE_ns2__BooleanXmlArray
#define SOAP_TYPE_ns2__BooleanXmlArray (1712)
/* complex XML schema type 'ns2:BooleanXmlArray': */
struct ns2__BooleanXmlArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:BooleanArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__BooleanArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:BooleanXmlArrayList' */
        char *Values;
};
#endif

/* testh.h:21814 */
#ifndef SOAP_TYPE_ns2__Cost
#define SOAP_TYPE_ns2__Cost (744)
/* simple XML schema type 'ns2:Cost': */
struct ns2__Cost {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'currency' of XML schema type 'ns2:String64' */
        char *currency;
};
#endif

/* testh.h:47605 */
#ifndef SOAP_TYPE_ns2__DatumTvdInterval
#define SOAP_TYPE_ns2__DatumTvdInterval (1730)
/* complex XML schema type 'ns2:DatumTvdInterval': */
struct ns2__DatumTvdInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMin' of XML schema type 'xsd:double' */
        double TvdMin;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMax' of XML schema type 'xsd:double' */
        double TvdMax;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthUomExt' */
        char *Uom;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Optional element 'ns2:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
};
#endif

/* testh.h:47539 */
#ifndef SOAP_TYPE_ns2__GaugePressureInterval
#define SOAP_TYPE_ns2__GaugePressureInterval (1719)
/* complex XML schema type 'ns2:GaugePressureInterval': */
struct ns2__GaugePressureInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinPressure' of XML schema type 'ns2:GaugePressure' */
        struct ns2__GaugePressure *MinPressure;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxPressure' of XML schema type 'ns2:GaugePressure' */
        struct ns2__GaugePressure *MaxPressure;
};
#endif

/* testh.h:24395 */
#ifndef SOAP_TYPE_ns2__GenericMeasure
#define SOAP_TYPE_ns2__GenericMeasure (843)
/* simple XML schema type 'ns2:GenericMeasure': */
struct ns2__GenericMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:UomEnum' */
        char *uom;
};
#endif

/* testh.h:47607 */
#ifndef SOAP_TYPE_ns2__ReferencePointTvdInterval
#define SOAP_TYPE_ns2__ReferencePointTvdInterval (1732)
/* complex XML schema type 'ns2:ReferencePointTvdInterval': */
struct ns2__ReferencePointTvdInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMin' of XML schema type 'xsd:double' */
        double TvdMin;
        /** Required nillable (xsi:nil when NULL) element 'ns2:TvdMax' of XML schema type 'xsd:double' */
        double TvdMax;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Uom' of XML schema type 'ns2:LengthUomExt' */
        char *Uom;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ReferencePoint' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ReferencePoint;
};
#endif

/* testh.h:47541 */
#ifndef SOAP_TYPE_ns2__RelativePressureInterval
#define SOAP_TYPE_ns2__RelativePressureInterval (1721)
/* complex XML schema type 'ns2:RelativePressureInterval': */
struct ns2__RelativePressureInterval {
        /** Optional element 'ns2:Comment' of XML schema type 'ns2:String2000' */
        char *Comment;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MinPressure' of XML schema type 'ns2:RelativePressure' */
        struct ns2__RelativePressure *MinPressure;
        /** Required nillable (xsi:nil when NULL) element 'ns2:MaxPressure' of XML schema type 'ns2:RelativePressure' */
        struct ns2__RelativePressure *MaxPressure;
};
#endif

/* testh.h:47562 */
#ifndef SOAP_TYPE_ns2__StringConstantArray
#define SOAP_TYPE_ns2__StringConstantArray (1724)
/* complex XML schema type 'ns2:StringConstantArray': */
struct ns2__StringConstantArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:StringArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__StringArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'ns2:String2000' */
        char *Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Count' of XML schema type 'ns2:PositiveLong' */
        LONG64 Count;
};
#endif

/* testh.h:47564 */
#ifndef SOAP_TYPE_ns2__StringExternalArray
#define SOAP_TYPE_ns2__StringExternalArray (1726)
/* complex XML schema type 'ns2:StringExternalArray': */
struct ns2__StringExternalArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:StringArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__StringArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:ExternalDataArray' */
        struct ns2__ExternalDataArray *Values;
};
#endif

/* testh.h:47566 */
#ifndef SOAP_TYPE_ns2__StringXmlArray
#define SOAP_TYPE_ns2__StringXmlArray (1728)
/* complex XML schema type 'ns2:StringXmlArray': */
struct ns2__StringXmlArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:StringArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__StringArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Sequence of at least 1 elements 'ns2:Values' of XML schema type 'xsd:string' stored in dynamic array Values of length __sizeValues */
        int __sizeValues;
        char **Values;
};
#endif

/* testh.h:47899 */
#ifndef SOAP_TYPE_ns2__Cartesian2dCrs
#define SOAP_TYPE_ns2__Cartesian2dCrs (1734)
/* complex XML schema type 'ns2:Cartesian2dCrs': */
struct ns2__Cartesian2dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Cartesian2dCrs when non-NULL */
        struct ns2__LocalEngineering2dCrs *ns2__LocalEngineering2dCrs;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__Cartesian2dCrs when non-NULL */
        struct ns2__ProjectedCrs *ns2__ProjectedCrs;
};
#endif

/* testh.h:47901 */
#ifndef SOAP_TYPE_ns2__Geographic2dCrs
#define SOAP_TYPE_ns2__Geographic2dCrs (1736)
/* complex XML schema type 'ns2:Geographic2dCrs': */
struct ns2__Geographic2dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AbstractGeographic2dCrs' of XML schema type 'ns2:AbstractGeographic2dCrs' */
        struct ns2__AbstractGeographic2dCrs *AbstractGeographic2dCrs;
};
#endif

/* testh.h:47974 */
#ifndef SOAP_TYPE_ns2__GeographicCompoundCrs
#define SOAP_TYPE_ns2__GeographicCompoundCrs (1738)
/* complex XML schema type 'ns2:GeographicCompoundCrs': */
struct ns2__GeographicCompoundCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Geographic2dCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Geographic2dCrs;
};
#endif

/* testh.h:47976 */
#ifndef SOAP_TYPE_ns2__LocalEngineeringCompoundCrs
#define SOAP_TYPE_ns2__LocalEngineeringCompoundCrs (1740)
/* complex XML schema type 'ns2:LocalEngineeringCompoundCrs': */
struct ns2__LocalEngineeringCompoundCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
        /** Required nillable (xsi:nil when NULL) element 'ns2:OriginVerticalCoordinate' of XML schema type 'xsd:double' */
        double OriginVerticalCoordinate;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalAxis' of XML schema type 'ns2:VerticalAxis' */
        struct ns2__VerticalAxis *VerticalAxis;
        /** Optional element 'ns2:OriginUncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *OriginUncertaintyVectorAtOneSigma;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalEngineering2dCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LocalEngineering2dCrs;
};
#endif

/* testh.h:47978 */
#ifndef SOAP_TYPE_ns2__ProjectedCompoundCrs
#define SOAP_TYPE_ns2__ProjectedCompoundCrs (1742)
/* complex XML schema type 'ns2:ProjectedCompoundCrs': */
struct ns2__ProjectedCompoundCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:VerticalCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *VerticalCrs;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ProjectedCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ProjectedCrs;
};
#endif

/* testh.h:54762 */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseMeasure
#define SOAP_TYPE_ns2__AbsorbedDoseMeasure (1883)
/* simple XML schema type 'ns2:AbsorbedDoseMeasure': */
struct ns2__AbsorbedDoseMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AbsorbedDoseUom' */
        enum ns2__AbsorbedDoseUom uom;
};
#endif

/* testh.h:54781 */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseMeasureExt
#define SOAP_TYPE_ns2__AbsorbedDoseMeasureExt (1884)
/* simple XML schema type 'ns2:AbsorbedDoseMeasureExt': */
struct ns2__AbsorbedDoseMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AbsorbedDoseUomExt' */
        char *uom;
};
#endif

/* testh.h:54800 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityMeasure
#define SOAP_TYPE_ns2__ActivityOfRadioactivityMeasure (1885)
/* simple XML schema type 'ns2:ActivityOfRadioactivityMeasure': */
struct ns2__ActivityOfRadioactivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ActivityOfRadioactivityUom' */
        enum ns2__ActivityOfRadioactivityUom uom;
};
#endif

/* testh.h:54819 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityMeasureExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityMeasureExt (1886)
/* simple XML schema type 'ns2:ActivityOfRadioactivityMeasureExt': */
struct ns2__ActivityOfRadioactivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ActivityOfRadioactivityUomExt' */
        char *uom;
};
#endif

/* testh.h:54838 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasure
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasure (1887)
/* simple XML schema type 'ns2:ActivityOfRadioactivityPerVolumeMeasure': */
struct ns2__ActivityOfRadioactivityPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Optional attribute 'uom' of XML schema type 'ns2:ActivityOfRadioactivityPerVolumeUom' */
        enum ns2__ActivityOfRadioactivityPerVolumeUom *uom;
};
#endif

/* testh.h:54857 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasureExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasureExt (1889)
/* simple XML schema type 'ns2:ActivityOfRadioactivityPerVolumeMeasureExt': */
struct ns2__ActivityOfRadioactivityPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Optional attribute 'uom' of XML schema type 'ns2:ActivityOfRadioactivityPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:54876 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AmountOfSubstanceMeasure (1890)
/* simple XML schema type 'ns2:AmountOfSubstanceMeasure': */
struct ns2__AmountOfSubstanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstanceUom' */
        enum ns2__AmountOfSubstanceUom uom;
};
#endif

/* testh.h:54895 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstanceMeasureExt (1891)
/* simple XML schema type 'ns2:AmountOfSubstanceMeasureExt': */
struct ns2__AmountOfSubstanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstanceUomExt' */
        char *uom;
};
#endif

/* testh.h:54914 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasure (1892)
/* simple XML schema type 'ns2:AmountOfSubstancePerAmountOfSubstanceMeasure': */
struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerAmountOfSubstanceUom' */
        enum ns2__AmountOfSubstancePerAmountOfSubstanceUom uom;
};
#endif

/* testh.h:54933 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt (1893)
/* simple XML schema type 'ns2:AmountOfSubstancePerAmountOfSubstanceMeasureExt': */
struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerAmountOfSubstanceUomExt' */
        char *uom;
};
#endif

/* testh.h:54952 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasure (1894)
/* simple XML schema type 'ns2:AmountOfSubstancePerAreaMeasure': */
struct ns2__AmountOfSubstancePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerAreaUom' */
        enum ns2__AmountOfSubstancePerAreaUom uom;
};
#endif

/* testh.h:54971 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasureExt (1895)
/* simple XML schema type 'ns2:AmountOfSubstancePerAreaMeasureExt': */
struct ns2__AmountOfSubstancePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:54990 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasure (1896)
/* simple XML schema type 'ns2:AmountOfSubstancePerTimeMeasure': */
struct ns2__AmountOfSubstancePerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerTimeUom' */
        enum ns2__AmountOfSubstancePerTimeUom uom;
};
#endif

/* testh.h:55009 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasureExt (1897)
/* simple XML schema type 'ns2:AmountOfSubstancePerTimeMeasureExt': */
struct ns2__AmountOfSubstancePerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:55028 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasure (1898)
/* simple XML schema type 'ns2:AmountOfSubstancePerTimePerAreaMeasure': */
struct ns2__AmountOfSubstancePerTimePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerTimePerAreaUom' */
        enum ns2__AmountOfSubstancePerTimePerAreaUom uom;
};
#endif

/* testh.h:55047 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasureExt (1899)
/* simple XML schema type 'ns2:AmountOfSubstancePerTimePerAreaMeasureExt': */
struct ns2__AmountOfSubstancePerTimePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerTimePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:55066 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasure (1900)
/* simple XML schema type 'ns2:AmountOfSubstancePerVolumeMeasure': */
struct ns2__AmountOfSubstancePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerVolumeUom' */
        enum ns2__AmountOfSubstancePerVolumeUom uom;
};
#endif

/* testh.h:55085 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasureExt (1901)
/* simple XML schema type 'ns2:AmountOfSubstancePerVolumeMeasureExt': */
struct ns2__AmountOfSubstancePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AmountOfSubstancePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:22818 */
#ifndef SOAP_TYPE_ns2__AnglePerLengthMeasure
#define SOAP_TYPE_ns2__AnglePerLengthMeasure (786)
/* simple XML schema type 'ns2:AnglePerLengthMeasure': */
struct ns2__AnglePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AnglePerLengthUom' */
        enum ns2__AnglePerLengthUom uom;
};
#endif

/* testh.h:55123 */
#ifndef SOAP_TYPE_ns2__AnglePerLengthMeasureExt
#define SOAP_TYPE_ns2__AnglePerLengthMeasureExt (1902)
/* simple XML schema type 'ns2:AnglePerLengthMeasureExt': */
struct ns2__AnglePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AnglePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:55142 */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeMeasure
#define SOAP_TYPE_ns2__AnglePerVolumeMeasure (1903)
/* simple XML schema type 'ns2:AnglePerVolumeMeasure': */
struct ns2__AnglePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AnglePerVolumeUom' */
        enum ns2__AnglePerVolumeUom uom;
};
#endif

/* testh.h:55161 */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeMeasureExt
#define SOAP_TYPE_ns2__AnglePerVolumeMeasureExt (1904)
/* simple XML schema type 'ns2:AnglePerVolumeMeasureExt': */
struct ns2__AnglePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AnglePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:55180 */
#ifndef SOAP_TYPE_ns2__AngularAccelerationMeasure
#define SOAP_TYPE_ns2__AngularAccelerationMeasure (1905)
/* simple XML schema type 'ns2:AngularAccelerationMeasure': */
struct ns2__AngularAccelerationMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AngularAccelerationUom' */
        enum ns2__AngularAccelerationUom uom;
};
#endif

/* testh.h:55199 */
#ifndef SOAP_TYPE_ns2__AngularAccelerationMeasureExt
#define SOAP_TYPE_ns2__AngularAccelerationMeasureExt (1906)
/* simple XML schema type 'ns2:AngularAccelerationMeasureExt': */
struct ns2__AngularAccelerationMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AngularAccelerationUomExt' */
        char *uom;
};
#endif

/* testh.h:20667 */
#ifndef SOAP_TYPE_ns2__AngularVelocityMeasure
#define SOAP_TYPE_ns2__AngularVelocityMeasure (684)
/* simple XML schema type 'ns2:AngularVelocityMeasure': */
struct ns2__AngularVelocityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AngularVelocityUom' */
        enum ns2__AngularVelocityUom uom;
};
#endif

/* testh.h:55237 */
#ifndef SOAP_TYPE_ns2__AngularVelocityMeasureExt
#define SOAP_TYPE_ns2__AngularVelocityMeasureExt (1907)
/* simple XML schema type 'ns2:AngularVelocityMeasureExt': */
struct ns2__AngularVelocityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AngularVelocityUomExt' */
        char *uom;
};
#endif

/* testh.h:55256 */
#ifndef SOAP_TYPE_ns2__APIGammaRayMeasure
#define SOAP_TYPE_ns2__APIGammaRayMeasure (1908)
/* simple XML schema type 'ns2:APIGammaRayMeasure': */
struct ns2__APIGammaRayMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APIGammaRayUom' */
        enum ns2__APIGammaRayUom uom;
};
#endif

/* testh.h:55275 */
#ifndef SOAP_TYPE_ns2__APIGammaRayMeasureExt
#define SOAP_TYPE_ns2__APIGammaRayMeasureExt (1909)
/* simple XML schema type 'ns2:APIGammaRayMeasureExt': */
struct ns2__APIGammaRayMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APIGammaRayUomExt' */
        char *uom;
};
#endif

/* testh.h:55294 */
#ifndef SOAP_TYPE_ns2__APIGravityMeasure
#define SOAP_TYPE_ns2__APIGravityMeasure (1910)
/* simple XML schema type 'ns2:APIGravityMeasure': */
struct ns2__APIGravityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APIGravityUom' */
        enum ns2__APIGravityUom uom;
};
#endif

/* testh.h:55313 */
#ifndef SOAP_TYPE_ns2__APIGravityMeasureExt
#define SOAP_TYPE_ns2__APIGravityMeasureExt (1911)
/* simple XML schema type 'ns2:APIGravityMeasureExt': */
struct ns2__APIGravityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APIGravityUomExt' */
        char *uom;
};
#endif

/* testh.h:55332 */
#ifndef SOAP_TYPE_ns2__APINeutronMeasure
#define SOAP_TYPE_ns2__APINeutronMeasure (1912)
/* simple XML schema type 'ns2:APINeutronMeasure': */
struct ns2__APINeutronMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APINeutronUom' */
        enum ns2__APINeutronUom uom;
};
#endif

/* testh.h:55351 */
#ifndef SOAP_TYPE_ns2__APINeutronMeasureExt
#define SOAP_TYPE_ns2__APINeutronMeasureExt (1913)
/* simple XML schema type 'ns2:APINeutronMeasureExt': */
struct ns2__APINeutronMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:APINeutronUomExt' */
        char *uom;
};
#endif

/* testh.h:21894 */
#ifndef SOAP_TYPE_ns2__AreaMeasure
#define SOAP_TYPE_ns2__AreaMeasure (748)
/* simple XML schema type 'ns2:AreaMeasure': */
struct ns2__AreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaUom' */
        enum ns2__AreaUom uom;
};
#endif

/* testh.h:55389 */
#ifndef SOAP_TYPE_ns2__AreaMeasureExt
#define SOAP_TYPE_ns2__AreaMeasureExt (1914)
/* simple XML schema type 'ns2:AreaMeasureExt': */
struct ns2__AreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaUomExt' */
        char *uom;
};
#endif

/* testh.h:55408 */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasure (1915)
/* simple XML schema type 'ns2:AreaPerAmountOfSubstanceMeasure': */
struct ns2__AreaPerAmountOfSubstanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerAmountOfSubstanceUom' */
        enum ns2__AreaPerAmountOfSubstanceUom uom;
};
#endif

/* testh.h:55427 */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasureExt (1916)
/* simple XML schema type 'ns2:AreaPerAmountOfSubstanceMeasureExt': */
struct ns2__AreaPerAmountOfSubstanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerAmountOfSubstanceUomExt' */
        char *uom;
};
#endif

/* testh.h:31201 */
#ifndef SOAP_TYPE_ns2__AreaPerAreaMeasure
#define SOAP_TYPE_ns2__AreaPerAreaMeasure (1077)
/* simple XML schema type 'ns2:AreaPerAreaMeasure': */
struct ns2__AreaPerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerAreaUom' */
        enum ns2__AreaPerAreaUom uom;
};
#endif

/* testh.h:55465 */
#ifndef SOAP_TYPE_ns2__AreaPerAreaMeasureExt
#define SOAP_TYPE_ns2__AreaPerAreaMeasureExt (1917)
/* simple XML schema type 'ns2:AreaPerAreaMeasureExt': */
struct ns2__AreaPerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:55484 */
#ifndef SOAP_TYPE_ns2__AreaPerCountMeasure
#define SOAP_TYPE_ns2__AreaPerCountMeasure (1918)
/* simple XML schema type 'ns2:AreaPerCountMeasure': */
struct ns2__AreaPerCountMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerCountUom' */
        enum ns2__AreaPerCountUom uom;
};
#endif

/* testh.h:55503 */
#ifndef SOAP_TYPE_ns2__AreaPerCountMeasureExt
#define SOAP_TYPE_ns2__AreaPerCountMeasureExt (1919)
/* simple XML schema type 'ns2:AreaPerCountMeasureExt': */
struct ns2__AreaPerCountMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerCountUomExt' */
        char *uom;
};
#endif

/* testh.h:45695 */
#ifndef SOAP_TYPE_ns2__AreaPerMassMeasure
#define SOAP_TYPE_ns2__AreaPerMassMeasure (1620)
/* simple XML schema type 'ns2:AreaPerMassMeasure': */
struct ns2__AreaPerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerMassUom' */
        enum ns2__AreaPerMassUom uom;
};
#endif

/* testh.h:55541 */
#ifndef SOAP_TYPE_ns2__AreaPerMassMeasureExt
#define SOAP_TYPE_ns2__AreaPerMassMeasureExt (1920)
/* simple XML schema type 'ns2:AreaPerMassMeasureExt': */
struct ns2__AreaPerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:55560 */
#ifndef SOAP_TYPE_ns2__AreaPerTimeMeasure
#define SOAP_TYPE_ns2__AreaPerTimeMeasure (1921)
/* simple XML schema type 'ns2:AreaPerTimeMeasure': */
struct ns2__AreaPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerTimeUom' */
        enum ns2__AreaPerTimeUom uom;
};
#endif

/* testh.h:55579 */
#ifndef SOAP_TYPE_ns2__AreaPerTimeMeasureExt
#define SOAP_TYPE_ns2__AreaPerTimeMeasureExt (1922)
/* simple XML schema type 'ns2:AreaPerTimeMeasureExt': */
struct ns2__AreaPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:55598 */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeMeasure
#define SOAP_TYPE_ns2__AreaPerVolumeMeasure (1923)
/* simple XML schema type 'ns2:AreaPerVolumeMeasure': */
struct ns2__AreaPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerVolumeUom' */
        enum ns2__AreaPerVolumeUom uom;
};
#endif

/* testh.h:55617 */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeMeasureExt
#define SOAP_TYPE_ns2__AreaPerVolumeMeasureExt (1924)
/* simple XML schema type 'ns2:AreaPerVolumeMeasureExt': */
struct ns2__AreaPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AreaPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:55636 */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasure
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasure (1925)
/* simple XML schema type 'ns2:AttenuationPerFrequencyIntervalMeasure': */
struct ns2__AttenuationPerFrequencyIntervalMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AttenuationPerFrequencyIntervalUom' */
        enum ns2__AttenuationPerFrequencyIntervalUom uom;
};
#endif

/* testh.h:55655 */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasureExt
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasureExt (1926)
/* simple XML schema type 'ns2:AttenuationPerFrequencyIntervalMeasureExt': */
struct ns2__AttenuationPerFrequencyIntervalMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:AttenuationPerFrequencyIntervalUomExt' */
        char *uom;
};
#endif

/* testh.h:55674 */
#ifndef SOAP_TYPE_ns2__CapacitanceMeasure
#define SOAP_TYPE_ns2__CapacitanceMeasure (1927)
/* simple XML schema type 'ns2:CapacitanceMeasure': */
struct ns2__CapacitanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:CapacitanceUom' */
        enum ns2__CapacitanceUom uom;
};
#endif

/* testh.h:55693 */
#ifndef SOAP_TYPE_ns2__CapacitanceMeasureExt
#define SOAP_TYPE_ns2__CapacitanceMeasureExt (1928)
/* simple XML schema type 'ns2:CapacitanceMeasureExt': */
struct ns2__CapacitanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:CapacitanceUomExt' */
        char *uom;
};
#endif

/* testh.h:55712 */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityMeasure
#define SOAP_TYPE_ns2__CationExchangeCapacityMeasure (1929)
/* simple XML schema type 'ns2:CationExchangeCapacityMeasure': */
struct ns2__CationExchangeCapacityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:CationExchangeCapacityUom' */
        enum ns2__CationExchangeCapacityUom uom;
};
#endif

/* testh.h:21070 */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityMeasureExt
#define SOAP_TYPE_ns2__CationExchangeCapacityMeasureExt (708)
/* simple XML schema type 'ns2:CationExchangeCapacityMeasureExt': */
struct ns2__CationExchangeCapacityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:CationExchangeCapacityUomExt' */
        char *uom;
};
#endif

/* testh.h:55750 */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedMeasure
#define SOAP_TYPE_ns2__DataTransferSpeedMeasure (1930)
/* simple XML schema type 'ns2:DataTransferSpeedMeasure': */
struct ns2__DataTransferSpeedMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DataTransferSpeedUom' */
        enum ns2__DataTransferSpeedUom uom;
};
#endif

/* testh.h:55769 */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedMeasureExt
#define SOAP_TYPE_ns2__DataTransferSpeedMeasureExt (1931)
/* simple XML schema type 'ns2:DataTransferSpeedMeasureExt': */
struct ns2__DataTransferSpeedMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DataTransferSpeedUomExt' */
        char *uom;
};
#endif

/* testh.h:55788 */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientMeasure
#define SOAP_TYPE_ns2__DiffusionCoefficientMeasure (1932)
/* simple XML schema type 'ns2:DiffusionCoefficientMeasure': */
struct ns2__DiffusionCoefficientMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DiffusionCoefficientUom' */
        enum ns2__DiffusionCoefficientUom uom;
};
#endif

/* testh.h:55807 */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientMeasureExt
#define SOAP_TYPE_ns2__DiffusionCoefficientMeasureExt (1933)
/* simple XML schema type 'ns2:DiffusionCoefficientMeasureExt': */
struct ns2__DiffusionCoefficientMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DiffusionCoefficientUomExt' */
        char *uom;
};
#endif

/* testh.h:55826 */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasure
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasure (1934)
/* simple XML schema type 'ns2:DiffusiveTimeOfFlightMeasure': */
struct ns2__DiffusiveTimeOfFlightMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DiffusiveTimeOfFlightUom' */
        enum ns2__DiffusiveTimeOfFlightUom uom;
};
#endif

/* testh.h:55845 */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasureExt
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasureExt (1935)
/* simple XML schema type 'ns2:DiffusiveTimeOfFlightMeasureExt': */
struct ns2__DiffusiveTimeOfFlightMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DiffusiveTimeOfFlightUomExt' */
        char *uom;
};
#endif

/* testh.h:41727 */
#ifndef SOAP_TYPE_ns2__DigitalStorageMeasure
#define SOAP_TYPE_ns2__DigitalStorageMeasure (1542)
/* simple XML schema type 'ns2:DigitalStorageMeasure': */
struct ns2__DigitalStorageMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DigitalStorageUom' */
        enum ns2__DigitalStorageUom uom;
};
#endif

/* testh.h:55883 */
#ifndef SOAP_TYPE_ns2__DigitalStorageMeasureExt
#define SOAP_TYPE_ns2__DigitalStorageMeasureExt (1936)
/* simple XML schema type 'ns2:DigitalStorageMeasureExt': */
struct ns2__DigitalStorageMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DigitalStorageUomExt' */
        char *uom;
};
#endif

/* testh.h:23941 */
#ifndef SOAP_TYPE_ns2__DimensionlessMeasure
#define SOAP_TYPE_ns2__DimensionlessMeasure (834)
/* simple XML schema type 'ns2:DimensionlessMeasure': */
struct ns2__DimensionlessMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DimensionlessUom' */
        enum ns2__DimensionlessUom uom;
};
#endif

/* testh.h:55921 */
#ifndef SOAP_TYPE_ns2__DimensionlessMeasureExt
#define SOAP_TYPE_ns2__DimensionlessMeasureExt (1937)
/* simple XML schema type 'ns2:DimensionlessMeasureExt': */
struct ns2__DimensionlessMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DimensionlessUomExt' */
        char *uom;
};
#endif

/* testh.h:55940 */
#ifndef SOAP_TYPE_ns2__DipoleMomentMeasure
#define SOAP_TYPE_ns2__DipoleMomentMeasure (1938)
/* simple XML schema type 'ns2:DipoleMomentMeasure': */
struct ns2__DipoleMomentMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DipoleMomentUom' */
        enum ns2__DipoleMomentUom uom;
};
#endif

/* testh.h:55959 */
#ifndef SOAP_TYPE_ns2__DipoleMomentMeasureExt
#define SOAP_TYPE_ns2__DipoleMomentMeasureExt (1939)
/* simple XML schema type 'ns2:DipoleMomentMeasureExt': */
struct ns2__DipoleMomentMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DipoleMomentUomExt' */
        char *uom;
};
#endif

/* testh.h:55978 */
#ifndef SOAP_TYPE_ns2__DoseEquivalentMeasure
#define SOAP_TYPE_ns2__DoseEquivalentMeasure (1940)
/* simple XML schema type 'ns2:DoseEquivalentMeasure': */
struct ns2__DoseEquivalentMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DoseEquivalentUom' */
        enum ns2__DoseEquivalentUom uom;
};
#endif

/* testh.h:55997 */
#ifndef SOAP_TYPE_ns2__DoseEquivalentMeasureExt
#define SOAP_TYPE_ns2__DoseEquivalentMeasureExt (1941)
/* simple XML schema type 'ns2:DoseEquivalentMeasureExt': */
struct ns2__DoseEquivalentMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DoseEquivalentUomExt' */
        char *uom;
};
#endif

/* testh.h:20938 */
#ifndef SOAP_TYPE_ns2__DynamicViscosityMeasure
#define SOAP_TYPE_ns2__DynamicViscosityMeasure (702)
/* simple XML schema type 'ns2:DynamicViscosityMeasure': */
struct ns2__DynamicViscosityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DynamicViscosityUom' */
        enum ns2__DynamicViscosityUom uom;
};
#endif

/* testh.h:56035 */
#ifndef SOAP_TYPE_ns2__DynamicViscosityMeasureExt
#define SOAP_TYPE_ns2__DynamicViscosityMeasureExt (1942)
/* simple XML schema type 'ns2:DynamicViscosityMeasureExt': */
struct ns2__DynamicViscosityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:DynamicViscosityUomExt' */
        char *uom;
};
#endif

/* testh.h:56054 */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityMeasure
#define SOAP_TYPE_ns2__ElectricalResistivityMeasure (1943)
/* simple XML schema type 'ns2:ElectricalResistivityMeasure': */
struct ns2__ElectricalResistivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricalResistivityUom' */
        enum ns2__ElectricalResistivityUom uom;
};
#endif

/* testh.h:56073 */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityMeasureExt
#define SOAP_TYPE_ns2__ElectricalResistivityMeasureExt (1944)
/* simple XML schema type 'ns2:ElectricalResistivityMeasureExt': */
struct ns2__ElectricalResistivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricalResistivityUomExt' */
        char *uom;
};
#endif

/* testh.h:56092 */
#ifndef SOAP_TYPE_ns2__ElectricChargeMeasure
#define SOAP_TYPE_ns2__ElectricChargeMeasure (1945)
/* simple XML schema type 'ns2:ElectricChargeMeasure': */
struct ns2__ElectricChargeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargeUom' */
        enum ns2__ElectricChargeUom uom;
};
#endif

/* testh.h:56111 */
#ifndef SOAP_TYPE_ns2__ElectricChargeMeasureExt
#define SOAP_TYPE_ns2__ElectricChargeMeasureExt (1946)
/* simple XML schema type 'ns2:ElectricChargeMeasureExt': */
struct ns2__ElectricChargeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargeUomExt' */
        char *uom;
};
#endif

/* testh.h:56130 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaMeasure
#define SOAP_TYPE_ns2__ElectricChargePerAreaMeasure (1947)
/* simple XML schema type 'ns2:ElectricChargePerAreaMeasure': */
struct ns2__ElectricChargePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerAreaUom' */
        enum ns2__ElectricChargePerAreaUom uom;
};
#endif

/* testh.h:56149 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerAreaMeasureExt (1948)
/* simple XML schema type 'ns2:ElectricChargePerAreaMeasureExt': */
struct ns2__ElectricChargePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:56168 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassMeasure
#define SOAP_TYPE_ns2__ElectricChargePerMassMeasure (1949)
/* simple XML schema type 'ns2:ElectricChargePerMassMeasure': */
struct ns2__ElectricChargePerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerMassUom' */
        enum ns2__ElectricChargePerMassUom uom;
};
#endif

/* testh.h:56187 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerMassMeasureExt (1950)
/* simple XML schema type 'ns2:ElectricChargePerMassMeasureExt': */
struct ns2__ElectricChargePerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:56206 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeMeasure
#define SOAP_TYPE_ns2__ElectricChargePerVolumeMeasure (1951)
/* simple XML schema type 'ns2:ElectricChargePerVolumeMeasure': */
struct ns2__ElectricChargePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerVolumeUom' */
        enum ns2__ElectricChargePerVolumeUom uom;
};
#endif

/* testh.h:56225 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerVolumeMeasureExt (1952)
/* simple XML schema type 'ns2:ElectricChargePerVolumeMeasureExt': */
struct ns2__ElectricChargePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricChargePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:56244 */
#ifndef SOAP_TYPE_ns2__ElectricConductanceMeasure
#define SOAP_TYPE_ns2__ElectricConductanceMeasure (1953)
/* simple XML schema type 'ns2:ElectricConductanceMeasure': */
struct ns2__ElectricConductanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricConductanceUom' */
        enum ns2__ElectricConductanceUom uom;
};
#endif

/* testh.h:56263 */
#ifndef SOAP_TYPE_ns2__ElectricConductanceMeasureExt
#define SOAP_TYPE_ns2__ElectricConductanceMeasureExt (1954)
/* simple XML schema type 'ns2:ElectricConductanceMeasureExt': */
struct ns2__ElectricConductanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricConductanceUomExt' */
        char *uom;
};
#endif

/* testh.h:56282 */
#ifndef SOAP_TYPE_ns2__ElectricConductivityMeasure
#define SOAP_TYPE_ns2__ElectricConductivityMeasure (1955)
/* simple XML schema type 'ns2:ElectricConductivityMeasure': */
struct ns2__ElectricConductivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricConductivityUom' */
        enum ns2__ElectricConductivityUom uom;
};
#endif

/* testh.h:56301 */
#ifndef SOAP_TYPE_ns2__ElectricConductivityMeasureExt
#define SOAP_TYPE_ns2__ElectricConductivityMeasureExt (1956)
/* simple XML schema type 'ns2:ElectricConductivityMeasureExt': */
struct ns2__ElectricConductivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricConductivityUomExt' */
        char *uom;
};
#endif

/* testh.h:56320 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityMeasure
#define SOAP_TYPE_ns2__ElectricCurrentDensityMeasure (1957)
/* simple XML schema type 'ns2:ElectricCurrentDensityMeasure': */
struct ns2__ElectricCurrentDensityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricCurrentDensityUom' */
        enum ns2__ElectricCurrentDensityUom uom;
};
#endif

/* testh.h:56339 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityMeasureExt
#define SOAP_TYPE_ns2__ElectricCurrentDensityMeasureExt (1958)
/* simple XML schema type 'ns2:ElectricCurrentDensityMeasureExt': */
struct ns2__ElectricCurrentDensityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricCurrentDensityUomExt' */
        char *uom;
};
#endif

/* testh.h:30929 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentMeasure
#define SOAP_TYPE_ns2__ElectricCurrentMeasure (1068)
/* simple XML schema type 'ns2:ElectricCurrentMeasure': */
struct ns2__ElectricCurrentMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricCurrentUom' */
        enum ns2__ElectricCurrentUom uom;
};
#endif

/* testh.h:56377 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentMeasureExt
#define SOAP_TYPE_ns2__ElectricCurrentMeasureExt (1959)
/* simple XML schema type 'ns2:ElectricCurrentMeasureExt': */
struct ns2__ElectricCurrentMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricCurrentUomExt' */
        char *uom;
};
#endif

/* testh.h:56396 */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthMeasure
#define SOAP_TYPE_ns2__ElectricFieldStrengthMeasure (1960)
/* simple XML schema type 'ns2:ElectricFieldStrengthMeasure': */
struct ns2__ElectricFieldStrengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricFieldStrengthUom' */
        enum ns2__ElectricFieldStrengthUom uom;
};
#endif

/* testh.h:56415 */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthMeasureExt
#define SOAP_TYPE_ns2__ElectricFieldStrengthMeasureExt (1961)
/* simple XML schema type 'ns2:ElectricFieldStrengthMeasureExt': */
struct ns2__ElectricFieldStrengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricFieldStrengthUomExt' */
        char *uom;
};
#endif

/* testh.h:21166 */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasure
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasure (711)
/* simple XML schema type 'ns2:ElectricPotentialDifferenceMeasure': */
struct ns2__ElectricPotentialDifferenceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricPotentialDifferenceUom' */
        enum ns2__ElectricPotentialDifferenceUom uom;
};
#endif

/* testh.h:56453 */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasureExt
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasureExt (1962)
/* simple XML schema type 'ns2:ElectricPotentialDifferenceMeasureExt': */
struct ns2__ElectricPotentialDifferenceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricPotentialDifferenceUomExt' */
        char *uom;
};
#endif

/* testh.h:56472 */
#ifndef SOAP_TYPE_ns2__ElectricResistanceMeasure
#define SOAP_TYPE_ns2__ElectricResistanceMeasure (1963)
/* simple XML schema type 'ns2:ElectricResistanceMeasure': */
struct ns2__ElectricResistanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricResistanceUom' */
        enum ns2__ElectricResistanceUom uom;
};
#endif

/* testh.h:56491 */
#ifndef SOAP_TYPE_ns2__ElectricResistanceMeasureExt
#define SOAP_TYPE_ns2__ElectricResistanceMeasureExt (1964)
/* simple XML schema type 'ns2:ElectricResistanceMeasureExt': */
struct ns2__ElectricResistanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricResistanceUomExt' */
        char *uom;
};
#endif

/* testh.h:56510 */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthMeasure
#define SOAP_TYPE_ns2__ElectricResistancePerLengthMeasure (1965)
/* simple XML schema type 'ns2:ElectricResistancePerLengthMeasure': */
struct ns2__ElectricResistancePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricResistancePerLengthUom' */
        enum ns2__ElectricResistancePerLengthUom uom;
};
#endif

/* testh.h:56529 */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthMeasureExt
#define SOAP_TYPE_ns2__ElectricResistancePerLengthMeasureExt (1966)
/* simple XML schema type 'ns2:ElectricResistancePerLengthMeasureExt': */
struct ns2__ElectricResistancePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectricResistancePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:56548 */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentMeasure
#define SOAP_TYPE_ns2__ElectromagneticMomentMeasure (1967)
/* simple XML schema type 'ns2:ElectromagneticMomentMeasure': */
struct ns2__ElectromagneticMomentMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectromagneticMomentUom' */
        enum ns2__ElectromagneticMomentUom uom;
};
#endif

/* testh.h:56567 */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentMeasureExt
#define SOAP_TYPE_ns2__ElectromagneticMomentMeasureExt (1968)
/* simple XML schema type 'ns2:ElectromagneticMomentMeasureExt': */
struct ns2__ElectromagneticMomentMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ElectromagneticMomentUomExt' */
        char *uom;
};
#endif

/* testh.h:56586 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaMeasure
#define SOAP_TYPE_ns2__EnergyLengthPerAreaMeasure (1969)
/* simple XML schema type 'ns2:EnergyLengthPerAreaMeasure': */
struct ns2__EnergyLengthPerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyLengthPerAreaUom' */
        enum ns2__EnergyLengthPerAreaUom uom;
};
#endif

/* testh.h:56605 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaMeasureExt
#define SOAP_TYPE_ns2__EnergyLengthPerAreaMeasureExt (1970)
/* simple XML schema type 'ns2:EnergyLengthPerAreaMeasureExt': */
struct ns2__EnergyLengthPerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyLengthPerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:56624 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasure
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasure (1971)
/* simple XML schema type 'ns2:EnergyLengthPerTimeAreaTemperatureMeasure': */
struct ns2__EnergyLengthPerTimeAreaTemperatureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyLengthPerTimeAreaTemperatureUom' */
        enum ns2__EnergyLengthPerTimeAreaTemperatureUom uom;
};
#endif

/* testh.h:56643 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt (1972)
/* simple XML schema type 'ns2:EnergyLengthPerTimeAreaTemperatureMeasureExt': */
struct ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyLengthPerTimeAreaTemperatureUomExt' */
        char *uom;
};
#endif

/* testh.h:56662 */
#ifndef SOAP_TYPE_ns2__EnergyMeasure
#define SOAP_TYPE_ns2__EnergyMeasure (1973)
/* simple XML schema type 'ns2:EnergyMeasure': */
struct ns2__EnergyMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyUom' */
        enum ns2__EnergyUom uom;
};
#endif

/* testh.h:56681 */
#ifndef SOAP_TYPE_ns2__EnergyMeasureExt
#define SOAP_TYPE_ns2__EnergyMeasureExt (1974)
/* simple XML schema type 'ns2:EnergyMeasureExt': */
struct ns2__EnergyMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyUomExt' */
        char *uom;
};
#endif

/* testh.h:56700 */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaMeasure
#define SOAP_TYPE_ns2__EnergyPerAreaMeasure (1975)
/* simple XML schema type 'ns2:EnergyPerAreaMeasure': */
struct ns2__EnergyPerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerAreaUom' */
        enum ns2__EnergyPerAreaUom uom;
};
#endif

/* testh.h:56719 */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaMeasureExt
#define SOAP_TYPE_ns2__EnergyPerAreaMeasureExt (1976)
/* simple XML schema type 'ns2:EnergyPerAreaMeasureExt': */
struct ns2__EnergyPerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:56738 */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthMeasure
#define SOAP_TYPE_ns2__EnergyPerLengthMeasure (1977)
/* simple XML schema type 'ns2:EnergyPerLengthMeasure': */
struct ns2__EnergyPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerLengthUom' */
        enum ns2__EnergyPerLengthUom uom;
};
#endif

/* testh.h:56757 */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthMeasureExt
#define SOAP_TYPE_ns2__EnergyPerLengthMeasureExt (1978)
/* simple XML schema type 'ns2:EnergyPerLengthMeasureExt': */
struct ns2__EnergyPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:56776 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassMeasure
#define SOAP_TYPE_ns2__EnergyPerMassMeasure (1979)
/* simple XML schema type 'ns2:EnergyPerMassMeasure': */
struct ns2__EnergyPerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerMassUom' */
        enum ns2__EnergyPerMassUom uom;
};
#endif

/* testh.h:56795 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassMeasureExt
#define SOAP_TYPE_ns2__EnergyPerMassMeasureExt (1980)
/* simple XML schema type 'ns2:EnergyPerMassMeasureExt': */
struct ns2__EnergyPerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:56814 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasure
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasure (1981)
/* simple XML schema type 'ns2:EnergyPerMassPerTimeMeasure': */
struct ns2__EnergyPerMassPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerMassPerTimeUom' */
        enum ns2__EnergyPerMassPerTimeUom uom;
};
#endif

/* testh.h:56833 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasureExt
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasureExt (1982)
/* simple XML schema type 'ns2:EnergyPerMassPerTimeMeasureExt': */
struct ns2__EnergyPerMassPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerMassPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:56852 */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeMeasure
#define SOAP_TYPE_ns2__EnergyPerVolumeMeasure (1983)
/* simple XML schema type 'ns2:EnergyPerVolumeMeasure': */
struct ns2__EnergyPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerVolumeUom' */
        enum ns2__EnergyPerVolumeUom uom;
};
#endif

/* testh.h:56871 */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeMeasureExt
#define SOAP_TYPE_ns2__EnergyPerVolumeMeasureExt (1984)
/* simple XML schema type 'ns2:EnergyPerVolumeMeasureExt': */
struct ns2__EnergyPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:EnergyPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:56890 */
#ifndef SOAP_TYPE_ns2__ForceAreaMeasure
#define SOAP_TYPE_ns2__ForceAreaMeasure (1985)
/* simple XML schema type 'ns2:ForceAreaMeasure': */
struct ns2__ForceAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceAreaUom' */
        enum ns2__ForceAreaUom uom;
};
#endif

/* testh.h:56909 */
#ifndef SOAP_TYPE_ns2__ForceAreaMeasureExt
#define SOAP_TYPE_ns2__ForceAreaMeasureExt (1986)
/* simple XML schema type 'ns2:ForceAreaMeasureExt': */
struct ns2__ForceAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:56928 */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthMeasure
#define SOAP_TYPE_ns2__ForceLengthPerLengthMeasure (1987)
/* simple XML schema type 'ns2:ForceLengthPerLengthMeasure': */
struct ns2__ForceLengthPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceLengthPerLengthUom' */
        enum ns2__ForceLengthPerLengthUom uom;
};
#endif

/* testh.h:56947 */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthMeasureExt
#define SOAP_TYPE_ns2__ForceLengthPerLengthMeasureExt (1988)
/* simple XML schema type 'ns2:ForceLengthPerLengthMeasureExt': */
struct ns2__ForceLengthPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceLengthPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:20487 */
#ifndef SOAP_TYPE_ns2__ForceMeasure
#define SOAP_TYPE_ns2__ForceMeasure (668)
/* simple XML schema type 'ns2:ForceMeasure': */
struct ns2__ForceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceUom' */
        enum ns2__ForceUom uom;
};
#endif

/* testh.h:43592 */
#ifndef SOAP_TYPE_ns2__ForceMeasureExt
#define SOAP_TYPE_ns2__ForceMeasureExt (1584)
/* simple XML schema type 'ns2:ForceMeasureExt': */
struct ns2__ForceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForceUomExt' */
        char *uom;
};
#endif

/* testh.h:57004 */
#ifndef SOAP_TYPE_ns2__ForcePerForceMeasure
#define SOAP_TYPE_ns2__ForcePerForceMeasure (1989)
/* simple XML schema type 'ns2:ForcePerForceMeasure': */
struct ns2__ForcePerForceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerForceUom' */
        enum ns2__ForcePerForceUom uom;
};
#endif

/* testh.h:57023 */
#ifndef SOAP_TYPE_ns2__ForcePerForceMeasureExt
#define SOAP_TYPE_ns2__ForcePerForceMeasureExt (1990)
/* simple XML schema type 'ns2:ForcePerForceMeasureExt': */
struct ns2__ForcePerForceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerForceUomExt' */
        char *uom;
};
#endif

/* testh.h:22794 */
#ifndef SOAP_TYPE_ns2__ForcePerLengthMeasure
#define SOAP_TYPE_ns2__ForcePerLengthMeasure (783)
/* simple XML schema type 'ns2:ForcePerLengthMeasure': */
struct ns2__ForcePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerLengthUom' */
        enum ns2__ForcePerLengthUom uom;
};
#endif

/* testh.h:57061 */
#ifndef SOAP_TYPE_ns2__ForcePerLengthMeasureExt
#define SOAP_TYPE_ns2__ForcePerLengthMeasureExt (1991)
/* simple XML schema type 'ns2:ForcePerLengthMeasureExt': */
struct ns2__ForcePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:32681 */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeMeasure
#define SOAP_TYPE_ns2__ForcePerVolumeMeasure (1135)
/* simple XML schema type 'ns2:ForcePerVolumeMeasure': */
struct ns2__ForcePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerVolumeUom' */
        enum ns2__ForcePerVolumeUom uom;
};
#endif

/* testh.h:43643 */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeMeasureExt
#define SOAP_TYPE_ns2__ForcePerVolumeMeasureExt (1586)
/* simple XML schema type 'ns2:ForcePerVolumeMeasureExt': */
struct ns2__ForcePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ForcePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:57118 */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalMeasure
#define SOAP_TYPE_ns2__FrequencyIntervalMeasure (1992)
/* simple XML schema type 'ns2:FrequencyIntervalMeasure': */
struct ns2__FrequencyIntervalMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:FrequencyIntervalUom' */
        enum ns2__FrequencyIntervalUom uom;
};
#endif

/* testh.h:57137 */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalMeasureExt
#define SOAP_TYPE_ns2__FrequencyIntervalMeasureExt (1993)
/* simple XML schema type 'ns2:FrequencyIntervalMeasureExt': */
struct ns2__FrequencyIntervalMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:FrequencyIntervalUomExt' */
        char *uom;
};
#endif

/* testh.h:57156 */
#ifndef SOAP_TYPE_ns2__FrequencyMeasure
#define SOAP_TYPE_ns2__FrequencyMeasure (1994)
/* simple XML schema type 'ns2:FrequencyMeasure': */
struct ns2__FrequencyMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:FrequencyUom' */
        enum ns2__FrequencyUom uom;
};
#endif

/* testh.h:57175 */
#ifndef SOAP_TYPE_ns2__FrequencyMeasureExt
#define SOAP_TYPE_ns2__FrequencyMeasureExt (1995)
/* simple XML schema type 'ns2:FrequencyMeasureExt': */
struct ns2__FrequencyMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:FrequencyUomExt' */
        char *uom;
};
#endif

/* testh.h:57194 */
#ifndef SOAP_TYPE_ns2__HeatCapacityMeasure
#define SOAP_TYPE_ns2__HeatCapacityMeasure (1996)
/* simple XML schema type 'ns2:HeatCapacityMeasure': */
struct ns2__HeatCapacityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatCapacityUom' */
        enum ns2__HeatCapacityUom uom;
};
#endif

/* testh.h:57213 */
#ifndef SOAP_TYPE_ns2__HeatCapacityMeasureExt
#define SOAP_TYPE_ns2__HeatCapacityMeasureExt (1997)
/* simple XML schema type 'ns2:HeatCapacityMeasureExt': */
struct ns2__HeatCapacityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatCapacityUomExt' */
        char *uom;
};
#endif

/* testh.h:57232 */
#ifndef SOAP_TYPE_ns2__HeatFlowRateMeasure
#define SOAP_TYPE_ns2__HeatFlowRateMeasure (1998)
/* simple XML schema type 'ns2:HeatFlowRateMeasure': */
struct ns2__HeatFlowRateMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatFlowRateUom' */
        enum ns2__HeatFlowRateUom uom;
};
#endif

/* testh.h:57251 */
#ifndef SOAP_TYPE_ns2__HeatFlowRateMeasureExt
#define SOAP_TYPE_ns2__HeatFlowRateMeasureExt (1999)
/* simple XML schema type 'ns2:HeatFlowRateMeasureExt': */
struct ns2__HeatFlowRateMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatFlowRateUomExt' */
        char *uom;
};
#endif

/* testh.h:57270 */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientMeasure
#define SOAP_TYPE_ns2__HeatTransferCoefficientMeasure (2000)
/* simple XML schema type 'ns2:HeatTransferCoefficientMeasure': */
struct ns2__HeatTransferCoefficientMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatTransferCoefficientUom' */
        enum ns2__HeatTransferCoefficientUom uom;
};
#endif

/* testh.h:57289 */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientMeasureExt
#define SOAP_TYPE_ns2__HeatTransferCoefficientMeasureExt (2001)
/* simple XML schema type 'ns2:HeatTransferCoefficientMeasureExt': */
struct ns2__HeatTransferCoefficientMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:HeatTransferCoefficientUomExt' */
        char *uom;
};
#endif

/* testh.h:52556 */
#ifndef SOAP_TYPE_ns2__IlluminanceMeasure
#define SOAP_TYPE_ns2__IlluminanceMeasure (1815)
/* simple XML schema type 'ns2:IlluminanceMeasure': */
struct ns2__IlluminanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:IlluminanceUom' */
        enum ns2__IlluminanceUom uom;
};
#endif

/* testh.h:57327 */
#ifndef SOAP_TYPE_ns2__IlluminanceMeasureExt
#define SOAP_TYPE_ns2__IlluminanceMeasureExt (2002)
/* simple XML schema type 'ns2:IlluminanceMeasureExt': */
struct ns2__IlluminanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:IlluminanceUomExt' */
        char *uom;
};
#endif

/* testh.h:57346 */
#ifndef SOAP_TYPE_ns2__InductanceMeasure
#define SOAP_TYPE_ns2__InductanceMeasure (2003)
/* simple XML schema type 'ns2:InductanceMeasure': */
struct ns2__InductanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:InductanceUom' */
        enum ns2__InductanceUom uom;
};
#endif

/* testh.h:57365 */
#ifndef SOAP_TYPE_ns2__InductanceMeasureExt
#define SOAP_TYPE_ns2__InductanceMeasureExt (2004)
/* simple XML schema type 'ns2:InductanceMeasureExt': */
struct ns2__InductanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:InductanceUomExt' */
        char *uom;
};
#endif

/* testh.h:33283 */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityMeasure
#define SOAP_TYPE_ns2__IsothermalCompressibilityMeasure (1158)
/* simple XML schema type 'ns2:IsothermalCompressibilityMeasure': */
struct ns2__IsothermalCompressibilityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:IsothermalCompressibilityUom' */
        enum ns2__IsothermalCompressibilityUom uom;
};
#endif

/* testh.h:57403 */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityMeasureExt
#define SOAP_TYPE_ns2__IsothermalCompressibilityMeasureExt (2005)
/* simple XML schema type 'ns2:IsothermalCompressibilityMeasureExt': */
struct ns2__IsothermalCompressibilityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:IsothermalCompressibilityUomExt' */
        char *uom;
};
#endif

/* testh.h:57422 */
#ifndef SOAP_TYPE_ns2__KinematicViscosityMeasure
#define SOAP_TYPE_ns2__KinematicViscosityMeasure (2006)
/* simple XML schema type 'ns2:KinematicViscosityMeasure': */
struct ns2__KinematicViscosityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:KinematicViscosityUom' */
        enum ns2__KinematicViscosityUom uom;
};
#endif

/* testh.h:57441 */
#ifndef SOAP_TYPE_ns2__KinematicViscosityMeasureExt
#define SOAP_TYPE_ns2__KinematicViscosityMeasureExt (2007)
/* simple XML schema type 'ns2:KinematicViscosityMeasureExt': */
struct ns2__KinematicViscosityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:KinematicViscosityUomExt' */
        char *uom;
};
#endif

/* testh.h:20637 */
#ifndef SOAP_TYPE_ns2__LengthMeasure
#define SOAP_TYPE_ns2__LengthMeasure (682)
/* simple XML schema type 'ns2:LengthMeasure': */
struct ns2__LengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthUom' */
        enum ns2__LengthUom uom;
};
#endif

/* testh.h:24365 */
#ifndef SOAP_TYPE_ns2__LengthMeasureExt
#define SOAP_TYPE_ns2__LengthMeasureExt (840)
/* simple XML schema type 'ns2:LengthMeasureExt': */
struct ns2__LengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthUomExt' */
        char *uom;
};
#endif

/* testh.h:57498 */
#ifndef SOAP_TYPE_ns2__LengthOrTimeMeasureExt
#define SOAP_TYPE_ns2__LengthOrTimeMeasureExt (2008)
/* simple XML schema type 'ns2:LengthOrTimeMeasureExt': */
struct ns2__LengthOrTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
};
#endif

/* testh.h:57515 */
#ifndef SOAP_TYPE_ns2__LengthPerAngleMeasure
#define SOAP_TYPE_ns2__LengthPerAngleMeasure (2009)
/* simple XML schema type 'ns2:LengthPerAngleMeasure': */
struct ns2__LengthPerAngleMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerAngleUom' */
        enum ns2__LengthPerAngleUom uom;
};
#endif

/* testh.h:57534 */
#ifndef SOAP_TYPE_ns2__LengthPerAngleMeasureExt
#define SOAP_TYPE_ns2__LengthPerAngleMeasureExt (2010)
/* simple XML schema type 'ns2:LengthPerAngleMeasureExt': */
struct ns2__LengthPerAngleMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerAngleUomExt' */
        char *uom;
};
#endif

/* testh.h:22776 */
#ifndef SOAP_TYPE_ns2__LengthPerLengthMeasure
#define SOAP_TYPE_ns2__LengthPerLengthMeasure (780)
/* simple XML schema type 'ns2:LengthPerLengthMeasure': */
struct ns2__LengthPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerLengthUom' */
        enum ns2__LengthPerLengthUom uom;
};
#endif

/* testh.h:28753 */
#ifndef SOAP_TYPE_ns2__LengthPerLengthMeasureExt
#define SOAP_TYPE_ns2__LengthPerLengthMeasureExt (1009)
/* simple XML schema type 'ns2:LengthPerLengthMeasureExt': */
struct ns2__LengthPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:57591 */
#ifndef SOAP_TYPE_ns2__LengthPerMassMeasure
#define SOAP_TYPE_ns2__LengthPerMassMeasure (2011)
/* simple XML schema type 'ns2:LengthPerMassMeasure': */
struct ns2__LengthPerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerMassUom' */
        enum ns2__LengthPerMassUom uom;
};
#endif

/* testh.h:57610 */
#ifndef SOAP_TYPE_ns2__LengthPerMassMeasureExt
#define SOAP_TYPE_ns2__LengthPerMassMeasureExt (2012)
/* simple XML schema type 'ns2:LengthPerMassMeasureExt': */
struct ns2__LengthPerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:57629 */
#ifndef SOAP_TYPE_ns2__LengthPerPressureMeasure
#define SOAP_TYPE_ns2__LengthPerPressureMeasure (2013)
/* simple XML schema type 'ns2:LengthPerPressureMeasure': */
struct ns2__LengthPerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerPressureUom' */
        enum ns2__LengthPerPressureUom uom;
};
#endif

/* testh.h:57648 */
#ifndef SOAP_TYPE_ns2__LengthPerPressureMeasureExt
#define SOAP_TYPE_ns2__LengthPerPressureMeasureExt (2014)
/* simple XML schema type 'ns2:LengthPerPressureMeasureExt': */
struct ns2__LengthPerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:57667 */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureMeasure
#define SOAP_TYPE_ns2__LengthPerTemperatureMeasure (2015)
/* simple XML schema type 'ns2:LengthPerTemperatureMeasure': */
struct ns2__LengthPerTemperatureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerTemperatureUom' */
        enum ns2__LengthPerTemperatureUom uom;
};
#endif

/* testh.h:57686 */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureMeasureExt
#define SOAP_TYPE_ns2__LengthPerTemperatureMeasureExt (2016)
/* simple XML schema type 'ns2:LengthPerTemperatureMeasureExt': */
struct ns2__LengthPerTemperatureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerTemperatureUomExt' */
        char *uom;
};
#endif

/* testh.h:20583 */
#ifndef SOAP_TYPE_ns2__LengthPerTimeMeasure
#define SOAP_TYPE_ns2__LengthPerTimeMeasure (676)
/* simple XML schema type 'ns2:LengthPerTimeMeasure': */
struct ns2__LengthPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerTimeUom' */
        enum ns2__LengthPerTimeUom uom;
};
#endif

/* testh.h:32201 */
#ifndef SOAP_TYPE_ns2__LengthPerTimeMeasureExt
#define SOAP_TYPE_ns2__LengthPerTimeMeasureExt (1114)
/* simple XML schema type 'ns2:LengthPerTimeMeasureExt': */
struct ns2__LengthPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:57743 */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeMeasure
#define SOAP_TYPE_ns2__LengthPerVolumeMeasure (2017)
/* simple XML schema type 'ns2:LengthPerVolumeMeasure': */
struct ns2__LengthPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerVolumeUom' */
        enum ns2__LengthPerVolumeUom uom;
};
#endif

/* testh.h:57762 */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeMeasureExt
#define SOAP_TYPE_ns2__LengthPerVolumeMeasureExt (2018)
/* simple XML schema type 'ns2:LengthPerVolumeMeasureExt': */
struct ns2__LengthPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LengthPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:57781 */
#ifndef SOAP_TYPE_ns2__LightExposureMeasure
#define SOAP_TYPE_ns2__LightExposureMeasure (2019)
/* simple XML schema type 'ns2:LightExposureMeasure': */
struct ns2__LightExposureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LightExposureUom' */
        enum ns2__LightExposureUom uom;
};
#endif

/* testh.h:57800 */
#ifndef SOAP_TYPE_ns2__LightExposureMeasureExt
#define SOAP_TYPE_ns2__LightExposureMeasureExt (2020)
/* simple XML schema type 'ns2:LightExposureMeasureExt': */
struct ns2__LightExposureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LightExposureUomExt' */
        char *uom;
};
#endif

/* testh.h:31560 */
#ifndef SOAP_TYPE_ns2__LinearAccelerationMeasure
#define SOAP_TYPE_ns2__LinearAccelerationMeasure (1085)
/* simple XML schema type 'ns2:LinearAccelerationMeasure': */
struct ns2__LinearAccelerationMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LinearAccelerationUom' */
        enum ns2__LinearAccelerationUom uom;
};
#endif

/* testh.h:57838 */
#ifndef SOAP_TYPE_ns2__LinearAccelerationMeasureExt
#define SOAP_TYPE_ns2__LinearAccelerationMeasureExt (2021)
/* simple XML schema type 'ns2:LinearAccelerationMeasureExt': */
struct ns2__LinearAccelerationMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LinearAccelerationUomExt' */
        char *uom;
};
#endif

/* testh.h:57857 */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionMeasure
#define SOAP_TYPE_ns2__LinearThermalExpansionMeasure (2022)
/* simple XML schema type 'ns2:LinearThermalExpansionMeasure': */
struct ns2__LinearThermalExpansionMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LinearThermalExpansionUom' */
        enum ns2__LinearThermalExpansionUom uom;
};
#endif

/* testh.h:57876 */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionMeasureExt
#define SOAP_TYPE_ns2__LinearThermalExpansionMeasureExt (2023)
/* simple XML schema type 'ns2:LinearThermalExpansionMeasureExt': */
struct ns2__LinearThermalExpansionMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LinearThermalExpansionUomExt' */
        char *uom;
};
#endif

/* testh.h:57895 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioMeasure
#define SOAP_TYPE_ns2__LogarithmicPowerRatioMeasure (2024)
/* simple XML schema type 'ns2:LogarithmicPowerRatioMeasure': */
struct ns2__LogarithmicPowerRatioMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LogarithmicPowerRatioUom' */
        enum ns2__LogarithmicPowerRatioUom uom;
};
#endif

/* testh.h:57914 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioMeasureExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioMeasureExt (2025)
/* simple XML schema type 'ns2:LogarithmicPowerRatioMeasureExt': */
struct ns2__LogarithmicPowerRatioMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LogarithmicPowerRatioUomExt' */
        char *uom;
};
#endif

/* testh.h:57933 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasure
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasure (2026)
/* simple XML schema type 'ns2:LogarithmicPowerRatioPerLengthMeasure': */
struct ns2__LogarithmicPowerRatioPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LogarithmicPowerRatioPerLengthUom' */
        enum ns2__LogarithmicPowerRatioPerLengthUom uom;
};
#endif

/* testh.h:57952 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasureExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasureExt (2027)
/* simple XML schema type 'ns2:LogarithmicPowerRatioPerLengthMeasureExt': */
struct ns2__LogarithmicPowerRatioPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LogarithmicPowerRatioPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:57971 */
#ifndef SOAP_TYPE_ns2__LuminanceMeasure
#define SOAP_TYPE_ns2__LuminanceMeasure (2028)
/* simple XML schema type 'ns2:LuminanceMeasure': */
struct ns2__LuminanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminanceUom' */
        enum ns2__LuminanceUom uom;
};
#endif

/* testh.h:57990 */
#ifndef SOAP_TYPE_ns2__LuminanceMeasureExt
#define SOAP_TYPE_ns2__LuminanceMeasureExt (2029)
/* simple XML schema type 'ns2:LuminanceMeasureExt': */
struct ns2__LuminanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminanceUomExt' */
        char *uom;
};
#endif

/* testh.h:58009 */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyMeasure
#define SOAP_TYPE_ns2__LuminousEfficacyMeasure (2030)
/* simple XML schema type 'ns2:LuminousEfficacyMeasure': */
struct ns2__LuminousEfficacyMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousEfficacyUom' */
        enum ns2__LuminousEfficacyUom uom;
};
#endif

/* testh.h:58028 */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyMeasureExt
#define SOAP_TYPE_ns2__LuminousEfficacyMeasureExt (2031)
/* simple XML schema type 'ns2:LuminousEfficacyMeasureExt': */
struct ns2__LuminousEfficacyMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousEfficacyUomExt' */
        char *uom;
};
#endif

/* testh.h:58047 */
#ifndef SOAP_TYPE_ns2__LuminousFluxMeasure
#define SOAP_TYPE_ns2__LuminousFluxMeasure (2032)
/* simple XML schema type 'ns2:LuminousFluxMeasure': */
struct ns2__LuminousFluxMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousFluxUom' */
        enum ns2__LuminousFluxUom uom;
};
#endif

/* testh.h:58066 */
#ifndef SOAP_TYPE_ns2__LuminousFluxMeasureExt
#define SOAP_TYPE_ns2__LuminousFluxMeasureExt (2033)
/* simple XML schema type 'ns2:LuminousFluxMeasureExt': */
struct ns2__LuminousFluxMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousFluxUomExt' */
        char *uom;
};
#endif

/* testh.h:58085 */
#ifndef SOAP_TYPE_ns2__LuminousIntensityMeasure
#define SOAP_TYPE_ns2__LuminousIntensityMeasure (2034)
/* simple XML schema type 'ns2:LuminousIntensityMeasure': */
struct ns2__LuminousIntensityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousIntensityUom' */
        enum ns2__LuminousIntensityUom uom;
};
#endif

/* testh.h:58104 */
#ifndef SOAP_TYPE_ns2__LuminousIntensityMeasureExt
#define SOAP_TYPE_ns2__LuminousIntensityMeasureExt (2035)
/* simple XML schema type 'ns2:LuminousIntensityMeasureExt': */
struct ns2__LuminousIntensityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:LuminousIntensityUomExt' */
        char *uom;
};
#endif

/* testh.h:58123 */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentMeasure
#define SOAP_TYPE_ns2__MagneticDipoleMomentMeasure (2036)
/* simple XML schema type 'ns2:MagneticDipoleMomentMeasure': */
struct ns2__MagneticDipoleMomentMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticDipoleMomentUom' */
        enum ns2__MagneticDipoleMomentUom uom;
};
#endif

/* testh.h:58142 */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentMeasureExt
#define SOAP_TYPE_ns2__MagneticDipoleMomentMeasureExt (2037)
/* simple XML schema type 'ns2:MagneticDipoleMomentMeasureExt': */
struct ns2__MagneticDipoleMomentMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticDipoleMomentUomExt' */
        char *uom;
};
#endif

/* testh.h:58161 */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthMeasure
#define SOAP_TYPE_ns2__MagneticFieldStrengthMeasure (2038)
/* simple XML schema type 'ns2:MagneticFieldStrengthMeasure': */
struct ns2__MagneticFieldStrengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFieldStrengthUom' */
        enum ns2__MagneticFieldStrengthUom uom;
};
#endif

/* testh.h:58180 */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthMeasureExt
#define SOAP_TYPE_ns2__MagneticFieldStrengthMeasureExt (2039)
/* simple XML schema type 'ns2:MagneticFieldStrengthMeasureExt': */
struct ns2__MagneticFieldStrengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFieldStrengthUomExt' */
        char *uom;
};
#endif

/* testh.h:31578 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityMeasure
#define SOAP_TYPE_ns2__MagneticFluxDensityMeasure (1087)
/* simple XML schema type 'ns2:MagneticFluxDensityMeasure': */
struct ns2__MagneticFluxDensityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxDensityUom' */
        enum ns2__MagneticFluxDensityUom uom;
};
#endif

/* testh.h:58218 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxDensityMeasureExt (2040)
/* simple XML schema type 'ns2:MagneticFluxDensityMeasureExt': */
struct ns2__MagneticFluxDensityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxDensityUomExt' */
        char *uom;
};
#endif

/* testh.h:58237 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasure
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasure (2041)
/* simple XML schema type 'ns2:MagneticFluxDensityPerLengthMeasure': */
struct ns2__MagneticFluxDensityPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxDensityPerLengthUom' */
        enum ns2__MagneticFluxDensityPerLengthUom uom;
};
#endif

/* testh.h:58256 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasureExt (2042)
/* simple XML schema type 'ns2:MagneticFluxDensityPerLengthMeasureExt': */
struct ns2__MagneticFluxDensityPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxDensityPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:58275 */
#ifndef SOAP_TYPE_ns2__MagneticFluxMeasure
#define SOAP_TYPE_ns2__MagneticFluxMeasure (2043)
/* simple XML schema type 'ns2:MagneticFluxMeasure': */
struct ns2__MagneticFluxMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxUom' */
        enum ns2__MagneticFluxUom uom;
};
#endif

/* testh.h:58294 */
#ifndef SOAP_TYPE_ns2__MagneticFluxMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxMeasureExt (2044)
/* simple XML schema type 'ns2:MagneticFluxMeasureExt': */
struct ns2__MagneticFluxMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticFluxUomExt' */
        char *uom;
};
#endif

/* testh.h:58313 */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityMeasure
#define SOAP_TYPE_ns2__MagneticPermeabilityMeasure (2045)
/* simple XML schema type 'ns2:MagneticPermeabilityMeasure': */
struct ns2__MagneticPermeabilityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticPermeabilityUom' */
        enum ns2__MagneticPermeabilityUom uom;
};
#endif

/* testh.h:58332 */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityMeasureExt
#define SOAP_TYPE_ns2__MagneticPermeabilityMeasureExt (2046)
/* simple XML schema type 'ns2:MagneticPermeabilityMeasureExt': */
struct ns2__MagneticPermeabilityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticPermeabilityUomExt' */
        char *uom;
};
#endif

/* testh.h:58351 */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialMeasure
#define SOAP_TYPE_ns2__MagneticVectorPotentialMeasure (2047)
/* simple XML schema type 'ns2:MagneticVectorPotentialMeasure': */
struct ns2__MagneticVectorPotentialMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticVectorPotentialUom' */
        enum ns2__MagneticVectorPotentialUom uom;
};
#endif

/* testh.h:58370 */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialMeasureExt
#define SOAP_TYPE_ns2__MagneticVectorPotentialMeasureExt (2048)
/* simple XML schema type 'ns2:MagneticVectorPotentialMeasureExt': */
struct ns2__MagneticVectorPotentialMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MagneticVectorPotentialUomExt' */
        char *uom;
};
#endif

/* testh.h:58389 */
#ifndef SOAP_TYPE_ns2__MassLengthMeasure
#define SOAP_TYPE_ns2__MassLengthMeasure (2049)
/* simple XML schema type 'ns2:MassLengthMeasure': */
struct ns2__MassLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassLengthUom' */
        enum ns2__MassLengthUom uom;
};
#endif

/* testh.h:58408 */
#ifndef SOAP_TYPE_ns2__MassLengthMeasureExt
#define SOAP_TYPE_ns2__MassLengthMeasureExt (2050)
/* simple XML schema type 'ns2:MassLengthMeasureExt': */
struct ns2__MassLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:21274 */
#ifndef SOAP_TYPE_ns2__MassMeasure
#define SOAP_TYPE_ns2__MassMeasure (715)
/* simple XML schema type 'ns2:MassMeasure': */
struct ns2__MassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassUom' */
        enum ns2__MassUom uom;
};
#endif

/* testh.h:22614 */
#ifndef SOAP_TYPE_ns2__MassMeasureExt
#define SOAP_TYPE_ns2__MassMeasureExt (774)
/* simple XML schema type 'ns2:MassMeasureExt': */
struct ns2__MassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassUomExt' */
        char *uom;
};
#endif

/* testh.h:58465 */
#ifndef SOAP_TYPE_ns2__MassPerAreaMeasure
#define SOAP_TYPE_ns2__MassPerAreaMeasure (2051)
/* simple XML schema type 'ns2:MassPerAreaMeasure': */
struct ns2__MassPerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerAreaUom' */
        enum ns2__MassPerAreaUom uom;
};
#endif

/* testh.h:58484 */
#ifndef SOAP_TYPE_ns2__MassPerAreaMeasureExt
#define SOAP_TYPE_ns2__MassPerAreaMeasureExt (2052)
/* simple XML schema type 'ns2:MassPerAreaMeasureExt': */
struct ns2__MassPerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:58503 */
#ifndef SOAP_TYPE_ns2__MassPerEnergyMeasure
#define SOAP_TYPE_ns2__MassPerEnergyMeasure (2053)
/* simple XML schema type 'ns2:MassPerEnergyMeasure': */
struct ns2__MassPerEnergyMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerEnergyUom' */
        enum ns2__MassPerEnergyUom uom;
};
#endif

/* testh.h:58522 */
#ifndef SOAP_TYPE_ns2__MassPerEnergyMeasureExt
#define SOAP_TYPE_ns2__MassPerEnergyMeasureExt (2054)
/* simple XML schema type 'ns2:MassPerEnergyMeasureExt': */
struct ns2__MassPerEnergyMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerEnergyUomExt' */
        char *uom;
};
#endif

/* testh.h:22692 */
#ifndef SOAP_TYPE_ns2__MassPerLengthMeasure
#define SOAP_TYPE_ns2__MassPerLengthMeasure (778)
/* simple XML schema type 'ns2:MassPerLengthMeasure': */
struct ns2__MassPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerLengthUom' */
        enum ns2__MassPerLengthUom uom;
};
#endif

/* testh.h:58560 */
#ifndef SOAP_TYPE_ns2__MassPerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerLengthMeasureExt (2055)
/* simple XML schema type 'ns2:MassPerLengthMeasureExt': */
struct ns2__MassPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:21196 */
#ifndef SOAP_TYPE_ns2__MassPerMassMeasure
#define SOAP_TYPE_ns2__MassPerMassMeasure (713)
/* simple XML schema type 'ns2:MassPerMassMeasure': */
struct ns2__MassPerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerMassUom' */
        enum ns2__MassPerMassUom uom;
};
#endif

/* testh.h:58598 */
#ifndef SOAP_TYPE_ns2__MassPerMassMeasureExt
#define SOAP_TYPE_ns2__MassPerMassMeasureExt (2056)
/* simple XML schema type 'ns2:MassPerMassMeasureExt': */
struct ns2__MassPerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:34013 */
#ifndef SOAP_TYPE_ns2__MassPerTimeMeasure
#define SOAP_TYPE_ns2__MassPerTimeMeasure (1187)
/* simple XML schema type 'ns2:MassPerTimeMeasure': */
struct ns2__MassPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimeUom' */
        enum ns2__MassPerTimeUom uom;
};
#endif

/* testh.h:58636 */
#ifndef SOAP_TYPE_ns2__MassPerTimeMeasureExt
#define SOAP_TYPE_ns2__MassPerTimeMeasureExt (2057)
/* simple XML schema type 'ns2:MassPerTimeMeasureExt': */
struct ns2__MassPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:58655 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaMeasure
#define SOAP_TYPE_ns2__MassPerTimePerAreaMeasure (2058)
/* simple XML schema type 'ns2:MassPerTimePerAreaMeasure': */
struct ns2__MassPerTimePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimePerAreaUom' */
        enum ns2__MassPerTimePerAreaUom uom;
};
#endif

/* testh.h:58674 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__MassPerTimePerAreaMeasureExt (2059)
/* simple XML schema type 'ns2:MassPerTimePerAreaMeasureExt': */
struct ns2__MassPerTimePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:58693 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthMeasure
#define SOAP_TYPE_ns2__MassPerTimePerLengthMeasure (2060)
/* simple XML schema type 'ns2:MassPerTimePerLengthMeasure': */
struct ns2__MassPerTimePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimePerLengthUom' */
        enum ns2__MassPerTimePerLengthUom uom;
};
#endif

/* testh.h:58712 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerTimePerLengthMeasureExt (2061)
/* simple XML schema type 'ns2:MassPerTimePerLengthMeasureExt': */
struct ns2__MassPerTimePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerTimePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:20559 */
#ifndef SOAP_TYPE_ns2__MassPerVolumeMeasure
#define SOAP_TYPE_ns2__MassPerVolumeMeasure (672)
/* simple XML schema type 'ns2:MassPerVolumeMeasure': */
struct ns2__MassPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumeUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:58750 */
#ifndef SOAP_TYPE_ns2__MassPerVolumeMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumeMeasureExt (2062)
/* simple XML schema type 'ns2:MassPerVolumeMeasureExt': */
struct ns2__MassPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:58769 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerLengthMeasure (2063)
/* simple XML schema type 'ns2:MassPerVolumePerLengthMeasure': */
struct ns2__MassPerVolumePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerLengthUom' */
        enum ns2__MassPerVolumePerLengthUom uom;
};
#endif

/* testh.h:58788 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerLengthMeasureExt (2064)
/* simple XML schema type 'ns2:MassPerVolumePerLengthMeasureExt': */
struct ns2__MassPerVolumePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:58807 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerPressureMeasure (2065)
/* simple XML schema type 'ns2:MassPerVolumePerPressureMeasure': */
struct ns2__MassPerVolumePerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerPressureUom' */
        enum ns2__MassPerVolumePerPressureUom uom;
};
#endif

/* testh.h:58826 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerPressureMeasureExt (2066)
/* simple XML schema type 'ns2:MassPerVolumePerPressureMeasureExt': */
struct ns2__MassPerVolumePerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:58845 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasure (2067)
/* simple XML schema type 'ns2:MassPerVolumePerTemperatureMeasure': */
struct ns2__MassPerVolumePerTemperatureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerTemperatureUom' */
        enum ns2__MassPerVolumePerTemperatureUom uom;
};
#endif

/* testh.h:58864 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasureExt (2068)
/* simple XML schema type 'ns2:MassPerVolumePerTemperatureMeasureExt': */
struct ns2__MassPerVolumePerTemperatureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MassPerVolumePerTemperatureUomExt' */
        char *uom;
};
#endif

/* testh.h:58883 */
#ifndef SOAP_TYPE_ns2__MobilityMeasure
#define SOAP_TYPE_ns2__MobilityMeasure (2069)
/* simple XML schema type 'ns2:MobilityMeasure': */
struct ns2__MobilityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MobilityUom' */
        enum ns2__MobilityUom uom;
};
#endif

/* testh.h:58902 */
#ifndef SOAP_TYPE_ns2__MobilityMeasureExt
#define SOAP_TYPE_ns2__MobilityMeasureExt (2070)
/* simple XML schema type 'ns2:MobilityMeasureExt': */
struct ns2__MobilityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MobilityUomExt' */
        char *uom;
};
#endif

/* testh.h:58921 */
#ifndef SOAP_TYPE_ns2__MolarEnergyMeasure
#define SOAP_TYPE_ns2__MolarEnergyMeasure (2071)
/* simple XML schema type 'ns2:MolarEnergyMeasure': */
struct ns2__MolarEnergyMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarEnergyUom' */
        enum ns2__MolarEnergyUom uom;
};
#endif

/* testh.h:58940 */
#ifndef SOAP_TYPE_ns2__MolarEnergyMeasureExt
#define SOAP_TYPE_ns2__MolarEnergyMeasureExt (2072)
/* simple XML schema type 'ns2:MolarEnergyMeasureExt': */
struct ns2__MolarEnergyMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarEnergyUomExt' */
        char *uom;
};
#endif

/* testh.h:58959 */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityMeasure
#define SOAP_TYPE_ns2__MolarHeatCapacityMeasure (2073)
/* simple XML schema type 'ns2:MolarHeatCapacityMeasure': */
struct ns2__MolarHeatCapacityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarHeatCapacityUom' */
        enum ns2__MolarHeatCapacityUom uom;
};
#endif

/* testh.h:58978 */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityMeasureExt
#define SOAP_TYPE_ns2__MolarHeatCapacityMeasureExt (2074)
/* simple XML schema type 'ns2:MolarHeatCapacityMeasureExt': */
struct ns2__MolarHeatCapacityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarHeatCapacityUomExt' */
        char *uom;
};
#endif

/* testh.h:58997 */
#ifndef SOAP_TYPE_ns2__MolarVolumeMeasure
#define SOAP_TYPE_ns2__MolarVolumeMeasure (2075)
/* simple XML schema type 'ns2:MolarVolumeMeasure': */
struct ns2__MolarVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarVolumeUom' */
        enum ns2__MolarVolumeUom uom;
};
#endif

/* testh.h:59016 */
#ifndef SOAP_TYPE_ns2__MolarVolumeMeasureExt
#define SOAP_TYPE_ns2__MolarVolumeMeasureExt (2076)
/* simple XML schema type 'ns2:MolarVolumeMeasureExt': */
struct ns2__MolarVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolarVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:59035 */
#ifndef SOAP_TYPE_ns2__MolecularWeightMeasure
#define SOAP_TYPE_ns2__MolecularWeightMeasure (2077)
/* simple XML schema type 'ns2:MolecularWeightMeasure': */
struct ns2__MolecularWeightMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolecularWeightUom' */
        enum ns2__MolecularWeightUom uom;
};
#endif

/* testh.h:59054 */
#ifndef SOAP_TYPE_ns2__MolecularWeightMeasureExt
#define SOAP_TYPE_ns2__MolecularWeightMeasureExt (2078)
/* simple XML schema type 'ns2:MolecularWeightMeasureExt': */
struct ns2__MolecularWeightMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MolecularWeightUomExt' */
        char *uom;
};
#endif

/* testh.h:20517 */
#ifndef SOAP_TYPE_ns2__MomentOfForceMeasure
#define SOAP_TYPE_ns2__MomentOfForceMeasure (670)
/* simple XML schema type 'ns2:MomentOfForceMeasure': */
struct ns2__MomentOfForceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentOfForceUom' */
        enum ns2__MomentOfForceUom uom;
};
#endif

/* testh.h:59092 */
#ifndef SOAP_TYPE_ns2__MomentOfForceMeasureExt
#define SOAP_TYPE_ns2__MomentOfForceMeasureExt (2079)
/* simple XML schema type 'ns2:MomentOfForceMeasureExt': */
struct ns2__MomentOfForceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentOfForceUomExt' */
        char *uom;
};
#endif

/* testh.h:59111 */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaMeasure
#define SOAP_TYPE_ns2__MomentOfInertiaMeasure (2080)
/* simple XML schema type 'ns2:MomentOfInertiaMeasure': */
struct ns2__MomentOfInertiaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentOfInertiaUom' */
        enum ns2__MomentOfInertiaUom uom;
};
#endif

/* testh.h:59130 */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaMeasureExt
#define SOAP_TYPE_ns2__MomentOfInertiaMeasureExt (2081)
/* simple XML schema type 'ns2:MomentOfInertiaMeasureExt': */
struct ns2__MomentOfInertiaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentOfInertiaUomExt' */
        char *uom;
};
#endif

/* testh.h:59149 */
#ifndef SOAP_TYPE_ns2__MomentumMeasure
#define SOAP_TYPE_ns2__MomentumMeasure (2082)
/* simple XML schema type 'ns2:MomentumMeasure': */
struct ns2__MomentumMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentumUom' */
        enum ns2__MomentumUom uom;
};
#endif

/* testh.h:59168 */
#ifndef SOAP_TYPE_ns2__MomentumMeasureExt
#define SOAP_TYPE_ns2__MomentumMeasureExt (2083)
/* simple XML schema type 'ns2:MomentumMeasureExt': */
struct ns2__MomentumMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:MomentumUomExt' */
        char *uom;
};
#endif

/* testh.h:59187 */
#ifndef SOAP_TYPE_ns2__NormalizedPowerMeasure
#define SOAP_TYPE_ns2__NormalizedPowerMeasure (2084)
/* simple XML schema type 'ns2:NormalizedPowerMeasure': */
struct ns2__NormalizedPowerMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:NormalizedPowerUom' */
        enum ns2__NormalizedPowerUom uom;
};
#endif

/* testh.h:59206 */
#ifndef SOAP_TYPE_ns2__NormalizedPowerMeasureExt
#define SOAP_TYPE_ns2__NormalizedPowerMeasureExt (2085)
/* simple XML schema type 'ns2:NormalizedPowerMeasureExt': */
struct ns2__NormalizedPowerMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:NormalizedPowerUomExt' */
        char *uom;
};
#endif

/* testh.h:33074 */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthMeasure
#define SOAP_TYPE_ns2__PermeabilityLengthMeasure (1154)
/* simple XML schema type 'ns2:PermeabilityLengthMeasure': */
struct ns2__PermeabilityLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermeabilityLengthUom' */
        enum ns2__PermeabilityLengthUom uom;
};
#endif

/* testh.h:59244 */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthMeasureExt
#define SOAP_TYPE_ns2__PermeabilityLengthMeasureExt (2086)
/* simple XML schema type 'ns2:PermeabilityLengthMeasureExt': */
struct ns2__PermeabilityLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermeabilityLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:32723 */
#ifndef SOAP_TYPE_ns2__PermeabilityRockMeasure
#define SOAP_TYPE_ns2__PermeabilityRockMeasure (1137)
/* simple XML schema type 'ns2:PermeabilityRockMeasure': */
struct ns2__PermeabilityRockMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermeabilityRockUom' */
        enum ns2__PermeabilityRockUom uom;
};
#endif

/* testh.h:59282 */
#ifndef SOAP_TYPE_ns2__PermeabilityRockMeasureExt
#define SOAP_TYPE_ns2__PermeabilityRockMeasureExt (2087)
/* simple XML schema type 'ns2:PermeabilityRockMeasureExt': */
struct ns2__PermeabilityRockMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermeabilityRockUomExt' */
        char *uom;
};
#endif

/* testh.h:59301 */
#ifndef SOAP_TYPE_ns2__PermittivityMeasure
#define SOAP_TYPE_ns2__PermittivityMeasure (2088)
/* simple XML schema type 'ns2:PermittivityMeasure': */
struct ns2__PermittivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermittivityUom' */
        enum ns2__PermittivityUom uom;
};
#endif

/* testh.h:59320 */
#ifndef SOAP_TYPE_ns2__PermittivityMeasureExt
#define SOAP_TYPE_ns2__PermittivityMeasureExt (2089)
/* simple XML schema type 'ns2:PermittivityMeasureExt': */
struct ns2__PermittivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PermittivityUomExt' */
        char *uom;
};
#endif

/* testh.h:20745 */
#ifndef SOAP_TYPE_ns2__PlaneAngleMeasure
#define SOAP_TYPE_ns2__PlaneAngleMeasure (686)
/* simple XML schema type 'ns2:PlaneAngleMeasure': */
struct ns2__PlaneAngleMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PlaneAngleUom' */
        enum ns2__PlaneAngleUom uom;
};
#endif

/* testh.h:28696 */
#ifndef SOAP_TYPE_ns2__PlaneAngleMeasureExt
#define SOAP_TYPE_ns2__PlaneAngleMeasureExt (1005)
/* simple XML schema type 'ns2:PlaneAngleMeasureExt': */
struct ns2__PlaneAngleMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PlaneAngleUomExt' */
        char *uom;
};
#endif

/* testh.h:59377 */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasure
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasure (2090)
/* simple XML schema type 'ns2:PotentialDifferencePerPowerDropMeasure': */
struct ns2__PotentialDifferencePerPowerDropMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PotentialDifferencePerPowerDropUom' */
        enum ns2__PotentialDifferencePerPowerDropUom uom;
};
#endif

/* testh.h:59396 */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasureExt
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasureExt (2091)
/* simple XML schema type 'ns2:PotentialDifferencePerPowerDropMeasureExt': */
struct ns2__PotentialDifferencePerPowerDropMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PotentialDifferencePerPowerDropUomExt' */
        char *uom;
};
#endif

/* testh.h:20589 */
#ifndef SOAP_TYPE_ns2__PowerMeasure
#define SOAP_TYPE_ns2__PowerMeasure (678)
/* simple XML schema type 'ns2:PowerMeasure': */
struct ns2__PowerMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerUom' */
        enum ns2__PowerUom uom;
};
#endif

/* testh.h:59434 */
#ifndef SOAP_TYPE_ns2__PowerMeasureExt
#define SOAP_TYPE_ns2__PowerMeasureExt (2092)
/* simple XML schema type 'ns2:PowerMeasureExt': */
struct ns2__PowerMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerUomExt' */
        char *uom;
};
#endif

/* testh.h:59453 */
#ifndef SOAP_TYPE_ns2__PowerPerAreaMeasure
#define SOAP_TYPE_ns2__PowerPerAreaMeasure (2093)
/* simple XML schema type 'ns2:PowerPerAreaMeasure': */
struct ns2__PowerPerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerAreaUom' */
        enum ns2__PowerPerAreaUom uom;
};
#endif

/* testh.h:59472 */
#ifndef SOAP_TYPE_ns2__PowerPerAreaMeasureExt
#define SOAP_TYPE_ns2__PowerPerAreaMeasureExt (2094)
/* simple XML schema type 'ns2:PowerPerAreaMeasureExt': */
struct ns2__PowerPerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:29727 */
#ifndef SOAP_TYPE_ns2__PowerPerPowerMeasure
#define SOAP_TYPE_ns2__PowerPerPowerMeasure (1026)
/* simple XML schema type 'ns2:PowerPerPowerMeasure': */
struct ns2__PowerPerPowerMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerPowerUom' */
        enum ns2__PowerPerPowerUom uom;
};
#endif

/* testh.h:59510 */
#ifndef SOAP_TYPE_ns2__PowerPerPowerMeasureExt
#define SOAP_TYPE_ns2__PowerPerPowerMeasureExt (2095)
/* simple XML schema type 'ns2:PowerPerPowerMeasureExt': */
struct ns2__PowerPerPowerMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerPowerUomExt' */
        char *uom;
};
#endif

/* testh.h:59529 */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeMeasure
#define SOAP_TYPE_ns2__PowerPerVolumeMeasure (2096)
/* simple XML schema type 'ns2:PowerPerVolumeMeasure': */
struct ns2__PowerPerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerVolumeUom' */
        enum ns2__PowerPerVolumeUom uom;
};
#endif

/* testh.h:59548 */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeMeasureExt
#define SOAP_TYPE_ns2__PowerPerVolumeMeasureExt (2097)
/* simple XML schema type 'ns2:PowerPerVolumeMeasureExt': */
struct ns2__PowerPerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PowerPerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:20595 */
#ifndef SOAP_TYPE_ns2__PressureMeasure
#define SOAP_TYPE_ns2__PressureMeasure (680)
/* simple XML schema type 'ns2:PressureMeasure': */
struct ns2__PressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:20950 */
#ifndef SOAP_TYPE_ns2__PressureMeasureExt
#define SOAP_TYPE_ns2__PressureMeasureExt (704)
/* simple XML schema type 'ns2:PressureMeasureExt': */
struct ns2__PressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureUomExt' */
        char *uom;
};
#endif

/* testh.h:59609 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateMeasure
#define SOAP_TYPE_ns2__PressurePerFlowrateMeasure (2098)
/* simple XML schema type 'ns2:PressurePerFlowrateMeasure': */
struct ns2__PressurePerFlowrateMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerFlowrateUom' */
        enum ns2__PressurePerFlowrateUom uom;
};
#endif

/* testh.h:59632 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateMeasureExt
#define SOAP_TYPE_ns2__PressurePerFlowrateMeasureExt (2099)
/* simple XML schema type 'ns2:PressurePerFlowrateMeasureExt': */
struct ns2__PressurePerFlowrateMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Optional attribute 'uom' of XML schema type 'ns2:PressurePerFlowrateUomExt' */
        char *uom;
};
#endif

/* testh.h:59655 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasure
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasure (2100)
/* simple XML schema type 'ns2:PressurePerFlowrateSquaredMeasure': */
struct ns2__PressurePerFlowrateSquaredMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerFlowrateSquaredUom' */
        enum ns2__PressurePerFlowrateSquaredUom uom;
};
#endif

/* testh.h:59678 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasureExt
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasureExt (2101)
/* simple XML schema type 'ns2:PressurePerFlowrateSquaredMeasureExt': */
struct ns2__PressurePerFlowrateSquaredMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Optional attribute 'uom' of XML schema type 'ns2:PressurePerFlowrateSquaredUomExt' */
        char *uom;
};
#endif

/* testh.h:59697 */
#ifndef SOAP_TYPE_ns2__PressurePerPressureMeasure
#define SOAP_TYPE_ns2__PressurePerPressureMeasure (2102)
/* simple XML schema type 'ns2:PressurePerPressureMeasure': */
struct ns2__PressurePerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerPressureUom' */
        enum ns2__PressurePerPressureUom uom;
};
#endif

/* testh.h:59716 */
#ifndef SOAP_TYPE_ns2__PressurePerPressureMeasureExt
#define SOAP_TYPE_ns2__PressurePerPressureMeasureExt (2103)
/* simple XML schema type 'ns2:PressurePerPressureMeasureExt': */
struct ns2__PressurePerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:59735 */
#ifndef SOAP_TYPE_ns2__PressurePerTimeMeasure
#define SOAP_TYPE_ns2__PressurePerTimeMeasure (2104)
/* simple XML schema type 'ns2:PressurePerTimeMeasure': */
struct ns2__PressurePerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerTimeUom' */
        enum ns2__PressurePerTimeUom uom;
};
#endif

/* testh.h:59754 */
#ifndef SOAP_TYPE_ns2__PressurePerTimeMeasureExt
#define SOAP_TYPE_ns2__PressurePerTimeMeasureExt (2105)
/* simple XML schema type 'ns2:PressurePerTimeMeasureExt': */
struct ns2__PressurePerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:59773 */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeMeasure
#define SOAP_TYPE_ns2__PressurePerVolumeMeasure (2106)
/* simple XML schema type 'ns2:PressurePerVolumeMeasure': */
struct ns2__PressurePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerVolumeUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:59792 */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeMeasureExt
#define SOAP_TYPE_ns2__PressurePerVolumeMeasureExt (2107)
/* simple XML schema type 'ns2:PressurePerVolumeMeasureExt': */
struct ns2__PressurePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressurePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:59811 */
#ifndef SOAP_TYPE_ns2__PressureSquaredMeasure
#define SOAP_TYPE_ns2__PressureSquaredMeasure (2108)
/* simple XML schema type 'ns2:PressureSquaredMeasure': */
struct ns2__PressureSquaredMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureSquaredUom' */
        enum ns2__PressureSquaredUom uom;
};
#endif

/* testh.h:59830 */
#ifndef SOAP_TYPE_ns2__PressureSquaredMeasureExt
#define SOAP_TYPE_ns2__PressureSquaredMeasureExt (2109)
/* simple XML schema type 'ns2:PressureSquaredMeasureExt': */
struct ns2__PressureSquaredMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureSquaredUomExt' */
        char *uom;
};
#endif

/* testh.h:59849 */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasure
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasure (2110)
/* simple XML schema type 'ns2:PressureSquaredPerForceTimePerAreaMeasure': */
struct ns2__PressureSquaredPerForceTimePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureSquaredPerForceTimePerAreaUom' */
        enum ns2__PressureSquaredPerForceTimePerAreaUom uom;
};
#endif

/* testh.h:59868 */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasureExt (2111)
/* simple XML schema type 'ns2:PressureSquaredPerForceTimePerAreaMeasureExt': */
struct ns2__PressureSquaredPerForceTimePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureSquaredPerForceTimePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:59887 */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeMeasure
#define SOAP_TYPE_ns2__PressureTimePerVolumeMeasure (2112)
/* simple XML schema type 'ns2:PressureTimePerVolumeMeasure': */
struct ns2__PressureTimePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureTimePerVolumeUom' */
        enum ns2__PressureTimePerVolumeUom uom;
};
#endif

/* testh.h:59906 */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__PressureTimePerVolumeMeasureExt (2113)
/* simple XML schema type 'ns2:PressureTimePerVolumeMeasureExt': */
struct ns2__PressureTimePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureTimePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:59925 */
#ifndef SOAP_TYPE_ns2__QuantityOfLightMeasure
#define SOAP_TYPE_ns2__QuantityOfLightMeasure (2114)
/* simple XML schema type 'ns2:QuantityOfLightMeasure': */
struct ns2__QuantityOfLightMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:QuantityOfLightUom' */
        enum ns2__QuantityOfLightUom uom;
};
#endif

/* testh.h:59944 */
#ifndef SOAP_TYPE_ns2__QuantityOfLightMeasureExt
#define SOAP_TYPE_ns2__QuantityOfLightMeasureExt (2115)
/* simple XML schema type 'ns2:QuantityOfLightMeasureExt': */
struct ns2__QuantityOfLightMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:QuantityOfLightUomExt' */
        char *uom;
};
#endif

/* testh.h:59963 */
#ifndef SOAP_TYPE_ns2__RadianceMeasure
#define SOAP_TYPE_ns2__RadianceMeasure (2116)
/* simple XML schema type 'ns2:RadianceMeasure': */
struct ns2__RadianceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:RadianceUom' */
        enum ns2__RadianceUom uom;
};
#endif

/* testh.h:59982 */
#ifndef SOAP_TYPE_ns2__RadianceMeasureExt
#define SOAP_TYPE_ns2__RadianceMeasureExt (2117)
/* simple XML schema type 'ns2:RadianceMeasureExt': */
struct ns2__RadianceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:RadianceUomExt' */
        char *uom;
};
#endif

/* testh.h:60001 */
#ifndef SOAP_TYPE_ns2__RadiantIntensityMeasure
#define SOAP_TYPE_ns2__RadiantIntensityMeasure (2118)
/* simple XML schema type 'ns2:RadiantIntensityMeasure': */
struct ns2__RadiantIntensityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:RadiantIntensityUom' */
        enum ns2__RadiantIntensityUom uom;
};
#endif

/* testh.h:60020 */
#ifndef SOAP_TYPE_ns2__RadiantIntensityMeasureExt
#define SOAP_TYPE_ns2__RadiantIntensityMeasureExt (2119)
/* simple XML schema type 'ns2:RadiantIntensityMeasureExt': */
struct ns2__RadiantIntensityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:RadiantIntensityUomExt' */
        char *uom;
};
#endif

/* testh.h:60039 */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaMeasure
#define SOAP_TYPE_ns2__ReciprocalAreaMeasure (2120)
/* simple XML schema type 'ns2:ReciprocalAreaMeasure': */
struct ns2__ReciprocalAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalAreaUom' */
        enum ns2__ReciprocalAreaUom uom;
};
#endif

/* testh.h:60058 */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaMeasureExt
#define SOAP_TYPE_ns2__ReciprocalAreaMeasureExt (2121)
/* simple XML schema type 'ns2:ReciprocalAreaMeasureExt': */
struct ns2__ReciprocalAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:60077 */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasure
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasure (2122)
/* simple XML schema type 'ns2:ReciprocalElectricPotentialDifferenceMeasure': */
struct ns2__ReciprocalElectricPotentialDifferenceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalElectricPotentialDifferenceUom' */
        enum ns2__ReciprocalElectricPotentialDifferenceUom uom;
};
#endif

/* testh.h:60096 */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasureExt
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasureExt (2123)
/* simple XML schema type 'ns2:ReciprocalElectricPotentialDifferenceMeasureExt': */
struct ns2__ReciprocalElectricPotentialDifferenceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalElectricPotentialDifferenceUomExt' */
        char *uom;
};
#endif

/* testh.h:60115 */
#ifndef SOAP_TYPE_ns2__ReciprocalForceMeasure
#define SOAP_TYPE_ns2__ReciprocalForceMeasure (2124)
/* simple XML schema type 'ns2:ReciprocalForceMeasure': */
struct ns2__ReciprocalForceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalForceUom' */
        enum ns2__ReciprocalForceUom uom;
};
#endif

/* testh.h:60134 */
#ifndef SOAP_TYPE_ns2__ReciprocalForceMeasureExt
#define SOAP_TYPE_ns2__ReciprocalForceMeasureExt (2125)
/* simple XML schema type 'ns2:ReciprocalForceMeasureExt': */
struct ns2__ReciprocalForceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalForceUomExt' */
        char *uom;
};
#endif

/* testh.h:26200 */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthMeasure
#define SOAP_TYPE_ns2__ReciprocalLengthMeasure (920)
/* simple XML schema type 'ns2:ReciprocalLengthMeasure': */
struct ns2__ReciprocalLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalLengthUom' */
        enum ns2__ReciprocalLengthUom uom;
};
#endif

/* testh.h:60172 */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthMeasureExt
#define SOAP_TYPE_ns2__ReciprocalLengthMeasureExt (2126)
/* simple XML schema type 'ns2:ReciprocalLengthMeasureExt': */
struct ns2__ReciprocalLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:60191 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassMeasure
#define SOAP_TYPE_ns2__ReciprocalMassMeasure (2127)
/* simple XML schema type 'ns2:ReciprocalMassMeasure': */
struct ns2__ReciprocalMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalMassUom' */
        enum ns2__ReciprocalMassUom uom;
};
#endif

/* testh.h:60210 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassMeasureExt
#define SOAP_TYPE_ns2__ReciprocalMassMeasureExt (2128)
/* simple XML schema type 'ns2:ReciprocalMassMeasureExt': */
struct ns2__ReciprocalMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalMassUomExt' */
        char *uom;
};
#endif

/* testh.h:60229 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeMeasure
#define SOAP_TYPE_ns2__ReciprocalMassTimeMeasure (2129)
/* simple XML schema type 'ns2:ReciprocalMassTimeMeasure': */
struct ns2__ReciprocalMassTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalMassTimeUom' */
        enum ns2__ReciprocalMassTimeUom uom;
};
#endif

/* testh.h:60248 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalMassTimeMeasureExt (2130)
/* simple XML schema type 'ns2:ReciprocalMassTimeMeasureExt': */
struct ns2__ReciprocalMassTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalMassTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:60267 */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureMeasure
#define SOAP_TYPE_ns2__ReciprocalPressureMeasure (2131)
/* simple XML schema type 'ns2:ReciprocalPressureMeasure': */
struct ns2__ReciprocalPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalPressureUom' */
        enum ns2__ReciprocalPressureUom uom;
};
#endif

/* testh.h:60286 */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureMeasureExt
#define SOAP_TYPE_ns2__ReciprocalPressureMeasureExt (2132)
/* simple XML schema type 'ns2:ReciprocalPressureMeasureExt': */
struct ns2__ReciprocalPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:60305 */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeMeasure
#define SOAP_TYPE_ns2__ReciprocalTimeMeasure (2133)
/* simple XML schema type 'ns2:ReciprocalTimeMeasure': */
struct ns2__ReciprocalTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalTimeUom' */
        enum ns2__ReciprocalTimeUom uom;
};
#endif

/* testh.h:60324 */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalTimeMeasureExt (2134)
/* simple XML schema type 'ns2:ReciprocalTimeMeasureExt': */
struct ns2__ReciprocalTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:60343 */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeMeasure
#define SOAP_TYPE_ns2__ReciprocalVolumeMeasure (2135)
/* simple XML schema type 'ns2:ReciprocalVolumeMeasure': */
struct ns2__ReciprocalVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalVolumeUom' */
        enum ns2__ReciprocalVolumeUom uom;
};
#endif

/* testh.h:60362 */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalVolumeMeasureExt (2136)
/* simple XML schema type 'ns2:ReciprocalVolumeMeasureExt': */
struct ns2__ReciprocalVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReciprocalVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:60381 */
#ifndef SOAP_TYPE_ns2__ReluctanceMeasure
#define SOAP_TYPE_ns2__ReluctanceMeasure (2137)
/* simple XML schema type 'ns2:ReluctanceMeasure': */
struct ns2__ReluctanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReluctanceUom' */
        enum ns2__ReluctanceUom uom;
};
#endif

/* testh.h:60400 */
#ifndef SOAP_TYPE_ns2__ReluctanceMeasureExt
#define SOAP_TYPE_ns2__ReluctanceMeasureExt (2138)
/* simple XML schema type 'ns2:ReluctanceMeasureExt': */
struct ns2__ReluctanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ReluctanceUomExt' */
        char *uom;
};
#endif

/* testh.h:60419 */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaMeasure
#define SOAP_TYPE_ns2__SecondMomentOfAreaMeasure (2139)
/* simple XML schema type 'ns2:SecondMomentOfAreaMeasure': */
struct ns2__SecondMomentOfAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SecondMomentOfAreaUom' */
        enum ns2__SecondMomentOfAreaUom uom;
};
#endif

/* testh.h:60438 */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaMeasureExt
#define SOAP_TYPE_ns2__SecondMomentOfAreaMeasureExt (2140)
/* simple XML schema type 'ns2:SecondMomentOfAreaMeasureExt': */
struct ns2__SecondMomentOfAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SecondMomentOfAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:60457 */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeMeasure
#define SOAP_TYPE_ns2__SignalingEventPerTimeMeasure (2141)
/* simple XML schema type 'ns2:SignalingEventPerTimeMeasure': */
struct ns2__SignalingEventPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SignalingEventPerTimeUom' */
        enum ns2__SignalingEventPerTimeUom uom;
};
#endif

/* testh.h:60476 */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeMeasureExt
#define SOAP_TYPE_ns2__SignalingEventPerTimeMeasureExt (2142)
/* simple XML schema type 'ns2:SignalingEventPerTimeMeasureExt': */
struct ns2__SignalingEventPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SignalingEventPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:60495 */
#ifndef SOAP_TYPE_ns2__SolidAngleMeasure
#define SOAP_TYPE_ns2__SolidAngleMeasure (2143)
/* simple XML schema type 'ns2:SolidAngleMeasure': */
struct ns2__SolidAngleMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SolidAngleUom' */
        enum ns2__SolidAngleUom uom;
};
#endif

/* testh.h:60514 */
#ifndef SOAP_TYPE_ns2__SolidAngleMeasureExt
#define SOAP_TYPE_ns2__SolidAngleMeasureExt (2144)
/* simple XML schema type 'ns2:SolidAngleMeasureExt': */
struct ns2__SolidAngleMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SolidAngleUomExt' */
        char *uom;
};
#endif

/* testh.h:33307 */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityMeasure
#define SOAP_TYPE_ns2__SpecificHeatCapacityMeasure (1160)
/* simple XML schema type 'ns2:SpecificHeatCapacityMeasure': */
struct ns2__SpecificHeatCapacityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SpecificHeatCapacityUom' */
        enum ns2__SpecificHeatCapacityUom uom;
};
#endif

/* testh.h:60552 */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityMeasureExt
#define SOAP_TYPE_ns2__SpecificHeatCapacityMeasureExt (2145)
/* simple XML schema type 'ns2:SpecificHeatCapacityMeasureExt': */
struct ns2__SpecificHeatCapacityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:SpecificHeatCapacityUomExt' */
        char *uom;
};
#endif

/* testh.h:60571 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalMeasure (2146)
/* simple XML schema type 'ns2:TemperatureIntervalMeasure': */
struct ns2__TemperatureIntervalMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalUom' */
        enum ns2__TemperatureIntervalUom uom;
};
#endif

/* testh.h:60590 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalMeasureExt (2147)
/* simple XML schema type 'ns2:TemperatureIntervalMeasureExt': */
struct ns2__TemperatureIntervalMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalUomExt' */
        char *uom;
};
#endif

/* testh.h:60609 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasure (2148)
/* simple XML schema type 'ns2:TemperatureIntervalPerLengthMeasure': */
struct ns2__TemperatureIntervalPerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerLengthUom' */
        enum ns2__TemperatureIntervalPerLengthUom uom;
};
#endif

/* testh.h:60628 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasureExt (2149)
/* simple XML schema type 'ns2:TemperatureIntervalPerLengthMeasureExt': */
struct ns2__TemperatureIntervalPerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:60647 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasure (2150)
/* simple XML schema type 'ns2:TemperatureIntervalPerPressureMeasure': */
struct ns2__TemperatureIntervalPerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerPressureUom' */
        enum ns2__TemperatureIntervalPerPressureUom uom;
};
#endif

/* testh.h:60666 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasureExt (2151)
/* simple XML schema type 'ns2:TemperatureIntervalPerPressureMeasureExt': */
struct ns2__TemperatureIntervalPerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:60685 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasure (2152)
/* simple XML schema type 'ns2:TemperatureIntervalPerTimeMeasure': */
struct ns2__TemperatureIntervalPerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerTimeUom' */
        enum ns2__TemperatureIntervalPerTimeUom uom;
};
#endif

/* testh.h:60704 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasureExt (2153)
/* simple XML schema type 'ns2:TemperatureIntervalPerTimeMeasureExt': */
struct ns2__TemperatureIntervalPerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TemperatureIntervalPerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:60723 */
#ifndef SOAP_TYPE_ns2__ThermalConductanceMeasure
#define SOAP_TYPE_ns2__ThermalConductanceMeasure (2154)
/* simple XML schema type 'ns2:ThermalConductanceMeasure': */
struct ns2__ThermalConductanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalConductanceUom' */
        enum ns2__ThermalConductanceUom uom;
};
#endif

/* testh.h:60742 */
#ifndef SOAP_TYPE_ns2__ThermalConductanceMeasureExt
#define SOAP_TYPE_ns2__ThermalConductanceMeasureExt (2155)
/* simple XML schema type 'ns2:ThermalConductanceMeasureExt': */
struct ns2__ThermalConductanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalConductanceUomExt' */
        char *uom;
};
#endif

/* testh.h:33313 */
#ifndef SOAP_TYPE_ns2__ThermalConductivityMeasure
#define SOAP_TYPE_ns2__ThermalConductivityMeasure (1162)
/* simple XML schema type 'ns2:ThermalConductivityMeasure': */
struct ns2__ThermalConductivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalConductivityUom' */
        enum ns2__ThermalConductivityUom uom;
};
#endif

/* testh.h:60780 */
#ifndef SOAP_TYPE_ns2__ThermalConductivityMeasureExt
#define SOAP_TYPE_ns2__ThermalConductivityMeasureExt (2156)
/* simple XML schema type 'ns2:ThermalConductivityMeasureExt': */
struct ns2__ThermalConductivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalConductivityUomExt' */
        char *uom;
};
#endif

/* testh.h:60799 */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityMeasure
#define SOAP_TYPE_ns2__ThermalDiffusivityMeasure (2157)
/* simple XML schema type 'ns2:ThermalDiffusivityMeasure': */
struct ns2__ThermalDiffusivityMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalDiffusivityUom' */
        enum ns2__ThermalDiffusivityUom uom;
};
#endif

/* testh.h:60818 */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityMeasureExt
#define SOAP_TYPE_ns2__ThermalDiffusivityMeasureExt (2158)
/* simple XML schema type 'ns2:ThermalDiffusivityMeasureExt': */
struct ns2__ThermalDiffusivityMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalDiffusivityUomExt' */
        char *uom;
};
#endif

/* testh.h:60837 */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceMeasure
#define SOAP_TYPE_ns2__ThermalInsulanceMeasure (2159)
/* simple XML schema type 'ns2:ThermalInsulanceMeasure': */
struct ns2__ThermalInsulanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalInsulanceUom' */
        enum ns2__ThermalInsulanceUom uom;
};
#endif

/* testh.h:60856 */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceMeasureExt
#define SOAP_TYPE_ns2__ThermalInsulanceMeasureExt (2160)
/* simple XML schema type 'ns2:ThermalInsulanceMeasureExt': */
struct ns2__ThermalInsulanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalInsulanceUomExt' */
        char *uom;
};
#endif

/* testh.h:60875 */
#ifndef SOAP_TYPE_ns2__ThermalResistanceMeasure
#define SOAP_TYPE_ns2__ThermalResistanceMeasure (2161)
/* simple XML schema type 'ns2:ThermalResistanceMeasure': */
struct ns2__ThermalResistanceMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalResistanceUom' */
        enum ns2__ThermalResistanceUom uom;
};
#endif

/* testh.h:60894 */
#ifndef SOAP_TYPE_ns2__ThermalResistanceMeasureExt
#define SOAP_TYPE_ns2__ThermalResistanceMeasureExt (2162)
/* simple XML schema type 'ns2:ThermalResistanceMeasureExt': */
struct ns2__ThermalResistanceMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermalResistanceUomExt' */
        char *uom;
};
#endif

/* testh.h:20781 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureMeasure
#define SOAP_TYPE_ns2__ThermodynamicTemperatureMeasure (688)
/* simple XML schema type 'ns2:ThermodynamicTemperatureMeasure': */
struct ns2__ThermodynamicTemperatureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermodynamicTemperatureUom' */
        enum ns2__ThermodynamicTemperatureUom uom;
};
#endif

/* testh.h:21358 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureMeasureExt
#define SOAP_TYPE_ns2__ThermodynamicTemperatureMeasureExt (719)
/* simple XML schema type 'ns2:ThermodynamicTemperatureMeasureExt': */
struct ns2__ThermodynamicTemperatureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermodynamicTemperatureUomExt' */
        char *uom;
};
#endif

/* testh.h:60951 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure (2163)
/* simple XML schema type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureMeasure': */
struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureUom' */
        enum ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom uom;
};
#endif

/* testh.h:60970 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt (2164)
/* simple XML schema type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt': */
struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureUomExt' */
        char *uom;
};
#endif

/* testh.h:20469 */
#ifndef SOAP_TYPE_ns2__TimeMeasure
#define SOAP_TYPE_ns2__TimeMeasure (664)
/* simple XML schema type 'ns2:TimeMeasure': */
struct ns2__TimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimeUom' */
        enum ns2__TimeUom uom;
};
#endif

/* testh.h:46823 */
#ifndef SOAP_TYPE_ns2__TimeMeasureExt
#define SOAP_TYPE_ns2__TimeMeasureExt (1646)
/* simple XML schema type 'ns2:TimeMeasureExt': */
struct ns2__TimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimeUomExt' */
        char *uom;
};
#endif

/* testh.h:61027 */
#ifndef SOAP_TYPE_ns2__TimePerLengthMeasure
#define SOAP_TYPE_ns2__TimePerLengthMeasure (2165)
/* simple XML schema type 'ns2:TimePerLengthMeasure': */
struct ns2__TimePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerLengthUom' */
        enum ns2__TimePerLengthUom uom;
};
#endif

/* testh.h:61046 */
#ifndef SOAP_TYPE_ns2__TimePerLengthMeasureExt
#define SOAP_TYPE_ns2__TimePerLengthMeasureExt (2166)
/* simple XML schema type 'ns2:TimePerLengthMeasureExt': */
struct ns2__TimePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:61065 */
#ifndef SOAP_TYPE_ns2__TimePerMassMeasure
#define SOAP_TYPE_ns2__TimePerMassMeasure (2167)
/* simple XML schema type 'ns2:TimePerMassMeasure': */
struct ns2__TimePerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerMassUom' */
        enum ns2__TimePerMassUom uom;
};
#endif

/* testh.h:61084 */
#ifndef SOAP_TYPE_ns2__TimePerMassMeasureExt
#define SOAP_TYPE_ns2__TimePerMassMeasureExt (2168)
/* simple XML schema type 'ns2:TimePerMassMeasureExt': */
struct ns2__TimePerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:61103 */
#ifndef SOAP_TYPE_ns2__TimePerTimeMeasure
#define SOAP_TYPE_ns2__TimePerTimeMeasure (2169)
/* simple XML schema type 'ns2:TimePerTimeMeasure': */
struct ns2__TimePerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerTimeUom' */
        enum ns2__TimePerTimeUom uom;
};
#endif

/* testh.h:61122 */
#ifndef SOAP_TYPE_ns2__TimePerTimeMeasureExt
#define SOAP_TYPE_ns2__TimePerTimeMeasureExt (2170)
/* simple XML schema type 'ns2:TimePerTimeMeasureExt': */
struct ns2__TimePerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:61141 */
#ifndef SOAP_TYPE_ns2__TimePerVolumeMeasure
#define SOAP_TYPE_ns2__TimePerVolumeMeasure (2171)
/* simple XML schema type 'ns2:TimePerVolumeMeasure': */
struct ns2__TimePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerVolumeUom' */
        enum ns2__TimePerVolumeUom uom;
};
#endif

/* testh.h:61160 */
#ifndef SOAP_TYPE_ns2__TimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__TimePerVolumeMeasureExt (2172)
/* simple XML schema type 'ns2:TimePerVolumeMeasureExt': */
struct ns2__TimePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:TimePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:32937 */
#ifndef SOAP_TYPE_ns2__UnitlessMeasure
#define SOAP_TYPE_ns2__UnitlessMeasure (1146)
/* simple XML schema type 'ns2:UnitlessMeasure': */
struct ns2__UnitlessMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
};
#endif

/* testh.h:61201 */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateMeasure
#define SOAP_TYPE_ns2__VerticalCoordinateMeasure (2173)
/* simple XML schema type 'ns2:VerticalCoordinateMeasure': */
struct ns2__VerticalCoordinateMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VerticalCoordinateUom' */
        enum ns2__VerticalCoordinateUom uom;
};
#endif

/* testh.h:61220 */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateMeasureExt
#define SOAP_TYPE_ns2__VerticalCoordinateMeasureExt (2174)
/* simple XML schema type 'ns2:VerticalCoordinateMeasureExt': */
struct ns2__VerticalCoordinateMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VerticalCoordinateUomExt' */
        char *uom;
};
#endif

/* testh.h:61239 */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasure
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasure (2175)
/* simple XML schema type 'ns2:VolumeFlowRatePerVolumeFlowRateMeasure': */
struct ns2__VolumeFlowRatePerVolumeFlowRateMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumeFlowRatePerVolumeFlowRateUom' */
        enum ns2__VolumeFlowRatePerVolumeFlowRateUom uom;
};
#endif

/* testh.h:61258 */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt (2176)
/* simple XML schema type 'ns2:VolumeFlowRatePerVolumeFlowRateMeasureExt': */
struct ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumeFlowRatePerVolumeFlowRateUomExt' */
        char *uom;
};
#endif

/* testh.h:20890 */
#ifndef SOAP_TYPE_ns2__VolumeMeasure
#define SOAP_TYPE_ns2__VolumeMeasure (700)
/* simple XML schema type 'ns2:VolumeMeasure': */
struct ns2__VolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumeUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:21346 */
#ifndef SOAP_TYPE_ns2__VolumeMeasureExt
#define SOAP_TYPE_ns2__VolumeMeasureExt (717)
/* simple XML schema type 'ns2:VolumeMeasureExt': */
struct ns2__VolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:61315 */
#ifndef SOAP_TYPE_ns2__VolumePerAreaMeasure
#define SOAP_TYPE_ns2__VolumePerAreaMeasure (2177)
/* simple XML schema type 'ns2:VolumePerAreaMeasure': */
struct ns2__VolumePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerAreaUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:61334 */
#ifndef SOAP_TYPE_ns2__VolumePerAreaMeasureExt
#define SOAP_TYPE_ns2__VolumePerAreaMeasureExt (2178)
/* simple XML schema type 'ns2:VolumePerAreaMeasureExt': */
struct ns2__VolumePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:34662 */
#ifndef SOAP_TYPE_ns2__VolumePerLengthMeasure
#define SOAP_TYPE_ns2__VolumePerLengthMeasure (1198)
/* simple XML schema type 'ns2:VolumePerLengthMeasure': */
struct ns2__VolumePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerLengthUom' */
        enum ns2__VolumePerLengthUom uom;
};
#endif

/* testh.h:61372 */
#ifndef SOAP_TYPE_ns2__VolumePerLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerLengthMeasureExt (2179)
/* simple XML schema type 'ns2:VolumePerLengthMeasureExt': */
struct ns2__VolumePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:23875 */
#ifndef SOAP_TYPE_ns2__VolumePerMassMeasure
#define SOAP_TYPE_ns2__VolumePerMassMeasure (832)
/* simple XML schema type 'ns2:VolumePerMassMeasure': */
struct ns2__VolumePerMassMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerMassUom' */
        enum ns2__VolumePerMassUom uom;
};
#endif

/* testh.h:61410 */
#ifndef SOAP_TYPE_ns2__VolumePerMassMeasureExt
#define SOAP_TYPE_ns2__VolumePerMassMeasureExt (2180)
/* simple XML schema type 'ns2:VolumePerMassMeasureExt': */
struct ns2__VolumePerMassMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerMassUomExt' */
        char *uom;
};
#endif

/* testh.h:61429 */
#ifndef SOAP_TYPE_ns2__VolumePerPressureMeasure
#define SOAP_TYPE_ns2__VolumePerPressureMeasure (2181)
/* simple XML schema type 'ns2:VolumePerPressureMeasure': */
struct ns2__VolumePerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerPressureUom' */
        enum ns2__VolumePerPressureUom uom;
};
#endif

/* testh.h:61448 */
#ifndef SOAP_TYPE_ns2__VolumePerPressureMeasureExt
#define SOAP_TYPE_ns2__VolumePerPressureMeasureExt (2182)
/* simple XML schema type 'ns2:VolumePerPressureMeasureExt': */
struct ns2__VolumePerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:61467 */
#ifndef SOAP_TYPE_ns2__VolumePerRotationMeasure
#define SOAP_TYPE_ns2__VolumePerRotationMeasure (2183)
/* simple XML schema type 'ns2:VolumePerRotationMeasure': */
struct ns2__VolumePerRotationMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerRotationUom' */
        enum ns2__VolumePerRotationUom uom;
};
#endif

/* testh.h:61486 */
#ifndef SOAP_TYPE_ns2__VolumePerRotationMeasureExt
#define SOAP_TYPE_ns2__VolumePerRotationMeasureExt (2184)
/* simple XML schema type 'ns2:VolumePerRotationMeasureExt': */
struct ns2__VolumePerRotationMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerRotationUomExt' */
        char *uom;
};
#endif

/* testh.h:61505 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimeLengthMeasure (2185)
/* simple XML schema type 'ns2:VolumePerTimeLengthMeasure': */
struct ns2__VolumePerTimeLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimeLengthUom' */
        enum ns2__VolumePerTimeLengthUom uom;
};
#endif

/* testh.h:61524 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimeLengthMeasureExt (2186)
/* simple XML schema type 'ns2:VolumePerTimeLengthMeasureExt': */
struct ns2__VolumePerTimeLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimeLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:20565 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeMeasure
#define SOAP_TYPE_ns2__VolumePerTimeMeasure (674)
/* simple XML schema type 'ns2:VolumePerTimeMeasure': */
struct ns2__VolumePerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimeUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:61562 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimeMeasureExt (2187)
/* simple XML schema type 'ns2:VolumePerTimeMeasureExt': */
struct ns2__VolumePerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:61581 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerAreaMeasure (2188)
/* simple XML schema type 'ns2:VolumePerTimePerAreaMeasure': */
struct ns2__VolumePerTimePerAreaMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerAreaUom' */
        enum ns2__VolumePerTimePerAreaUom uom;
};
#endif

/* testh.h:61600 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerAreaMeasureExt (2189)
/* simple XML schema type 'ns2:VolumePerTimePerAreaMeasureExt': */
struct ns2__VolumePerTimePerAreaMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerAreaUomExt' */
        char *uom;
};
#endif

/* testh.h:61619 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerLengthMeasure (2190)
/* simple XML schema type 'ns2:VolumePerTimePerLengthMeasure': */
struct ns2__VolumePerTimePerLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerLengthUom' */
        enum ns2__VolumePerTimePerLengthUom uom;
};
#endif

/* testh.h:61638 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerLengthMeasureExt (2191)
/* simple XML schema type 'ns2:VolumePerTimePerLengthMeasureExt': */
struct ns2__VolumePerTimePerLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:61657 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasure (2192)
/* simple XML schema type 'ns2:VolumePerTimePerPressureLengthMeasure': */
struct ns2__VolumePerTimePerPressureLengthMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerPressureLengthUom' */
        enum ns2__VolumePerTimePerPressureLengthUom uom;
};
#endif

/* testh.h:61676 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasureExt (2193)
/* simple XML schema type 'ns2:VolumePerTimePerPressureLengthMeasureExt': */
struct ns2__VolumePerTimePerPressureLengthMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerPressureLengthUomExt' */
        char *uom;
};
#endif

/* testh.h:61695 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerPressureMeasure (2194)
/* simple XML schema type 'ns2:VolumePerTimePerPressureMeasure': */
struct ns2__VolumePerTimePerPressureMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerPressureUom' */
        enum ns2__VolumePerTimePerPressureUom uom;
};
#endif

/* testh.h:61714 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureMeasureExt (2195)
/* simple XML schema type 'ns2:VolumePerTimePerPressureMeasureExt': */
struct ns2__VolumePerTimePerPressureMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerPressureUomExt' */
        char *uom;
};
#endif

/* testh.h:61733 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerTimeMeasure (2196)
/* simple XML schema type 'ns2:VolumePerTimePerTimeMeasure': */
struct ns2__VolumePerTimePerTimeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerTimeUom' */
        enum ns2__VolumePerTimePerTimeUom uom;
};
#endif

/* testh.h:61752 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerTimeMeasureExt (2197)
/* simple XML schema type 'ns2:VolumePerTimePerTimeMeasureExt': */
struct ns2__VolumePerTimePerTimeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerTimeUomExt' */
        char *uom;
};
#endif

/* testh.h:61771 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasure (2198)
/* simple XML schema type 'ns2:VolumePerTimePerVolumeMeasure': */
struct ns2__VolumePerTimePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerVolumeUom' */
        enum ns2__VolumePerTimePerVolumeUom uom;
};
#endif

/* testh.h:61790 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasureExt (2199)
/* simple XML schema type 'ns2:VolumePerTimePerVolumeMeasureExt': */
struct ns2__VolumePerTimePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerTimePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:21016 */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeMeasure
#define SOAP_TYPE_ns2__VolumePerVolumeMeasure (706)
/* simple XML schema type 'ns2:VolumePerVolumeMeasure': */
struct ns2__VolumePerVolumeMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerVolumeUomWithLegacy' */
        char *uom;
};
#endif

/* testh.h:43549 */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeMeasureExt
#define SOAP_TYPE_ns2__VolumePerVolumeMeasureExt (1582)
/* simple XML schema type 'ns2:VolumePerVolumeMeasureExt': */
struct ns2__VolumePerVolumeMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumePerVolumeUomExt' */
        char *uom;
};
#endif

/* testh.h:61847 */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasure
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasure (2200)
/* simple XML schema type 'ns2:VolumetricHeatTransferCoefficientMeasure': */
struct ns2__VolumetricHeatTransferCoefficientMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumetricHeatTransferCoefficientUom' */
        enum ns2__VolumetricHeatTransferCoefficientUom uom;
};
#endif

/* testh.h:61866 */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasureExt
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasureExt (2201)
/* simple XML schema type 'ns2:VolumetricHeatTransferCoefficientMeasureExt': */
struct ns2__VolumetricHeatTransferCoefficientMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumetricHeatTransferCoefficientUomExt' */
        char *uom;
};
#endif

/* testh.h:33320 */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionMeasure
#define SOAP_TYPE_ns2__VolumetricThermalExpansionMeasure (1164)
/* simple XML schema type 'ns2:VolumetricThermalExpansionMeasure': */
struct ns2__VolumetricThermalExpansionMeasure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumetricThermalExpansionUom' */
        enum ns2__VolumetricThermalExpansionUom uom;
};
#endif

/* testh.h:61904 */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionMeasureExt
#define SOAP_TYPE_ns2__VolumetricThermalExpansionMeasureExt (2202)
/* simple XML schema type 'ns2:VolumetricThermalExpansionMeasureExt': */
struct ns2__VolumetricThermalExpansionMeasureExt {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:VolumetricThermalExpansionUomExt' */
        char *uom;
};
#endif

/* testh.h:48491 */
#ifndef SOAP_TYPE_ns2__ReferencePressure
#define SOAP_TYPE_ns2__ReferencePressure (1747)
/* simple XML schema type 'ns2:ReferencePressure': */
struct ns2__ReferencePressure {
        /** Simple content of XML schema type 'ns2:AbstractMeasure' wrapped by this struct */
        double __item;
        /** Required attribute 'uom' of XML schema type 'ns2:PressureUom' */
        enum ns2__PressureUom uom;
        /** Optional attribute 'referencePressureKind' of XML schema type 'ns2:ReferencePressureKind' */
        enum ns2__ReferencePressureKind *referencePressureKind;
};
#endif

/* testh.h:43187 */
#ifndef SOAP_TYPE_ns1__EventType
#define SOAP_TYPE_ns1__EventType (1558)
/* simple XML schema type 'ns1:EventType': */
struct ns1__EventType {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Required attribute 'Class' of XML schema type 'ns1:EventClassType' */
        enum ns1__EventClassType Class;
};
#endif

/* testh.h:43460 */
#ifndef SOAP_TYPE_ns1__TimestampedCommentString
#define SOAP_TYPE_ns1__TimestampedCommentString (1568)
/* simple XML schema type 'ns1:TimestampedCommentString': */
struct ns1__TimestampedCommentString {
        /** Simple content of XML schema type 'ns2:String2000' wrapped by this struct */
        char *__item;
        /** Required attribute 'dTim' of XML schema type 'ns2:TimeStamp' */
        time_t dTim;
};
#endif

/* testh.h:46762 */
#ifndef SOAP_TYPE_ns1__GeochronologicalUnit
#define SOAP_TYPE_ns1__GeochronologicalUnit (1642)
/* simple XML schema type 'ns1:GeochronologicalUnit': */
struct ns1__GeochronologicalUnit {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Optional attribute 'authority' of XML schema type 'ns2:String64' */
        char *authority;
        /** Required attribute 'kind' of XML schema type 'ns2:GeochronologicalRank' */
        enum ns2__GeochronologicalRank kind;
};
#endif

/* testh.h:46768 */
#ifndef SOAP_TYPE_ns1__LithostratigraphicUnit
#define SOAP_TYPE_ns1__LithostratigraphicUnit (1644)
/* simple XML schema type 'ns1:LithostratigraphicUnit': */
struct ns1__LithostratigraphicUnit {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Required attribute 'authority' of XML schema type 'ns2:String64' */
        char *authority;
        /** Required attribute 'kind' of XML schema type 'ns2:LithostratigraphicRank' */
        enum ns2__LithostratigraphicRank kind;
};
#endif

/* testh.h:51287 */
#ifndef SOAP_TYPE_ns1__PPFGChannel
#define SOAP_TYPE_ns1__PPFGChannel (1787)
/* complex XML schema type 'ns1:PPFGChannel': */
struct ns1__PPFGChannel {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Mnemonic' of XML schema type 'ns2:String64' */
        char *Mnemonic;
        /** Required nillable (xsi:nil when NULL) element 'ns1:GlobalMnemonic' of XML schema type 'ns2:String64' */
        char *GlobalMnemonic;
        /** Required nillable (xsi:nil when NULL) element 'ns1:DataKind' of XML schema type 'ns1:ChannelDataKind' */
        enum ns1__ChannelDataKind DataKind;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *Uom;
        /** Optional element 'ns1:Source' of XML schema type 'ns2:String64' */
        char *Source;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Required nillable (xsi:nil when NULL) element 'ns1:ChannelPropertyKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChannelPropertyKind;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:ChannelKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ChannelKind;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:SensorOffset' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *SensorOffset;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:IsContinuous' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *IsContinuous;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:ChannelOSDUIntegration' of XML schema type 'ns1:ChannelOSDUIntegration' */
        struct ns1__ChannelOSDUIntegration *ChannelOSDUIntegration;
        /** Optional element 'ns1:Datum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Datum;
        /** Optional element 'ns1:SeismicReferenceElevation' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *SeismicReferenceElevation;
        /** Optional element 'ns1:Data' of XML schema type 'ns1:ChannelData' */
        struct ns1__ChannelData *Data;
        /** Optional element 'ns1:DataSource' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSource;
        /** Sequence of at least 1 elements 'ns1:Index' of XML schema type 'ns1:ChannelIndex' stored in dynamic array Index of length __sizeIndex */
        int __sizeIndex;
        struct ns1__ChannelIndex *Index;
        /** Sequence of elements 'ns1:DerivedFrom' of XML schema type 'ns2:DataObjectReference' stored in dynamic array DerivedFrom of length __sizeDerivedFrom */
        int __sizeDerivedFrom;
        struct ns2__DataObjectReference *DerivedFrom;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:AxisDefinition' of XML schema type 'ns1:LogChannelAxis' stored in dynamic array AxisDefinition of length __sizeAxisDefinition */
        int __sizeAxisDefinition;
        struct ns1__LogChannelAxis *AxisDefinition;
        /** Sequence of elements 'ns1:PointMetadata' of XML schema type 'ns1:PointMetadata' stored in dynamic array PointMetadata of length __sizePointMetadata */
        int __sizePointMetadata;
        struct ns1__PointMetadata *PointMetadata;
        /** Sequence of elements 'ns1:PPFGDataProcessingApplied' of XML schema type 'ns1:PPFGDataProcessingExt' stored in dynamic array PPFGDataProcessingApplied of length __sizePPFGDataProcessingApplied */
        int __sizePPFGDataProcessingApplied;
        char **PPFGDataProcessingApplied;
        /** Optional element 'ns1:PPFGDerivation' of XML schema type 'ns1:PPFGDataDerivationExt' */
        char *PPFGDerivation;
        /** Optional element 'ns1:PPFGFamily' of XML schema type 'ns1:PPFGFamilyExt' */
        char *PPFGFamily;
        /** Optional element 'ns1:PPFGFamilyMnemonic' of XML schema type 'ns1:PPFGFamilyMnemonicExt' */
        char *PPFGFamilyMnemonic;
        /** Optional element 'ns1:PPFGMainFamily' of XML schema type 'ns1:PPFGMainFamilyExt' */
        char *PPFGMainFamily;
        /** Optional element 'ns1:PPFGModeledLithology' of XML schema type 'ns1:PPFGModeledLithologyExt' */
        char *PPFGModeledLithology;
        /** Optional element 'ns1:PPFGTransformModelType' of XML schema type 'ns1:PPFGTransformModelTypeExt' */
        char *PPFGTransformModelType;
        /** Optional element 'ns1:PPFGUncertaintyClass' of XML schema type 'ns1:PPFGUncertaintyClassExt' */
        char *PPFGUncertaintyClass;
        /** Optional element 'ns1:PPFGChannelOSDUIntegration' of XML schema type 'ns1:PPFGChannelOSDUIntegration' */
        struct ns1__PPFGChannelOSDUIntegration *PPFGChannelOSDUIntegration;
};
#endif

/* testh.h:51509 */
#ifndef SOAP_TYPE_ns1__PPFGChannelSet
#define SOAP_TYPE_ns1__PPFGChannelSet (1791)
/* complex XML schema type 'ns1:PPFGChannelSet': */
struct ns1__PPFGChannelSet {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Optional element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:LoggingToolClassLongName' of XML schema type 'ns2:String256' */
        char *LoggingToolClassLongName;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:ChannelSetOSDUIntegration' of XML schema type 'ns1:ChannelSetOSDUIntegration' */
        struct ns1__ChannelSetOSDUIntegration *ChannelSetOSDUIntegration;
        /** Sequence of elements 'ns1:Index' of XML schema type 'ns1:ChannelIndex' stored in dynamic array Index of length __sizeIndex */
        int __sizeIndex;
        struct ns1__ChannelIndex *Index;
        /** Sequence of elements 'ns1:Channel' of XML schema type 'ns1:Channel' stored in dynamic array Channel of length __sizeChannel */
        int __sizeChannel;
        struct ns1__Channel *Channel;
        /** Optional element 'ns1:Data' of XML schema type 'ns1:ChannelData' */
        struct ns1__ChannelData *Data;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:DataSource' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DataSource;
        /** Optional element 'ns1:PPFGComment' of XML schema type 'ns2:String2000' */
        char *PPFGComment;
        /** Optional element 'ns1:PPFGDerivation' of XML schema type 'ns1:PPFGDataDerivationExt' */
        char *PPFGDerivation;
        /** Optional element 'ns1:PPFGGaugeType' of XML schema type 'ns2:String64' */
        char *PPFGGaugeType;
        /** Sequence of elements 'ns1:PPFGOffsetWellbore' of XML schema type 'ns2:DataObjectReference' stored in dynamic array PPFGOffsetWellbore of length __sizePPFGOffsetWellbore */
        int __sizePPFGOffsetWellbore;
        struct ns2__DataObjectReference *PPFGOffsetWellbore;
        /** Optional element 'ns1:PPFGTectonicSetting' of XML schema type 'ns1:PPFGTectonicSettingExt' */
        char *PPFGTectonicSetting;
        /** Optional element 'ns1:PPFGChannelSetOSDUIntegration' of XML schema type 'ns1:PPFGChannelSetOSDUIntegration' */
        struct ns1__PPFGChannelSetOSDUIntegration *PPFGChannelSetOSDUIntegration;
};
#endif

/* testh.h:51734 */
#ifndef SOAP_TYPE_ns1__PPFGLog
#define SOAP_TYPE_ns1__PPFGLog (1795)
/* complex XML schema type 'ns1:PPFGLog': */
struct ns1__PPFGLog {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Optional element 'ns1:ChannelState' of XML schema type 'ns1:ChannelState' */
        enum ns1__ChannelState *ChannelState;
        /** Optional element 'ns1:RunNumber' of XML schema type 'ns2:String64' */
        char *RunNumber;
        /** Optional element 'ns1:PassNumber' of XML schema type 'ns2:String64' */
        char *PassNumber;
        /** Optional element 'ns1:PassDescription' of XML schema type 'ns2:String64' */
        char *PassDescription;
        /** Sequence of elements 'ns1:PassDetail' of XML schema type 'ns1:PassDetail' stored in dynamic array PassDetail of length __sizePassDetail */
        int __sizePassDetail;
        struct ns1__PassDetail *PassDetail;
        /** Optional element 'ns1:PrimaryIndexInterval' of XML schema type 'ns2:AbstractInterval' */
        struct ns2__AbstractInterval *PrimaryIndexInterval;
        /** Optional element 'ns1:LoggingCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingCompany;
        /** Optional element 'ns1:LoggingCompanyCode' of XML schema type 'xsd:long' */
        LONG64 *LoggingCompanyCode;
        /** Optional element 'ns1:LoggingToolKind' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LoggingToolKind;
        /** Optional element 'ns1:LoggingToolClass' of XML schema type 'ns1:LoggingToolClassExt' */
        char *LoggingToolClass;
        /** Optional element 'ns1:LoggingToolClassLongName' of XML schema type 'ns2:String256' */
        char *LoggingToolClassLongName;
        /** Optional element 'ns1:LoggingServicePeriod' of XML schema type 'ns2:DateTimeInterval' */
        struct ns2__DateTimeInterval *LoggingServicePeriod;
        /** Optional element 'ns1:Derivation' of XML schema type 'ns1:ChannelDerivation' */
        enum ns1__ChannelDerivation *Derivation;
        /** Optional element 'ns1:LoggingMethod' of XML schema type 'ns1:LoggingMethod' */
        enum ns1__LoggingMethod *LoggingMethod;
        /** Optional element 'ns1:NominalHoleSize' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *NominalHoleSize;
        /** Optional element 'ns1:MudClass' of XML schema type 'ns1:MudClassExt' */
        char *MudClass;
        /** Optional element 'ns1:MudSubClass' of XML schema type 'ns1:MudSubClassExt' */
        char *MudSubClass;
        /** Optional element 'ns1:HoleLoggingStatus' of XML schema type 'ns1:HoleLoggingStatus' */
        enum ns1__HoleLoggingStatus *HoleLoggingStatus;
        /** Optional element 'ns1:NominalSamplingInterval' of XML schema type 'ns2:GenericMeasure' */
        struct ns2__GenericMeasure *NominalSamplingInterval;
        /** Optional element 'ns1:LogOSDUIntegration' of XML schema type 'ns1:LogOSDUIntegration' */
        struct ns1__LogOSDUIntegration *LogOSDUIntegration;
        /** Sequence of elements 'ns1:ChannelSet' of XML schema type 'ns1:ChannelSet' stored in dynamic array ChannelSet of length __sizeChannelSet */
        int __sizeChannelSet;
        struct ns1__ChannelSet *ChannelSet;
        /** Optional element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:PPFGComment' of XML schema type 'ns2:String2000' */
        char *PPFGComment;
        /** Optional element 'ns1:PPFGDerivation' of XML schema type 'ns1:PPFGDataDerivationExt' */
        char *PPFGDerivation;
        /** Optional element 'ns1:PPFGGaugeType' of XML schema type 'ns2:String64' */
        char *PPFGGaugeType;
        /** Sequence of elements 'ns1:PPFGOffsetWellbore' of XML schema type 'ns2:DataObjectReference' stored in dynamic array PPFGOffsetWellbore of length __sizePPFGOffsetWellbore */
        int __sizePPFGOffsetWellbore;
        struct ns2__DataObjectReference *PPFGOffsetWellbore;
        /** Optional element 'ns1:PPFGTectonicSetting' of XML schema type 'ns1:PPFGTectonicSettingExt' */
        char *PPFGTectonicSetting;
        /** Optional element 'ns1:PPFGLogOSDUIntegration' of XML schema type 'ns1:PPFGLogOSDUIntegration' */
        struct ns1__PPFGLogOSDUIntegration *PPFGLogOSDUIntegration;
};
#endif

/* testh.h:53337 */
#ifndef SOAP_TYPE_ns2__AbstractMdGrowingObject
#define SOAP_TYPE_ns2__AbstractMdGrowingObject (1835)
/* complex XML schema type 'ns2:AbstractMdGrowingObject': */
struct ns2__AbstractMdGrowingObject {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *MdInterval;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__WellboreGeometry *ns1__WellboreGeometry;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__MudLogReport *ns1__MudLogReport;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__CuttingsGeology *ns1__CuttingsGeology;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__InterpretedGeology *ns1__InterpretedGeology;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__ShowEvaluation *ns1__ShowEvaluation;
        /** Transient pointer to a derived type value that replaces the value of this base type struct ns2__AbstractMdGrowingObject when non-NULL */
        struct ns1__Trajectory *ns1__Trajectory;
};
#endif

/* testh.h:53339 */
#ifndef SOAP_TYPE_ns2__AbstractTimeGrowingObject
#define SOAP_TYPE_ns2__AbstractTimeGrowingObject (1837)
/* complex XML schema type 'ns2:AbstractTimeGrowingObject': */
struct ns2__AbstractTimeGrowingObject {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *Index;
        /** Optional element 'ns2:TimeInterval' of XML schema type 'ns2:DateTimeInterval' */
        struct ns2__DateTimeInterval *TimeInterval;
};
#endif

/* testh.h:53367 */
#ifndef SOAP_TYPE_ns2__LocalEngineering2dPosition
#define SOAP_TYPE_ns2__LocalEngineering2dPosition (1839)
/* complex XML schema type 'ns2:LocalEngineering2dPosition': */
struct ns2__LocalEngineering2dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:LocalEngineering2dCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *LocalEngineering2dCrs;
};
#endif

/* testh.h:50851 */
#ifndef SOAP_TYPE_ns2__Projected2dPosition
#define SOAP_TYPE_ns2__Projected2dPosition (1776)
/* complex XML schema type 'ns2:Projected2dPosition': */
struct ns2__Projected2dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ProjectedCrs' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ProjectedCrs;
};
#endif

/* testh.h:53371 */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystem2dPosition
#define SOAP_TYPE_ns2__PublicLandSurveySystem2dPosition (1842)
/* complex XML schema type 'ns2:PublicLandSurveySystem2dPosition': */
struct ns2__PublicLandSurveySystem2dPosition {
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate1' of XML schema type 'xsd:double' */
        double Coordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Coordinate2' of XML schema type 'xsd:double' */
        double Coordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:PublicLandSurveySystemLocation' of XML schema type 'ns2:PublicLandSurveySystemLocation' */
        struct ns2__PublicLandSurveySystemLocation *PublicLandSurveySystemLocation;
};
#endif

/* testh.h:53662 */
#ifndef SOAP_TYPE_ns2__ReferencePointInAWellbore
#define SOAP_TYPE_ns2__ReferencePointInAWellbore (1849)
/* complex XML schema type 'ns2:ReferencePointInAWellbore': */
struct ns2__ReferencePointInAWellbore {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Optional element 'ns2:Kind' of XML schema type 'ns2:ReferencePointKindExt' */
        char *Kind;
        /** Optional element 'ns2:OSDUReferencePointIntegration' of XML schema type 'ns2:OSDUReferencePointIntegration' */
        struct ns2__OSDUReferencePointIntegration *OSDUReferencePointIntegration;
        /** Optional element 'ns2:UncertaintyVectorAtOneSigma' of XML schema type 'ns2:Vector' */
        struct ns2__Vector *UncertaintyVectorAtOneSigma;
        /** Optional element 'ns2:VerticalCoordinate' of XML schema type 'xsd:double' */
        double *VerticalCoordinate;
        /** Optional element 'ns2:HorizontalCoordinates' of XML schema type 'ns2:HorizontalCoordinates' */
        struct ns2__HorizontalCoordinates *HorizontalCoordinates;
        /** Required nillable (xsi:nil when NULL) element 'ns2:BaseReferencePoint' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *BaseReferencePoint;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Md' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *Md;
        /** Optional element 'ns2:Trajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Trajectory;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:48089 */
#ifndef SOAP_TYPE_ns2__AuthorityQualifiedName
#define SOAP_TYPE_ns2__AuthorityQualifiedName (1744)
/* simple XML schema type 'ns2:AuthorityQualifiedName': */
struct ns2__AuthorityQualifiedName {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Required attribute 'authority' of XML schema type 'ns2:String64' */
        char *authority;
        /** Optional attribute 'code' of XML schema type 'ns2:String64' */
        char *code;
};
#endif

/* testh.h:53891 */
#ifndef SOAP_TYPE_ns2__FloatingPointConstantArray
#define SOAP_TYPE_ns2__FloatingPointConstantArray (1854)
/* complex XML schema type 'ns2:FloatingPointConstantArray': */
struct ns2__FloatingPointConstantArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:FloatingPointArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__FloatingPointArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:double' */
        double Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Count' of XML schema type 'ns2:PositiveLong' */
        LONG64 Count;
};
#endif

/* testh.h:53893 */
#ifndef SOAP_TYPE_ns2__FloatingPointExternalArray
#define SOAP_TYPE_ns2__FloatingPointExternalArray (1856)
/* complex XML schema type 'ns2:FloatingPointExternalArray': */
struct ns2__FloatingPointExternalArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:FloatingPointArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__FloatingPointArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ArrayFloatingPointType' of XML schema type 'ns2:FloatingPointType' */
        enum ns2__FloatingPointType ArrayFloatingPointType;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:ExternalDataArray' */
        struct ns2__ExternalDataArray *Values;
};
#endif

/* testh.h:53895 */
#ifndef SOAP_TYPE_ns2__FloatingPointLatticeArray
#define SOAP_TYPE_ns2__FloatingPointLatticeArray (1858)
/* complex XML schema type 'ns2:FloatingPointLatticeArray': */
struct ns2__FloatingPointLatticeArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:FloatingPointArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__FloatingPointArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:StartValue' of XML schema type 'xsd:double' */
        double StartValue;
        /** Sequence of at least 1 elements 'ns2:Offset' of XML schema type 'ns2:FloatingPointConstantArray' stored in dynamic array Offset of length __sizeOffset */
        int __sizeOffset;
        struct ns2__FloatingPointConstantArray *Offset;
};
#endif

/* testh.h:53897 */
#ifndef SOAP_TYPE_ns2__FloatingPointXmlArray
#define SOAP_TYPE_ns2__FloatingPointXmlArray (1860)
/* complex XML schema type 'ns2:FloatingPointXmlArray': */
struct ns2__FloatingPointXmlArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:FloatingPointArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__FloatingPointArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:FloatingPointXmlArrayList' */
        char *Values;
};
#endif

/* testh.h:53924 */
#ifndef SOAP_TYPE_ns2__IntegerArrayFromBooleanMaskArray
#define SOAP_TYPE_ns2__IntegerArrayFromBooleanMaskArray (1863)
/* complex XML schema type 'ns2:IntegerArrayFromBooleanMaskArray': */
struct ns2__IntegerArrayFromBooleanMaskArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Mask' of XML schema type 'ns2:AbstractBooleanArray' */
        struct ns2__AbstractBooleanArray *Mask;
};
#endif

/* testh.h:53926 */
#ifndef SOAP_TYPE_ns2__IntegerConstantArray
#define SOAP_TYPE_ns2__IntegerConstantArray (1865)
/* complex XML schema type 'ns2:IntegerConstantArray': */
struct ns2__IntegerConstantArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Value' of XML schema type 'xsd:long' */
        LONG64 Value;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Count' of XML schema type 'ns2:PositiveLong' */
        LONG64 Count;
};
#endif

/* testh.h:53928 */
#ifndef SOAP_TYPE_ns2__IntegerExternalArray
#define SOAP_TYPE_ns2__IntegerExternalArray (1867)
/* complex XML schema type 'ns2:IntegerExternalArray': */
struct ns2__IntegerExternalArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ArrayIntegerType' of XML schema type 'ns2:IntegerType' */
        enum ns2__IntegerType ArrayIntegerType;
        /** Required nillable (xsi:nil when NULL) element 'ns2:NullValue' of XML schema type 'xsd:long' */
        LONG64 NullValue;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:ExternalDataArray' */
        struct ns2__ExternalDataArray *Values;
};
#endif

/* testh.h:53930 */
#ifndef SOAP_TYPE_ns2__IntegerLatticeArray
#define SOAP_TYPE_ns2__IntegerLatticeArray (1869)
/* complex XML schema type 'ns2:IntegerLatticeArray': */
struct ns2__IntegerLatticeArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:StartValue' of XML schema type 'xsd:long' */
        LONG64 StartValue;
        /** Sequence of at least 1 elements 'ns2:Offset' of XML schema type 'ns2:IntegerConstantArray' stored in dynamic array Offset of length __sizeOffset */
        int __sizeOffset;
        struct ns2__IntegerConstantArray *Offset;
};
#endif

/* testh.h:53932 */
#ifndef SOAP_TYPE_ns2__IntegerXmlArray
#define SOAP_TYPE_ns2__IntegerXmlArray (1871)
/* complex XML schema type 'ns2:IntegerXmlArray': */
struct ns2__IntegerXmlArray {
        /** Sequence of elements 'ns2:Statistics' of XML schema type 'ns2:IntegerArrayStatistics' stored in dynamic array Statistics of length __sizeStatistics */
        int __sizeStatistics;
        struct ns2__IntegerArrayStatistics *Statistics;
        /** Required nillable (xsi:nil when NULL) element 'ns2:CountPerValue' of XML schema type 'xsd:long' */
        LONG64 CountPerValue;	/**< initialized with default value = 1LL */
        /** Required nillable (xsi:nil when NULL) element 'ns2:NullValue' of XML schema type 'xsd:long' */
        LONG64 NullValue;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Values' of XML schema type 'ns2:IntegerXmlArrayList' */
        char *Values;
};
#endif

/* testh.h:37282 */
#ifndef SOAP_TYPE_ns2__StringMeasure
#define SOAP_TYPE_ns2__StringMeasure (1366)
/* simple XML schema type 'ns2:StringMeasure': */
struct ns2__StringMeasure {
        /** Simple content of XML schema type 'ns2:String2000' wrapped by this struct */
        char *__item;
        /** Optional attribute 'uom' of XML schema type 'ns2:UnitOfMeasureExt' */
        char *uom;
};
#endif

/* testh.h:54435 */
#ifndef SOAP_TYPE_ns2__LocalEngineering2dCrs
#define SOAP_TYPE_ns2__LocalEngineering2dCrs (1877)
/* complex XML schema type 'ns2:LocalEngineering2dCrs': */
struct ns2__LocalEngineering2dCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Azimuth' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *Azimuth;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AzimuthReference' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind AzimuthReference;
        /** Required nillable (xsi:nil when NULL) element 'ns2:OriginProjectedCoordinate1' of XML schema type 'xsd:double' */
        double OriginProjectedCoordinate1;
        /** Required nillable (xsi:nil when NULL) element 'ns2:OriginProjectedCoordinate2' of XML schema type 'xsd:double' */
        double OriginProjectedCoordinate2;
        /** Required nillable (xsi:nil when NULL) element 'ns2:HorizontalAxes' of XML schema type 'ns2:HorizontalAxes' */
        struct ns2__HorizontalAxes *HorizontalAxes;
        /** Required nillable (xsi:nil when NULL) element 'ns2:OriginProjectedCrs' of XML schema type 'ns2:ProjectedCrs' */
        struct ns2__ProjectedCrs *OriginProjectedCrs;
};
#endif

/* testh.h:54437 */
#ifndef SOAP_TYPE_ns2__ProjectedCrs
#define SOAP_TYPE_ns2__ProjectedCrs (1879)
/* complex XML schema type 'ns2:ProjectedCrs': */
struct ns2__ProjectedCrs {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AxisOrder' of XML schema type 'ns2:AxisOrder2d' */
        enum ns2__AxisOrder2d AxisOrder;
        /** Required nillable (xsi:nil when NULL) element 'ns2:AbstractProjectedCrs' of XML schema type 'ns2:AbstractProjectedCrs' */
        struct ns2__AbstractProjectedCrs *AbstractProjectedCrs;
        /** Optional attribute 'uom' of XML schema type 'ns2:LengthUomExt' */
        char *uom;
};
#endif

/* testh.h:48962 */
#ifndef SOAP_TYPE_ns2__EmailQualifierStruct
#define SOAP_TYPE_ns2__EmailQualifierStruct (1754)
/* simple XML schema type 'ns2:EmailQualifierStruct': */
struct ns2__EmailQualifierStruct {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Optional attribute 'qualifier' of XML schema type 'ns2:AddressQualifier' */
        enum ns2__AddressQualifier *qualifier;
};
#endif

/* testh.h:27231 */
#ifndef SOAP_TYPE_ns2__NameStruct
#define SOAP_TYPE_ns2__NameStruct (975)
/* simple XML schema type 'ns2:NameStruct': */
struct ns2__NameStruct {
        /** Simple content of XML schema type 'ns2:String64' wrapped by this struct */
        char *__item;
        /** Optional attribute 'authority' of XML schema type 'ns2:String64' */
        char *authority;
};
#endif

/* testh.h:63032 */
#ifndef SOAP_TYPE_ns1__WellboreGeometry
#define SOAP_TYPE_ns1__WellboreGeometry (2208)
/* complex XML schema type 'ns1:WellboreGeometry': */
struct ns1__WellboreGeometry {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Sequence of elements 'ns1:WellboreGeometrySection' of XML schema type 'ns1:WellboreGeometrySection' stored in dynamic array WellboreGeometrySection of length __sizeWellboreGeometrySection */
        int __sizeWellboreGeometrySection;
        struct ns1__WellboreGeometrySection *WellboreGeometrySection;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:BhaRun' of XML schema type 'ns2:DataObjectReference' stored in dynamic array BhaRun of length __sizeBhaRun */
        int __sizeBhaRun;
        struct ns2__DataObjectReference *BhaRun;
        /** Optional element 'ns1:DepthWaterMean' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DepthWaterMean;
        /** Optional element 'ns1:GapAir' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *GapAir;
};
#endif

/* testh.h:63034 */
#ifndef SOAP_TYPE_ns1__MudLogReport
#define SOAP_TYPE_ns1__MudLogReport (2210)
/* complex XML schema type 'ns1:MudLogReport': */
struct ns1__MudLogReport {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Optional element 'ns1:MudLogCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *MudLogCompany;
        /** Optional element 'ns1:MudLogEngineers' of XML schema type 'ns2:String2000' */
        char *MudLogEngineers;
        /** Optional element 'ns1:MudLogGeologists' of XML schema type 'ns2:String2000' */
        char *MudLogGeologists;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Optional element 'ns1:WellboreGeology' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *WellboreGeology;
        /** Sequence of elements 'ns1:RelatedLog' of XML schema type 'ns2:DataObjectReference' stored in dynamic array RelatedLog of length __sizeRelatedLog */
        int __sizeRelatedLog;
        struct ns2__DataObjectReference *RelatedLog;
        /** Sequence of elements 'ns1:MudlogReportInterval' of XML schema type 'ns1:MudlogReportInterval' stored in dynamic array MudlogReportInterval of length __sizeMudlogReportInterval */
        int __sizeMudlogReportInterval;
        struct ns1__MudlogReportInterval *MudlogReportInterval;
        /** Sequence of elements 'ns1:Parameter' of XML schema type 'ns1:MudLogParameter' stored in dynamic array Parameter of length __sizeParameter */
        int __sizeParameter;
        struct ns1__MudLogParameter *Parameter;
};
#endif

/* testh.h:52822 */
#ifndef SOAP_TYPE_ns1__CuttingsGeology
#define SOAP_TYPE_ns1__CuttingsGeology (1819)
/* complex XML schema type 'ns1:CuttingsGeology': */
struct ns1__CuttingsGeology {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Sequence of elements 'ns1:CuttingsGeologyInterval' of XML schema type 'ns1:CuttingsGeologyInterval' stored in dynamic array CuttingsGeologyInterval of length __sizeCuttingsGeologyInterval */
        int __sizeCuttingsGeologyInterval;
        struct ns1__CuttingsGeologyInterval *CuttingsGeologyInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:52824 */
#ifndef SOAP_TYPE_ns1__InterpretedGeology
#define SOAP_TYPE_ns1__InterpretedGeology (1821)
/* complex XML schema type 'ns1:InterpretedGeology': */
struct ns1__InterpretedGeology {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Sequence of elements 'ns1:InterpretedGeologyInterval' of XML schema type 'ns1:InterpretedGeologyInterval' stored in dynamic array InterpretedGeologyInterval of length __sizeInterpretedGeologyInterval */
        int __sizeInterpretedGeologyInterval;
        struct ns1__InterpretedGeologyInterval *InterpretedGeologyInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:52826 */
#ifndef SOAP_TYPE_ns1__ShowEvaluation
#define SOAP_TYPE_ns1__ShowEvaluation (1823)
/* complex XML schema type 'ns1:ShowEvaluation': */
struct ns1__ShowEvaluation {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Sequence of elements 'ns1:ShowEvaluationInterval' of XML schema type 'ns1:ShowEvaluationInterval' stored in dynamic array ShowEvaluationInterval of length __sizeShowEvaluationInterval */
        int __sizeShowEvaluationInterval;
        struct ns1__ShowEvaluationInterval *ShowEvaluationInterval;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
};
#endif

/* testh.h:63042 */
#ifndef SOAP_TYPE_ns1__Trajectory
#define SOAP_TYPE_ns1__Trajectory (2215)
/* complex XML schema type 'ns1:Trajectory': */
struct ns1__Trajectory {
        /** Sequence of elements 'ns2:Aliases' of XML schema type 'ns2:ObjectAlias' stored in dynamic array ns2__Aliases of length __sizeAliases */
        int __sizeAliases;
        struct ns2__ObjectAlias *ns2__Aliases;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Citation' of XML schema type 'ns2:Citation' */
        struct ns2__Citation *ns2__Citation;
        /** Optional element 'ns2:Existence' of XML schema type 'ns2:ExistenceKindExt' */
        char *ns2__Existence;
        /** Optional element 'ns2:ObjectVersionReason' of XML schema type 'ns2:String2000' */
        char *ns2__ObjectVersionReason;
        /** Sequence of elements 'ns2:BusinessActivityHistory' of XML schema type 'ns2:String64' stored in dynamic array ns2__BusinessActivityHistory of length __sizeBusinessActivityHistory */
        int __sizeBusinessActivityHistory;
        char **ns2__BusinessActivityHistory;
        /** Optional element 'ns2:OSDUIntegration' of XML schema type 'ns2:OSDUIntegration' */
        struct ns2__OSDUIntegration *ns2__OSDUIntegration;
        /** Optional element 'ns2:CustomData' of XML schema type 'ns2:CustomData' */
        struct ns2__CustomData *ns2__CustomData;
        /** Sequence of elements 'ns2:ExtensionNameValue' of XML schema type 'ns2:ExtensionNameValue' stored in dynamic array ns2__ExtensionNameValue of length __sizeExtensionNameValue */
        int __sizeExtensionNameValue;
        struct ns2__ExtensionNameValue *ns2__ExtensionNameValue;
        /** Required attribute 'uuid' of XML schema type 'ns2:UuidString' */
        char *uuid;
        /** Required attribute 'schemaVersion' of XML schema type 'ns2:String64' */
        char *schemaVersion;
        /** Optional attribute 'objectVersion' of XML schema type 'ns2:String64' */
        char *objectVersion;
        /** Required nillable (xsi:nil when NULL) element 'ns2:ActiveStatus' of XML schema type 'ns2:ActiveStatusKind' */
        enum ns2__ActiveStatusKind ns2__ActiveStatus;
        /** Required nillable (xsi:nil when NULL) element 'ns2:Index' of XML schema type 'ns2:GrowingObjectIndex' */
        struct ns2__GrowingObjectIndex *ns2__Index;
        /** Optional element 'ns2:MdInterval' of XML schema type 'ns2:MdInterval' */
        struct ns2__MdInterval *ns2__MdInterval;
        /** Optional element 'ns1:UniqueIdentifier' of XML schema type 'ns2:String64' */
        char *UniqueIdentifier;
        /** Optional element 'ns1:ServiceCompany' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ServiceCompany;
        /** Optional element 'ns1:DTimTrajEnd' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimTrajEnd;
        /** Optional element 'ns1:DTimTrajStart' of XML schema type 'ns2:TimeStamp' */
        time_t *DTimTrajStart;
        /** Optional element 'ns1:Definitive' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Definitive;
        /** Optional element 'ns1:Memory' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *Memory;
        /** Optional element 'ns1:FinalTraj' of XML schema type 'xsd:boolean' */
        enum xsd__boolean *FinalTraj;
        /** Optional element 'ns1:DefaultMdDatum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DefaultMdDatum;
        /** Optional element 'ns1:DefaultTvdDatum' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *DefaultTvdDatum;
        /** Optional element 'ns1:ParentTrajectory' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *ParentTrajectory;
        /** Sequence of elements 'ns1:TrajectoryStation' of XML schema type 'ns1:TrajectoryStation' stored in dynamic array TrajectoryStation of length __sizeTrajectoryStation */
        int __sizeTrajectoryStation;
        struct ns1__TrajectoryStation *TrajectoryStation;
        /** Required nillable (xsi:nil when NULL) element 'ns1:Wellbore' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *Wellbore;
        /** Sequence of elements 'ns1:SourceTrajectory' of XML schema type 'ns2:DataObjectReference' stored in dynamic array SourceTrajectory of length __sizeSourceTrajectory */
        int __sizeSourceTrajectory;
        struct ns2__DataObjectReference *SourceTrajectory;
        /** Optional element 'ns1:SurveyProgram' of XML schema type 'ns2:DataObjectReference' */
        struct ns2__DataObjectReference *SurveyProgram;
        /** Optional element 'ns1:AcquisitionRemark' of XML schema type 'ns2:String2000' */
        char *AcquisitionRemark;
        /** Optional element 'ns1:MagDeclUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *MagDeclUsed;
        /** Optional element 'ns1:MdMaxExtrapolated' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxExtrapolated;
        /** Optional element 'ns1:MdMaxMeasured' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdMaxMeasured;
        /** Optional element 'ns1:MdTieOn' of XML schema type 'ns2:MeasuredDepth' */
        struct ns2__MeasuredDepth *MdTieOn;
        /** Optional element 'ns1:NominalCalcAlgorithm' of XML schema type 'ns1:TrajStnCalcAlgorithmExt' */
        char *NominalCalcAlgorithm;
        /** Optional element 'ns1:NominalTypeSurveyTool' of XML schema type 'ns1:TypeSurveyToolExt' */
        char *NominalTypeSurveyTool;
        /** Optional element 'ns1:NominalTypeTrajStation' of XML schema type 'ns1:TrajStationTypeExt' */
        char *NominalTypeTrajStation;
        /** Optional element 'ns1:TrajectoryOSDUIntegration' of XML schema type 'ns1:TrajectoryOSDUIntegration' */
        struct ns1__TrajectoryOSDUIntegration *TrajectoryOSDUIntegration;
        /** Optional element 'ns1:GridConUsed' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *GridConUsed;
        /** Optional element 'ns1:GridScaleFactorUsed' of XML schema type 'ns2:LengthPerLengthMeasureExt' */
        struct ns2__LengthPerLengthMeasureExt *GridScaleFactorUsed;
        /** Optional element 'ns1:AziVertSect' of XML schema type 'ns2:PlaneAngleMeasureExt' */
        struct ns2__PlaneAngleMeasureExt *AziVertSect;
        /** Optional element 'ns1:DispNsVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispNsVertSectOrig;
        /** Optional element 'ns1:DispEwVertSectOrig' of XML schema type 'ns2:LengthMeasureExt' */
        struct ns2__LengthMeasureExt *DispEwVertSectOrig;
        /** Optional element 'ns1:AziRef' of XML schema type 'ns2:NorthReferenceKind' */
        enum ns2__NorthReferenceKind *AziRef;
};
#endif

/* testh.h:66202 */
#ifndef SOAP_TYPE_ns21__witsmlObject
#define SOAP_TYPE_ns21__witsmlObject (2300)
/* complex XML schema type 'ns21:witsmlObject': */
struct ns21__witsmlObject {
        /** Optional element 'BhaRun' of XML schema type 'ns1:BhaRun' */
        struct ns1__BhaRun *BhaRun;
        /** Optional element 'CementJob' of XML schema type 'ns1:CementJob' */
        struct ns1__CementJob *CementJob;
        /** Optional element 'DepthRegImage' of XML schema type 'ns1:DepthRegImage' */
        struct ns1__DepthRegImage *DepthRegImage;
        /** Optional element 'DownholeComponent' of XML schema type 'ns1:DownholeComponent' */
        struct ns1__DownholeComponent *DownholeComponent;
        /** Optional element 'DrillReport' of XML schema type 'ns1:DrillReport' */
        struct ns1__DrillReport *DrillReport;
        /** Optional element 'FluidsReport' of XML schema type 'ns1:FluidsReport' */
        struct ns1__FluidsReport *FluidsReport;
        /** Optional element 'Log' of XML schema type 'ns1:Log' */
        struct ns1__Log *Log;
        /** Optional element 'MudLogReport' of XML schema type 'ns1:MudLogReport' */
        struct ns1__MudLogReport *MudLogReport;
        /** Optional element 'OpsReport' of XML schema type 'ns1:OpsReport' */
        struct ns1__OpsReport *OpsReport;
        /** Optional element 'Rig' of XML schema type 'ns1:Rig' */
        struct ns1__Rig *Rig;
        /** Optional element 'Risk' of XML schema type 'ns1:Risk' */
        struct ns1__Risk *Risk;
        /** Optional element 'StimJob' of XML schema type 'ns1:StimJob' */
        struct ns1__StimJob *StimJob;
        /** Optional element 'Target' of XML schema type 'ns1:Target' */
        struct ns1__Target *Target;
        /** Optional element 'ToolErrorModel' of XML schema type 'ns1:ToolErrorModel' */
        struct ns1__ToolErrorModel *ToolErrorModel;
        /** Optional element 'SurveyProgram' of XML schema type 'ns1:SurveyProgram' */
        struct ns1__SurveyProgram *SurveyProgram;
        /** Optional element 'Trajectory' of XML schema type 'ns1:Trajectory' */
        struct ns1__Trajectory *Trajectory;
        /** Optional element 'Tubular' of XML schema type 'ns1:Tubular' */
        struct ns1__Tubular *Tubular;
        /** Optional element 'Well' of XML schema type 'ns1:Well' */
        struct ns1__Well *Well;
        /** Optional element 'Wellbore' of XML schema type 'ns1:Wellbore' */
        struct ns1__Wellbore *Wellbore;
        /** Optional element 'WellboreCompletion' of XML schema type 'ns1:WellboreCompletion' */
        struct ns1__WellboreCompletion *WellboreCompletion;
        /** Optional element 'WellboreGeology' of XML schema type 'ns1:WellboreGeology' */
        struct ns1__WellboreGeology *WellboreGeology;
        /** Optional element 'WellboreGeometry' of XML schema type 'ns1:WellboreGeometry' */
        struct ns1__WellboreGeometry *WellboreGeometry;
        /** Optional element 'WellCMLedger' of XML schema type 'ns1:WellCMLedger' */
        struct ns1__WellCMLedger *WellCMLedger;
        /** Optional element 'WellCompletion' of XML schema type 'ns1:WellCompletion' */
        struct ns1__WellCompletion *WellCompletion;
};
#endif

/* testh.h:66240 */
#ifndef SOAP_TYPE_ns21__readWitsmlObjectResponse
#define SOAP_TYPE_ns21__readWitsmlObjectResponse (2326)
/* complex XML schema type 'ns21:readWitsmlObjectResponse': */
struct ns21__readWitsmlObjectResponse {
        /** Optional element 'result' of XML schema type 'xsd:string' */
        char **result;
};
#endif

/* testh.h:66240 */
#ifndef SOAP_TYPE_ns21__readWitsmlObject
#define SOAP_TYPE_ns21__readWitsmlObject (2327)
/* complex XML schema type 'ns21:readWitsmlObject': */
struct ns21__readWitsmlObject {
        /** Optional element 'WitsmlObject' of XML schema type 'ns21:witsmlObject' */
        struct ns21__witsmlObject *WitsmlObject;
};
#endif

/* testh.h:66245 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (2328)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* testh.h:66245 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (2329)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
};
#endif
#endif

/* testh.h:66245 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (2331)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
};
#endif
#endif

/* testh.h:66245 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (2334)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
};
#endif
#endif

/* testh.h:66245 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (2335)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/* testh.h:164 */
#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (12)
typedef char *xsd__anyURI;
#endif

/* testh.h:167 */
#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (13)
typedef char *xsd__date;
#endif

/* testh.h:170 */
#ifndef SOAP_TYPE_xsd__gYear
#define SOAP_TYPE_xsd__gYear (14)
typedef char *xsd__gYear;
#endif

/* testh.h:173 */
#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (15)
typedef char *xsd__nonNegativeInteger;
#endif

/* testh.h:185 */
#ifndef SOAP_TYPE_ns1__MudSubClassExt
#define SOAP_TYPE_ns1__MudSubClassExt (16)
typedef char *ns1__MudSubClassExt;
#endif

/* testh.h:188 */
#ifndef SOAP_TYPE_ns1__BrineClassExt
#define SOAP_TYPE_ns1__BrineClassExt (17)
typedef char *ns1__BrineClassExt;
#endif

/* testh.h:191 */
#ifndef SOAP_TYPE_ns1__MudClassExt
#define SOAP_TYPE_ns1__MudClassExt (18)
typedef char *ns1__MudClassExt;
#endif

/* testh.h:194 */
#ifndef SOAP_TYPE_ns1__OperatingEnvironmentExt
#define SOAP_TYPE_ns1__OperatingEnvironmentExt (19)
typedef char *ns1__OperatingEnvironmentExt;
#endif

/* testh.h:197 */
#ifndef SOAP_TYPE_ns1__WellInterestExt
#define SOAP_TYPE_ns1__WellInterestExt (20)
typedef char *ns1__WellInterestExt;
#endif

/* testh.h:200 */
#ifndef SOAP_TYPE_ns1__TubularAssemblyExt
#define SOAP_TYPE_ns1__TubularAssemblyExt (21)
typedef char *ns1__TubularAssemblyExt;
#endif

/* testh.h:203 */
#ifndef SOAP_TYPE_ns1__TubularComponentTypeExt
#define SOAP_TYPE_ns1__TubularComponentTypeExt (22)
typedef char *ns1__TubularComponentTypeExt;
#endif

/* testh.h:206 */
#ifndef SOAP_TYPE_ns1__LoggingToolClassExt
#define SOAP_TYPE_ns1__LoggingToolClassExt (23)
typedef char *ns1__LoggingToolClassExt;
#endif

/* testh.h:209 */
#ifndef SOAP_TYPE_ns1__EquipmentTypeExt
#define SOAP_TYPE_ns1__EquipmentTypeExt (24)
typedef char *ns1__EquipmentTypeExt;
#endif

/* testh.h:212 */
#ifndef SOAP_TYPE_ns1__TrajStationTypeExt
#define SOAP_TYPE_ns1__TrajStationTypeExt (25)
typedef char *ns1__TrajStationTypeExt;
#endif

/* testh.h:215 */
#ifndef SOAP_TYPE_ns1__TrajStnCalcAlgorithmExt
#define SOAP_TYPE_ns1__TrajStnCalcAlgorithmExt (26)
typedef char *ns1__TrajStnCalcAlgorithmExt;
#endif

/* testh.h:218 */
#ifndef SOAP_TYPE_ns1__TypeSurveyToolExt
#define SOAP_TYPE_ns1__TypeSurveyToolExt (27)
typedef char *ns1__TypeSurveyToolExt;
#endif

/* testh.h:221 */
#ifndef SOAP_TYPE_ns1__TargetCategoryExt
#define SOAP_TYPE_ns1__TargetCategoryExt (28)
typedef char *ns1__TargetCategoryExt;
#endif

/* testh.h:224 */
#ifndef SOAP_TYPE_ns1__TargetScopeExt
#define SOAP_TYPE_ns1__TargetScopeExt (29)
typedef char *ns1__TargetScopeExt;
#endif

/* testh.h:227 */
#ifndef SOAP_TYPE_ns1__CorrectionConsideredExt
#define SOAP_TYPE_ns1__CorrectionConsideredExt (30)
typedef char *ns1__CorrectionConsideredExt;
#endif

/* testh.h:230 */
#ifndef SOAP_TYPE_ns1__OperatingConditionExt
#define SOAP_TYPE_ns1__OperatingConditionExt (31)
typedef char *ns1__OperatingConditionExt;
#endif

/* testh.h:233 */
#ifndef SOAP_TYPE_ns1__ToolSubKindExt
#define SOAP_TYPE_ns1__ToolSubKindExt (32)
typedef char *ns1__ToolSubKindExt;
#endif

/* testh.h:236 */
#ifndef SOAP_TYPE_ns1__PPFGDataDerivationExt
#define SOAP_TYPE_ns1__PPFGDataDerivationExt (33)
typedef char *ns1__PPFGDataDerivationExt;
#endif

/* testh.h:239 */
#ifndef SOAP_TYPE_ns1__PPFGDataProcessingExt
#define SOAP_TYPE_ns1__PPFGDataProcessingExt (34)
typedef char *ns1__PPFGDataProcessingExt;
#endif

/* testh.h:242 */
#ifndef SOAP_TYPE_ns1__PPFGFamilyExt
#define SOAP_TYPE_ns1__PPFGFamilyExt (35)
typedef char *ns1__PPFGFamilyExt;
#endif

/* testh.h:245 */
#ifndef SOAP_TYPE_ns1__PPFGFamilyMnemonicExt
#define SOAP_TYPE_ns1__PPFGFamilyMnemonicExt (36)
typedef char *ns1__PPFGFamilyMnemonicExt;
#endif

/* testh.h:248 */
#ifndef SOAP_TYPE_ns1__PPFGMainFamilyExt
#define SOAP_TYPE_ns1__PPFGMainFamilyExt (37)
typedef char *ns1__PPFGMainFamilyExt;
#endif

/* testh.h:251 */
#ifndef SOAP_TYPE_ns1__PPFGModeledLithologyExt
#define SOAP_TYPE_ns1__PPFGModeledLithologyExt (38)
typedef char *ns1__PPFGModeledLithologyExt;
#endif

/* testh.h:254 */
#ifndef SOAP_TYPE_ns1__PPFGTectonicSettingExt
#define SOAP_TYPE_ns1__PPFGTectonicSettingExt (39)
typedef char *ns1__PPFGTectonicSettingExt;
#endif

/* testh.h:257 */
#ifndef SOAP_TYPE_ns1__PPFGTransformModelTypeExt
#define SOAP_TYPE_ns1__PPFGTransformModelTypeExt (40)
typedef char *ns1__PPFGTransformModelTypeExt;
#endif

/* testh.h:260 */
#ifndef SOAP_TYPE_ns1__PPFGUncertaintyClassExt
#define SOAP_TYPE_ns1__PPFGUncertaintyClassExt (41)
typedef char *ns1__PPFGUncertaintyClassExt;
#endif

/* testh.h:263 */
#ifndef SOAP_TYPE_ns1__MarkerQualifierExt
#define SOAP_TYPE_ns1__MarkerQualifierExt (42)
typedef char *ns1__MarkerQualifierExt;
#endif

/* testh.h:266 */
#ifndef SOAP_TYPE_ns1__StratigraphyKindExt
#define SOAP_TYPE_ns1__StratigraphyKindExt (43)
typedef char *ns1__StratigraphyKindExt;
#endif

/* testh.h:269 */
#ifndef SOAP_TYPE_ns1__StratigraphyKindQualifierExt
#define SOAP_TYPE_ns1__StratigraphyKindQualifierExt (44)
typedef char *ns1__StratigraphyKindQualifierExt;
#endif

/* testh.h:272 */
#ifndef SOAP_TYPE_ns1__WellboreMarkerKindExt
#define SOAP_TYPE_ns1__WellboreMarkerKindExt (45)
typedef char *ns1__WellboreMarkerKindExt;
#endif

/* testh.h:275 */
#ifndef SOAP_TYPE_ns1__WellborePointOfInterestExt
#define SOAP_TYPE_ns1__WellborePointOfInterestExt (46)
typedef char *ns1__WellborePointOfInterestExt;
#endif

/* testh.h:286 */
#ifndef SOAP_TYPE_ns2__AliasIdentifierKindExt
#define SOAP_TYPE_ns2__AliasIdentifierKindExt (47)
typedef char *ns2__AliasIdentifierKindExt;
#endif

/* testh.h:289 */
#ifndef SOAP_TYPE_ns2__ExistenceKindExt
#define SOAP_TYPE_ns2__ExistenceKindExt (48)
typedef char *ns2__ExistenceKindExt;
#endif

/* testh.h:292 */
#ifndef SOAP_TYPE_ns2__ReferencePointKindExt
#define SOAP_TYPE_ns2__ReferencePointKindExt (49)
typedef char *ns2__ReferencePointKindExt;
#endif

/* testh.h:296 */
#ifndef SOAP_TYPE_ns2__BooleanXmlArrayList
#define SOAP_TYPE_ns2__BooleanXmlArrayList (50)
typedef char *ns2__BooleanXmlArrayList;
#endif

/* testh.h:300 */
#ifndef SOAP_TYPE_ns2__FloatingPointXmlArrayList
#define SOAP_TYPE_ns2__FloatingPointXmlArrayList (51)
typedef char *ns2__FloatingPointXmlArrayList;
#endif

/* testh.h:304 */
#ifndef SOAP_TYPE_ns2__IntegerXmlArrayList
#define SOAP_TYPE_ns2__IntegerXmlArrayList (52)
typedef char *ns2__IntegerXmlArrayList;
#endif

/* testh.h:307 */
#ifndef SOAP_TYPE_ns2__LithologyKindExt
#define SOAP_TYPE_ns2__LithologyKindExt (53)
typedef char *ns2__LithologyKindExt;
#endif

/* testh.h:310 */
#ifndef SOAP_TYPE_ns2__LithologyQualifierKindExt
#define SOAP_TYPE_ns2__LithologyQualifierKindExt (54)
typedef char *ns2__LithologyQualifierKindExt;
#endif

/* testh.h:313 */
#ifndef SOAP_TYPE_ns2__MatrixCementKindExt
#define SOAP_TYPE_ns2__MatrixCementKindExt (55)
typedef char *ns2__MatrixCementKindExt;
#endif

/* testh.h:316 */
#ifndef SOAP_TYPE_ns2__QuantityClassKindExt
#define SOAP_TYPE_ns2__QuantityClassKindExt (56)
typedef char *ns2__QuantityClassKindExt;
#endif

/* testh.h:319 */
#ifndef SOAP_TYPE_ns2__ReferenceConditionExt
#define SOAP_TYPE_ns2__ReferenceConditionExt (57)
typedef char *ns2__ReferenceConditionExt;
#endif

/* testh.h:322 */
#ifndef SOAP_TYPE_ns2__UnitOfMeasureExt
#define SOAP_TYPE_ns2__UnitOfMeasureExt (58)
typedef char *ns2__UnitOfMeasureExt;
#endif

/* testh.h:325 */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__MassPerVolumeUomWithLegacy (59)
typedef char *ns2__MassPerVolumeUomWithLegacy;
#endif

/* testh.h:328 */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__PressurePerVolumeUomWithLegacy (60)
typedef char *ns2__PressurePerVolumeUomWithLegacy;
#endif

/* testh.h:331 */
#ifndef SOAP_TYPE_ns2__PressureUomWithLegacy
#define SOAP_TYPE_ns2__PressureUomWithLegacy (61)
typedef char *ns2__PressureUomWithLegacy;
#endif

/* testh.h:334 */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerAreaUomWithLegacy (62)
typedef char *ns2__VolumePerAreaUomWithLegacy;
#endif

/* testh.h:337 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerTimeUomWithLegacy (63)
typedef char *ns2__VolumePerTimeUomWithLegacy;
#endif

/* testh.h:340 */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerVolumeUomWithLegacy (64)
typedef char *ns2__VolumePerVolumeUomWithLegacy;
#endif

/* testh.h:343 */
#ifndef SOAP_TYPE_ns2__VolumeUomWithLegacy
#define SOAP_TYPE_ns2__VolumeUomWithLegacy (65)
typedef char *ns2__VolumeUomWithLegacy;
#endif

/* testh.h:346 */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseUomExt
#define SOAP_TYPE_ns2__AbsorbedDoseUomExt (66)
typedef char *ns2__AbsorbedDoseUomExt;
#endif

/* testh.h:349 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUomExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUomExt (67)
typedef char *ns2__ActivityOfRadioactivityPerVolumeUomExt;
#endif

/* testh.h:352 */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityUomExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityUomExt (68)
typedef char *ns2__ActivityOfRadioactivityUomExt;
#endif

/* testh.h:355 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUomExt (69)
typedef char *ns2__AmountOfSubstancePerAmountOfSubstanceUomExt;
#endif

/* testh.h:358 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaUomExt (70)
typedef char *ns2__AmountOfSubstancePerAreaUomExt;
#endif

/* testh.h:361 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUomExt (71)
typedef char *ns2__AmountOfSubstancePerTimePerAreaUomExt;
#endif

/* testh.h:364 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeUomExt (72)
typedef char *ns2__AmountOfSubstancePerTimeUomExt;
#endif

/* testh.h:367 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUomExt (73)
typedef char *ns2__AmountOfSubstancePerVolumeUomExt;
#endif

/* testh.h:370 */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AmountOfSubstanceUomExt (74)
typedef char *ns2__AmountOfSubstanceUomExt;
#endif

/* testh.h:373 */
#ifndef SOAP_TYPE_ns2__AnglePerLengthUomExt
#define SOAP_TYPE_ns2__AnglePerLengthUomExt (75)
typedef char *ns2__AnglePerLengthUomExt;
#endif

/* testh.h:376 */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeUomExt
#define SOAP_TYPE_ns2__AnglePerVolumeUomExt (76)
typedef char *ns2__AnglePerVolumeUomExt;
#endif

/* testh.h:379 */
#ifndef SOAP_TYPE_ns2__AngularAccelerationUomExt
#define SOAP_TYPE_ns2__AngularAccelerationUomExt (77)
typedef char *ns2__AngularAccelerationUomExt;
#endif

/* testh.h:382 */
#ifndef SOAP_TYPE_ns2__AngularVelocityUomExt
#define SOAP_TYPE_ns2__AngularVelocityUomExt (78)
typedef char *ns2__AngularVelocityUomExt;
#endif

/* testh.h:385 */
#ifndef SOAP_TYPE_ns2__APIGammaRayUomExt
#define SOAP_TYPE_ns2__APIGammaRayUomExt (79)
typedef char *ns2__APIGammaRayUomExt;
#endif

/* testh.h:388 */
#ifndef SOAP_TYPE_ns2__APIGravityUomExt
#define SOAP_TYPE_ns2__APIGravityUomExt (80)
typedef char *ns2__APIGravityUomExt;
#endif

/* testh.h:391 */
#ifndef SOAP_TYPE_ns2__APINeutronUomExt
#define SOAP_TYPE_ns2__APINeutronUomExt (81)
typedef char *ns2__APINeutronUomExt;
#endif

/* testh.h:394 */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUomExt (82)
typedef char *ns2__AreaPerAmountOfSubstanceUomExt;
#endif

/* testh.h:397 */
#ifndef SOAP_TYPE_ns2__AreaPerAreaUomExt
#define SOAP_TYPE_ns2__AreaPerAreaUomExt (83)
typedef char *ns2__AreaPerAreaUomExt;
#endif

/* testh.h:400 */
#ifndef SOAP_TYPE_ns2__AreaPerCountUomExt
#define SOAP_TYPE_ns2__AreaPerCountUomExt (84)
typedef char *ns2__AreaPerCountUomExt;
#endif

/* testh.h:403 */
#ifndef SOAP_TYPE_ns2__AreaPerMassUomExt
#define SOAP_TYPE_ns2__AreaPerMassUomExt (85)
typedef char *ns2__AreaPerMassUomExt;
#endif

/* testh.h:406 */
#ifndef SOAP_TYPE_ns2__AreaPerTimeUomExt
#define SOAP_TYPE_ns2__AreaPerTimeUomExt (86)
typedef char *ns2__AreaPerTimeUomExt;
#endif

/* testh.h:409 */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeUomExt
#define SOAP_TYPE_ns2__AreaPerVolumeUomExt (87)
typedef char *ns2__AreaPerVolumeUomExt;
#endif

/* testh.h:412 */
#ifndef SOAP_TYPE_ns2__AreaUomExt
#define SOAP_TYPE_ns2__AreaUomExt (88)
typedef char *ns2__AreaUomExt;
#endif

/* testh.h:415 */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUomExt
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUomExt (89)
typedef char *ns2__AttenuationPerFrequencyIntervalUomExt;
#endif

/* testh.h:418 */
#ifndef SOAP_TYPE_ns2__CapacitanceUomExt
#define SOAP_TYPE_ns2__CapacitanceUomExt (90)
typedef char *ns2__CapacitanceUomExt;
#endif

/* testh.h:421 */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityUomExt
#define SOAP_TYPE_ns2__CationExchangeCapacityUomExt (91)
typedef char *ns2__CationExchangeCapacityUomExt;
#endif

/* testh.h:424 */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedUomExt
#define SOAP_TYPE_ns2__DataTransferSpeedUomExt (92)
typedef char *ns2__DataTransferSpeedUomExt;
#endif

/* testh.h:427 */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientUomExt
#define SOAP_TYPE_ns2__DiffusionCoefficientUomExt (93)
typedef char *ns2__DiffusionCoefficientUomExt;
#endif

/* testh.h:430 */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightUomExt
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightUomExt (94)
typedef char *ns2__DiffusiveTimeOfFlightUomExt;
#endif

/* testh.h:433 */
#ifndef SOAP_TYPE_ns2__DigitalStorageUomExt
#define SOAP_TYPE_ns2__DigitalStorageUomExt (95)
typedef char *ns2__DigitalStorageUomExt;
#endif

/* testh.h:436 */
#ifndef SOAP_TYPE_ns2__DimensionlessUomExt
#define SOAP_TYPE_ns2__DimensionlessUomExt (96)
typedef char *ns2__DimensionlessUomExt;
#endif

/* testh.h:439 */
#ifndef SOAP_TYPE_ns2__DipoleMomentUomExt
#define SOAP_TYPE_ns2__DipoleMomentUomExt (97)
typedef char *ns2__DipoleMomentUomExt;
#endif

/* testh.h:442 */
#ifndef SOAP_TYPE_ns2__DoseEquivalentUomExt
#define SOAP_TYPE_ns2__DoseEquivalentUomExt (98)
typedef char *ns2__DoseEquivalentUomExt;
#endif

/* testh.h:445 */
#ifndef SOAP_TYPE_ns2__DynamicViscosityUomExt
#define SOAP_TYPE_ns2__DynamicViscosityUomExt (99)
typedef char *ns2__DynamicViscosityUomExt;
#endif

/* testh.h:448 */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityUomExt
#define SOAP_TYPE_ns2__ElectricalResistivityUomExt (100)
typedef char *ns2__ElectricalResistivityUomExt;
#endif

/* testh.h:451 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaUomExt
#define SOAP_TYPE_ns2__ElectricChargePerAreaUomExt (101)
typedef char *ns2__ElectricChargePerAreaUomExt;
#endif

/* testh.h:454 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassUomExt
#define SOAP_TYPE_ns2__ElectricChargePerMassUomExt (102)
typedef char *ns2__ElectricChargePerMassUomExt;
#endif

/* testh.h:457 */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeUomExt
#define SOAP_TYPE_ns2__ElectricChargePerVolumeUomExt (103)
typedef char *ns2__ElectricChargePerVolumeUomExt;
#endif

/* testh.h:460 */
#ifndef SOAP_TYPE_ns2__ElectricChargeUomExt
#define SOAP_TYPE_ns2__ElectricChargeUomExt (104)
typedef char *ns2__ElectricChargeUomExt;
#endif

/* testh.h:463 */
#ifndef SOAP_TYPE_ns2__ElectricConductanceUomExt
#define SOAP_TYPE_ns2__ElectricConductanceUomExt (105)
typedef char *ns2__ElectricConductanceUomExt;
#endif

/* testh.h:466 */
#ifndef SOAP_TYPE_ns2__ElectricConductivityUomExt
#define SOAP_TYPE_ns2__ElectricConductivityUomExt (106)
typedef char *ns2__ElectricConductivityUomExt;
#endif

/* testh.h:469 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityUomExt
#define SOAP_TYPE_ns2__ElectricCurrentDensityUomExt (107)
typedef char *ns2__ElectricCurrentDensityUomExt;
#endif

/* testh.h:472 */
#ifndef SOAP_TYPE_ns2__ElectricCurrentUomExt
#define SOAP_TYPE_ns2__ElectricCurrentUomExt (108)
typedef char *ns2__ElectricCurrentUomExt;
#endif

/* testh.h:475 */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthUomExt
#define SOAP_TYPE_ns2__ElectricFieldStrengthUomExt (109)
typedef char *ns2__ElectricFieldStrengthUomExt;
#endif

/* testh.h:478 */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceUomExt
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceUomExt (110)
typedef char *ns2__ElectricPotentialDifferenceUomExt;
#endif

/* testh.h:481 */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthUomExt
#define SOAP_TYPE_ns2__ElectricResistancePerLengthUomExt (111)
typedef char *ns2__ElectricResistancePerLengthUomExt;
#endif

/* testh.h:484 */
#ifndef SOAP_TYPE_ns2__ElectricResistanceUomExt
#define SOAP_TYPE_ns2__ElectricResistanceUomExt (112)
typedef char *ns2__ElectricResistanceUomExt;
#endif

/* testh.h:487 */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentUomExt
#define SOAP_TYPE_ns2__ElectromagneticMomentUomExt (113)
typedef char *ns2__ElectromagneticMomentUomExt;
#endif

/* testh.h:490 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaUomExt
#define SOAP_TYPE_ns2__EnergyLengthPerAreaUomExt (114)
typedef char *ns2__EnergyLengthPerAreaUomExt;
#endif

/* testh.h:493 */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUomExt
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUomExt (115)
typedef char *ns2__EnergyLengthPerTimeAreaTemperatureUomExt;
#endif

/* testh.h:496 */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaUomExt
#define SOAP_TYPE_ns2__EnergyPerAreaUomExt (116)
typedef char *ns2__EnergyPerAreaUomExt;
#endif

/* testh.h:499 */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthUomExt
#define SOAP_TYPE_ns2__EnergyPerLengthUomExt (117)
typedef char *ns2__EnergyPerLengthUomExt;
#endif

/* testh.h:502 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeUomExt
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeUomExt (118)
typedef char *ns2__EnergyPerMassPerTimeUomExt;
#endif

/* testh.h:505 */
#ifndef SOAP_TYPE_ns2__EnergyPerMassUomExt
#define SOAP_TYPE_ns2__EnergyPerMassUomExt (119)
typedef char *ns2__EnergyPerMassUomExt;
#endif

/* testh.h:508 */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeUomExt
#define SOAP_TYPE_ns2__EnergyPerVolumeUomExt (120)
typedef char *ns2__EnergyPerVolumeUomExt;
#endif

/* testh.h:511 */
#ifndef SOAP_TYPE_ns2__EnergyUomExt
#define SOAP_TYPE_ns2__EnergyUomExt (121)
typedef char *ns2__EnergyUomExt;
#endif

/* testh.h:514 */
#ifndef SOAP_TYPE_ns2__ForceAreaUomExt
#define SOAP_TYPE_ns2__ForceAreaUomExt (122)
typedef char *ns2__ForceAreaUomExt;
#endif

/* testh.h:517 */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthUomExt
#define SOAP_TYPE_ns2__ForceLengthPerLengthUomExt (123)
typedef char *ns2__ForceLengthPerLengthUomExt;
#endif

/* testh.h:520 */
#ifndef SOAP_TYPE_ns2__ForcePerForceUomExt
#define SOAP_TYPE_ns2__ForcePerForceUomExt (124)
typedef char *ns2__ForcePerForceUomExt;
#endif

/* testh.h:523 */
#ifndef SOAP_TYPE_ns2__ForcePerLengthUomExt
#define SOAP_TYPE_ns2__ForcePerLengthUomExt (125)
typedef char *ns2__ForcePerLengthUomExt;
#endif

/* testh.h:526 */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeUomExt
#define SOAP_TYPE_ns2__ForcePerVolumeUomExt (126)
typedef char *ns2__ForcePerVolumeUomExt;
#endif

/* testh.h:529 */
#ifndef SOAP_TYPE_ns2__ForceUomExt
#define SOAP_TYPE_ns2__ForceUomExt (127)
typedef char *ns2__ForceUomExt;
#endif

/* testh.h:532 */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalUomExt
#define SOAP_TYPE_ns2__FrequencyIntervalUomExt (128)
typedef char *ns2__FrequencyIntervalUomExt;
#endif

/* testh.h:535 */
#ifndef SOAP_TYPE_ns2__FrequencyUomExt
#define SOAP_TYPE_ns2__FrequencyUomExt (129)
typedef char *ns2__FrequencyUomExt;
#endif

/* testh.h:538 */
#ifndef SOAP_TYPE_ns2__HeatCapacityUomExt
#define SOAP_TYPE_ns2__HeatCapacityUomExt (130)
typedef char *ns2__HeatCapacityUomExt;
#endif

/* testh.h:541 */
#ifndef SOAP_TYPE_ns2__HeatFlowRateUomExt
#define SOAP_TYPE_ns2__HeatFlowRateUomExt (131)
typedef char *ns2__HeatFlowRateUomExt;
#endif

/* testh.h:544 */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientUomExt
#define SOAP_TYPE_ns2__HeatTransferCoefficientUomExt (132)
typedef char *ns2__HeatTransferCoefficientUomExt;
#endif

/* testh.h:547 */
#ifndef SOAP_TYPE_ns2__IlluminanceUomExt
#define SOAP_TYPE_ns2__IlluminanceUomExt (133)
typedef char *ns2__IlluminanceUomExt;
#endif

/* testh.h:550 */
#ifndef SOAP_TYPE_ns2__InductanceUomExt
#define SOAP_TYPE_ns2__InductanceUomExt (134)
typedef char *ns2__InductanceUomExt;
#endif

/* testh.h:553 */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityUomExt
#define SOAP_TYPE_ns2__IsothermalCompressibilityUomExt (135)
typedef char *ns2__IsothermalCompressibilityUomExt;
#endif

/* testh.h:556 */
#ifndef SOAP_TYPE_ns2__KinematicViscosityUomExt
#define SOAP_TYPE_ns2__KinematicViscosityUomExt (136)
typedef char *ns2__KinematicViscosityUomExt;
#endif

/* testh.h:559 */
#ifndef SOAP_TYPE_ns2__LengthAndTimeUomExt
#define SOAP_TYPE_ns2__LengthAndTimeUomExt (137)
typedef char *ns2__LengthAndTimeUomExt;
#endif

/* testh.h:562 */
#ifndef SOAP_TYPE_ns2__LengthPerAngleUomExt
#define SOAP_TYPE_ns2__LengthPerAngleUomExt (138)
typedef char *ns2__LengthPerAngleUomExt;
#endif

/* testh.h:565 */
#ifndef SOAP_TYPE_ns2__LengthPerLengthUomExt
#define SOAP_TYPE_ns2__LengthPerLengthUomExt (139)
typedef char *ns2__LengthPerLengthUomExt;
#endif

/* testh.h:568 */
#ifndef SOAP_TYPE_ns2__LengthPerMassUomExt
#define SOAP_TYPE_ns2__LengthPerMassUomExt (140)
typedef char *ns2__LengthPerMassUomExt;
#endif

/* testh.h:571 */
#ifndef SOAP_TYPE_ns2__LengthPerPressureUomExt
#define SOAP_TYPE_ns2__LengthPerPressureUomExt (141)
typedef char *ns2__LengthPerPressureUomExt;
#endif

/* testh.h:574 */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureUomExt
#define SOAP_TYPE_ns2__LengthPerTemperatureUomExt (142)
typedef char *ns2__LengthPerTemperatureUomExt;
#endif

/* testh.h:577 */
#ifndef SOAP_TYPE_ns2__LengthPerTimeUomExt
#define SOAP_TYPE_ns2__LengthPerTimeUomExt (143)
typedef char *ns2__LengthPerTimeUomExt;
#endif

/* testh.h:580 */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeUomExt
#define SOAP_TYPE_ns2__LengthPerVolumeUomExt (144)
typedef char *ns2__LengthPerVolumeUomExt;
#endif

/* testh.h:583 */
#ifndef SOAP_TYPE_ns2__LengthUomExt
#define SOAP_TYPE_ns2__LengthUomExt (145)
typedef char *ns2__LengthUomExt;
#endif

/* testh.h:586 */
#ifndef SOAP_TYPE_ns2__LightExposureUomExt
#define SOAP_TYPE_ns2__LightExposureUomExt (146)
typedef char *ns2__LightExposureUomExt;
#endif

/* testh.h:589 */
#ifndef SOAP_TYPE_ns2__LinearAccelerationUomExt
#define SOAP_TYPE_ns2__LinearAccelerationUomExt (147)
typedef char *ns2__LinearAccelerationUomExt;
#endif

/* testh.h:592 */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionUomExt
#define SOAP_TYPE_ns2__LinearThermalExpansionUomExt (148)
typedef char *ns2__LinearThermalExpansionUomExt;
#endif

/* testh.h:595 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUomExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUomExt (149)
typedef char *ns2__LogarithmicPowerRatioPerLengthUomExt;
#endif

/* testh.h:598 */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioUomExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioUomExt (150)
typedef char *ns2__LogarithmicPowerRatioUomExt;
#endif

/* testh.h:601 */
#ifndef SOAP_TYPE_ns2__LuminanceUomExt
#define SOAP_TYPE_ns2__LuminanceUomExt (151)
typedef char *ns2__LuminanceUomExt;
#endif

/* testh.h:604 */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyUomExt
#define SOAP_TYPE_ns2__LuminousEfficacyUomExt (152)
typedef char *ns2__LuminousEfficacyUomExt;
#endif

/* testh.h:607 */
#ifndef SOAP_TYPE_ns2__LuminousFluxUomExt
#define SOAP_TYPE_ns2__LuminousFluxUomExt (153)
typedef char *ns2__LuminousFluxUomExt;
#endif

/* testh.h:610 */
#ifndef SOAP_TYPE_ns2__LuminousIntensityUomExt
#define SOAP_TYPE_ns2__LuminousIntensityUomExt (154)
typedef char *ns2__LuminousIntensityUomExt;
#endif

/* testh.h:613 */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentUomExt
#define SOAP_TYPE_ns2__MagneticDipoleMomentUomExt (155)
typedef char *ns2__MagneticDipoleMomentUomExt;
#endif

/* testh.h:616 */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthUomExt
#define SOAP_TYPE_ns2__MagneticFieldStrengthUomExt (156)
typedef char *ns2__MagneticFieldStrengthUomExt;
#endif

/* testh.h:619 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUomExt
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUomExt (157)
typedef char *ns2__MagneticFluxDensityPerLengthUomExt;
#endif

/* testh.h:622 */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityUomExt
#define SOAP_TYPE_ns2__MagneticFluxDensityUomExt (158)
typedef char *ns2__MagneticFluxDensityUomExt;
#endif

/* testh.h:625 */
#ifndef SOAP_TYPE_ns2__MagneticFluxUomExt
#define SOAP_TYPE_ns2__MagneticFluxUomExt (159)
typedef char *ns2__MagneticFluxUomExt;
#endif

/* testh.h:628 */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityUomExt
#define SOAP_TYPE_ns2__MagneticPermeabilityUomExt (160)
typedef char *ns2__MagneticPermeabilityUomExt;
#endif

/* testh.h:631 */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialUomExt
#define SOAP_TYPE_ns2__MagneticVectorPotentialUomExt (161)
typedef char *ns2__MagneticVectorPotentialUomExt;
#endif

/* testh.h:634 */
#ifndef SOAP_TYPE_ns2__MassLengthUomExt
#define SOAP_TYPE_ns2__MassLengthUomExt (162)
typedef char *ns2__MassLengthUomExt;
#endif

/* testh.h:637 */
#ifndef SOAP_TYPE_ns2__MassPerAreaUomExt
#define SOAP_TYPE_ns2__MassPerAreaUomExt (163)
typedef char *ns2__MassPerAreaUomExt;
#endif

/* testh.h:640 */
#ifndef SOAP_TYPE_ns2__MassPerEnergyUomExt
#define SOAP_TYPE_ns2__MassPerEnergyUomExt (164)
typedef char *ns2__MassPerEnergyUomExt;
#endif

/* testh.h:643 */
#ifndef SOAP_TYPE_ns2__MassPerLengthUomExt
#define SOAP_TYPE_ns2__MassPerLengthUomExt (165)
typedef char *ns2__MassPerLengthUomExt;
#endif

/* testh.h:646 */
#ifndef SOAP_TYPE_ns2__MassPerMassUomExt
#define SOAP_TYPE_ns2__MassPerMassUomExt (166)
typedef char *ns2__MassPerMassUomExt;
#endif

/* testh.h:649 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaUomExt
#define SOAP_TYPE_ns2__MassPerTimePerAreaUomExt (167)
typedef char *ns2__MassPerTimePerAreaUomExt;
#endif

/* testh.h:652 */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthUomExt
#define SOAP_TYPE_ns2__MassPerTimePerLengthUomExt (168)
typedef char *ns2__MassPerTimePerLengthUomExt;
#endif

/* testh.h:655 */
#ifndef SOAP_TYPE_ns2__MassPerTimeUomExt
#define SOAP_TYPE_ns2__MassPerTimeUomExt (169)
typedef char *ns2__MassPerTimeUomExt;
#endif

/* testh.h:658 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerLengthUomExt (170)
typedef char *ns2__MassPerVolumePerLengthUomExt;
#endif

/* testh.h:661 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerPressureUomExt (171)
typedef char *ns2__MassPerVolumePerPressureUomExt;
#endif

/* testh.h:664 */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureUomExt (172)
typedef char *ns2__MassPerVolumePerTemperatureUomExt;
#endif

/* testh.h:667 */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUomExt
#define SOAP_TYPE_ns2__MassPerVolumeUomExt (173)
typedef char *ns2__MassPerVolumeUomExt;
#endif

/* testh.h:670 */
#ifndef SOAP_TYPE_ns2__MassUomExt
#define SOAP_TYPE_ns2__MassUomExt (174)
typedef char *ns2__MassUomExt;
#endif

/* testh.h:673 */
#ifndef SOAP_TYPE_ns2__MobilityUomExt
#define SOAP_TYPE_ns2__MobilityUomExt (175)
typedef char *ns2__MobilityUomExt;
#endif

/* testh.h:676 */
#ifndef SOAP_TYPE_ns2__MolarEnergyUomExt
#define SOAP_TYPE_ns2__MolarEnergyUomExt (176)
typedef char *ns2__MolarEnergyUomExt;
#endif

/* testh.h:679 */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityUomExt
#define SOAP_TYPE_ns2__MolarHeatCapacityUomExt (177)
typedef char *ns2__MolarHeatCapacityUomExt;
#endif

/* testh.h:682 */
#ifndef SOAP_TYPE_ns2__MolarVolumeUomExt
#define SOAP_TYPE_ns2__MolarVolumeUomExt (178)
typedef char *ns2__MolarVolumeUomExt;
#endif

/* testh.h:685 */
#ifndef SOAP_TYPE_ns2__MolecularWeightUomExt
#define SOAP_TYPE_ns2__MolecularWeightUomExt (179)
typedef char *ns2__MolecularWeightUomExt;
#endif

/* testh.h:688 */
#ifndef SOAP_TYPE_ns2__MomentOfForceUomExt
#define SOAP_TYPE_ns2__MomentOfForceUomExt (180)
typedef char *ns2__MomentOfForceUomExt;
#endif

/* testh.h:691 */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaUomExt
#define SOAP_TYPE_ns2__MomentOfInertiaUomExt (181)
typedef char *ns2__MomentOfInertiaUomExt;
#endif

/* testh.h:694 */
#ifndef SOAP_TYPE_ns2__MomentumUomExt
#define SOAP_TYPE_ns2__MomentumUomExt (182)
typedef char *ns2__MomentumUomExt;
#endif

/* testh.h:697 */
#ifndef SOAP_TYPE_ns2__NormalizedPowerUomExt
#define SOAP_TYPE_ns2__NormalizedPowerUomExt (183)
typedef char *ns2__NormalizedPowerUomExt;
#endif

/* testh.h:700 */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthUomExt
#define SOAP_TYPE_ns2__PermeabilityLengthUomExt (184)
typedef char *ns2__PermeabilityLengthUomExt;
#endif

/* testh.h:703 */
#ifndef SOAP_TYPE_ns2__PermeabilityRockUomExt
#define SOAP_TYPE_ns2__PermeabilityRockUomExt (185)
typedef char *ns2__PermeabilityRockUomExt;
#endif

/* testh.h:706 */
#ifndef SOAP_TYPE_ns2__PermittivityUomExt
#define SOAP_TYPE_ns2__PermittivityUomExt (186)
typedef char *ns2__PermittivityUomExt;
#endif

/* testh.h:709 */
#ifndef SOAP_TYPE_ns2__PlaneAngleUomExt
#define SOAP_TYPE_ns2__PlaneAngleUomExt (187)
typedef char *ns2__PlaneAngleUomExt;
#endif

/* testh.h:712 */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUomExt
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUomExt (188)
typedef char *ns2__PotentialDifferencePerPowerDropUomExt;
#endif

/* testh.h:715 */
#ifndef SOAP_TYPE_ns2__PowerPerAreaUomExt
#define SOAP_TYPE_ns2__PowerPerAreaUomExt (189)
typedef char *ns2__PowerPerAreaUomExt;
#endif

/* testh.h:718 */
#ifndef SOAP_TYPE_ns2__PowerPerPowerUomExt
#define SOAP_TYPE_ns2__PowerPerPowerUomExt (190)
typedef char *ns2__PowerPerPowerUomExt;
#endif

/* testh.h:721 */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeUomExt
#define SOAP_TYPE_ns2__PowerPerVolumeUomExt (191)
typedef char *ns2__PowerPerVolumeUomExt;
#endif

/* testh.h:724 */
#ifndef SOAP_TYPE_ns2__PowerUomExt
#define SOAP_TYPE_ns2__PowerUomExt (192)
typedef char *ns2__PowerUomExt;
#endif

/* testh.h:727 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredUomExt
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredUomExt (193)
typedef char *ns2__PressurePerFlowrateSquaredUomExt;
#endif

/* testh.h:730 */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateUomExt
#define SOAP_TYPE_ns2__PressurePerFlowrateUomExt (194)
typedef char *ns2__PressurePerFlowrateUomExt;
#endif

/* testh.h:733 */
#ifndef SOAP_TYPE_ns2__PressurePerPressureUomExt
#define SOAP_TYPE_ns2__PressurePerPressureUomExt (195)
typedef char *ns2__PressurePerPressureUomExt;
#endif

/* testh.h:736 */
#ifndef SOAP_TYPE_ns2__PressurePerTimeUomExt
#define SOAP_TYPE_ns2__PressurePerTimeUomExt (196)
typedef char *ns2__PressurePerTimeUomExt;
#endif

/* testh.h:739 */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUomExt
#define SOAP_TYPE_ns2__PressurePerVolumeUomExt (197)
typedef char *ns2__PressurePerVolumeUomExt;
#endif

/* testh.h:742 */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUomExt
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUomExt (198)
typedef char *ns2__PressureSquaredPerForceTimePerAreaUomExt;
#endif

/* testh.h:745 */
#ifndef SOAP_TYPE_ns2__PressureSquaredUomExt
#define SOAP_TYPE_ns2__PressureSquaredUomExt (199)
typedef char *ns2__PressureSquaredUomExt;
#endif

/* testh.h:748 */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeUomExt
#define SOAP_TYPE_ns2__PressureTimePerVolumeUomExt (200)
typedef char *ns2__PressureTimePerVolumeUomExt;
#endif

/* testh.h:751 */
#ifndef SOAP_TYPE_ns2__PressureUomExt
#define SOAP_TYPE_ns2__PressureUomExt (201)
typedef char *ns2__PressureUomExt;
#endif

/* testh.h:754 */
#ifndef SOAP_TYPE_ns2__QuantityOfLightUomExt
#define SOAP_TYPE_ns2__QuantityOfLightUomExt (202)
typedef char *ns2__QuantityOfLightUomExt;
#endif

/* testh.h:757 */
#ifndef SOAP_TYPE_ns2__RadianceUomExt
#define SOAP_TYPE_ns2__RadianceUomExt (203)
typedef char *ns2__RadianceUomExt;
#endif

/* testh.h:760 */
#ifndef SOAP_TYPE_ns2__RadiantIntensityUomExt
#define SOAP_TYPE_ns2__RadiantIntensityUomExt (204)
typedef char *ns2__RadiantIntensityUomExt;
#endif

/* testh.h:763 */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaUomExt
#define SOAP_TYPE_ns2__ReciprocalAreaUomExt (205)
typedef char *ns2__ReciprocalAreaUomExt;
#endif

/* testh.h:766 */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUomExt
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUomExt (206)
typedef char *ns2__ReciprocalElectricPotentialDifferenceUomExt;
#endif

/* testh.h:769 */
#ifndef SOAP_TYPE_ns2__ReciprocalForceUomExt
#define SOAP_TYPE_ns2__ReciprocalForceUomExt (207)
typedef char *ns2__ReciprocalForceUomExt;
#endif

/* testh.h:772 */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthUomExt
#define SOAP_TYPE_ns2__ReciprocalLengthUomExt (208)
typedef char *ns2__ReciprocalLengthUomExt;
#endif

/* testh.h:775 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeUomExt
#define SOAP_TYPE_ns2__ReciprocalMassTimeUomExt (209)
typedef char *ns2__ReciprocalMassTimeUomExt;
#endif

/* testh.h:778 */
#ifndef SOAP_TYPE_ns2__ReciprocalMassUomExt
#define SOAP_TYPE_ns2__ReciprocalMassUomExt (210)
typedef char *ns2__ReciprocalMassUomExt;
#endif

/* testh.h:781 */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureUomExt
#define SOAP_TYPE_ns2__ReciprocalPressureUomExt (211)
typedef char *ns2__ReciprocalPressureUomExt;
#endif

/* testh.h:784 */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeUomExt
#define SOAP_TYPE_ns2__ReciprocalTimeUomExt (212)
typedef char *ns2__ReciprocalTimeUomExt;
#endif

/* testh.h:787 */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeUomExt
#define SOAP_TYPE_ns2__ReciprocalVolumeUomExt (213)
typedef char *ns2__ReciprocalVolumeUomExt;
#endif

/* testh.h:790 */
#ifndef SOAP_TYPE_ns2__ReluctanceUomExt
#define SOAP_TYPE_ns2__ReluctanceUomExt (214)
typedef char *ns2__ReluctanceUomExt;
#endif

/* testh.h:793 */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaUomExt
#define SOAP_TYPE_ns2__SecondMomentOfAreaUomExt (215)
typedef char *ns2__SecondMomentOfAreaUomExt;
#endif

/* testh.h:796 */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeUomExt
#define SOAP_TYPE_ns2__SignalingEventPerTimeUomExt (216)
typedef char *ns2__SignalingEventPerTimeUomExt;
#endif

/* testh.h:799 */
#ifndef SOAP_TYPE_ns2__SolidAngleUomExt
#define SOAP_TYPE_ns2__SolidAngleUomExt (217)
typedef char *ns2__SolidAngleUomExt;
#endif

/* testh.h:802 */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityUomExt
#define SOAP_TYPE_ns2__SpecificHeatCapacityUomExt (218)
typedef char *ns2__SpecificHeatCapacityUomExt;
#endif

/* testh.h:805 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthUomExt (219)
typedef char *ns2__TemperatureIntervalPerLengthUomExt;
#endif

/* testh.h:808 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureUomExt (220)
typedef char *ns2__TemperatureIntervalPerPressureUomExt;
#endif

/* testh.h:811 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeUomExt (221)
typedef char *ns2__TemperatureIntervalPerTimeUomExt;
#endif

/* testh.h:814 */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalUomExt (222)
typedef char *ns2__TemperatureIntervalUomExt;
#endif

/* testh.h:817 */
#ifndef SOAP_TYPE_ns2__ThermalConductanceUomExt
#define SOAP_TYPE_ns2__ThermalConductanceUomExt (223)
typedef char *ns2__ThermalConductanceUomExt;
#endif

/* testh.h:820 */
#ifndef SOAP_TYPE_ns2__ThermalConductivityUomExt
#define SOAP_TYPE_ns2__ThermalConductivityUomExt (224)
typedef char *ns2__ThermalConductivityUomExt;
#endif

/* testh.h:823 */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityUomExt
#define SOAP_TYPE_ns2__ThermalDiffusivityUomExt (225)
typedef char *ns2__ThermalDiffusivityUomExt;
#endif

/* testh.h:826 */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceUomExt
#define SOAP_TYPE_ns2__ThermalInsulanceUomExt (226)
typedef char *ns2__ThermalInsulanceUomExt;
#endif

/* testh.h:829 */
#ifndef SOAP_TYPE_ns2__ThermalResistanceUomExt
#define SOAP_TYPE_ns2__ThermalResistanceUomExt (227)
typedef char *ns2__ThermalResistanceUomExt;
#endif

/* testh.h:832 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt (228)
typedef char *ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt;
#endif

/* testh.h:835 */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureUomExt
#define SOAP_TYPE_ns2__ThermodynamicTemperatureUomExt (229)
typedef char *ns2__ThermodynamicTemperatureUomExt;
#endif

/* testh.h:838 */
#ifndef SOAP_TYPE_ns2__TimePerLengthUomExt
#define SOAP_TYPE_ns2__TimePerLengthUomExt (230)
typedef char *ns2__TimePerLengthUomExt;
#endif

/* testh.h:841 */
#ifndef SOAP_TYPE_ns2__TimePerMassUomExt
#define SOAP_TYPE_ns2__TimePerMassUomExt (231)
typedef char *ns2__TimePerMassUomExt;
#endif

/* testh.h:844 */
#ifndef SOAP_TYPE_ns2__TimePerTimeUomExt
#define SOAP_TYPE_ns2__TimePerTimeUomExt (232)
typedef char *ns2__TimePerTimeUomExt;
#endif

/* testh.h:847 */
#ifndef SOAP_TYPE_ns2__TimePerVolumeUomExt
#define SOAP_TYPE_ns2__TimePerVolumeUomExt (233)
typedef char *ns2__TimePerVolumeUomExt;
#endif

/* testh.h:850 */
#ifndef SOAP_TYPE_ns2__TimeUomExt
#define SOAP_TYPE_ns2__TimeUomExt (234)
typedef char *ns2__TimeUomExt;
#endif

/* testh.h:853 */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateUomExt
#define SOAP_TYPE_ns2__VerticalCoordinateUomExt (235)
typedef char *ns2__VerticalCoordinateUomExt;
#endif

/* testh.h:856 */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUomExt
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUomExt (236)
typedef char *ns2__VolumeFlowRatePerVolumeFlowRateUomExt;
#endif

/* testh.h:859 */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUomExt
#define SOAP_TYPE_ns2__VolumePerAreaUomExt (237)
typedef char *ns2__VolumePerAreaUomExt;
#endif

/* testh.h:862 */
#ifndef SOAP_TYPE_ns2__VolumePerLengthUomExt
#define SOAP_TYPE_ns2__VolumePerLengthUomExt (238)
typedef char *ns2__VolumePerLengthUomExt;
#endif

/* testh.h:865 */
#ifndef SOAP_TYPE_ns2__VolumePerMassUomExt
#define SOAP_TYPE_ns2__VolumePerMassUomExt (239)
typedef char *ns2__VolumePerMassUomExt;
#endif

/* testh.h:868 */
#ifndef SOAP_TYPE_ns2__VolumePerPressureUomExt
#define SOAP_TYPE_ns2__VolumePerPressureUomExt (240)
typedef char *ns2__VolumePerPressureUomExt;
#endif

/* testh.h:871 */
#ifndef SOAP_TYPE_ns2__VolumePerRotationUomExt
#define SOAP_TYPE_ns2__VolumePerRotationUomExt (241)
typedef char *ns2__VolumePerRotationUomExt;
#endif

/* testh.h:874 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimeLengthUomExt (242)
typedef char *ns2__VolumePerTimeLengthUomExt;
#endif

/* testh.h:877 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerAreaUomExt (243)
typedef char *ns2__VolumePerTimePerAreaUomExt;
#endif

/* testh.h:880 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerLengthUomExt (244)
typedef char *ns2__VolumePerTimePerLengthUomExt;
#endif

/* testh.h:883 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUomExt (245)
typedef char *ns2__VolumePerTimePerPressureLengthUomExt;
#endif

/* testh.h:886 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureUomExt (246)
typedef char *ns2__VolumePerTimePerPressureUomExt;
#endif

/* testh.h:889 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerTimeUomExt (247)
typedef char *ns2__VolumePerTimePerTimeUomExt;
#endif

/* testh.h:892 */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeUomExt (248)
typedef char *ns2__VolumePerTimePerVolumeUomExt;
#endif

/* testh.h:895 */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUomExt
#define SOAP_TYPE_ns2__VolumePerTimeUomExt (249)
typedef char *ns2__VolumePerTimeUomExt;
#endif

/* testh.h:898 */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUomExt
#define SOAP_TYPE_ns2__VolumePerVolumeUomExt (250)
typedef char *ns2__VolumePerVolumeUomExt;
#endif

/* testh.h:901 */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUomExt
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUomExt (251)
typedef char *ns2__VolumetricHeatTransferCoefficientUomExt;
#endif

/* testh.h:904 */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionUomExt
#define SOAP_TYPE_ns2__VolumetricThermalExpansionUomExt (252)
typedef char *ns2__VolumetricThermalExpansionUomExt;
#endif

/* testh.h:907 */
#ifndef SOAP_TYPE_ns2__VolumeUomExt
#define SOAP_TYPE_ns2__VolumeUomExt (253)
typedef char *ns2__VolumeUomExt;
#endif

/* testh.h:910 */
#ifndef SOAP_TYPE_ns2__FacetExt
#define SOAP_TYPE_ns2__FacetExt (254)
typedef char *ns2__FacetExt;
#endif

/* testh.h:913 */
#ifndef SOAP_TYPE_ns2__FacilityLifecycleStateExt
#define SOAP_TYPE_ns2__FacilityLifecycleStateExt (255)
typedef char *ns2__FacilityLifecycleStateExt;
#endif

/* testh.h:916 */
#ifndef SOAP_TYPE_ns2__OrganizationKindExt
#define SOAP_TYPE_ns2__OrganizationKindExt (256)
typedef char *ns2__OrganizationKindExt;
#endif

/* testh.h:919 */
#ifndef SOAP_TYPE_ns2__CollectionKindExt
#define SOAP_TYPE_ns2__CollectionKindExt (257)
typedef char *ns2__CollectionKindExt;
#endif

/* testh.h:928 */
#ifndef SOAP_TYPE_ns1__PumpActionIntegerCode
#define SOAP_TYPE_ns1__PumpActionIntegerCode (259)
typedef LONG64 ns1__PumpActionIntegerCode;
#endif

/* testh.h:937 */
#ifndef SOAP_TYPE_ns1__BeaufortScaleIntegerCode
#define SOAP_TYPE_ns1__BeaufortScaleIntegerCode (260)
typedef LONG64 ns1__BeaufortScaleIntegerCode;
#endif

/* testh.h:947 */
#ifndef SOAP_TYPE_ns1__LevelIntegerCode
#define SOAP_TYPE_ns1__LevelIntegerCode (261)
typedef LONG64 ns1__LevelIntegerCode;
#endif

/* testh.h:956 */
#ifndef SOAP_TYPE_ns1__NonNegativeFraction
#define SOAP_TYPE_ns1__NonNegativeFraction (263)
typedef double ns1__NonNegativeFraction;
#endif

/* testh.h:972 */
#ifndef SOAP_TYPE_ns2__AbstractMeasure
#define SOAP_TYPE_ns2__AbstractMeasure (264)
typedef double ns2__AbstractMeasure;
#endif

/* testh.h:980 */
#ifndef SOAP_TYPE_ns2__AbstractString
#define SOAP_TYPE_ns2__AbstractString (265)
typedef char *ns2__AbstractString;
#endif

/* testh.h:985 */
#ifndef SOAP_TYPE_ns2__NonNegativeLong
#define SOAP_TYPE_ns2__NonNegativeLong (266)
typedef LONG64 ns2__NonNegativeLong;
#endif

/* testh.h:990 */
#ifndef SOAP_TYPE_ns2__PositiveDouble
#define SOAP_TYPE_ns2__PositiveDouble (267)
typedef double ns2__PositiveDouble;
#endif

/* testh.h:995 */
#ifndef SOAP_TYPE_ns2__PositiveLong
#define SOAP_TYPE_ns2__PositiveLong (268)
typedef LONG64 ns2__PositiveLong;
#endif

/* testh.h:1000 */
#ifndef SOAP_TYPE_ns2__TimeStamp
#define SOAP_TYPE_ns2__TimeStamp (270)
typedef time_t ns2__TimeStamp;
#endif

/* testh.h:1013 */
#ifndef SOAP_TYPE_ns2__EnumExtensionPattern
#define SOAP_TYPE_ns2__EnumExtensionPattern (271)
typedef char *ns2__EnumExtensionPattern;
#endif

/* testh.h:1018 */
#ifndef SOAP_TYPE_ns2__String2000
#define SOAP_TYPE_ns2__String2000 (272)
typedef char *ns2__String2000;
#endif

/* testh.h:1023 */
#ifndef SOAP_TYPE_ns2__String256
#define SOAP_TYPE_ns2__String256 (273)
typedef char *ns2__String256;
#endif

/* testh.h:1028 */
#ifndef SOAP_TYPE_ns2__String64
#define SOAP_TYPE_ns2__String64 (274)
typedef char *ns2__String64;
#endif

/* testh.h:1038 */
#ifndef SOAP_TYPE_ns2__UomEnum
#define SOAP_TYPE_ns2__UomEnum (275)
typedef char *ns2__UomEnum;
#endif

/* testh.h:1043 */
#ifndef SOAP_TYPE_ns2__UuidString
#define SOAP_TYPE_ns2__UuidString (276)
typedef char *ns2__UuidString;
#endif

/* testh.h:1056 */
#ifndef SOAP_TYPE_ns2__QualifiedType
#define SOAP_TYPE_ns2__QualifiedType (277)
typedef char *ns2__QualifiedType;
#endif

/* testh.h:1065 */
#ifndef SOAP_TYPE_ns2__TimeZone
#define SOAP_TYPE_ns2__TimeZone (278)
typedef char *ns2__TimeZone;
#endif

/* testh.h:1073 */
#ifndef SOAP_TYPE_ns2__TypeEnum
#define SOAP_TYPE_ns2__TypeEnum (279)
typedef ns2__String64 ns2__TypeEnum;
#endif

/* testh.h:2634 */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemQuarterSection
#define SOAP_TYPE_ns2__PublicLandSurveySystemQuarterSection (282)
typedef char *ns2__PublicLandSurveySystemQuarterSection;
#endif

/* testh.h:2643 */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemQuarterTownship
#define SOAP_TYPE_ns2__PublicLandSurveySystemQuarterTownship (283)
typedef char *ns2__PublicLandSurveySystemQuarterTownship;
#endif

/* testh.h:2652 */
#ifndef SOAP_TYPE_ns2__SectionNumber
#define SOAP_TYPE_ns2__SectionNumber (284)
typedef char *ns2__SectionNumber;
#endif

/* testh.h:64768 */
#ifndef SOAP_TYPE__ns1__BhaRun
#define SOAP_TYPE__ns1__BhaRun (2225)
typedef struct ns1__BhaRun _ns1__BhaRun;
#endif

/* testh.h:64771 */
#ifndef SOAP_TYPE__ns1__FluidsReport
#define SOAP_TYPE__ns1__FluidsReport (2226)
typedef struct ns1__FluidsReport _ns1__FluidsReport;
#endif

/* testh.h:64774 */
#ifndef SOAP_TYPE__ns1__Wellbore
#define SOAP_TYPE__ns1__Wellbore (2227)
typedef struct ns1__Wellbore _ns1__Wellbore;
#endif

/* testh.h:64777 */
#ifndef SOAP_TYPE__ns1__Well
#define SOAP_TYPE__ns1__Well (2228)
typedef struct ns1__Well _ns1__Well;
#endif

/* testh.h:64780 */
#ifndef SOAP_TYPE__ns1__Tubular
#define SOAP_TYPE__ns1__Tubular (2229)
typedef struct ns1__Tubular _ns1__Tubular;
#endif

/* testh.h:64783 */
#ifndef SOAP_TYPE__ns1__CementJob
#define SOAP_TYPE__ns1__CementJob (2230)
typedef struct ns1__CementJob _ns1__CementJob;
#endif

/* testh.h:64786 */
#ifndef SOAP_TYPE__ns1__CementJobEvaluation
#define SOAP_TYPE__ns1__CementJobEvaluation (2231)
typedef struct ns1__CementJobEvaluation _ns1__CementJobEvaluation;
#endif

/* testh.h:64789 */
#ifndef SOAP_TYPE__ns1__WellboreGeometry
#define SOAP_TYPE__ns1__WellboreGeometry (2232)
typedef struct ns1__WellboreGeometry _ns1__WellboreGeometry;
#endif

/* testh.h:64792 */
#ifndef SOAP_TYPE__ns1__WellboreGeometrySection
#define SOAP_TYPE__ns1__WellboreGeometrySection (2233)
typedef struct ns1__WellboreGeometrySection _ns1__WellboreGeometrySection;
#endif

/* testh.h:64795 */
#ifndef SOAP_TYPE__ns1__DepthRegImage
#define SOAP_TYPE__ns1__DepthRegImage (2234)
typedef struct ns1__DepthRegImage _ns1__DepthRegImage;
#endif

/* testh.h:64798 */
#ifndef SOAP_TYPE__ns1__Channel
#define SOAP_TYPE__ns1__Channel (2235)
typedef struct ns1__Channel _ns1__Channel;
#endif

/* testh.h:64801 */
#ifndef SOAP_TYPE__ns1__ChannelSet
#define SOAP_TYPE__ns1__ChannelSet (2236)
typedef struct ns1__ChannelSet _ns1__ChannelSet;
#endif

/* testh.h:64804 */
#ifndef SOAP_TYPE__ns1__Log
#define SOAP_TYPE__ns1__Log (2237)
typedef struct ns1__Log _ns1__Log;
#endif

/* testh.h:64807 */
#ifndef SOAP_TYPE__ns1__ChannelKind
#define SOAP_TYPE__ns1__ChannelKind (2238)
typedef struct ns1__ChannelKind _ns1__ChannelKind;
#endif

/* testh.h:64810 */
#ifndef SOAP_TYPE__ns1__ChannelKindDictionary
#define SOAP_TYPE__ns1__ChannelKindDictionary (2239)
typedef struct ns1__ChannelKindDictionary _ns1__ChannelKindDictionary;
#endif

/* testh.h:64813 */
#ifndef SOAP_TYPE__ns1__LoggingToolKind
#define SOAP_TYPE__ns1__LoggingToolKind (2240)
typedef struct ns1__LoggingToolKind _ns1__LoggingToolKind;
#endif

/* testh.h:64816 */
#ifndef SOAP_TYPE__ns1__LoggingToolKindDictionary
#define SOAP_TYPE__ns1__LoggingToolKindDictionary (2241)
typedef struct ns1__LoggingToolKindDictionary _ns1__LoggingToolKindDictionary;
#endif

/* testh.h:64819 */
#ifndef SOAP_TYPE__ns1__DownholeComponent
#define SOAP_TYPE__ns1__DownholeComponent (2242)
typedef struct ns1__DownholeComponent _ns1__DownholeComponent;
#endif

/* testh.h:64822 */
#ifndef SOAP_TYPE__ns1__WellCMLedger
#define SOAP_TYPE__ns1__WellCMLedger (2243)
typedef struct ns1__WellCMLedger _ns1__WellCMLedger;
#endif

/* testh.h:64825 */
#ifndef SOAP_TYPE__ns1__DrillReport
#define SOAP_TYPE__ns1__DrillReport (2244)
typedef struct ns1__DrillReport _ns1__DrillReport;
#endif

/* testh.h:64828 */
#ifndef SOAP_TYPE__ns1__Rig
#define SOAP_TYPE__ns1__Rig (2245)
typedef struct ns1__Rig _ns1__Rig;
#endif

/* testh.h:64831 */
#ifndef SOAP_TYPE__ns1__RigUtilization
#define SOAP_TYPE__ns1__RigUtilization (2246)
typedef struct ns1__RigUtilization _ns1__RigUtilization;
#endif

/* testh.h:64834 */
#ifndef SOAP_TYPE__ns1__MudLogReport
#define SOAP_TYPE__ns1__MudLogReport (2247)
typedef struct ns1__MudLogReport _ns1__MudLogReport;
#endif

/* testh.h:64837 */
#ifndef SOAP_TYPE__ns1__MudlogReportInterval
#define SOAP_TYPE__ns1__MudlogReportInterval (2248)
typedef struct ns1__MudlogReportInterval _ns1__MudlogReportInterval;
#endif

/* testh.h:64840 */
#ifndef SOAP_TYPE__ns1__CuttingsGeology
#define SOAP_TYPE__ns1__CuttingsGeology (2249)
typedef struct ns1__CuttingsGeology _ns1__CuttingsGeology;
#endif

/* testh.h:64843 */
#ifndef SOAP_TYPE__ns1__CuttingsGeologyInterval
#define SOAP_TYPE__ns1__CuttingsGeologyInterval (2250)
typedef struct ns1__CuttingsGeologyInterval _ns1__CuttingsGeologyInterval;
#endif

/* testh.h:64846 */
#ifndef SOAP_TYPE__ns1__InterpretedGeology
#define SOAP_TYPE__ns1__InterpretedGeology (2251)
typedef struct ns1__InterpretedGeology _ns1__InterpretedGeology;
#endif

/* testh.h:64849 */
#ifndef SOAP_TYPE__ns1__InterpretedGeologyInterval
#define SOAP_TYPE__ns1__InterpretedGeologyInterval (2252)
typedef struct ns1__InterpretedGeologyInterval _ns1__InterpretedGeologyInterval;
#endif

/* testh.h:64852 */
#ifndef SOAP_TYPE__ns1__ShowEvaluation
#define SOAP_TYPE__ns1__ShowEvaluation (2253)
typedef struct ns1__ShowEvaluation _ns1__ShowEvaluation;
#endif

/* testh.h:64855 */
#ifndef SOAP_TYPE__ns1__ShowEvaluationInterval
#define SOAP_TYPE__ns1__ShowEvaluationInterval (2254)
typedef struct ns1__ShowEvaluationInterval _ns1__ShowEvaluationInterval;
#endif

/* testh.h:64858 */
#ifndef SOAP_TYPE__ns1__WellboreGeology
#define SOAP_TYPE__ns1__WellboreGeology (2255)
typedef struct ns1__WellboreGeology _ns1__WellboreGeology;
#endif

/* testh.h:64861 */
#ifndef SOAP_TYPE__ns1__Trajectory
#define SOAP_TYPE__ns1__Trajectory (2256)
typedef struct ns1__Trajectory _ns1__Trajectory;
#endif

/* testh.h:64864 */
#ifndef SOAP_TYPE__ns1__TrajectoryStation
#define SOAP_TYPE__ns1__TrajectoryStation (2257)
typedef struct ns1__TrajectoryStation _ns1__TrajectoryStation;
#endif

/* testh.h:64867 */
#ifndef SOAP_TYPE__ns1__Target
#define SOAP_TYPE__ns1__Target (2258)
typedef struct ns1__Target _ns1__Target;
#endif

/* testh.h:64870 */
#ifndef SOAP_TYPE__ns1__ErrorTerm
#define SOAP_TYPE__ns1__ErrorTerm (2259)
typedef struct ns1__ErrorTerm _ns1__ErrorTerm;
#endif

/* testh.h:64873 */
#ifndef SOAP_TYPE__ns1__ErrorTermDictionary
#define SOAP_TYPE__ns1__ErrorTermDictionary (2260)
typedef struct ns1__ErrorTermDictionary _ns1__ErrorTermDictionary;
#endif

/* testh.h:64876 */
#ifndef SOAP_TYPE__ns1__ToolErrorModel
#define SOAP_TYPE__ns1__ToolErrorModel (2261)
typedef struct ns1__ToolErrorModel _ns1__ToolErrorModel;
#endif

/* testh.h:64879 */
#ifndef SOAP_TYPE__ns1__ToolErrorModelDictionary
#define SOAP_TYPE__ns1__ToolErrorModelDictionary (2262)
typedef struct ns1__ToolErrorModelDictionary _ns1__ToolErrorModelDictionary;
#endif

/* testh.h:64882 */
#ifndef SOAP_TYPE__ns1__WeightingFunction
#define SOAP_TYPE__ns1__WeightingFunction (2263)
typedef struct ns1__WeightingFunction _ns1__WeightingFunction;
#endif

/* testh.h:64885 */
#ifndef SOAP_TYPE__ns1__WeightingFunctionDictionary
#define SOAP_TYPE__ns1__WeightingFunctionDictionary (2264)
typedef struct ns1__WeightingFunctionDictionary _ns1__WeightingFunctionDictionary;
#endif

/* testh.h:64888 */
#ifndef SOAP_TYPE__ns1__SurveyProgram
#define SOAP_TYPE__ns1__SurveyProgram (2265)
typedef struct ns1__SurveyProgram _ns1__SurveyProgram;
#endif

/* testh.h:64891 */
#ifndef SOAP_TYPE__ns1__StimJob
#define SOAP_TYPE__ns1__StimJob (2266)
typedef struct ns1__StimJob _ns1__StimJob;
#endif

/* testh.h:64894 */
#ifndef SOAP_TYPE__ns1__StimJobStage
#define SOAP_TYPE__ns1__StimJobStage (2267)
typedef struct ns1__StimJobStage _ns1__StimJobStage;
#endif

/* testh.h:64897 */
#ifndef SOAP_TYPE__ns1__StimPerforationCluster
#define SOAP_TYPE__ns1__StimPerforationCluster (2268)
typedef struct ns1__StimPerforationCluster _ns1__StimPerforationCluster;
#endif

/* testh.h:64900 */
#ifndef SOAP_TYPE__ns1__OpsReport
#define SOAP_TYPE__ns1__OpsReport (2269)
typedef struct ns1__OpsReport _ns1__OpsReport;
#endif

/* testh.h:64903 */
#ifndef SOAP_TYPE__ns1__PPFGChannel
#define SOAP_TYPE__ns1__PPFGChannel (2270)
typedef struct ns1__PPFGChannel _ns1__PPFGChannel;
#endif

/* testh.h:64906 */
#ifndef SOAP_TYPE__ns1__PPFGChannelSet
#define SOAP_TYPE__ns1__PPFGChannelSet (2271)
typedef struct ns1__PPFGChannelSet _ns1__PPFGChannelSet;
#endif

/* testh.h:64909 */
#ifndef SOAP_TYPE__ns1__PPFGLog
#define SOAP_TYPE__ns1__PPFGLog (2272)
typedef struct ns1__PPFGLog _ns1__PPFGLog;
#endif

/* testh.h:64912 */
#ifndef SOAP_TYPE__ns1__Risk
#define SOAP_TYPE__ns1__Risk (2273)
typedef struct ns1__Risk _ns1__Risk;
#endif

/* testh.h:64915 */
#ifndef SOAP_TYPE__ns1__WellboreCompletion
#define SOAP_TYPE__ns1__WellboreCompletion (2274)
typedef struct ns1__WellboreCompletion _ns1__WellboreCompletion;
#endif

/* testh.h:64918 */
#ifndef SOAP_TYPE__ns1__WellCompletion
#define SOAP_TYPE__ns1__WellCompletion (2275)
typedef struct ns1__WellCompletion _ns1__WellCompletion;
#endif

/* testh.h:64921 */
#ifndef SOAP_TYPE__ns1__WellboreMarker
#define SOAP_TYPE__ns1__WellboreMarker (2276)
typedef struct ns1__WellboreMarker _ns1__WellboreMarker;
#endif

/* testh.h:64924 */
#ifndef SOAP_TYPE__ns1__WellboreMarkerSet
#define SOAP_TYPE__ns1__WellboreMarkerSet (2277)
typedef struct ns1__WellboreMarkerSet _ns1__WellboreMarkerSet;
#endif

/* testh.h:64943 */
#ifndef SOAP_TYPE__ns2__RecursiveReferencePoint
#define SOAP_TYPE__ns2__RecursiveReferencePoint (2278)
typedef struct ns2__RecursiveReferencePoint _ns2__RecursiveReferencePoint;
#endif

/* testh.h:64946 */
#ifndef SOAP_TYPE__ns2__ReferencePointInACrs
#define SOAP_TYPE__ns2__ReferencePointInACrs (2279)
typedef struct ns2__ReferencePointInACrs _ns2__ReferencePointInACrs;
#endif

/* testh.h:64949 */
#ifndef SOAP_TYPE__ns2__ReferencePointInALocalEngineeringCompoundCrs
#define SOAP_TYPE__ns2__ReferencePointInALocalEngineeringCompoundCrs (2280)
typedef struct ns2__ReferencePointInALocalEngineeringCompoundCrs _ns2__ReferencePointInALocalEngineeringCompoundCrs;
#endif

/* testh.h:64952 */
#ifndef SOAP_TYPE__ns2__ReferencePointInAWellbore
#define SOAP_TYPE__ns2__ReferencePointInAWellbore (2281)
typedef struct ns2__ReferencePointInAWellbore _ns2__ReferencePointInAWellbore;
#endif

/* testh.h:64955 */
#ifndef SOAP_TYPE__ns2__Geographic2dCrs
#define SOAP_TYPE__ns2__Geographic2dCrs (2282)
typedef struct ns2__Geographic2dCrs _ns2__Geographic2dCrs;
#endif

/* testh.h:64958 */
#ifndef SOAP_TYPE__ns2__LocalEngineering2dCrs
#define SOAP_TYPE__ns2__LocalEngineering2dCrs (2283)
typedef struct ns2__LocalEngineering2dCrs _ns2__LocalEngineering2dCrs;
#endif

/* testh.h:64961 */
#ifndef SOAP_TYPE__ns2__LocalEngineeringCompoundCrs
#define SOAP_TYPE__ns2__LocalEngineeringCompoundCrs (2284)
typedef struct ns2__LocalEngineeringCompoundCrs _ns2__LocalEngineeringCompoundCrs;
#endif

/* testh.h:64964 */
#ifndef SOAP_TYPE__ns2__ProjectedCrs
#define SOAP_TYPE__ns2__ProjectedCrs (2285)
typedef struct ns2__ProjectedCrs _ns2__ProjectedCrs;
#endif

/* testh.h:64967 */
#ifndef SOAP_TYPE__ns2__VerticalCrs
#define SOAP_TYPE__ns2__VerticalCrs (2286)
typedef struct ns2__VerticalCrs _ns2__VerticalCrs;
#endif

/* testh.h:64970 */
#ifndef SOAP_TYPE__ns2__PropertyKind
#define SOAP_TYPE__ns2__PropertyKind (2287)
typedef struct ns2__PropertyKind _ns2__PropertyKind;
#endif

/* testh.h:64973 */
#ifndef SOAP_TYPE__ns2__PropertyKindDictionary
#define SOAP_TYPE__ns2__PropertyKindDictionary (2288)
typedef struct ns2__PropertyKindDictionary _ns2__PropertyKindDictionary;
#endif

/* testh.h:64976 */
#ifndef SOAP_TYPE__ns2__TimeSeries
#define SOAP_TYPE__ns2__TimeSeries (2289)
typedef struct ns2__TimeSeries _ns2__TimeSeries;
#endif

/* testh.h:64979 */
#ifndef SOAP_TYPE__ns2__BusinessAssociate
#define SOAP_TYPE__ns2__BusinessAssociate (2290)
typedef struct ns2__BusinessAssociate _ns2__BusinessAssociate;
#endif

/* testh.h:64982 */
#ifndef SOAP_TYPE__ns2__Activity
#define SOAP_TYPE__ns2__Activity (2291)
typedef struct ns2__Activity _ns2__Activity;
#endif

/* testh.h:64985 */
#ifndef SOAP_TYPE__ns2__ActivityTemplate
#define SOAP_TYPE__ns2__ActivityTemplate (2292)
typedef struct ns2__ActivityTemplate _ns2__ActivityTemplate;
#endif

/* testh.h:64988 */
#ifndef SOAP_TYPE__ns2__Aggregate
#define SOAP_TYPE__ns2__Aggregate (2293)
typedef struct ns2__Aggregate _ns2__Aggregate;
#endif

/* testh.h:64991 */
#ifndef SOAP_TYPE__ns2__Attachment
#define SOAP_TYPE__ns2__Attachment (2294)
typedef struct ns2__Attachment _ns2__Attachment;
#endif

/* testh.h:64994 */
#ifndef SOAP_TYPE__ns2__CollectionsToDataobjectsAssociationSet
#define SOAP_TYPE__ns2__CollectionsToDataobjectsAssociationSet (2295)
typedef struct ns2__CollectionsToDataobjectsAssociationSet _ns2__CollectionsToDataobjectsAssociationSet;
#endif

/* testh.h:64997 */
#ifndef SOAP_TYPE__ns2__DataobjectCollection
#define SOAP_TYPE__ns2__DataobjectCollection (2296)
typedef struct ns2__DataobjectCollection _ns2__DataobjectCollection;
#endif

/* testh.h:65000 */
#ifndef SOAP_TYPE__ns2__ColumnBasedTable
#define SOAP_TYPE__ns2__ColumnBasedTable (2297)
typedef struct ns2__ColumnBasedTable _ns2__ColumnBasedTable;
#endif

/* testh.h:65003 */
#ifndef SOAP_TYPE__ns2__DataAssuranceRecord
#define SOAP_TYPE__ns2__DataAssuranceRecord (2298)
typedef struct ns2__DataAssuranceRecord _ns2__DataAssuranceRecord;
#endif

/* testh.h:65006 */
#ifndef SOAP_TYPE__ns2__GraphicalInformationSet
#define SOAP_TYPE__ns2__GraphicalInformationSet (2299)
typedef struct ns2__GraphicalInformationSet _ns2__GraphicalInformationSet;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* ns2__PositiveLong has binding name 'ns2__PositiveLong' for type 'ns2:PositiveLong' */
#ifndef SOAP_TYPE_ns2__PositiveLong
#define SOAP_TYPE_ns2__PositiveLong (268)
#endif

/* ns2__NonNegativeLong has binding name 'ns2__NonNegativeLong' for type 'ns2:NonNegativeLong' */
#ifndef SOAP_TYPE_ns2__NonNegativeLong
#define SOAP_TYPE_ns2__NonNegativeLong (266)
#endif

/* ns1__LevelIntegerCode has binding name 'ns1__LevelIntegerCode' for type 'ns1:LevelIntegerCode' */
#ifndef SOAP_TYPE_ns1__LevelIntegerCode
#define SOAP_TYPE_ns1__LevelIntegerCode (261)
#endif

/* ns1__BeaufortScaleIntegerCode has binding name 'ns1__BeaufortScaleIntegerCode' for type 'ns1:BeaufortScaleIntegerCode' */
#ifndef SOAP_TYPE_ns1__BeaufortScaleIntegerCode
#define SOAP_TYPE_ns1__BeaufortScaleIntegerCode (260)
#endif

/* ns1__PumpActionIntegerCode has binding name 'ns1__PumpActionIntegerCode' for type 'ns1:PumpActionIntegerCode' */
#ifndef SOAP_TYPE_ns1__PumpActionIntegerCode
#define SOAP_TYPE_ns1__PumpActionIntegerCode (259)
#endif

/* LONG64 has binding name 'LONG64' for type 'xsd:long' */
#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (258)
#endif

/* ns2__PositiveDouble has binding name 'ns2__PositiveDouble' for type 'ns2:PositiveDouble' */
#ifndef SOAP_TYPE_ns2__PositiveDouble
#define SOAP_TYPE_ns2__PositiveDouble (267)
#endif

/* ns2__AbstractMeasure has binding name 'ns2__AbstractMeasure' for type 'ns2:AbstractMeasure' */
#ifndef SOAP_TYPE_ns2__AbstractMeasure
#define SOAP_TYPE_ns2__AbstractMeasure (264)
#endif

/* ns1__NonNegativeFraction has binding name 'ns1__NonNegativeFraction' for type 'ns1:NonNegativeFraction' */
#ifndef SOAP_TYPE_ns1__NonNegativeFraction
#define SOAP_TYPE_ns1__NonNegativeFraction (263)
#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (262)
#endif

/* unsigned char has binding name 'unsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif

/* ns2__TimeStamp has binding name 'ns2__TimeStamp' for type 'ns2:TimeStamp' */
#ifndef SOAP_TYPE_ns2__TimeStamp
#define SOAP_TYPE_ns2__TimeStamp (270)
#endif

/* time_t has binding name 'dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_dateTime
#define SOAP_TYPE_dateTime (269)
#endif

/* enum ns2__CollectionKind has binding name 'ns2__CollectionKind' for type 'ns2:CollectionKind' */
#ifndef SOAP_TYPE_ns2__CollectionKind
#define SOAP_TYPE_ns2__CollectionKind (662)
#endif

/* enum ns2__ActivityParameterKind has binding name 'ns2__ActivityParameterKind' for type 'ns2:ActivityParameterKind' */
#ifndef SOAP_TYPE_ns2__ActivityParameterKind
#define SOAP_TYPE_ns2__ActivityParameterKind (661)
#endif

/* enum ns2__PhoneType has binding name 'ns2__PhoneType' for type 'ns2:PhoneType' */
#ifndef SOAP_TYPE_ns2__PhoneType
#define SOAP_TYPE_ns2__PhoneType (660)
#endif

/* enum ns2__OrganizationKind has binding name 'ns2__OrganizationKind' for type 'ns2:OrganizationKind' */
#ifndef SOAP_TYPE_ns2__OrganizationKind
#define SOAP_TYPE_ns2__OrganizationKind (659)
#endif

/* enum ns2__AddressQualifier has binding name 'ns2__AddressQualifier' for type 'ns2:AddressQualifier' */
#ifndef SOAP_TYPE_ns2__AddressQualifier
#define SOAP_TYPE_ns2__AddressQualifier (658)
#endif

/* enum ns2__AddressKindEnum has binding name 'ns2__AddressKindEnum' for type 'ns2:AddressKindEnum' */
#ifndef SOAP_TYPE_ns2__AddressKindEnum
#define SOAP_TYPE_ns2__AddressKindEnum (657)
#endif

/* enum ns2__FacilityLifecycleState has binding name 'ns2__FacilityLifecycleState' for type 'ns2:FacilityLifecycleState' */
#ifndef SOAP_TYPE_ns2__FacilityLifecycleState
#define SOAP_TYPE_ns2__FacilityLifecycleState (656)
#endif

/* enum ns2__FacetKind has binding name 'ns2__FacetKind' for type 'ns2:FacetKind' */
#ifndef SOAP_TYPE_ns2__FacetKind
#define SOAP_TYPE_ns2__FacetKind (655)
#endif

/* enum ns2__Facet has binding name 'ns2__Facet' for type 'ns2:Facet' */
#ifndef SOAP_TYPE_ns2__Facet
#define SOAP_TYPE_ns2__Facet (654)
#endif

/* enum ns2__OSDULineageRelationshipKind has binding name 'ns2__OSDULineageRelationshipKind' for type 'ns2:OSDULineageRelationshipKind' */
#ifndef SOAP_TYPE_ns2__OSDULineageRelationshipKind
#define SOAP_TYPE_ns2__OSDULineageRelationshipKind (653)
#endif

/* enum ns2__ReferencePressureKind has binding name 'ns2__ReferencePressureKind' for type 'ns2:ReferencePressureKind' */
#ifndef SOAP_TYPE_ns2__ReferencePressureKind
#define SOAP_TYPE_ns2__ReferencePressureKind (652)
#endif

/* enum ns2__VerticalDirection has binding name 'ns2__VerticalDirection' for type 'ns2:VerticalDirection' */
#ifndef SOAP_TYPE_ns2__VerticalDirection
#define SOAP_TYPE_ns2__VerticalDirection (651)
#endif

/* enum ns2__PrincipalMeridian has binding name 'ns2__PrincipalMeridian' for type 'ns2:PrincipalMeridian' */
#ifndef SOAP_TYPE_ns2__PrincipalMeridian
#define SOAP_TYPE_ns2__PrincipalMeridian (650)
#endif

/* enum ns2__NorthOrSouth has binding name 'ns2__NorthOrSouth' for type 'ns2:NorthOrSouth' */
#ifndef SOAP_TYPE_ns2__NorthOrSouth
#define SOAP_TYPE_ns2__NorthOrSouth (649)
#endif

/* enum ns2__EastOrWest has binding name 'ns2__EastOrWest' for type 'ns2:EastOrWest' */
#ifndef SOAP_TYPE_ns2__EastOrWest
#define SOAP_TYPE_ns2__EastOrWest (648)
#endif

/* enum ns2__AxisOrder2d has binding name 'ns2__AxisOrder2d' for type 'ns2:AxisOrder2d' */
#ifndef SOAP_TYPE_ns2__AxisOrder2d
#define SOAP_TYPE_ns2__AxisOrder2d (647)
#endif

/* enum ns2__AxisDirectionKind has binding name 'ns2__AxisDirectionKind' for type 'ns2:AxisDirectionKind' */
#ifndef SOAP_TYPE_ns2__AxisDirectionKind
#define SOAP_TYPE_ns2__AxisDirectionKind (646)
#endif

/* enum ns2__WellStatus has binding name 'ns2__WellStatus' for type 'ns2:WellStatus' */
#ifndef SOAP_TYPE_ns2__WellStatus
#define SOAP_TYPE_ns2__WellStatus (645)
#endif

/* enum ns2__ReferenceCondition has binding name 'ns2__ReferenceCondition' for type 'ns2:ReferenceCondition' */
#ifndef SOAP_TYPE_ns2__ReferenceCondition
#define SOAP_TYPE_ns2__ReferenceCondition (644)
#endif

/* enum ns2__QuantityClassKind has binding name 'ns2__QuantityClassKind' for type 'ns2:QuantityClassKind' */
#ifndef SOAP_TYPE_ns2__QuantityClassKind
#define SOAP_TYPE_ns2__QuantityClassKind (643)
#endif

/* enum ns2__NorthReferenceKind has binding name 'ns2__NorthReferenceKind' for type 'ns2:NorthReferenceKind' */
#ifndef SOAP_TYPE_ns2__NorthReferenceKind
#define SOAP_TYPE_ns2__NorthReferenceKind (642)
#endif

/* enum ns2__MeasureClass has binding name 'ns2__MeasureClass' for type 'ns2:MeasureClass' */
#ifndef SOAP_TYPE_ns2__MeasureClass
#define SOAP_TYPE_ns2__MeasureClass (641)
#endif

/* enum ns2__MatrixCementKind has binding name 'ns2__MatrixCementKind' for type 'ns2:MatrixCementKind' */
#ifndef SOAP_TYPE_ns2__MatrixCementKind
#define SOAP_TYPE_ns2__MatrixCementKind (640)
#endif

/* enum ns2__LithostratigraphicRank has binding name 'ns2__LithostratigraphicRank' for type 'ns2:LithostratigraphicRank' */
#ifndef SOAP_TYPE_ns2__LithostratigraphicRank
#define SOAP_TYPE_ns2__LithostratigraphicRank (639)
#endif

/* enum ns2__LithologyQualifierKind has binding name 'ns2__LithologyQualifierKind' for type 'ns2:LithologyQualifierKind' */
#ifndef SOAP_TYPE_ns2__LithologyQualifierKind
#define SOAP_TYPE_ns2__LithologyQualifierKind (638)
#endif

/* enum ns2__LithologyKind has binding name 'ns2__LithologyKind' for type 'ns2:LithologyKind' */
#ifndef SOAP_TYPE_ns2__LithologyKind
#define SOAP_TYPE_ns2__LithologyKind (637)
#endif

/* enum ns2__IndexDirection has binding name 'ns2__IndexDirection' for type 'ns2:IndexDirection' */
#ifndef SOAP_TYPE_ns2__IndexDirection
#define SOAP_TYPE_ns2__IndexDirection (636)
#endif

/* enum ns2__IndexableElement has binding name 'ns2__IndexableElement' for type 'ns2:IndexableElement' */
#ifndef SOAP_TYPE_ns2__IndexableElement
#define SOAP_TYPE_ns2__IndexableElement (635)
#endif

/* enum ns2__GeochronologicalRank has binding name 'ns2__GeochronologicalRank' for type 'ns2:GeochronologicalRank' */
#ifndef SOAP_TYPE_ns2__GeochronologicalRank
#define SOAP_TYPE_ns2__GeochronologicalRank (634)
#endif

/* enum ns2__DataIndexKind has binding name 'ns2__DataIndexKind' for type 'ns2:DataIndexKind' */
#ifndef SOAP_TYPE_ns2__DataIndexKind
#define SOAP_TYPE_ns2__DataIndexKind (633)
#endif

/* enum ns2__IntegerType has binding name 'ns2__IntegerType' for type 'ns2:IntegerType' */
#ifndef SOAP_TYPE_ns2__IntegerType
#define SOAP_TYPE_ns2__IntegerType (632)
#endif

/* enum ns2__FloatingPointType has binding name 'ns2__FloatingPointType' for type 'ns2:FloatingPointType' */
#ifndef SOAP_TYPE_ns2__FloatingPointType
#define SOAP_TYPE_ns2__FloatingPointType (631)
#endif

/* enum ns2__ReferencePointKind has binding name 'ns2__ReferencePointKind' for type 'ns2:ReferencePointKind' */
#ifndef SOAP_TYPE_ns2__ReferencePointKind
#define SOAP_TYPE_ns2__ReferencePointKind (630)
#endif

/* enum ns2__ExistenceKind has binding name 'ns2__ExistenceKind' for type 'ns2:ExistenceKind' */
#ifndef SOAP_TYPE_ns2__ExistenceKind
#define SOAP_TYPE_ns2__ExistenceKind (629)
#endif

/* enum ns2__AliasIdentifierKind has binding name 'ns2__AliasIdentifierKind' for type 'ns2:AliasIdentifierKind' */
#ifndef SOAP_TYPE_ns2__AliasIdentifierKind
#define SOAP_TYPE_ns2__AliasIdentifierKind (628)
#endif

/* enum ns2__ActiveStatusKind has binding name 'ns2__ActiveStatusKind' for type 'ns2:ActiveStatusKind' */
#ifndef SOAP_TYPE_ns2__ActiveStatusKind
#define SOAP_TYPE_ns2__ActiveStatusKind (627)
#endif

/* enum ns1__WellborePointOfInterest has binding name 'ns1__WellborePointOfInterest' for type 'ns1:WellborePointOfInterest' */
#ifndef SOAP_TYPE_ns1__WellborePointOfInterest
#define SOAP_TYPE_ns1__WellborePointOfInterest (626)
#endif

/* enum ns1__WellboreMarkerKind has binding name 'ns1__WellboreMarkerKind' for type 'ns1:WellboreMarkerKind' */
#ifndef SOAP_TYPE_ns1__WellboreMarkerKind
#define SOAP_TYPE_ns1__WellboreMarkerKind (625)
#endif

/* enum ns1__StratigraphyKindQualifier has binding name 'ns1__StratigraphyKindQualifier' for type 'ns1:StratigraphyKindQualifier' */
#ifndef SOAP_TYPE_ns1__StratigraphyKindQualifier
#define SOAP_TYPE_ns1__StratigraphyKindQualifier (624)
#endif

/* enum ns1__StratigraphyKind has binding name 'ns1__StratigraphyKind' for type 'ns1:StratigraphyKind' */
#ifndef SOAP_TYPE_ns1__StratigraphyKind
#define SOAP_TYPE_ns1__StratigraphyKind (623)
#endif

/* enum ns1__CompletionStatus has binding name 'ns1__CompletionStatus' for type 'ns1:CompletionStatus' */
#ifndef SOAP_TYPE_ns1__CompletionStatus
#define SOAP_TYPE_ns1__CompletionStatus (622)
#endif

/* enum ns1__PhysicalStatus has binding name 'ns1__PhysicalStatus' for type 'ns1:PhysicalStatus' */
#ifndef SOAP_TYPE_ns1__PhysicalStatus
#define SOAP_TYPE_ns1__PhysicalStatus (621)
#endif

/* enum ns1__PerforationStatus has binding name 'ns1__PerforationStatus' for type 'ns1:PerforationStatus' */
#ifndef SOAP_TYPE_ns1__PerforationStatus
#define SOAP_TYPE_ns1__PerforationStatus (620)
#endif

/* enum ns1__RiskType has binding name 'ns1__RiskType' for type 'ns1:RiskType' */
#ifndef SOAP_TYPE_ns1__RiskType
#define SOAP_TYPE_ns1__RiskType (619)
#endif

/* enum ns1__RiskSubCategory has binding name 'ns1__RiskSubCategory' for type 'ns1:RiskSubCategory' */
#ifndef SOAP_TYPE_ns1__RiskSubCategory
#define SOAP_TYPE_ns1__RiskSubCategory (618)
#endif

/* enum ns1__RiskCategory has binding name 'ns1__RiskCategory' for type 'ns1:RiskCategory' */
#ifndef SOAP_TYPE_ns1__RiskCategory
#define SOAP_TYPE_ns1__RiskCategory (617)
#endif

/* enum ns1__RiskAffectedPersonnel has binding name 'ns1__RiskAffectedPersonnel' for type 'ns1:RiskAffectedPersonnel' */
#ifndef SOAP_TYPE_ns1__RiskAffectedPersonnel
#define SOAP_TYPE_ns1__RiskAffectedPersonnel (616)
#endif

/* enum ns1__PPFGUncertaintyClass has binding name 'ns1__PPFGUncertaintyClass' for type 'ns1:PPFGUncertaintyClass' */
#ifndef SOAP_TYPE_ns1__PPFGUncertaintyClass
#define SOAP_TYPE_ns1__PPFGUncertaintyClass (615)
#endif

/* enum ns1__PPFGTransformModelType has binding name 'ns1__PPFGTransformModelType' for type 'ns1:PPFGTransformModelType' */
#ifndef SOAP_TYPE_ns1__PPFGTransformModelType
#define SOAP_TYPE_ns1__PPFGTransformModelType (614)
#endif

/* enum ns1__PPFGTectonicSetting has binding name 'ns1__PPFGTectonicSetting' for type 'ns1:PPFGTectonicSetting' */
#ifndef SOAP_TYPE_ns1__PPFGTectonicSetting
#define SOAP_TYPE_ns1__PPFGTectonicSetting (613)
#endif

/* enum ns1__PPFGModeledLithology has binding name 'ns1__PPFGModeledLithology' for type 'ns1:PPFGModeledLithology' */
#ifndef SOAP_TYPE_ns1__PPFGModeledLithology
#define SOAP_TYPE_ns1__PPFGModeledLithology (612)
#endif

/* enum ns1__PPFGMainFamily has binding name 'ns1__PPFGMainFamily' for type 'ns1:PPFGMainFamily' */
#ifndef SOAP_TYPE_ns1__PPFGMainFamily
#define SOAP_TYPE_ns1__PPFGMainFamily (611)
#endif

/* enum ns1__PPFGFamilyMnemonic has binding name 'ns1__PPFGFamilyMnemonic' for type 'ns1:PPFGFamilyMnemonic' */
#ifndef SOAP_TYPE_ns1__PPFGFamilyMnemonic
#define SOAP_TYPE_ns1__PPFGFamilyMnemonic (610)
#endif

/* enum ns1__PPFGFamily has binding name 'ns1__PPFGFamily' for type 'ns1:PPFGFamily' */
#ifndef SOAP_TYPE_ns1__PPFGFamily
#define SOAP_TYPE_ns1__PPFGFamily (609)
#endif

/* enum ns1__PPFGDataProcessing has binding name 'ns1__PPFGDataProcessing' for type 'ns1:PPFGDataProcessing' */
#ifndef SOAP_TYPE_ns1__PPFGDataProcessing
#define SOAP_TYPE_ns1__PPFGDataProcessing (608)
#endif

/* enum ns1__PPFGDataDerivation has binding name 'ns1__PPFGDataDerivation' for type 'ns1:PPFGDataDerivation' */
#ifndef SOAP_TYPE_ns1__PPFGDataDerivation
#define SOAP_TYPE_ns1__PPFGDataDerivation (607)
#endif

/* enum ns1__SupportCraftType has binding name 'ns1__SupportCraftType' for type 'ns1:SupportCraftType' */
#ifndef SOAP_TYPE_ns1__SupportCraftType
#define SOAP_TYPE_ns1__SupportCraftType (606)
#endif

/* enum ns1__ScrType has binding name 'ns1__ScrType' for type 'ns1:ScrType' */
#ifndef SOAP_TYPE_ns1__ScrType
#define SOAP_TYPE_ns1__ScrType (605)
#endif

/* enum ns1__PumpOpType has binding name 'ns1__PumpOpType' for type 'ns1:PumpOpType' */
#ifndef SOAP_TYPE_ns1__PumpOpType
#define SOAP_TYPE_ns1__PumpOpType (604)
#endif

/* enum ns1__StimMaterialKind has binding name 'ns1__StimMaterialKind' for type 'ns1:StimMaterialKind' */
#ifndef SOAP_TYPE_ns1__StimMaterialKind
#define SOAP_TYPE_ns1__StimMaterialKind (603)
#endif

/* enum ns1__StimJobDiversionMethod has binding name 'ns1__StimJobDiversionMethod' for type 'ns1:StimJobDiversionMethod' */
#ifndef SOAP_TYPE_ns1__StimJobDiversionMethod
#define SOAP_TYPE_ns1__StimJobDiversionMethod (602)
#endif

/* enum ns1__StimFluidSubtype has binding name 'ns1__StimFluidSubtype' for type 'ns1:StimFluidSubtype' */
#ifndef SOAP_TYPE_ns1__StimFluidSubtype
#define SOAP_TYPE_ns1__StimFluidSubtype (601)
#endif

/* enum ns1__StimFluidKind has binding name 'ns1__StimFluidKind' for type 'ns1:StimFluidKind' */
#ifndef SOAP_TYPE_ns1__StimFluidKind
#define SOAP_TYPE_ns1__StimFluidKind (600)
#endif

/* enum ns1__StimFlowPathType has binding name 'ns1__StimFlowPathType' for type 'ns1:StimFlowPathType' */
#ifndef SOAP_TYPE_ns1__StimFlowPathType
#define SOAP_TYPE_ns1__StimFlowPathType (599)
#endif

/* enum ns1__StimFetTestAnalysisMethod has binding name 'ns1__StimFetTestAnalysisMethod' for type 'ns1:StimFetTestAnalysisMethod' */
#ifndef SOAP_TYPE_ns1__StimFetTestAnalysisMethod
#define SOAP_TYPE_ns1__StimFetTestAnalysisMethod (598)
#endif

/* enum ns1__StimAdditiveKind has binding name 'ns1__StimAdditiveKind' for type 'ns1:StimAdditiveKind' */
#ifndef SOAP_TYPE_ns1__StimAdditiveKind
#define SOAP_TYPE_ns1__StimAdditiveKind (597)
#endif

/* enum ns1__ProppantAgentKind has binding name 'ns1__ProppantAgentKind' for type 'ns1:ProppantAgentKind' */
#ifndef SOAP_TYPE_ns1__ProppantAgentKind
#define SOAP_TYPE_ns1__ProppantAgentKind (596)
#endif

/* enum ns1__PIDXCommodityCode has binding name 'ns1__PIDXCommodityCode' for type 'ns1:PIDXCommodityCode' */
#ifndef SOAP_TYPE_ns1__PIDXCommodityCode
#define SOAP_TYPE_ns1__PIDXCommodityCode (595)
#endif

/* enum ns1__ToolSubKind has binding name 'ns1__ToolSubKind' for type 'ns1:ToolSubKind' */
#ifndef SOAP_TYPE_ns1__ToolSubKind
#define SOAP_TYPE_ns1__ToolSubKind (594)
#endif

/* enum ns1__ToolKind has binding name 'ns1__ToolKind' for type 'ns1:ToolKind' */
#ifndef SOAP_TYPE_ns1__ToolKind
#define SOAP_TYPE_ns1__ToolKind (593)
#endif

/* enum ns1__OperatingCondition has binding name 'ns1__OperatingCondition' for type 'ns1:OperatingCondition' */
#ifndef SOAP_TYPE_ns1__OperatingCondition
#define SOAP_TYPE_ns1__OperatingCondition (592)
#endif

/* enum ns1__MisalignmentMode has binding name 'ns1__MisalignmentMode' for type 'ns1:MisalignmentMode' */
#ifndef SOAP_TYPE_ns1__MisalignmentMode
#define SOAP_TYPE_ns1__MisalignmentMode (591)
#endif

/* enum ns1__GyroMode has binding name 'ns1__GyroMode' for type 'ns1:GyroMode' */
#ifndef SOAP_TYPE_ns1__GyroMode
#define SOAP_TYPE_ns1__GyroMode (590)
#endif

/* enum ns1__GyroAxisCombination has binding name 'ns1__GyroAxisCombination' for type 'ns1:GyroAxisCombination' */
#ifndef SOAP_TYPE_ns1__GyroAxisCombination
#define SOAP_TYPE_ns1__GyroAxisCombination (589)
#endif

/* enum ns1__ErrorPropagationMode has binding name 'ns1__ErrorPropagationMode' for type 'ns1:ErrorPropagationMode' */
#ifndef SOAP_TYPE_ns1__ErrorPropagationMode
#define SOAP_TYPE_ns1__ErrorPropagationMode (588)
#endif

/* enum ns1__ErrorKind has binding name 'ns1__ErrorKind' for type 'ns1:ErrorKind' */
#ifndef SOAP_TYPE_ns1__ErrorKind
#define SOAP_TYPE_ns1__ErrorKind (587)
#endif

/* enum ns1__CorrectionConsidered has binding name 'ns1__CorrectionConsidered' for type 'ns1:CorrectionConsidered' */
#ifndef SOAP_TYPE_ns1__CorrectionConsidered
#define SOAP_TYPE_ns1__CorrectionConsidered (586)
#endif

/* enum ns1__AuthorizationStatus has binding name 'ns1__AuthorizationStatus' for type 'ns1:AuthorizationStatus' */
#ifndef SOAP_TYPE_ns1__AuthorizationStatus
#define SOAP_TYPE_ns1__AuthorizationStatus (585)
#endif

/* enum ns1__AccelerometerAxisCombination has binding name 'ns1__AccelerometerAxisCombination' for type 'ns1:AccelerometerAxisCombination' */
#ifndef SOAP_TYPE_ns1__AccelerometerAxisCombination
#define SOAP_TYPE_ns1__AccelerometerAxisCombination (584)
#endif

/* enum ns1__TargetSectionScope has binding name 'ns1__TargetSectionScope' for type 'ns1:TargetSectionScope' */
#ifndef SOAP_TYPE_ns1__TargetSectionScope
#define SOAP_TYPE_ns1__TargetSectionScope (583)
#endif

/* enum ns1__TargetScope has binding name 'ns1__TargetScope' for type 'ns1:TargetScope' */
#ifndef SOAP_TYPE_ns1__TargetScope
#define SOAP_TYPE_ns1__TargetScope (582)
#endif

/* enum ns1__TargetCategory has binding name 'ns1__TargetCategory' for type 'ns1:TargetCategory' */
#ifndef SOAP_TYPE_ns1__TargetCategory
#define SOAP_TYPE_ns1__TargetCategory (581)
#endif

/* enum ns1__TypeSurveyTool has binding name 'ns1__TypeSurveyTool' for type 'ns1:TypeSurveyTool' */
#ifndef SOAP_TYPE_ns1__TypeSurveyTool
#define SOAP_TYPE_ns1__TypeSurveyTool (580)
#endif

/* enum ns1__TrajStnCalcAlgorithm has binding name 'ns1__TrajStnCalcAlgorithm' for type 'ns1:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_ns1__TrajStnCalcAlgorithm
#define SOAP_TYPE_ns1__TrajStnCalcAlgorithm (579)
#endif

/* enum ns1__TrajStationType has binding name 'ns1__TrajStationType' for type 'ns1:TrajStationType' */
#ifndef SOAP_TYPE_ns1__TrajStationType
#define SOAP_TYPE_ns1__TrajStationType (578)
#endif

/* enum ns1__TrajStationStatus has binding name 'ns1__TrajStationStatus' for type 'ns1:TrajStationStatus' */
#ifndef SOAP_TYPE_ns1__TrajStationStatus
#define SOAP_TYPE_ns1__TrajStationStatus (577)
#endif

/* enum ns1__ShowSpeed has binding name 'ns1__ShowSpeed' for type 'ns1:ShowSpeed' */
#ifndef SOAP_TYPE_ns1__ShowSpeed
#define SOAP_TYPE_ns1__ShowSpeed (576)
#endif

/* enum ns1__ShowRating has binding name 'ns1__ShowRating' for type 'ns1:ShowRating' */
#ifndef SOAP_TYPE_ns1__ShowRating
#define SOAP_TYPE_ns1__ShowRating (575)
#endif

/* enum ns1__ShowLevel has binding name 'ns1__ShowLevel' for type 'ns1:ShowLevel' */
#ifndef SOAP_TYPE_ns1__ShowLevel
#define SOAP_TYPE_ns1__ShowLevel (574)
#endif

/* enum ns1__ShowFluorescence has binding name 'ns1__ShowFluorescence' for type 'ns1:ShowFluorescence' */
#ifndef SOAP_TYPE_ns1__ShowFluorescence
#define SOAP_TYPE_ns1__ShowFluorescence (573)
#endif

/* enum ns1__ShowFluid has binding name 'ns1__ShowFluid' for type 'ns1:ShowFluid' */
#ifndef SOAP_TYPE_ns1__ShowFluid
#define SOAP_TYPE_ns1__ShowFluid (572)
#endif

/* enum ns1__PressureParameterKind has binding name 'ns1__PressureParameterKind' for type 'ns1:PressureParameterKind' */
#ifndef SOAP_TYPE_ns1__PressureParameterKind
#define SOAP_TYPE_ns1__PressureParameterKind (571)
#endif

/* enum ns1__PressureGradientParameterKind has binding name 'ns1__PressureGradientParameterKind' for type 'ns1:PressureGradientParameterKind' */
#ifndef SOAP_TYPE_ns1__PressureGradientParameterKind
#define SOAP_TYPE_ns1__PressureGradientParameterKind (570)
#endif

/* enum ns1__MudLogStringParameterKind has binding name 'ns1__MudLogStringParameterKind' for type 'ns1:MudLogStringParameterKind' */
#ifndef SOAP_TYPE_ns1__MudLogStringParameterKind
#define SOAP_TYPE_ns1__MudLogStringParameterKind (569)
#endif

/* enum ns1__GasPeakType has binding name 'ns1__GasPeakType' for type 'ns1:GasPeakType' */
#ifndef SOAP_TYPE_ns1__GasPeakType
#define SOAP_TYPE_ns1__GasPeakType (568)
#endif

/* enum ns1__ForceParameterKind has binding name 'ns1__ForceParameterKind' for type 'ns1:ForceParameterKind' */
#ifndef SOAP_TYPE_ns1__ForceParameterKind
#define SOAP_TYPE_ns1__ForceParameterKind (567)
#endif

/* enum ns1__ConcentrationParameterKind has binding name 'ns1__ConcentrationParameterKind' for type 'ns1:ConcentrationParameterKind' */
#ifndef SOAP_TYPE_ns1__ConcentrationParameterKind
#define SOAP_TYPE_ns1__ConcentrationParameterKind (566)
#endif

/* enum ns1__SurfEquipType has binding name 'ns1__SurfEquipType' for type 'ns1:SurfEquipType' */
#ifndef SOAP_TYPE_ns1__SurfEquipType
#define SOAP_TYPE_ns1__SurfEquipType (565)
#endif

/* enum ns1__RigType has binding name 'ns1__RigType' for type 'ns1:RigType' */
#ifndef SOAP_TYPE_ns1__RigType
#define SOAP_TYPE_ns1__RigType (564)
#endif

/* enum ns1__PumpType has binding name 'ns1__PumpType' for type 'ns1:PumpType' */
#ifndef SOAP_TYPE_ns1__PumpType
#define SOAP_TYPE_ns1__PumpType (563)
#endif

/* enum ns1__PitType has binding name 'ns1__PitType' for type 'ns1:PitType' */
#ifndef SOAP_TYPE_ns1__PitType
#define SOAP_TYPE_ns1__PitType (562)
#endif

/* enum ns1__DriveType has binding name 'ns1__DriveType' for type 'ns1:DriveType' */
#ifndef SOAP_TYPE_ns1__DriveType
#define SOAP_TYPE_ns1__DriveType (561)
#endif

/* enum ns1__DrawWorksType has binding name 'ns1__DrawWorksType' for type 'ns1:DrawWorksType' */
#ifndef SOAP_TYPE_ns1__DrawWorksType
#define SOAP_TYPE_ns1__DrawWorksType (560)
#endif

/* enum ns1__DerrickType has binding name 'ns1__DerrickType' for type 'ns1:DerrickType' */
#ifndef SOAP_TYPE_ns1__DerrickType
#define SOAP_TYPE_ns1__DerrickType (559)
#endif

/* enum ns1__BopType has binding name 'ns1__BopType' for type 'ns1:BopType' */
#ifndef SOAP_TYPE_ns1__BopType
#define SOAP_TYPE_ns1__BopType (558)
#endif

/* enum ns1__WellTestType has binding name 'ns1__WellTestType' for type 'ns1:WellTestType' */
#ifndef SOAP_TYPE_ns1__WellTestType
#define SOAP_TYPE_ns1__WellTestType (557)
#endif

/* enum ns1__WellKillingProcedureType has binding name 'ns1__WellKillingProcedureType' for type 'ns1:WellKillingProcedureType' */
#ifndef SOAP_TYPE_ns1__WellKillingProcedureType
#define SOAP_TYPE_ns1__WellKillingProcedureType (556)
#endif

/* enum ns1__WellControlIncidentType has binding name 'ns1__WellControlIncidentType' for type 'ns1:WellControlIncidentType' */
#ifndef SOAP_TYPE_ns1__WellControlIncidentType
#define SOAP_TYPE_ns1__WellControlIncidentType (555)
#endif

/* enum ns1__StateDetailActivity has binding name 'ns1__StateDetailActivity' for type 'ns1:StateDetailActivity' */
#ifndef SOAP_TYPE_ns1__StateDetailActivity
#define SOAP_TYPE_ns1__StateDetailActivity (554)
#endif

/* enum ns1__ReadingKind has binding name 'ns1__ReadingKind' for type 'ns1:ReadingKind' */
#ifndef SOAP_TYPE_ns1__ReadingKind
#define SOAP_TYPE_ns1__ReadingKind (553)
#endif

/* enum ns1__PresTestType has binding name 'ns1__PresTestType' for type 'ns1:PresTestType' */
#ifndef SOAP_TYPE_ns1__PresTestType
#define SOAP_TYPE_ns1__PresTestType (552)
#endif

/* enum ns1__OpsReportVersion has binding name 'ns1__OpsReportVersion' for type 'ns1:OpsReportVersion' */
#ifndef SOAP_TYPE_ns1__OpsReportVersion
#define SOAP_TYPE_ns1__OpsReportVersion (551)
#endif

/* enum ns1__ItemState has binding name 'ns1__ItemState' for type 'ns1:ItemState' */
#ifndef SOAP_TYPE_ns1__ItemState
#define SOAP_TYPE_ns1__ItemState (550)
#endif

/* enum ns1__InnerBarrelType has binding name 'ns1__InnerBarrelType' for type 'ns1:InnerBarrelType' */
#ifndef SOAP_TYPE_ns1__InnerBarrelType
#define SOAP_TYPE_ns1__InnerBarrelType (549)
#endif

/* enum ns1__DrillActivityCode has binding name 'ns1__DrillActivityCode' for type 'ns1:DrillActivityCode' */
#ifndef SOAP_TYPE_ns1__DrillActivityCode
#define SOAP_TYPE_ns1__DrillActivityCode (548)
#endif

/* enum ns1__DrillActivityClassType has binding name 'ns1__DrillActivityClassType' for type 'ns1:DrillActivityClassType' */
#ifndef SOAP_TYPE_ns1__DrillActivityClassType
#define SOAP_TYPE_ns1__DrillActivityClassType (547)
#endif

/* enum ns1__PerfConveyanceMethod has binding name 'ns1__PerfConveyanceMethod' for type 'ns1:PerfConveyanceMethod' */
#ifndef SOAP_TYPE_ns1__PerfConveyanceMethod
#define SOAP_TYPE_ns1__PerfConveyanceMethod (546)
#endif

/* enum ns1__EventClassType has binding name 'ns1__EventClassType' for type 'ns1:EventClassType' */
#ifndef SOAP_TYPE_ns1__EventClassType
#define SOAP_TYPE_ns1__EventClassType (545)
#endif

/* enum ns1__TubingConnectionTypes has binding name 'ns1__TubingConnectionTypes' for type 'ns1:TubingConnectionTypes' */
#ifndef SOAP_TYPE_ns1__TubingConnectionTypes
#define SOAP_TYPE_ns1__TubingConnectionTypes (544)
#endif

/* enum ns1__SubStringType has binding name 'ns1__SubStringType' for type 'ns1:SubStringType' */
#ifndef SOAP_TYPE_ns1__SubStringType
#define SOAP_TYPE_ns1__SubStringType (543)
#endif

/* enum ns1__RodConnectionTypes has binding name 'ns1__RodConnectionTypes' for type 'ns1:RodConnectionTypes' */
#ifndef SOAP_TYPE_ns1__RodConnectionTypes
#define SOAP_TYPE_ns1__RodConnectionTypes (542)
#endif

/* enum ns1__PerforationToolType has binding name 'ns1__PerforationToolType' for type 'ns1:PerforationToolType' */
#ifndef SOAP_TYPE_ns1__PerforationToolType
#define SOAP_TYPE_ns1__PerforationToolType (541)
#endif

/* enum ns1__OtherConnectionTypes has binding name 'ns1__OtherConnectionTypes' for type 'ns1:OtherConnectionTypes' */
#ifndef SOAP_TYPE_ns1__OtherConnectionTypes
#define SOAP_TYPE_ns1__OtherConnectionTypes (540)
#endif

/* enum ns1__GradeType has binding name 'ns1__GradeType' for type 'ns1:GradeType' */
#ifndef SOAP_TYPE_ns1__GradeType
#define SOAP_TYPE_ns1__GradeType (539)
#endif

/* enum ns1__GeologyType has binding name 'ns1__GeologyType' for type 'ns1:GeologyType' */
#ifndef SOAP_TYPE_ns1__GeologyType
#define SOAP_TYPE_ns1__GeologyType (538)
#endif

/* enum ns1__EquipmentType has binding name 'ns1__EquipmentType' for type 'ns1:EquipmentType' */
#ifndef SOAP_TYPE_ns1__EquipmentType
#define SOAP_TYPE_ns1__EquipmentType (537)
#endif

/* enum ns1__DownholeStringType has binding name 'ns1__DownholeStringType' for type 'ns1:DownholeStringType' */
#ifndef SOAP_TYPE_ns1__DownholeStringType
#define SOAP_TYPE_ns1__DownholeStringType (536)
#endif

/* enum ns1__ConnectionFormType has binding name 'ns1__ConnectionFormType' for type 'ns1:ConnectionFormType' */
#ifndef SOAP_TYPE_ns1__ConnectionFormType
#define SOAP_TYPE_ns1__ConnectionFormType (535)
#endif

/* enum ns1__Coating has binding name 'ns1__Coating' for type 'ns1:Coating' */
#ifndef SOAP_TYPE_ns1__Coating
#define SOAP_TYPE_ns1__Coating (534)
#endif

/* enum ns1__CasingConnectionTypes has binding name 'ns1__CasingConnectionTypes' for type 'ns1:CasingConnectionTypes' */
#ifndef SOAP_TYPE_ns1__CasingConnectionTypes
#define SOAP_TYPE_ns1__CasingConnectionTypes (533)
#endif

/* enum ns1__BoreholeType has binding name 'ns1__BoreholeType' for type 'ns1:BoreholeType' */
#ifndef SOAP_TYPE_ns1__BoreholeType
#define SOAP_TYPE_ns1__BoreholeType (532)
#endif

/* enum ns1__LoggingToolClass has binding name 'ns1__LoggingToolClass' for type 'ns1:LoggingToolClass' */
#ifndef SOAP_TYPE_ns1__LoggingToolClass
#define SOAP_TYPE_ns1__LoggingToolClass (531)
#endif

/* enum ns1__LoggingMethod has binding name 'ns1__LoggingMethod' for type 'ns1:LoggingMethod' */
#ifndef SOAP_TYPE_ns1__LoggingMethod
#define SOAP_TYPE_ns1__LoggingMethod (530)
#endif

/* enum ns1__PassDirection has binding name 'ns1__PassDirection' for type 'ns1:PassDirection' */
#ifndef SOAP_TYPE_ns1__PassDirection
#define SOAP_TYPE_ns1__PassDirection (529)
#endif

/* enum ns1__HoleLoggingStatus has binding name 'ns1__HoleLoggingStatus' for type 'ns1:HoleLoggingStatus' */
#ifndef SOAP_TYPE_ns1__HoleLoggingStatus
#define SOAP_TYPE_ns1__HoleLoggingStatus (528)
#endif

/* enum ns1__ChannelState has binding name 'ns1__ChannelState' for type 'ns1:ChannelState' */
#ifndef SOAP_TYPE_ns1__ChannelState
#define SOAP_TYPE_ns1__ChannelState (527)
#endif

/* enum ns1__ChannelDerivation has binding name 'ns1__ChannelDerivation' for type 'ns1:ChannelDerivation' */
#ifndef SOAP_TYPE_ns1__ChannelDerivation
#define SOAP_TYPE_ns1__ChannelDerivation (526)
#endif

/* enum ns1__ChannelDataKind has binding name 'ns1__ChannelDataKind' for type 'ns1:ChannelDataKind' */
#ifndef SOAP_TYPE_ns1__ChannelDataKind
#define SOAP_TYPE_ns1__ChannelDataKind (525)
#endif

/* enum ns1__ScaleType has binding name 'ns1__ScaleType' for type 'ns1:ScaleType' */
#ifndef SOAP_TYPE_ns1__ScaleType
#define SOAP_TYPE_ns1__ScaleType (524)
#endif

/* enum ns1__MimeType has binding name 'ns1__MimeType' for type 'ns1:MimeType' */
#ifndef SOAP_TYPE_ns1__MimeType
#define SOAP_TYPE_ns1__MimeType (523)
#endif

/* enum ns1__MessageDigestType has binding name 'ns1__MessageDigestType' for type 'ns1:MessageDigestType' */
#ifndef SOAP_TYPE_ns1__MessageDigestType
#define SOAP_TYPE_ns1__MessageDigestType (522)
#endif

/* enum ns1__LogTrackType has binding name 'ns1__LogTrackType' for type 'ns1:LogTrackType' */
#ifndef SOAP_TYPE_ns1__LogTrackType
#define SOAP_TYPE_ns1__LogTrackType (521)
#endif

/* enum ns1__LogSectionType has binding name 'ns1__LogSectionType' for type 'ns1:LogSectionType' */
#ifndef SOAP_TYPE_ns1__LogSectionType
#define SOAP_TYPE_ns1__LogSectionType (520)
#endif

/* enum ns1__LogRectangleType has binding name 'ns1__LogRectangleType' for type 'ns1:LogRectangleType' */
#ifndef SOAP_TYPE_ns1__LogRectangleType
#define SOAP_TYPE_ns1__LogRectangleType (519)
#endif

/* enum ns1__LineStyle has binding name 'ns1__LineStyle' for type 'ns1:LineStyle' */
#ifndef SOAP_TYPE_ns1__LineStyle
#define SOAP_TYPE_ns1__LineStyle (518)
#endif

/* enum ns1__FileNameType has binding name 'ns1__FileNameType' for type 'ns1:FileNameType' */
#ifndef SOAP_TYPE_ns1__FileNameType
#define SOAP_TYPE_ns1__FileNameType (517)
#endif

/* enum ns1__CalibrationPointRole has binding name 'ns1__CalibrationPointRole' for type 'ns1:CalibrationPointRole' */
#ifndef SOAP_TYPE_ns1__CalibrationPointRole
#define SOAP_TYPE_ns1__CalibrationPointRole (516)
#endif

/* enum ns1__BackupScaleType has binding name 'ns1__BackupScaleType' for type 'ns1:BackupScaleType' */
#ifndef SOAP_TYPE_ns1__BackupScaleType
#define SOAP_TYPE_ns1__BackupScaleType (515)
#endif

/* enum ns1__HoleCasingType has binding name 'ns1__HoleCasingType' for type 'ns1:HoleCasingType' */
#ifndef SOAP_TYPE_ns1__HoleCasingType
#define SOAP_TYPE_ns1__HoleCasingType (514)
#endif

/* enum ns1__WellboreFluidLocation has binding name 'ns1__WellboreFluidLocation' for type 'ns1:WellboreFluidLocation' */
#ifndef SOAP_TYPE_ns1__WellboreFluidLocation
#define SOAP_TYPE_ns1__WellboreFluidLocation (513)
#endif

/* enum ns1__CementJobType has binding name 'ns1__CementJobType' for type 'ns1:CementJobType' */
#ifndef SOAP_TYPE_ns1__CementJobType
#define SOAP_TYPE_ns1__CementJobType (512)
#endif

/* enum ns1__NameTagTechnology has binding name 'ns1__NameTagTechnology' for type 'ns1:NameTagTechnology' */
#ifndef SOAP_TYPE_ns1__NameTagTechnology
#define SOAP_TYPE_ns1__NameTagTechnology (511)
#endif

/* enum ns1__NameTagNumberingScheme has binding name 'ns1__NameTagNumberingScheme' for type 'ns1:NameTagNumberingScheme' */
#ifndef SOAP_TYPE_ns1__NameTagNumberingScheme
#define SOAP_TYPE_ns1__NameTagNumberingScheme (510)
#endif

/* enum ns1__NameTagLocation has binding name 'ns1__NameTagLocation' for type 'ns1:NameTagLocation' */
#ifndef SOAP_TYPE_ns1__NameTagLocation
#define SOAP_TYPE_ns1__NameTagLocation (509)
#endif

/* enum ns1__TubularComponentType has binding name 'ns1__TubularComponentType' for type 'ns1:TubularComponentType' */
#ifndef SOAP_TYPE_ns1__TubularComponentType
#define SOAP_TYPE_ns1__TubularComponentType (508)
#endif

/* enum ns1__TubularAssembly has binding name 'ns1__TubularAssembly' for type 'ns1:TubularAssembly' */
#ifndef SOAP_TYPE_ns1__TubularAssembly
#define SOAP_TYPE_ns1__TubularAssembly (507)
#endif

/* enum ns1__NozzleType has binding name 'ns1__NozzleType' for type 'ns1:NozzleType' */
#ifndef SOAP_TYPE_ns1__NozzleType
#define SOAP_TYPE_ns1__NozzleType (506)
#endif

/* enum ns1__MeasurementType has binding name 'ns1__MeasurementType' for type 'ns1:MeasurementType' */
#ifndef SOAP_TYPE_ns1__MeasurementType
#define SOAP_TYPE_ns1__MeasurementType (505)
#endif

/* enum ns1__MaterialType has binding name 'ns1__MaterialType' for type 'ns1:MaterialType' */
#ifndef SOAP_TYPE_ns1__MaterialType
#define SOAP_TYPE_ns1__MaterialType (504)
#endif

/* enum ns1__JarType has binding name 'ns1__JarType' for type 'ns1:JarType' */
#ifndef SOAP_TYPE_ns1__JarType
#define SOAP_TYPE_ns1__JarType (503)
#endif

/* enum ns1__JarAction has binding name 'ns1__JarAction' for type 'ns1:JarAction' */
#ifndef SOAP_TYPE_ns1__JarAction
#define SOAP_TYPE_ns1__JarAction (502)
#endif

/* enum ns1__IadcIntegerCode has binding name 'ns1__IadcIntegerCode' for type 'ns1:IadcIntegerCode' */
#ifndef SOAP_TYPE_ns1__IadcIntegerCode
#define SOAP_TYPE_ns1__IadcIntegerCode (501)
#endif

/* enum ns1__IadcBearingWearCode has binding name 'ns1__IadcBearingWearCode' for type 'ns1:IadcBearingWearCode' */
#ifndef SOAP_TYPE_ns1__IadcBearingWearCode
#define SOAP_TYPE_ns1__IadcBearingWearCode (500)
#endif

/* enum ns1__HoleOpenerType has binding name 'ns1__HoleOpenerType' for type 'ns1:HoleOpenerType' */
#ifndef SOAP_TYPE_ns1__HoleOpenerType
#define SOAP_TYPE_ns1__HoleOpenerType (499)
#endif

/* enum ns1__DeflectionMethod has binding name 'ns1__DeflectionMethod' for type 'ns1:DeflectionMethod' */
#ifndef SOAP_TYPE_ns1__DeflectionMethod
#define SOAP_TYPE_ns1__DeflectionMethod (498)
#endif

/* enum ns1__ConnectionPosition has binding name 'ns1__ConnectionPosition' for type 'ns1:ConnectionPosition' */
#ifndef SOAP_TYPE_ns1__ConnectionPosition
#define SOAP_TYPE_ns1__ConnectionPosition (497)
#endif

/* enum ns1__BoxPinConfig has binding name 'ns1__BoxPinConfig' for type 'ns1:BoxPinConfig' */
#ifndef SOAP_TYPE_ns1__BoxPinConfig
#define SOAP_TYPE_ns1__BoxPinConfig (496)
#endif

/* enum ns1__BladeType has binding name 'ns1__BladeType' for type 'ns1:BladeType' */
#ifndef SOAP_TYPE_ns1__BladeType
#define SOAP_TYPE_ns1__BladeType (495)
#endif

/* enum ns1__BladeShapeType has binding name 'ns1__BladeShapeType' for type 'ns1:BladeShapeType' */
#ifndef SOAP_TYPE_ns1__BladeShapeType
#define SOAP_TYPE_ns1__BladeShapeType (494)
#endif

/* enum ns1__BitType has binding name 'ns1__BitType' for type 'ns1:BitType' */
#ifndef SOAP_TYPE_ns1__BitType
#define SOAP_TYPE_ns1__BitType (493)
#endif

/* enum ns1__BitReasonPulled has binding name 'ns1__BitReasonPulled' for type 'ns1:BitReasonPulled' */
#ifndef SOAP_TYPE_ns1__BitReasonPulled
#define SOAP_TYPE_ns1__BitReasonPulled (492)
#endif

/* enum ns1__BitDullCode has binding name 'ns1__BitDullCode' for type 'ns1:BitDullCode' */
#ifndef SOAP_TYPE_ns1__BitDullCode
#define SOAP_TYPE_ns1__BitDullCode (491)
#endif

/* enum ns1__BearingType has binding name 'ns1__BearingType' for type 'ns1:BearingType' */
#ifndef SOAP_TYPE_ns1__BearingType
#define SOAP_TYPE_ns1__BearingType (490)
#endif

/* enum ns1__WellPurpose has binding name 'ns1__WellPurpose' for type 'ns1:WellPurpose' */
#ifndef SOAP_TYPE_ns1__WellPurpose
#define SOAP_TYPE_ns1__WellPurpose (489)
#endif

/* enum ns1__WellInterest has binding name 'ns1__WellInterest' for type 'ns1:WellInterest' */
#ifndef SOAP_TYPE_ns1__WellInterest
#define SOAP_TYPE_ns1__WellInterest (488)
#endif

/* enum ns1__WellFluid has binding name 'ns1__WellFluid' for type 'ns1:WellFluid' */
#ifndef SOAP_TYPE_ns1__WellFluid
#define SOAP_TYPE_ns1__WellFluid (487)
#endif

/* enum ns1__WellDirection has binding name 'ns1__WellDirection' for type 'ns1:WellDirection' */
#ifndef SOAP_TYPE_ns1__WellDirection
#define SOAP_TYPE_ns1__WellDirection (486)
#endif

/* enum ns1__OperatingEnvironment has binding name 'ns1__OperatingEnvironment' for type 'ns1:OperatingEnvironment' */
#ifndef SOAP_TYPE_ns1__OperatingEnvironment
#define SOAP_TYPE_ns1__OperatingEnvironment (485)
#endif

/* enum ns1__WellboreType has binding name 'ns1__WellboreType' for type 'ns1:WellboreType' */
#ifndef SOAP_TYPE_ns1__WellboreType
#define SOAP_TYPE_ns1__WellboreType (484)
#endif

/* enum ns1__WellboreShape has binding name 'ns1__WellboreShape' for type 'ns1:WellboreShape' */
#ifndef SOAP_TYPE_ns1__WellboreShape
#define SOAP_TYPE_ns1__WellboreShape (483)
#endif

/* enum ns1__MudClass has binding name 'ns1__MudClass' for type 'ns1:MudClass' */
#ifndef SOAP_TYPE_ns1__MudClass
#define SOAP_TYPE_ns1__MudClass (482)
#endif

/* enum ns1__BrineClass has binding name 'ns1__BrineClass' for type 'ns1:BrineClass' */
#ifndef SOAP_TYPE_ns1__BrineClass
#define SOAP_TYPE_ns1__BrineClass (481)
#endif

/* enum ns1__MudSubClass has binding name 'ns1__MudSubClass' for type 'ns1:MudSubClass' */
#ifndef SOAP_TYPE_ns1__MudSubClass
#define SOAP_TYPE_ns1__MudSubClass (480)
#endif

/* enum ns1__BhaStatus has binding name 'ns1__BhaStatus' for type 'ns1:BhaStatus' */
#ifndef SOAP_TYPE_ns1__BhaStatus
#define SOAP_TYPE_ns1__BhaStatus (479)
#endif

/* enum ns2__VolumeUom has binding name 'ns2__VolumeUom' for type 'ns2:VolumeUom' */
#ifndef SOAP_TYPE_ns2__VolumeUom
#define SOAP_TYPE_ns2__VolumeUom (478)
#endif

/* enum ns2__VolumetricThermalExpansionUom has binding name 'ns2__VolumetricThermalExpansionUom' for type 'ns2:VolumetricThermalExpansionUom' */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionUom
#define SOAP_TYPE_ns2__VolumetricThermalExpansionUom (477)
#endif

/* enum ns2__VolumetricHeatTransferCoefficientUom has binding name 'ns2__VolumetricHeatTransferCoefficientUom' for type 'ns2:VolumetricHeatTransferCoefficientUom' */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUom
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUom (476)
#endif

/* enum ns2__VolumePerVolumeUom has binding name 'ns2__VolumePerVolumeUom' for type 'ns2:VolumePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUom
#define SOAP_TYPE_ns2__VolumePerVolumeUom (475)
#endif

/* enum ns2__VolumePerTimeUom has binding name 'ns2__VolumePerTimeUom' for type 'ns2:VolumePerTimeUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUom
#define SOAP_TYPE_ns2__VolumePerTimeUom (474)
#endif

/* enum ns2__VolumePerTimePerVolumeUom has binding name 'ns2__VolumePerTimePerVolumeUom' for type 'ns2:VolumePerTimePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeUom
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeUom (473)
#endif

/* enum ns2__VolumePerTimePerTimeUom has binding name 'ns2__VolumePerTimePerTimeUom' for type 'ns2:VolumePerTimePerTimeUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeUom
#define SOAP_TYPE_ns2__VolumePerTimePerTimeUom (472)
#endif

/* enum ns2__VolumePerTimePerPressureUom has binding name 'ns2__VolumePerTimePerPressureUom' for type 'ns2:VolumePerTimePerPressureUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureUom
#define SOAP_TYPE_ns2__VolumePerTimePerPressureUom (471)
#endif

/* enum ns2__VolumePerTimePerPressureLengthUom has binding name 'ns2__VolumePerTimePerPressureLengthUom' for type 'ns2:VolumePerTimePerPressureLengthUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUom
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUom (470)
#endif

/* enum ns2__VolumePerTimePerLengthUom has binding name 'ns2__VolumePerTimePerLengthUom' for type 'ns2:VolumePerTimePerLengthUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthUom
#define SOAP_TYPE_ns2__VolumePerTimePerLengthUom (469)
#endif

/* enum ns2__VolumePerTimePerAreaUom has binding name 'ns2__VolumePerTimePerAreaUom' for type 'ns2:VolumePerTimePerAreaUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaUom
#define SOAP_TYPE_ns2__VolumePerTimePerAreaUom (468)
#endif

/* enum ns2__VolumePerTimeLengthUom has binding name 'ns2__VolumePerTimeLengthUom' for type 'ns2:VolumePerTimeLengthUom' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthUom
#define SOAP_TYPE_ns2__VolumePerTimeLengthUom (467)
#endif

/* enum ns2__VolumePerRotationUom has binding name 'ns2__VolumePerRotationUom' for type 'ns2:VolumePerRotationUom' */
#ifndef SOAP_TYPE_ns2__VolumePerRotationUom
#define SOAP_TYPE_ns2__VolumePerRotationUom (466)
#endif

/* enum ns2__VolumePerPressureUom has binding name 'ns2__VolumePerPressureUom' for type 'ns2:VolumePerPressureUom' */
#ifndef SOAP_TYPE_ns2__VolumePerPressureUom
#define SOAP_TYPE_ns2__VolumePerPressureUom (465)
#endif

/* enum ns2__VolumePerMassUom has binding name 'ns2__VolumePerMassUom' for type 'ns2:VolumePerMassUom' */
#ifndef SOAP_TYPE_ns2__VolumePerMassUom
#define SOAP_TYPE_ns2__VolumePerMassUom (464)
#endif

/* enum ns2__VolumePerLengthUom has binding name 'ns2__VolumePerLengthUom' for type 'ns2:VolumePerLengthUom' */
#ifndef SOAP_TYPE_ns2__VolumePerLengthUom
#define SOAP_TYPE_ns2__VolumePerLengthUom (463)
#endif

/* enum ns2__VolumePerAreaUom has binding name 'ns2__VolumePerAreaUom' for type 'ns2:VolumePerAreaUom' */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUom
#define SOAP_TYPE_ns2__VolumePerAreaUom (462)
#endif

/* enum ns2__VolumeFlowRatePerVolumeFlowRateUom has binding name 'ns2__VolumeFlowRatePerVolumeFlowRateUom' for type 'ns2:VolumeFlowRatePerVolumeFlowRateUom' */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUom
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUom (461)
#endif

/* enum ns2__VerticalCoordinateUom has binding name 'ns2__VerticalCoordinateUom' for type 'ns2:VerticalCoordinateUom' */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateUom
#define SOAP_TYPE_ns2__VerticalCoordinateUom (460)
#endif

/* enum ns2__TimeUom has binding name 'ns2__TimeUom' for type 'ns2:TimeUom' */
#ifndef SOAP_TYPE_ns2__TimeUom
#define SOAP_TYPE_ns2__TimeUom (459)
#endif

/* enum ns2__TimePerVolumeUom has binding name 'ns2__TimePerVolumeUom' for type 'ns2:TimePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__TimePerVolumeUom
#define SOAP_TYPE_ns2__TimePerVolumeUom (458)
#endif

/* enum ns2__TimePerTimeUom has binding name 'ns2__TimePerTimeUom' for type 'ns2:TimePerTimeUom' */
#ifndef SOAP_TYPE_ns2__TimePerTimeUom
#define SOAP_TYPE_ns2__TimePerTimeUom (457)
#endif

/* enum ns2__TimePerMassUom has binding name 'ns2__TimePerMassUom' for type 'ns2:TimePerMassUom' */
#ifndef SOAP_TYPE_ns2__TimePerMassUom
#define SOAP_TYPE_ns2__TimePerMassUom (456)
#endif

/* enum ns2__TimePerLengthUom has binding name 'ns2__TimePerLengthUom' for type 'ns2:TimePerLengthUom' */
#ifndef SOAP_TYPE_ns2__TimePerLengthUom
#define SOAP_TYPE_ns2__TimePerLengthUom (455)
#endif

/* enum ns2__ThermodynamicTemperatureUom has binding name 'ns2__ThermodynamicTemperatureUom' for type 'ns2:ThermodynamicTemperatureUom' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureUom
#define SOAP_TYPE_ns2__ThermodynamicTemperatureUom (454)
#endif

/* enum ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom has binding name 'ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom' for type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureUom' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUom (453)
#endif

/* enum ns2__ThermalResistanceUom has binding name 'ns2__ThermalResistanceUom' for type 'ns2:ThermalResistanceUom' */
#ifndef SOAP_TYPE_ns2__ThermalResistanceUom
#define SOAP_TYPE_ns2__ThermalResistanceUom (452)
#endif

/* enum ns2__ThermalInsulanceUom has binding name 'ns2__ThermalInsulanceUom' for type 'ns2:ThermalInsulanceUom' */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceUom
#define SOAP_TYPE_ns2__ThermalInsulanceUom (451)
#endif

/* enum ns2__ThermalDiffusivityUom has binding name 'ns2__ThermalDiffusivityUom' for type 'ns2:ThermalDiffusivityUom' */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityUom
#define SOAP_TYPE_ns2__ThermalDiffusivityUom (450)
#endif

/* enum ns2__ThermalConductivityUom has binding name 'ns2__ThermalConductivityUom' for type 'ns2:ThermalConductivityUom' */
#ifndef SOAP_TYPE_ns2__ThermalConductivityUom
#define SOAP_TYPE_ns2__ThermalConductivityUom (449)
#endif

/* enum ns2__ThermalConductanceUom has binding name 'ns2__ThermalConductanceUom' for type 'ns2:ThermalConductanceUom' */
#ifndef SOAP_TYPE_ns2__ThermalConductanceUom
#define SOAP_TYPE_ns2__ThermalConductanceUom (448)
#endif

/* enum ns2__TemperatureIntervalUom has binding name 'ns2__TemperatureIntervalUom' for type 'ns2:TemperatureIntervalUom' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalUom
#define SOAP_TYPE_ns2__TemperatureIntervalUom (447)
#endif

/* enum ns2__TemperatureIntervalPerTimeUom has binding name 'ns2__TemperatureIntervalPerTimeUom' for type 'ns2:TemperatureIntervalPerTimeUom' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeUom (446)
#endif

/* enum ns2__TemperatureIntervalPerPressureUom has binding name 'ns2__TemperatureIntervalPerPressureUom' for type 'ns2:TemperatureIntervalPerPressureUom' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureUom (445)
#endif

/* enum ns2__TemperatureIntervalPerLengthUom has binding name 'ns2__TemperatureIntervalPerLengthUom' for type 'ns2:TemperatureIntervalPerLengthUom' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthUom
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthUom (444)
#endif

/* enum ns2__SpecificHeatCapacityUom has binding name 'ns2__SpecificHeatCapacityUom' for type 'ns2:SpecificHeatCapacityUom' */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityUom
#define SOAP_TYPE_ns2__SpecificHeatCapacityUom (443)
#endif

/* enum ns2__SolidAngleUom has binding name 'ns2__SolidAngleUom' for type 'ns2:SolidAngleUom' */
#ifndef SOAP_TYPE_ns2__SolidAngleUom
#define SOAP_TYPE_ns2__SolidAngleUom (442)
#endif

/* enum ns2__SignalingEventPerTimeUom has binding name 'ns2__SignalingEventPerTimeUom' for type 'ns2:SignalingEventPerTimeUom' */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeUom
#define SOAP_TYPE_ns2__SignalingEventPerTimeUom (441)
#endif

/* enum ns2__SecondMomentOfAreaUom has binding name 'ns2__SecondMomentOfAreaUom' for type 'ns2:SecondMomentOfAreaUom' */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaUom
#define SOAP_TYPE_ns2__SecondMomentOfAreaUom (440)
#endif

/* enum ns2__ReluctanceUom has binding name 'ns2__ReluctanceUom' for type 'ns2:ReluctanceUom' */
#ifndef SOAP_TYPE_ns2__ReluctanceUom
#define SOAP_TYPE_ns2__ReluctanceUom (439)
#endif

/* enum ns2__ReciprocalVolumeUom has binding name 'ns2__ReciprocalVolumeUom' for type 'ns2:ReciprocalVolumeUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeUom
#define SOAP_TYPE_ns2__ReciprocalVolumeUom (438)
#endif

/* enum ns2__ReciprocalTimeUom has binding name 'ns2__ReciprocalTimeUom' for type 'ns2:ReciprocalTimeUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeUom
#define SOAP_TYPE_ns2__ReciprocalTimeUom (437)
#endif

/* enum ns2__ReciprocalPressureUom has binding name 'ns2__ReciprocalPressureUom' for type 'ns2:ReciprocalPressureUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureUom
#define SOAP_TYPE_ns2__ReciprocalPressureUom (436)
#endif

/* enum ns2__ReciprocalMassUom has binding name 'ns2__ReciprocalMassUom' for type 'ns2:ReciprocalMassUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassUom
#define SOAP_TYPE_ns2__ReciprocalMassUom (435)
#endif

/* enum ns2__ReciprocalMassTimeUom has binding name 'ns2__ReciprocalMassTimeUom' for type 'ns2:ReciprocalMassTimeUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeUom
#define SOAP_TYPE_ns2__ReciprocalMassTimeUom (434)
#endif

/* enum ns2__ReciprocalLengthUom has binding name 'ns2__ReciprocalLengthUom' for type 'ns2:ReciprocalLengthUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthUom
#define SOAP_TYPE_ns2__ReciprocalLengthUom (433)
#endif

/* enum ns2__ReciprocalForceUom has binding name 'ns2__ReciprocalForceUom' for type 'ns2:ReciprocalForceUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalForceUom
#define SOAP_TYPE_ns2__ReciprocalForceUom (432)
#endif

/* enum ns2__ReciprocalElectricPotentialDifferenceUom has binding name 'ns2__ReciprocalElectricPotentialDifferenceUom' for type 'ns2:ReciprocalElectricPotentialDifferenceUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUom
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUom (431)
#endif

/* enum ns2__ReciprocalAreaUom has binding name 'ns2__ReciprocalAreaUom' for type 'ns2:ReciprocalAreaUom' */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaUom
#define SOAP_TYPE_ns2__ReciprocalAreaUom (430)
#endif

/* enum ns2__RadiantIntensityUom has binding name 'ns2__RadiantIntensityUom' for type 'ns2:RadiantIntensityUom' */
#ifndef SOAP_TYPE_ns2__RadiantIntensityUom
#define SOAP_TYPE_ns2__RadiantIntensityUom (429)
#endif

/* enum ns2__RadianceUom has binding name 'ns2__RadianceUom' for type 'ns2:RadianceUom' */
#ifndef SOAP_TYPE_ns2__RadianceUom
#define SOAP_TYPE_ns2__RadianceUom (428)
#endif

/* enum ns2__QuantityOfLightUom has binding name 'ns2__QuantityOfLightUom' for type 'ns2:QuantityOfLightUom' */
#ifndef SOAP_TYPE_ns2__QuantityOfLightUom
#define SOAP_TYPE_ns2__QuantityOfLightUom (427)
#endif

/* enum ns2__PressureUom has binding name 'ns2__PressureUom' for type 'ns2:PressureUom' */
#ifndef SOAP_TYPE_ns2__PressureUom
#define SOAP_TYPE_ns2__PressureUom (426)
#endif

/* enum ns2__PressureTimePerVolumeUom has binding name 'ns2__PressureTimePerVolumeUom' for type 'ns2:PressureTimePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeUom
#define SOAP_TYPE_ns2__PressureTimePerVolumeUom (425)
#endif

/* enum ns2__PressureSquaredUom has binding name 'ns2__PressureSquaredUom' for type 'ns2:PressureSquaredUom' */
#ifndef SOAP_TYPE_ns2__PressureSquaredUom
#define SOAP_TYPE_ns2__PressureSquaredUom (424)
#endif

/* enum ns2__PressureSquaredPerForceTimePerAreaUom has binding name 'ns2__PressureSquaredPerForceTimePerAreaUom' for type 'ns2:PressureSquaredPerForceTimePerAreaUom' */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUom
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUom (423)
#endif

/* enum ns2__PressurePerVolumeUom has binding name 'ns2__PressurePerVolumeUom' for type 'ns2:PressurePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUom
#define SOAP_TYPE_ns2__PressurePerVolumeUom (422)
#endif

/* enum ns2__PressurePerTimeUom has binding name 'ns2__PressurePerTimeUom' for type 'ns2:PressurePerTimeUom' */
#ifndef SOAP_TYPE_ns2__PressurePerTimeUom
#define SOAP_TYPE_ns2__PressurePerTimeUom (421)
#endif

/* enum ns2__PressurePerPressureUom has binding name 'ns2__PressurePerPressureUom' for type 'ns2:PressurePerPressureUom' */
#ifndef SOAP_TYPE_ns2__PressurePerPressureUom
#define SOAP_TYPE_ns2__PressurePerPressureUom (420)
#endif

/* enum ns2__PressurePerFlowrateUom has binding name 'ns2__PressurePerFlowrateUom' for type 'ns2:PressurePerFlowrateUom' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateUom
#define SOAP_TYPE_ns2__PressurePerFlowrateUom (419)
#endif

/* enum ns2__PressurePerFlowrateSquaredUom has binding name 'ns2__PressurePerFlowrateSquaredUom' for type 'ns2:PressurePerFlowrateSquaredUom' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredUom
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredUom (418)
#endif

/* enum ns2__PowerUom has binding name 'ns2__PowerUom' for type 'ns2:PowerUom' */
#ifndef SOAP_TYPE_ns2__PowerUom
#define SOAP_TYPE_ns2__PowerUom (417)
#endif

/* enum ns2__PowerPerVolumeUom has binding name 'ns2__PowerPerVolumeUom' for type 'ns2:PowerPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeUom
#define SOAP_TYPE_ns2__PowerPerVolumeUom (416)
#endif

/* enum ns2__PowerPerPowerUom has binding name 'ns2__PowerPerPowerUom' for type 'ns2:PowerPerPowerUom' */
#ifndef SOAP_TYPE_ns2__PowerPerPowerUom
#define SOAP_TYPE_ns2__PowerPerPowerUom (415)
#endif

/* enum ns2__PowerPerAreaUom has binding name 'ns2__PowerPerAreaUom' for type 'ns2:PowerPerAreaUom' */
#ifndef SOAP_TYPE_ns2__PowerPerAreaUom
#define SOAP_TYPE_ns2__PowerPerAreaUom (414)
#endif

/* enum ns2__PotentialDifferencePerPowerDropUom has binding name 'ns2__PotentialDifferencePerPowerDropUom' for type 'ns2:PotentialDifferencePerPowerDropUom' */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUom
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUom (413)
#endif

/* enum ns2__PlaneAngleUom has binding name 'ns2__PlaneAngleUom' for type 'ns2:PlaneAngleUom' */
#ifndef SOAP_TYPE_ns2__PlaneAngleUom
#define SOAP_TYPE_ns2__PlaneAngleUom (412)
#endif

/* enum ns2__PermittivityUom has binding name 'ns2__PermittivityUom' for type 'ns2:PermittivityUom' */
#ifndef SOAP_TYPE_ns2__PermittivityUom
#define SOAP_TYPE_ns2__PermittivityUom (411)
#endif

/* enum ns2__PermeabilityRockUom has binding name 'ns2__PermeabilityRockUom' for type 'ns2:PermeabilityRockUom' */
#ifndef SOAP_TYPE_ns2__PermeabilityRockUom
#define SOAP_TYPE_ns2__PermeabilityRockUom (410)
#endif

/* enum ns2__PermeabilityLengthUom has binding name 'ns2__PermeabilityLengthUom' for type 'ns2:PermeabilityLengthUom' */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthUom
#define SOAP_TYPE_ns2__PermeabilityLengthUom (409)
#endif

/* enum ns2__NormalizedPowerUom has binding name 'ns2__NormalizedPowerUom' for type 'ns2:NormalizedPowerUom' */
#ifndef SOAP_TYPE_ns2__NormalizedPowerUom
#define SOAP_TYPE_ns2__NormalizedPowerUom (408)
#endif

/* enum ns2__MomentumUom has binding name 'ns2__MomentumUom' for type 'ns2:MomentumUom' */
#ifndef SOAP_TYPE_ns2__MomentumUom
#define SOAP_TYPE_ns2__MomentumUom (407)
#endif

/* enum ns2__MomentOfInertiaUom has binding name 'ns2__MomentOfInertiaUom' for type 'ns2:MomentOfInertiaUom' */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaUom
#define SOAP_TYPE_ns2__MomentOfInertiaUom (406)
#endif

/* enum ns2__MomentOfForceUom has binding name 'ns2__MomentOfForceUom' for type 'ns2:MomentOfForceUom' */
#ifndef SOAP_TYPE_ns2__MomentOfForceUom
#define SOAP_TYPE_ns2__MomentOfForceUom (405)
#endif

/* enum ns2__MolecularWeightUom has binding name 'ns2__MolecularWeightUom' for type 'ns2:MolecularWeightUom' */
#ifndef SOAP_TYPE_ns2__MolecularWeightUom
#define SOAP_TYPE_ns2__MolecularWeightUom (404)
#endif

/* enum ns2__MolarVolumeUom has binding name 'ns2__MolarVolumeUom' for type 'ns2:MolarVolumeUom' */
#ifndef SOAP_TYPE_ns2__MolarVolumeUom
#define SOAP_TYPE_ns2__MolarVolumeUom (403)
#endif

/* enum ns2__MolarHeatCapacityUom has binding name 'ns2__MolarHeatCapacityUom' for type 'ns2:MolarHeatCapacityUom' */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityUom
#define SOAP_TYPE_ns2__MolarHeatCapacityUom (402)
#endif

/* enum ns2__MolarEnergyUom has binding name 'ns2__MolarEnergyUom' for type 'ns2:MolarEnergyUom' */
#ifndef SOAP_TYPE_ns2__MolarEnergyUom
#define SOAP_TYPE_ns2__MolarEnergyUom (401)
#endif

/* enum ns2__MobilityUom has binding name 'ns2__MobilityUom' for type 'ns2:MobilityUom' */
#ifndef SOAP_TYPE_ns2__MobilityUom
#define SOAP_TYPE_ns2__MobilityUom (400)
#endif

/* enum ns2__MassUom has binding name 'ns2__MassUom' for type 'ns2:MassUom' */
#ifndef SOAP_TYPE_ns2__MassUom
#define SOAP_TYPE_ns2__MassUom (399)
#endif

/* enum ns2__MassPerVolumeUom has binding name 'ns2__MassPerVolumeUom' for type 'ns2:MassPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUom
#define SOAP_TYPE_ns2__MassPerVolumeUom (398)
#endif

/* enum ns2__MassPerVolumePerTemperatureUom has binding name 'ns2__MassPerVolumePerTemperatureUom' for type 'ns2:MassPerVolumePerTemperatureUom' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureUom
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureUom (397)
#endif

/* enum ns2__MassPerVolumePerPressureUom has binding name 'ns2__MassPerVolumePerPressureUom' for type 'ns2:MassPerVolumePerPressureUom' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureUom
#define SOAP_TYPE_ns2__MassPerVolumePerPressureUom (396)
#endif

/* enum ns2__MassPerVolumePerLengthUom has binding name 'ns2__MassPerVolumePerLengthUom' for type 'ns2:MassPerVolumePerLengthUom' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthUom
#define SOAP_TYPE_ns2__MassPerVolumePerLengthUom (395)
#endif

/* enum ns2__MassPerTimeUom has binding name 'ns2__MassPerTimeUom' for type 'ns2:MassPerTimeUom' */
#ifndef SOAP_TYPE_ns2__MassPerTimeUom
#define SOAP_TYPE_ns2__MassPerTimeUom (394)
#endif

/* enum ns2__MassPerTimePerLengthUom has binding name 'ns2__MassPerTimePerLengthUom' for type 'ns2:MassPerTimePerLengthUom' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthUom
#define SOAP_TYPE_ns2__MassPerTimePerLengthUom (393)
#endif

/* enum ns2__MassPerTimePerAreaUom has binding name 'ns2__MassPerTimePerAreaUom' for type 'ns2:MassPerTimePerAreaUom' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaUom
#define SOAP_TYPE_ns2__MassPerTimePerAreaUom (392)
#endif

/* enum ns2__MassPerMassUom has binding name 'ns2__MassPerMassUom' for type 'ns2:MassPerMassUom' */
#ifndef SOAP_TYPE_ns2__MassPerMassUom
#define SOAP_TYPE_ns2__MassPerMassUom (391)
#endif

/* enum ns2__MassPerLengthUom has binding name 'ns2__MassPerLengthUom' for type 'ns2:MassPerLengthUom' */
#ifndef SOAP_TYPE_ns2__MassPerLengthUom
#define SOAP_TYPE_ns2__MassPerLengthUom (390)
#endif

/* enum ns2__MassPerEnergyUom has binding name 'ns2__MassPerEnergyUom' for type 'ns2:MassPerEnergyUom' */
#ifndef SOAP_TYPE_ns2__MassPerEnergyUom
#define SOAP_TYPE_ns2__MassPerEnergyUom (389)
#endif

/* enum ns2__MassPerAreaUom has binding name 'ns2__MassPerAreaUom' for type 'ns2:MassPerAreaUom' */
#ifndef SOAP_TYPE_ns2__MassPerAreaUom
#define SOAP_TYPE_ns2__MassPerAreaUom (388)
#endif

/* enum ns2__MassLengthUom has binding name 'ns2__MassLengthUom' for type 'ns2:MassLengthUom' */
#ifndef SOAP_TYPE_ns2__MassLengthUom
#define SOAP_TYPE_ns2__MassLengthUom (387)
#endif

/* enum ns2__MagneticVectorPotentialUom has binding name 'ns2__MagneticVectorPotentialUom' for type 'ns2:MagneticVectorPotentialUom' */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialUom
#define SOAP_TYPE_ns2__MagneticVectorPotentialUom (386)
#endif

/* enum ns2__MagneticPermeabilityUom has binding name 'ns2__MagneticPermeabilityUom' for type 'ns2:MagneticPermeabilityUom' */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityUom
#define SOAP_TYPE_ns2__MagneticPermeabilityUom (385)
#endif

/* enum ns2__MagneticFluxUom has binding name 'ns2__MagneticFluxUom' for type 'ns2:MagneticFluxUom' */
#ifndef SOAP_TYPE_ns2__MagneticFluxUom
#define SOAP_TYPE_ns2__MagneticFluxUom (384)
#endif

/* enum ns2__MagneticFluxDensityUom has binding name 'ns2__MagneticFluxDensityUom' for type 'ns2:MagneticFluxDensityUom' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityUom
#define SOAP_TYPE_ns2__MagneticFluxDensityUom (383)
#endif

/* enum ns2__MagneticFluxDensityPerLengthUom has binding name 'ns2__MagneticFluxDensityPerLengthUom' for type 'ns2:MagneticFluxDensityPerLengthUom' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUom
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUom (382)
#endif

/* enum ns2__MagneticFieldStrengthUom has binding name 'ns2__MagneticFieldStrengthUom' for type 'ns2:MagneticFieldStrengthUom' */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthUom
#define SOAP_TYPE_ns2__MagneticFieldStrengthUom (381)
#endif

/* enum ns2__MagneticDipoleMomentUom has binding name 'ns2__MagneticDipoleMomentUom' for type 'ns2:MagneticDipoleMomentUom' */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentUom
#define SOAP_TYPE_ns2__MagneticDipoleMomentUom (380)
#endif

/* enum ns2__LuminousIntensityUom has binding name 'ns2__LuminousIntensityUom' for type 'ns2:LuminousIntensityUom' */
#ifndef SOAP_TYPE_ns2__LuminousIntensityUom
#define SOAP_TYPE_ns2__LuminousIntensityUom (379)
#endif

/* enum ns2__LuminousFluxUom has binding name 'ns2__LuminousFluxUom' for type 'ns2:LuminousFluxUom' */
#ifndef SOAP_TYPE_ns2__LuminousFluxUom
#define SOAP_TYPE_ns2__LuminousFluxUom (378)
#endif

/* enum ns2__LuminousEfficacyUom has binding name 'ns2__LuminousEfficacyUom' for type 'ns2:LuminousEfficacyUom' */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyUom
#define SOAP_TYPE_ns2__LuminousEfficacyUom (377)
#endif

/* enum ns2__LuminanceUom has binding name 'ns2__LuminanceUom' for type 'ns2:LuminanceUom' */
#ifndef SOAP_TYPE_ns2__LuminanceUom
#define SOAP_TYPE_ns2__LuminanceUom (376)
#endif

/* enum ns2__LogarithmicPowerRatioUom has binding name 'ns2__LogarithmicPowerRatioUom' for type 'ns2:LogarithmicPowerRatioUom' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioUom
#define SOAP_TYPE_ns2__LogarithmicPowerRatioUom (375)
#endif

/* enum ns2__LogarithmicPowerRatioPerLengthUom has binding name 'ns2__LogarithmicPowerRatioPerLengthUom' for type 'ns2:LogarithmicPowerRatioPerLengthUom' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUom
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUom (374)
#endif

/* enum ns2__LinearThermalExpansionUom has binding name 'ns2__LinearThermalExpansionUom' for type 'ns2:LinearThermalExpansionUom' */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionUom
#define SOAP_TYPE_ns2__LinearThermalExpansionUom (373)
#endif

/* enum ns2__LinearAccelerationUom has binding name 'ns2__LinearAccelerationUom' for type 'ns2:LinearAccelerationUom' */
#ifndef SOAP_TYPE_ns2__LinearAccelerationUom
#define SOAP_TYPE_ns2__LinearAccelerationUom (372)
#endif

/* enum ns2__LightExposureUom has binding name 'ns2__LightExposureUom' for type 'ns2:LightExposureUom' */
#ifndef SOAP_TYPE_ns2__LightExposureUom
#define SOAP_TYPE_ns2__LightExposureUom (371)
#endif

/* enum ns2__LengthUom has binding name 'ns2__LengthUom' for type 'ns2:LengthUom' */
#ifndef SOAP_TYPE_ns2__LengthUom
#define SOAP_TYPE_ns2__LengthUom (370)
#endif

/* enum ns2__LengthPerVolumeUom has binding name 'ns2__LengthPerVolumeUom' for type 'ns2:LengthPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeUom
#define SOAP_TYPE_ns2__LengthPerVolumeUom (369)
#endif

/* enum ns2__LengthPerTimeUom has binding name 'ns2__LengthPerTimeUom' for type 'ns2:LengthPerTimeUom' */
#ifndef SOAP_TYPE_ns2__LengthPerTimeUom
#define SOAP_TYPE_ns2__LengthPerTimeUom (368)
#endif

/* enum ns2__LengthPerTemperatureUom has binding name 'ns2__LengthPerTemperatureUom' for type 'ns2:LengthPerTemperatureUom' */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureUom
#define SOAP_TYPE_ns2__LengthPerTemperatureUom (367)
#endif

/* enum ns2__LengthPerPressureUom has binding name 'ns2__LengthPerPressureUom' for type 'ns2:LengthPerPressureUom' */
#ifndef SOAP_TYPE_ns2__LengthPerPressureUom
#define SOAP_TYPE_ns2__LengthPerPressureUom (366)
#endif

/* enum ns2__LengthPerMassUom has binding name 'ns2__LengthPerMassUom' for type 'ns2:LengthPerMassUom' */
#ifndef SOAP_TYPE_ns2__LengthPerMassUom
#define SOAP_TYPE_ns2__LengthPerMassUom (365)
#endif

/* enum ns2__LengthPerLengthUom has binding name 'ns2__LengthPerLengthUom' for type 'ns2:LengthPerLengthUom' */
#ifndef SOAP_TYPE_ns2__LengthPerLengthUom
#define SOAP_TYPE_ns2__LengthPerLengthUom (364)
#endif

/* enum ns2__LengthPerAngleUom has binding name 'ns2__LengthPerAngleUom' for type 'ns2:LengthPerAngleUom' */
#ifndef SOAP_TYPE_ns2__LengthPerAngleUom
#define SOAP_TYPE_ns2__LengthPerAngleUom (363)
#endif

/* enum ns2__KinematicViscosityUom has binding name 'ns2__KinematicViscosityUom' for type 'ns2:KinematicViscosityUom' */
#ifndef SOAP_TYPE_ns2__KinematicViscosityUom
#define SOAP_TYPE_ns2__KinematicViscosityUom (362)
#endif

/* enum ns2__IsothermalCompressibilityUom has binding name 'ns2__IsothermalCompressibilityUom' for type 'ns2:IsothermalCompressibilityUom' */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityUom
#define SOAP_TYPE_ns2__IsothermalCompressibilityUom (361)
#endif

/* enum ns2__InductanceUom has binding name 'ns2__InductanceUom' for type 'ns2:InductanceUom' */
#ifndef SOAP_TYPE_ns2__InductanceUom
#define SOAP_TYPE_ns2__InductanceUom (360)
#endif

/* enum ns2__IlluminanceUom has binding name 'ns2__IlluminanceUom' for type 'ns2:IlluminanceUom' */
#ifndef SOAP_TYPE_ns2__IlluminanceUom
#define SOAP_TYPE_ns2__IlluminanceUom (359)
#endif

/* enum ns2__HeatTransferCoefficientUom has binding name 'ns2__HeatTransferCoefficientUom' for type 'ns2:HeatTransferCoefficientUom' */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientUom
#define SOAP_TYPE_ns2__HeatTransferCoefficientUom (358)
#endif

/* enum ns2__HeatFlowRateUom has binding name 'ns2__HeatFlowRateUom' for type 'ns2:HeatFlowRateUom' */
#ifndef SOAP_TYPE_ns2__HeatFlowRateUom
#define SOAP_TYPE_ns2__HeatFlowRateUom (357)
#endif

/* enum ns2__HeatCapacityUom has binding name 'ns2__HeatCapacityUom' for type 'ns2:HeatCapacityUom' */
#ifndef SOAP_TYPE_ns2__HeatCapacityUom
#define SOAP_TYPE_ns2__HeatCapacityUom (356)
#endif

/* enum ns2__FrequencyUom has binding name 'ns2__FrequencyUom' for type 'ns2:FrequencyUom' */
#ifndef SOAP_TYPE_ns2__FrequencyUom
#define SOAP_TYPE_ns2__FrequencyUom (355)
#endif

/* enum ns2__FrequencyIntervalUom has binding name 'ns2__FrequencyIntervalUom' for type 'ns2:FrequencyIntervalUom' */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalUom
#define SOAP_TYPE_ns2__FrequencyIntervalUom (354)
#endif

/* enum ns2__ForceUom has binding name 'ns2__ForceUom' for type 'ns2:ForceUom' */
#ifndef SOAP_TYPE_ns2__ForceUom
#define SOAP_TYPE_ns2__ForceUom (353)
#endif

/* enum ns2__ForcePerVolumeUom has binding name 'ns2__ForcePerVolumeUom' for type 'ns2:ForcePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeUom
#define SOAP_TYPE_ns2__ForcePerVolumeUom (352)
#endif

/* enum ns2__ForcePerLengthUom has binding name 'ns2__ForcePerLengthUom' for type 'ns2:ForcePerLengthUom' */
#ifndef SOAP_TYPE_ns2__ForcePerLengthUom
#define SOAP_TYPE_ns2__ForcePerLengthUom (351)
#endif

/* enum ns2__ForcePerForceUom has binding name 'ns2__ForcePerForceUom' for type 'ns2:ForcePerForceUom' */
#ifndef SOAP_TYPE_ns2__ForcePerForceUom
#define SOAP_TYPE_ns2__ForcePerForceUom (350)
#endif

/* enum ns2__ForceLengthPerLengthUom has binding name 'ns2__ForceLengthPerLengthUom' for type 'ns2:ForceLengthPerLengthUom' */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthUom
#define SOAP_TYPE_ns2__ForceLengthPerLengthUom (349)
#endif

/* enum ns2__ForceAreaUom has binding name 'ns2__ForceAreaUom' for type 'ns2:ForceAreaUom' */
#ifndef SOAP_TYPE_ns2__ForceAreaUom
#define SOAP_TYPE_ns2__ForceAreaUom (348)
#endif

/* enum ns2__EnergyUom has binding name 'ns2__EnergyUom' for type 'ns2:EnergyUom' */
#ifndef SOAP_TYPE_ns2__EnergyUom
#define SOAP_TYPE_ns2__EnergyUom (347)
#endif

/* enum ns2__EnergyPerVolumeUom has binding name 'ns2__EnergyPerVolumeUom' for type 'ns2:EnergyPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeUom
#define SOAP_TYPE_ns2__EnergyPerVolumeUom (346)
#endif

/* enum ns2__EnergyPerMassUom has binding name 'ns2__EnergyPerMassUom' for type 'ns2:EnergyPerMassUom' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassUom
#define SOAP_TYPE_ns2__EnergyPerMassUom (345)
#endif

/* enum ns2__EnergyPerMassPerTimeUom has binding name 'ns2__EnergyPerMassPerTimeUom' for type 'ns2:EnergyPerMassPerTimeUom' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeUom
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeUom (344)
#endif

/* enum ns2__EnergyPerLengthUom has binding name 'ns2__EnergyPerLengthUom' for type 'ns2:EnergyPerLengthUom' */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthUom
#define SOAP_TYPE_ns2__EnergyPerLengthUom (343)
#endif

/* enum ns2__EnergyPerAreaUom has binding name 'ns2__EnergyPerAreaUom' for type 'ns2:EnergyPerAreaUom' */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaUom
#define SOAP_TYPE_ns2__EnergyPerAreaUom (342)
#endif

/* enum ns2__EnergyLengthPerTimeAreaTemperatureUom has binding name 'ns2__EnergyLengthPerTimeAreaTemperatureUom' for type 'ns2:EnergyLengthPerTimeAreaTemperatureUom' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUom
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUom (341)
#endif

/* enum ns2__EnergyLengthPerAreaUom has binding name 'ns2__EnergyLengthPerAreaUom' for type 'ns2:EnergyLengthPerAreaUom' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaUom
#define SOAP_TYPE_ns2__EnergyLengthPerAreaUom (340)
#endif

/* enum ns2__ElectromagneticMomentUom has binding name 'ns2__ElectromagneticMomentUom' for type 'ns2:ElectromagneticMomentUom' */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentUom
#define SOAP_TYPE_ns2__ElectromagneticMomentUom (339)
#endif

/* enum ns2__ElectricResistanceUom has binding name 'ns2__ElectricResistanceUom' for type 'ns2:ElectricResistanceUom' */
#ifndef SOAP_TYPE_ns2__ElectricResistanceUom
#define SOAP_TYPE_ns2__ElectricResistanceUom (338)
#endif

/* enum ns2__ElectricResistancePerLengthUom has binding name 'ns2__ElectricResistancePerLengthUom' for type 'ns2:ElectricResistancePerLengthUom' */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthUom
#define SOAP_TYPE_ns2__ElectricResistancePerLengthUom (337)
#endif

/* enum ns2__ElectricPotentialDifferenceUom has binding name 'ns2__ElectricPotentialDifferenceUom' for type 'ns2:ElectricPotentialDifferenceUom' */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceUom
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceUom (336)
#endif

/* enum ns2__ElectricFieldStrengthUom has binding name 'ns2__ElectricFieldStrengthUom' for type 'ns2:ElectricFieldStrengthUom' */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthUom
#define SOAP_TYPE_ns2__ElectricFieldStrengthUom (335)
#endif

/* enum ns2__ElectricCurrentUom has binding name 'ns2__ElectricCurrentUom' for type 'ns2:ElectricCurrentUom' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentUom
#define SOAP_TYPE_ns2__ElectricCurrentUom (334)
#endif

/* enum ns2__ElectricCurrentDensityUom has binding name 'ns2__ElectricCurrentDensityUom' for type 'ns2:ElectricCurrentDensityUom' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityUom
#define SOAP_TYPE_ns2__ElectricCurrentDensityUom (333)
#endif

/* enum ns2__ElectricConductivityUom has binding name 'ns2__ElectricConductivityUom' for type 'ns2:ElectricConductivityUom' */
#ifndef SOAP_TYPE_ns2__ElectricConductivityUom
#define SOAP_TYPE_ns2__ElectricConductivityUom (332)
#endif

/* enum ns2__ElectricConductanceUom has binding name 'ns2__ElectricConductanceUom' for type 'ns2:ElectricConductanceUom' */
#ifndef SOAP_TYPE_ns2__ElectricConductanceUom
#define SOAP_TYPE_ns2__ElectricConductanceUom (331)
#endif

/* enum ns2__ElectricChargeUom has binding name 'ns2__ElectricChargeUom' for type 'ns2:ElectricChargeUom' */
#ifndef SOAP_TYPE_ns2__ElectricChargeUom
#define SOAP_TYPE_ns2__ElectricChargeUom (330)
#endif

/* enum ns2__ElectricChargePerVolumeUom has binding name 'ns2__ElectricChargePerVolumeUom' for type 'ns2:ElectricChargePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeUom
#define SOAP_TYPE_ns2__ElectricChargePerVolumeUom (329)
#endif

/* enum ns2__ElectricChargePerMassUom has binding name 'ns2__ElectricChargePerMassUom' for type 'ns2:ElectricChargePerMassUom' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassUom
#define SOAP_TYPE_ns2__ElectricChargePerMassUom (328)
#endif

/* enum ns2__ElectricChargePerAreaUom has binding name 'ns2__ElectricChargePerAreaUom' for type 'ns2:ElectricChargePerAreaUom' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaUom
#define SOAP_TYPE_ns2__ElectricChargePerAreaUom (327)
#endif

/* enum ns2__ElectricalResistivityUom has binding name 'ns2__ElectricalResistivityUom' for type 'ns2:ElectricalResistivityUom' */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityUom
#define SOAP_TYPE_ns2__ElectricalResistivityUom (326)
#endif

/* enum ns2__DynamicViscosityUom has binding name 'ns2__DynamicViscosityUom' for type 'ns2:DynamicViscosityUom' */
#ifndef SOAP_TYPE_ns2__DynamicViscosityUom
#define SOAP_TYPE_ns2__DynamicViscosityUom (325)
#endif

/* enum ns2__DoseEquivalentUom has binding name 'ns2__DoseEquivalentUom' for type 'ns2:DoseEquivalentUom' */
#ifndef SOAP_TYPE_ns2__DoseEquivalentUom
#define SOAP_TYPE_ns2__DoseEquivalentUom (324)
#endif

/* enum ns2__DipoleMomentUom has binding name 'ns2__DipoleMomentUom' for type 'ns2:DipoleMomentUom' */
#ifndef SOAP_TYPE_ns2__DipoleMomentUom
#define SOAP_TYPE_ns2__DipoleMomentUom (323)
#endif

/* enum ns2__DimensionlessUom has binding name 'ns2__DimensionlessUom' for type 'ns2:DimensionlessUom' */
#ifndef SOAP_TYPE_ns2__DimensionlessUom
#define SOAP_TYPE_ns2__DimensionlessUom (322)
#endif

/* enum ns2__DigitalStorageUom has binding name 'ns2__DigitalStorageUom' for type 'ns2:DigitalStorageUom' */
#ifndef SOAP_TYPE_ns2__DigitalStorageUom
#define SOAP_TYPE_ns2__DigitalStorageUom (321)
#endif

/* enum ns2__DiffusiveTimeOfFlightUom has binding name 'ns2__DiffusiveTimeOfFlightUom' for type 'ns2:DiffusiveTimeOfFlightUom' */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightUom
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightUom (320)
#endif

/* enum ns2__DiffusionCoefficientUom has binding name 'ns2__DiffusionCoefficientUom' for type 'ns2:DiffusionCoefficientUom' */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientUom
#define SOAP_TYPE_ns2__DiffusionCoefficientUom (319)
#endif

/* enum ns2__DataTransferSpeedUom has binding name 'ns2__DataTransferSpeedUom' for type 'ns2:DataTransferSpeedUom' */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedUom
#define SOAP_TYPE_ns2__DataTransferSpeedUom (318)
#endif

/* enum ns2__CationExchangeCapacityUom has binding name 'ns2__CationExchangeCapacityUom' for type 'ns2:CationExchangeCapacityUom' */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityUom
#define SOAP_TYPE_ns2__CationExchangeCapacityUom (317)
#endif

/* enum ns2__CapacitanceUom has binding name 'ns2__CapacitanceUom' for type 'ns2:CapacitanceUom' */
#ifndef SOAP_TYPE_ns2__CapacitanceUom
#define SOAP_TYPE_ns2__CapacitanceUom (316)
#endif

/* enum ns2__AttenuationPerFrequencyIntervalUom has binding name 'ns2__AttenuationPerFrequencyIntervalUom' for type 'ns2:AttenuationPerFrequencyIntervalUom' */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUom
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUom (315)
#endif

/* enum ns2__AreaUom has binding name 'ns2__AreaUom' for type 'ns2:AreaUom' */
#ifndef SOAP_TYPE_ns2__AreaUom
#define SOAP_TYPE_ns2__AreaUom (314)
#endif

/* enum ns2__AreaPerVolumeUom has binding name 'ns2__AreaPerVolumeUom' for type 'ns2:AreaPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeUom
#define SOAP_TYPE_ns2__AreaPerVolumeUom (313)
#endif

/* enum ns2__AreaPerTimeUom has binding name 'ns2__AreaPerTimeUom' for type 'ns2:AreaPerTimeUom' */
#ifndef SOAP_TYPE_ns2__AreaPerTimeUom
#define SOAP_TYPE_ns2__AreaPerTimeUom (312)
#endif

/* enum ns2__AreaPerMassUom has binding name 'ns2__AreaPerMassUom' for type 'ns2:AreaPerMassUom' */
#ifndef SOAP_TYPE_ns2__AreaPerMassUom
#define SOAP_TYPE_ns2__AreaPerMassUom (311)
#endif

/* enum ns2__AreaPerCountUom has binding name 'ns2__AreaPerCountUom' for type 'ns2:AreaPerCountUom' */
#ifndef SOAP_TYPE_ns2__AreaPerCountUom
#define SOAP_TYPE_ns2__AreaPerCountUom (310)
#endif

/* enum ns2__AreaPerAreaUom has binding name 'ns2__AreaPerAreaUom' for type 'ns2:AreaPerAreaUom' */
#ifndef SOAP_TYPE_ns2__AreaPerAreaUom
#define SOAP_TYPE_ns2__AreaPerAreaUom (309)
#endif

/* enum ns2__AreaPerAmountOfSubstanceUom has binding name 'ns2__AreaPerAmountOfSubstanceUom' for type 'ns2:AreaPerAmountOfSubstanceUom' */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUom
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUom (308)
#endif

/* enum ns2__APINeutronUom has binding name 'ns2__APINeutronUom' for type 'ns2:APINeutronUom' */
#ifndef SOAP_TYPE_ns2__APINeutronUom
#define SOAP_TYPE_ns2__APINeutronUom (307)
#endif

/* enum ns2__APIGravityUom has binding name 'ns2__APIGravityUom' for type 'ns2:APIGravityUom' */
#ifndef SOAP_TYPE_ns2__APIGravityUom
#define SOAP_TYPE_ns2__APIGravityUom (306)
#endif

/* enum ns2__APIGammaRayUom has binding name 'ns2__APIGammaRayUom' for type 'ns2:APIGammaRayUom' */
#ifndef SOAP_TYPE_ns2__APIGammaRayUom
#define SOAP_TYPE_ns2__APIGammaRayUom (305)
#endif

/* enum ns2__AngularVelocityUom has binding name 'ns2__AngularVelocityUom' for type 'ns2:AngularVelocityUom' */
#ifndef SOAP_TYPE_ns2__AngularVelocityUom
#define SOAP_TYPE_ns2__AngularVelocityUom (304)
#endif

/* enum ns2__AngularAccelerationUom has binding name 'ns2__AngularAccelerationUom' for type 'ns2:AngularAccelerationUom' */
#ifndef SOAP_TYPE_ns2__AngularAccelerationUom
#define SOAP_TYPE_ns2__AngularAccelerationUom (303)
#endif

/* enum ns2__AnglePerVolumeUom has binding name 'ns2__AnglePerVolumeUom' for type 'ns2:AnglePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeUom
#define SOAP_TYPE_ns2__AnglePerVolumeUom (302)
#endif

/* enum ns2__AnglePerLengthUom has binding name 'ns2__AnglePerLengthUom' for type 'ns2:AnglePerLengthUom' */
#ifndef SOAP_TYPE_ns2__AnglePerLengthUom
#define SOAP_TYPE_ns2__AnglePerLengthUom (301)
#endif

/* enum ns2__AmountOfSubstanceUom has binding name 'ns2__AmountOfSubstanceUom' for type 'ns2:AmountOfSubstanceUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceUom
#define SOAP_TYPE_ns2__AmountOfSubstanceUom (300)
#endif

/* enum ns2__AmountOfSubstancePerVolumeUom has binding name 'ns2__AmountOfSubstancePerVolumeUom' for type 'ns2:AmountOfSubstancePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUom (299)
#endif

/* enum ns2__AmountOfSubstancePerTimeUom has binding name 'ns2__AmountOfSubstancePerTimeUom' for type 'ns2:AmountOfSubstancePerTimeUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeUom (298)
#endif

/* enum ns2__AmountOfSubstancePerTimePerAreaUom has binding name 'ns2__AmountOfSubstancePerTimePerAreaUom' for type 'ns2:AmountOfSubstancePerTimePerAreaUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUom (297)
#endif

/* enum ns2__AmountOfSubstancePerAreaUom has binding name 'ns2__AmountOfSubstancePerAreaUom' for type 'ns2:AmountOfSubstancePerAreaUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaUom (296)
#endif

/* enum ns2__AmountOfSubstancePerAmountOfSubstanceUom has binding name 'ns2__AmountOfSubstancePerAmountOfSubstanceUom' for type 'ns2:AmountOfSubstancePerAmountOfSubstanceUom' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUom
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUom (295)
#endif

/* enum ns2__ActivityOfRadioactivityUom has binding name 'ns2__ActivityOfRadioactivityUom' for type 'ns2:ActivityOfRadioactivityUom' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityUom
#define SOAP_TYPE_ns2__ActivityOfRadioactivityUom (294)
#endif

/* enum ns2__ActivityOfRadioactivityPerVolumeUom has binding name 'ns2__ActivityOfRadioactivityPerVolumeUom' for type 'ns2:ActivityOfRadioactivityPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUom
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUom (293)
#endif

/* enum ns2__AbsorbedDoseUom has binding name 'ns2__AbsorbedDoseUom' for type 'ns2:AbsorbedDoseUom' */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseUom
#define SOAP_TYPE_ns2__AbsorbedDoseUom (292)
#endif

/* enum ns2__LegacyVolumeUom has binding name 'ns2__LegacyVolumeUom' for type 'ns2:LegacyVolumeUom' */
#ifndef SOAP_TYPE_ns2__LegacyVolumeUom
#define SOAP_TYPE_ns2__LegacyVolumeUom (291)
#endif

/* enum ns2__LegacyVolumePerVolumeUom has binding name 'ns2__LegacyVolumePerVolumeUom' for type 'ns2:LegacyVolumePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerVolumeUom
#define SOAP_TYPE_ns2__LegacyVolumePerVolumeUom (290)
#endif

/* enum ns2__LegacyVolumePerTimeUom has binding name 'ns2__LegacyVolumePerTimeUom' for type 'ns2:LegacyVolumePerTimeUom' */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerTimeUom
#define SOAP_TYPE_ns2__LegacyVolumePerTimeUom (289)
#endif

/* enum ns2__LegacyVolumePerAreaUom has binding name 'ns2__LegacyVolumePerAreaUom' for type 'ns2:LegacyVolumePerAreaUom' */
#ifndef SOAP_TYPE_ns2__LegacyVolumePerAreaUom
#define SOAP_TYPE_ns2__LegacyVolumePerAreaUom (288)
#endif

/* enum ns2__LegacyPressureUom has binding name 'ns2__LegacyPressureUom' for type 'ns2:LegacyPressureUom' */
#ifndef SOAP_TYPE_ns2__LegacyPressureUom
#define SOAP_TYPE_ns2__LegacyPressureUom (287)
#endif

/* enum ns2__LegacyPressurePerVolumeUom has binding name 'ns2__LegacyPressurePerVolumeUom' for type 'ns2:LegacyPressurePerVolumeUom' */
#ifndef SOAP_TYPE_ns2__LegacyPressurePerVolumeUom
#define SOAP_TYPE_ns2__LegacyPressurePerVolumeUom (286)
#endif

/* enum ns2__LegacyMassPerVolumeUom has binding name 'ns2__LegacyMassPerVolumeUom' for type 'ns2:LegacyMassPerVolumeUom' */
#ifndef SOAP_TYPE_ns2__LegacyMassPerVolumeUom
#define SOAP_TYPE_ns2__LegacyMassPerVolumeUom (285)
#endif

/* enum ns2__UnitOfMeasure has binding name 'ns2__UnitOfMeasure' for type 'ns2:UnitOfMeasure' */
#ifndef SOAP_TYPE_ns2__UnitOfMeasure
#define SOAP_TYPE_ns2__UnitOfMeasure (281)
#endif

/* enum ns2__LegacyUnitOfMeasure has binding name 'ns2__LegacyUnitOfMeasure' for type 'ns2:LegacyUnitOfMeasure' */
#ifndef SOAP_TYPE_ns2__LegacyUnitOfMeasure
#define SOAP_TYPE_ns2__LegacyUnitOfMeasure (280)
#endif

/* enum xsd__boolean has binding name 'xsd__boolean' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (11)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (2335)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (2334)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (2331)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (2329)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (2328)
#endif

/* struct ns21__readWitsmlObject has binding name 'ns21__readWitsmlObject' for type 'ns21:readWitsmlObject' */
#ifndef SOAP_TYPE_ns21__readWitsmlObject
#define SOAP_TYPE_ns21__readWitsmlObject (2327)
#endif

/* struct ns21__readWitsmlObjectResponse has binding name 'ns21__readWitsmlObjectResponse' for type 'ns21:readWitsmlObjectResponse' */
#ifndef SOAP_TYPE_ns21__readWitsmlObjectResponse
#define SOAP_TYPE_ns21__readWitsmlObjectResponse (2326)
#endif

/* struct ns21__witsmlObject has binding name 'ns21__witsmlObject' for type 'ns21:witsmlObject' */
#ifndef SOAP_TYPE_ns21__witsmlObject
#define SOAP_TYPE_ns21__witsmlObject (2300)
#endif

/* _ns2__GraphicalInformationSet has binding name '_ns2__GraphicalInformationSet' for type '' */
#ifndef SOAP_TYPE__ns2__GraphicalInformationSet
#define SOAP_TYPE__ns2__GraphicalInformationSet (2299)
#endif

/* _ns2__DataAssuranceRecord has binding name '_ns2__DataAssuranceRecord' for type '' */
#ifndef SOAP_TYPE__ns2__DataAssuranceRecord
#define SOAP_TYPE__ns2__DataAssuranceRecord (2298)
#endif

/* _ns2__ColumnBasedTable has binding name '_ns2__ColumnBasedTable' for type '' */
#ifndef SOAP_TYPE__ns2__ColumnBasedTable
#define SOAP_TYPE__ns2__ColumnBasedTable (2297)
#endif

/* _ns2__DataobjectCollection has binding name '_ns2__DataobjectCollection' for type '' */
#ifndef SOAP_TYPE__ns2__DataobjectCollection
#define SOAP_TYPE__ns2__DataobjectCollection (2296)
#endif

/* _ns2__CollectionsToDataobjectsAssociationSet has binding name '_ns2__CollectionsToDataobjectsAssociationSet' for type '' */
#ifndef SOAP_TYPE__ns2__CollectionsToDataobjectsAssociationSet
#define SOAP_TYPE__ns2__CollectionsToDataobjectsAssociationSet (2295)
#endif

/* _ns2__Attachment has binding name '_ns2__Attachment' for type '' */
#ifndef SOAP_TYPE__ns2__Attachment
#define SOAP_TYPE__ns2__Attachment (2294)
#endif

/* _ns2__Aggregate has binding name '_ns2__Aggregate' for type '' */
#ifndef SOAP_TYPE__ns2__Aggregate
#define SOAP_TYPE__ns2__Aggregate (2293)
#endif

/* _ns2__ActivityTemplate has binding name '_ns2__ActivityTemplate' for type '' */
#ifndef SOAP_TYPE__ns2__ActivityTemplate
#define SOAP_TYPE__ns2__ActivityTemplate (2292)
#endif

/* _ns2__Activity has binding name '_ns2__Activity' for type '' */
#ifndef SOAP_TYPE__ns2__Activity
#define SOAP_TYPE__ns2__Activity (2291)
#endif

/* _ns2__BusinessAssociate has binding name '_ns2__BusinessAssociate' for type '' */
#ifndef SOAP_TYPE__ns2__BusinessAssociate
#define SOAP_TYPE__ns2__BusinessAssociate (2290)
#endif

/* _ns2__TimeSeries has binding name '_ns2__TimeSeries' for type '' */
#ifndef SOAP_TYPE__ns2__TimeSeries
#define SOAP_TYPE__ns2__TimeSeries (2289)
#endif

/* _ns2__PropertyKindDictionary has binding name '_ns2__PropertyKindDictionary' for type '' */
#ifndef SOAP_TYPE__ns2__PropertyKindDictionary
#define SOAP_TYPE__ns2__PropertyKindDictionary (2288)
#endif

/* _ns2__PropertyKind has binding name '_ns2__PropertyKind' for type '' */
#ifndef SOAP_TYPE__ns2__PropertyKind
#define SOAP_TYPE__ns2__PropertyKind (2287)
#endif

/* _ns2__VerticalCrs has binding name '_ns2__VerticalCrs' for type '' */
#ifndef SOAP_TYPE__ns2__VerticalCrs
#define SOAP_TYPE__ns2__VerticalCrs (2286)
#endif

/* _ns2__ProjectedCrs has binding name '_ns2__ProjectedCrs' for type '' */
#ifndef SOAP_TYPE__ns2__ProjectedCrs
#define SOAP_TYPE__ns2__ProjectedCrs (2285)
#endif

/* _ns2__LocalEngineeringCompoundCrs has binding name '_ns2__LocalEngineeringCompoundCrs' for type '' */
#ifndef SOAP_TYPE__ns2__LocalEngineeringCompoundCrs
#define SOAP_TYPE__ns2__LocalEngineeringCompoundCrs (2284)
#endif

/* _ns2__LocalEngineering2dCrs has binding name '_ns2__LocalEngineering2dCrs' for type '' */
#ifndef SOAP_TYPE__ns2__LocalEngineering2dCrs
#define SOAP_TYPE__ns2__LocalEngineering2dCrs (2283)
#endif

/* _ns2__Geographic2dCrs has binding name '_ns2__Geographic2dCrs' for type '' */
#ifndef SOAP_TYPE__ns2__Geographic2dCrs
#define SOAP_TYPE__ns2__Geographic2dCrs (2282)
#endif

/* _ns2__ReferencePointInAWellbore has binding name '_ns2__ReferencePointInAWellbore' for type '' */
#ifndef SOAP_TYPE__ns2__ReferencePointInAWellbore
#define SOAP_TYPE__ns2__ReferencePointInAWellbore (2281)
#endif

/* _ns2__ReferencePointInALocalEngineeringCompoundCrs has binding name '_ns2__ReferencePointInALocalEngineeringCompoundCrs' for type '' */
#ifndef SOAP_TYPE__ns2__ReferencePointInALocalEngineeringCompoundCrs
#define SOAP_TYPE__ns2__ReferencePointInALocalEngineeringCompoundCrs (2280)
#endif

/* _ns2__ReferencePointInACrs has binding name '_ns2__ReferencePointInACrs' for type '' */
#ifndef SOAP_TYPE__ns2__ReferencePointInACrs
#define SOAP_TYPE__ns2__ReferencePointInACrs (2279)
#endif

/* _ns2__RecursiveReferencePoint has binding name '_ns2__RecursiveReferencePoint' for type '' */
#ifndef SOAP_TYPE__ns2__RecursiveReferencePoint
#define SOAP_TYPE__ns2__RecursiveReferencePoint (2278)
#endif

/* _ns1__WellboreMarkerSet has binding name '_ns1__WellboreMarkerSet' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreMarkerSet
#define SOAP_TYPE__ns1__WellboreMarkerSet (2277)
#endif

/* _ns1__WellboreMarker has binding name '_ns1__WellboreMarker' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreMarker
#define SOAP_TYPE__ns1__WellboreMarker (2276)
#endif

/* _ns1__WellCompletion has binding name '_ns1__WellCompletion' for type '' */
#ifndef SOAP_TYPE__ns1__WellCompletion
#define SOAP_TYPE__ns1__WellCompletion (2275)
#endif

/* _ns1__WellboreCompletion has binding name '_ns1__WellboreCompletion' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreCompletion
#define SOAP_TYPE__ns1__WellboreCompletion (2274)
#endif

/* _ns1__Risk has binding name '_ns1__Risk' for type '' */
#ifndef SOAP_TYPE__ns1__Risk
#define SOAP_TYPE__ns1__Risk (2273)
#endif

/* _ns1__PPFGLog has binding name '_ns1__PPFGLog' for type '' */
#ifndef SOAP_TYPE__ns1__PPFGLog
#define SOAP_TYPE__ns1__PPFGLog (2272)
#endif

/* _ns1__PPFGChannelSet has binding name '_ns1__PPFGChannelSet' for type '' */
#ifndef SOAP_TYPE__ns1__PPFGChannelSet
#define SOAP_TYPE__ns1__PPFGChannelSet (2271)
#endif

/* _ns1__PPFGChannel has binding name '_ns1__PPFGChannel' for type '' */
#ifndef SOAP_TYPE__ns1__PPFGChannel
#define SOAP_TYPE__ns1__PPFGChannel (2270)
#endif

/* _ns1__OpsReport has binding name '_ns1__OpsReport' for type '' */
#ifndef SOAP_TYPE__ns1__OpsReport
#define SOAP_TYPE__ns1__OpsReport (2269)
#endif

/* _ns1__StimPerforationCluster has binding name '_ns1__StimPerforationCluster' for type '' */
#ifndef SOAP_TYPE__ns1__StimPerforationCluster
#define SOAP_TYPE__ns1__StimPerforationCluster (2268)
#endif

/* _ns1__StimJobStage has binding name '_ns1__StimJobStage' for type '' */
#ifndef SOAP_TYPE__ns1__StimJobStage
#define SOAP_TYPE__ns1__StimJobStage (2267)
#endif

/* _ns1__StimJob has binding name '_ns1__StimJob' for type '' */
#ifndef SOAP_TYPE__ns1__StimJob
#define SOAP_TYPE__ns1__StimJob (2266)
#endif

/* _ns1__SurveyProgram has binding name '_ns1__SurveyProgram' for type '' */
#ifndef SOAP_TYPE__ns1__SurveyProgram
#define SOAP_TYPE__ns1__SurveyProgram (2265)
#endif

/* _ns1__WeightingFunctionDictionary has binding name '_ns1__WeightingFunctionDictionary' for type '' */
#ifndef SOAP_TYPE__ns1__WeightingFunctionDictionary
#define SOAP_TYPE__ns1__WeightingFunctionDictionary (2264)
#endif

/* _ns1__WeightingFunction has binding name '_ns1__WeightingFunction' for type '' */
#ifndef SOAP_TYPE__ns1__WeightingFunction
#define SOAP_TYPE__ns1__WeightingFunction (2263)
#endif

/* _ns1__ToolErrorModelDictionary has binding name '_ns1__ToolErrorModelDictionary' for type '' */
#ifndef SOAP_TYPE__ns1__ToolErrorModelDictionary
#define SOAP_TYPE__ns1__ToolErrorModelDictionary (2262)
#endif

/* _ns1__ToolErrorModel has binding name '_ns1__ToolErrorModel' for type '' */
#ifndef SOAP_TYPE__ns1__ToolErrorModel
#define SOAP_TYPE__ns1__ToolErrorModel (2261)
#endif

/* _ns1__ErrorTermDictionary has binding name '_ns1__ErrorTermDictionary' for type '' */
#ifndef SOAP_TYPE__ns1__ErrorTermDictionary
#define SOAP_TYPE__ns1__ErrorTermDictionary (2260)
#endif

/* _ns1__ErrorTerm has binding name '_ns1__ErrorTerm' for type '' */
#ifndef SOAP_TYPE__ns1__ErrorTerm
#define SOAP_TYPE__ns1__ErrorTerm (2259)
#endif

/* _ns1__Target has binding name '_ns1__Target' for type '' */
#ifndef SOAP_TYPE__ns1__Target
#define SOAP_TYPE__ns1__Target (2258)
#endif

/* _ns1__TrajectoryStation has binding name '_ns1__TrajectoryStation' for type '' */
#ifndef SOAP_TYPE__ns1__TrajectoryStation
#define SOAP_TYPE__ns1__TrajectoryStation (2257)
#endif

/* _ns1__Trajectory has binding name '_ns1__Trajectory' for type '' */
#ifndef SOAP_TYPE__ns1__Trajectory
#define SOAP_TYPE__ns1__Trajectory (2256)
#endif

/* _ns1__WellboreGeology has binding name '_ns1__WellboreGeology' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreGeology
#define SOAP_TYPE__ns1__WellboreGeology (2255)
#endif

/* _ns1__ShowEvaluationInterval has binding name '_ns1__ShowEvaluationInterval' for type '' */
#ifndef SOAP_TYPE__ns1__ShowEvaluationInterval
#define SOAP_TYPE__ns1__ShowEvaluationInterval (2254)
#endif

/* _ns1__ShowEvaluation has binding name '_ns1__ShowEvaluation' for type '' */
#ifndef SOAP_TYPE__ns1__ShowEvaluation
#define SOAP_TYPE__ns1__ShowEvaluation (2253)
#endif

/* _ns1__InterpretedGeologyInterval has binding name '_ns1__InterpretedGeologyInterval' for type '' */
#ifndef SOAP_TYPE__ns1__InterpretedGeologyInterval
#define SOAP_TYPE__ns1__InterpretedGeologyInterval (2252)
#endif

/* _ns1__InterpretedGeology has binding name '_ns1__InterpretedGeology' for type '' */
#ifndef SOAP_TYPE__ns1__InterpretedGeology
#define SOAP_TYPE__ns1__InterpretedGeology (2251)
#endif

/* _ns1__CuttingsGeologyInterval has binding name '_ns1__CuttingsGeologyInterval' for type '' */
#ifndef SOAP_TYPE__ns1__CuttingsGeologyInterval
#define SOAP_TYPE__ns1__CuttingsGeologyInterval (2250)
#endif

/* _ns1__CuttingsGeology has binding name '_ns1__CuttingsGeology' for type '' */
#ifndef SOAP_TYPE__ns1__CuttingsGeology
#define SOAP_TYPE__ns1__CuttingsGeology (2249)
#endif

/* _ns1__MudlogReportInterval has binding name '_ns1__MudlogReportInterval' for type '' */
#ifndef SOAP_TYPE__ns1__MudlogReportInterval
#define SOAP_TYPE__ns1__MudlogReportInterval (2248)
#endif

/* _ns1__MudLogReport has binding name '_ns1__MudLogReport' for type '' */
#ifndef SOAP_TYPE__ns1__MudLogReport
#define SOAP_TYPE__ns1__MudLogReport (2247)
#endif

/* _ns1__RigUtilization has binding name '_ns1__RigUtilization' for type '' */
#ifndef SOAP_TYPE__ns1__RigUtilization
#define SOAP_TYPE__ns1__RigUtilization (2246)
#endif

/* _ns1__Rig has binding name '_ns1__Rig' for type '' */
#ifndef SOAP_TYPE__ns1__Rig
#define SOAP_TYPE__ns1__Rig (2245)
#endif

/* _ns1__DrillReport has binding name '_ns1__DrillReport' for type '' */
#ifndef SOAP_TYPE__ns1__DrillReport
#define SOAP_TYPE__ns1__DrillReport (2244)
#endif

/* _ns1__WellCMLedger has binding name '_ns1__WellCMLedger' for type '' */
#ifndef SOAP_TYPE__ns1__WellCMLedger
#define SOAP_TYPE__ns1__WellCMLedger (2243)
#endif

/* _ns1__DownholeComponent has binding name '_ns1__DownholeComponent' for type '' */
#ifndef SOAP_TYPE__ns1__DownholeComponent
#define SOAP_TYPE__ns1__DownholeComponent (2242)
#endif

/* _ns1__LoggingToolKindDictionary has binding name '_ns1__LoggingToolKindDictionary' for type '' */
#ifndef SOAP_TYPE__ns1__LoggingToolKindDictionary
#define SOAP_TYPE__ns1__LoggingToolKindDictionary (2241)
#endif

/* _ns1__LoggingToolKind has binding name '_ns1__LoggingToolKind' for type '' */
#ifndef SOAP_TYPE__ns1__LoggingToolKind
#define SOAP_TYPE__ns1__LoggingToolKind (2240)
#endif

/* _ns1__ChannelKindDictionary has binding name '_ns1__ChannelKindDictionary' for type '' */
#ifndef SOAP_TYPE__ns1__ChannelKindDictionary
#define SOAP_TYPE__ns1__ChannelKindDictionary (2239)
#endif

/* _ns1__ChannelKind has binding name '_ns1__ChannelKind' for type '' */
#ifndef SOAP_TYPE__ns1__ChannelKind
#define SOAP_TYPE__ns1__ChannelKind (2238)
#endif

/* _ns1__Log has binding name '_ns1__Log' for type '' */
#ifndef SOAP_TYPE__ns1__Log
#define SOAP_TYPE__ns1__Log (2237)
#endif

/* _ns1__ChannelSet has binding name '_ns1__ChannelSet' for type '' */
#ifndef SOAP_TYPE__ns1__ChannelSet
#define SOAP_TYPE__ns1__ChannelSet (2236)
#endif

/* _ns1__Channel has binding name '_ns1__Channel' for type '' */
#ifndef SOAP_TYPE__ns1__Channel
#define SOAP_TYPE__ns1__Channel (2235)
#endif

/* _ns1__DepthRegImage has binding name '_ns1__DepthRegImage' for type '' */
#ifndef SOAP_TYPE__ns1__DepthRegImage
#define SOAP_TYPE__ns1__DepthRegImage (2234)
#endif

/* _ns1__WellboreGeometrySection has binding name '_ns1__WellboreGeometrySection' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreGeometrySection
#define SOAP_TYPE__ns1__WellboreGeometrySection (2233)
#endif

/* _ns1__WellboreGeometry has binding name '_ns1__WellboreGeometry' for type '' */
#ifndef SOAP_TYPE__ns1__WellboreGeometry
#define SOAP_TYPE__ns1__WellboreGeometry (2232)
#endif

/* _ns1__CementJobEvaluation has binding name '_ns1__CementJobEvaluation' for type '' */
#ifndef SOAP_TYPE__ns1__CementJobEvaluation
#define SOAP_TYPE__ns1__CementJobEvaluation (2231)
#endif

/* _ns1__CementJob has binding name '_ns1__CementJob' for type '' */
#ifndef SOAP_TYPE__ns1__CementJob
#define SOAP_TYPE__ns1__CementJob (2230)
#endif

/* _ns1__Tubular has binding name '_ns1__Tubular' for type '' */
#ifndef SOAP_TYPE__ns1__Tubular
#define SOAP_TYPE__ns1__Tubular (2229)
#endif

/* _ns1__Well has binding name '_ns1__Well' for type '' */
#ifndef SOAP_TYPE__ns1__Well
#define SOAP_TYPE__ns1__Well (2228)
#endif

/* _ns1__Wellbore has binding name '_ns1__Wellbore' for type '' */
#ifndef SOAP_TYPE__ns1__Wellbore
#define SOAP_TYPE__ns1__Wellbore (2227)
#endif

/* _ns1__FluidsReport has binding name '_ns1__FluidsReport' for type '' */
#ifndef SOAP_TYPE__ns1__FluidsReport
#define SOAP_TYPE__ns1__FluidsReport (2226)
#endif

/* _ns1__BhaRun has binding name '_ns1__BhaRun' for type '' */
#ifndef SOAP_TYPE__ns1__BhaRun
#define SOAP_TYPE__ns1__BhaRun (2225)
#endif

/* struct ns1__Trajectory has binding name 'ns1__Trajectory' for type 'ns1:Trajectory' */
#ifndef SOAP_TYPE_ns1__Trajectory
#define SOAP_TYPE_ns1__Trajectory (2215)
#endif

/* struct ns1__MudLogReport has binding name 'ns1__MudLogReport' for type 'ns1:MudLogReport' */
#ifndef SOAP_TYPE_ns1__MudLogReport
#define SOAP_TYPE_ns1__MudLogReport (2210)
#endif

/* struct ns1__WellboreGeometry has binding name 'ns1__WellboreGeometry' for type 'ns1:WellboreGeometry' */
#ifndef SOAP_TYPE_ns1__WellboreGeometry
#define SOAP_TYPE_ns1__WellboreGeometry (2208)
#endif

/* struct ns2__VolumetricThermalExpansionMeasureExt has binding name 'ns2__VolumetricThermalExpansionMeasureExt' for type 'ns2:VolumetricThermalExpansionMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionMeasureExt
#define SOAP_TYPE_ns2__VolumetricThermalExpansionMeasureExt (2202)
#endif

/* struct ns2__VolumetricHeatTransferCoefficientMeasureExt has binding name 'ns2__VolumetricHeatTransferCoefficientMeasureExt' for type 'ns2:VolumetricHeatTransferCoefficientMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasureExt
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasureExt (2201)
#endif

/* struct ns2__VolumetricHeatTransferCoefficientMeasure has binding name 'ns2__VolumetricHeatTransferCoefficientMeasure' for type 'ns2:VolumetricHeatTransferCoefficientMeasure' */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasure
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientMeasure (2200)
#endif

/* struct ns2__VolumePerTimePerVolumeMeasureExt has binding name 'ns2__VolumePerTimePerVolumeMeasureExt' for type 'ns2:VolumePerTimePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasureExt (2199)
#endif

/* struct ns2__VolumePerTimePerVolumeMeasure has binding name 'ns2__VolumePerTimePerVolumeMeasure' for type 'ns2:VolumePerTimePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeMeasure (2198)
#endif

/* struct ns2__VolumePerTimePerTimeMeasureExt has binding name 'ns2__VolumePerTimePerTimeMeasureExt' for type 'ns2:VolumePerTimePerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerTimeMeasureExt (2197)
#endif

/* struct ns2__VolumePerTimePerTimeMeasure has binding name 'ns2__VolumePerTimePerTimeMeasure' for type 'ns2:VolumePerTimePerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerTimeMeasure (2196)
#endif

/* struct ns2__VolumePerTimePerPressureMeasureExt has binding name 'ns2__VolumePerTimePerPressureMeasureExt' for type 'ns2:VolumePerTimePerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureMeasureExt (2195)
#endif

/* struct ns2__VolumePerTimePerPressureMeasure has binding name 'ns2__VolumePerTimePerPressureMeasure' for type 'ns2:VolumePerTimePerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerPressureMeasure (2194)
#endif

/* struct ns2__VolumePerTimePerPressureLengthMeasureExt has binding name 'ns2__VolumePerTimePerPressureLengthMeasureExt' for type 'ns2:VolumePerTimePerPressureLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasureExt (2193)
#endif

/* struct ns2__VolumePerTimePerPressureLengthMeasure has binding name 'ns2__VolumePerTimePerPressureLengthMeasure' for type 'ns2:VolumePerTimePerPressureLengthMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthMeasure (2192)
#endif

/* struct ns2__VolumePerTimePerLengthMeasureExt has binding name 'ns2__VolumePerTimePerLengthMeasureExt' for type 'ns2:VolumePerTimePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerLengthMeasureExt (2191)
#endif

/* struct ns2__VolumePerTimePerLengthMeasure has binding name 'ns2__VolumePerTimePerLengthMeasure' for type 'ns2:VolumePerTimePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerLengthMeasure (2190)
#endif

/* struct ns2__VolumePerTimePerAreaMeasureExt has binding name 'ns2__VolumePerTimePerAreaMeasureExt' for type 'ns2:VolumePerTimePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimePerAreaMeasureExt (2189)
#endif

/* struct ns2__VolumePerTimePerAreaMeasure has binding name 'ns2__VolumePerTimePerAreaMeasure' for type 'ns2:VolumePerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaMeasure
#define SOAP_TYPE_ns2__VolumePerTimePerAreaMeasure (2188)
#endif

/* struct ns2__VolumePerTimeMeasureExt has binding name 'ns2__VolumePerTimeMeasureExt' for type 'ns2:VolumePerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimeMeasureExt (2187)
#endif

/* struct ns2__VolumePerTimeLengthMeasureExt has binding name 'ns2__VolumePerTimeLengthMeasureExt' for type 'ns2:VolumePerTimeLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerTimeLengthMeasureExt (2186)
#endif

/* struct ns2__VolumePerTimeLengthMeasure has binding name 'ns2__VolumePerTimeLengthMeasure' for type 'ns2:VolumePerTimeLengthMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthMeasure
#define SOAP_TYPE_ns2__VolumePerTimeLengthMeasure (2185)
#endif

/* struct ns2__VolumePerRotationMeasureExt has binding name 'ns2__VolumePerRotationMeasureExt' for type 'ns2:VolumePerRotationMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerRotationMeasureExt
#define SOAP_TYPE_ns2__VolumePerRotationMeasureExt (2184)
#endif

/* struct ns2__VolumePerRotationMeasure has binding name 'ns2__VolumePerRotationMeasure' for type 'ns2:VolumePerRotationMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerRotationMeasure
#define SOAP_TYPE_ns2__VolumePerRotationMeasure (2183)
#endif

/* struct ns2__VolumePerPressureMeasureExt has binding name 'ns2__VolumePerPressureMeasureExt' for type 'ns2:VolumePerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerPressureMeasureExt
#define SOAP_TYPE_ns2__VolumePerPressureMeasureExt (2182)
#endif

/* struct ns2__VolumePerPressureMeasure has binding name 'ns2__VolumePerPressureMeasure' for type 'ns2:VolumePerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerPressureMeasure
#define SOAP_TYPE_ns2__VolumePerPressureMeasure (2181)
#endif

/* struct ns2__VolumePerMassMeasureExt has binding name 'ns2__VolumePerMassMeasureExt' for type 'ns2:VolumePerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerMassMeasureExt
#define SOAP_TYPE_ns2__VolumePerMassMeasureExt (2180)
#endif

/* struct ns2__VolumePerLengthMeasureExt has binding name 'ns2__VolumePerLengthMeasureExt' for type 'ns2:VolumePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerLengthMeasureExt
#define SOAP_TYPE_ns2__VolumePerLengthMeasureExt (2179)
#endif

/* struct ns2__VolumePerAreaMeasureExt has binding name 'ns2__VolumePerAreaMeasureExt' for type 'ns2:VolumePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerAreaMeasureExt
#define SOAP_TYPE_ns2__VolumePerAreaMeasureExt (2178)
#endif

/* struct ns2__VolumePerAreaMeasure has binding name 'ns2__VolumePerAreaMeasure' for type 'ns2:VolumePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerAreaMeasure
#define SOAP_TYPE_ns2__VolumePerAreaMeasure (2177)
#endif

/* struct ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt has binding name 'ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt' for type 'ns2:VolumeFlowRatePerVolumeFlowRateMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasureExt (2176)
#endif

/* struct ns2__VolumeFlowRatePerVolumeFlowRateMeasure has binding name 'ns2__VolumeFlowRatePerVolumeFlowRateMeasure' for type 'ns2:VolumeFlowRatePerVolumeFlowRateMeasure' */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasure
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateMeasure (2175)
#endif

/* struct ns2__VerticalCoordinateMeasureExt has binding name 'ns2__VerticalCoordinateMeasureExt' for type 'ns2:VerticalCoordinateMeasureExt' */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateMeasureExt
#define SOAP_TYPE_ns2__VerticalCoordinateMeasureExt (2174)
#endif

/* struct ns2__VerticalCoordinateMeasure has binding name 'ns2__VerticalCoordinateMeasure' for type 'ns2:VerticalCoordinateMeasure' */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateMeasure
#define SOAP_TYPE_ns2__VerticalCoordinateMeasure (2173)
#endif

/* struct ns2__TimePerVolumeMeasureExt has binding name 'ns2__TimePerVolumeMeasureExt' for type 'ns2:TimePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__TimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__TimePerVolumeMeasureExt (2172)
#endif

/* struct ns2__TimePerVolumeMeasure has binding name 'ns2__TimePerVolumeMeasure' for type 'ns2:TimePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__TimePerVolumeMeasure
#define SOAP_TYPE_ns2__TimePerVolumeMeasure (2171)
#endif

/* struct ns2__TimePerTimeMeasureExt has binding name 'ns2__TimePerTimeMeasureExt' for type 'ns2:TimePerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__TimePerTimeMeasureExt
#define SOAP_TYPE_ns2__TimePerTimeMeasureExt (2170)
#endif

/* struct ns2__TimePerTimeMeasure has binding name 'ns2__TimePerTimeMeasure' for type 'ns2:TimePerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__TimePerTimeMeasure
#define SOAP_TYPE_ns2__TimePerTimeMeasure (2169)
#endif

/* struct ns2__TimePerMassMeasureExt has binding name 'ns2__TimePerMassMeasureExt' for type 'ns2:TimePerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__TimePerMassMeasureExt
#define SOAP_TYPE_ns2__TimePerMassMeasureExt (2168)
#endif

/* struct ns2__TimePerMassMeasure has binding name 'ns2__TimePerMassMeasure' for type 'ns2:TimePerMassMeasure' */
#ifndef SOAP_TYPE_ns2__TimePerMassMeasure
#define SOAP_TYPE_ns2__TimePerMassMeasure (2167)
#endif

/* struct ns2__TimePerLengthMeasureExt has binding name 'ns2__TimePerLengthMeasureExt' for type 'ns2:TimePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__TimePerLengthMeasureExt
#define SOAP_TYPE_ns2__TimePerLengthMeasureExt (2166)
#endif

/* struct ns2__TimePerLengthMeasure has binding name 'ns2__TimePerLengthMeasure' for type 'ns2:TimePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__TimePerLengthMeasure
#define SOAP_TYPE_ns2__TimePerLengthMeasure (2165)
#endif

/* struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt has binding name 'ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt' for type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasureExt (2164)
#endif

/* struct ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure has binding name 'ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure' for type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureMeasure (2163)
#endif

/* struct ns2__ThermalResistanceMeasureExt has binding name 'ns2__ThermalResistanceMeasureExt' for type 'ns2:ThermalResistanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermalResistanceMeasureExt
#define SOAP_TYPE_ns2__ThermalResistanceMeasureExt (2162)
#endif

/* struct ns2__ThermalResistanceMeasure has binding name 'ns2__ThermalResistanceMeasure' for type 'ns2:ThermalResistanceMeasure' */
#ifndef SOAP_TYPE_ns2__ThermalResistanceMeasure
#define SOAP_TYPE_ns2__ThermalResistanceMeasure (2161)
#endif

/* struct ns2__ThermalInsulanceMeasureExt has binding name 'ns2__ThermalInsulanceMeasureExt' for type 'ns2:ThermalInsulanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceMeasureExt
#define SOAP_TYPE_ns2__ThermalInsulanceMeasureExt (2160)
#endif

/* struct ns2__ThermalInsulanceMeasure has binding name 'ns2__ThermalInsulanceMeasure' for type 'ns2:ThermalInsulanceMeasure' */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceMeasure
#define SOAP_TYPE_ns2__ThermalInsulanceMeasure (2159)
#endif

/* struct ns2__ThermalDiffusivityMeasureExt has binding name 'ns2__ThermalDiffusivityMeasureExt' for type 'ns2:ThermalDiffusivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityMeasureExt
#define SOAP_TYPE_ns2__ThermalDiffusivityMeasureExt (2158)
#endif

/* struct ns2__ThermalDiffusivityMeasure has binding name 'ns2__ThermalDiffusivityMeasure' for type 'ns2:ThermalDiffusivityMeasure' */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityMeasure
#define SOAP_TYPE_ns2__ThermalDiffusivityMeasure (2157)
#endif

/* struct ns2__ThermalConductivityMeasureExt has binding name 'ns2__ThermalConductivityMeasureExt' for type 'ns2:ThermalConductivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermalConductivityMeasureExt
#define SOAP_TYPE_ns2__ThermalConductivityMeasureExt (2156)
#endif

/* struct ns2__ThermalConductanceMeasureExt has binding name 'ns2__ThermalConductanceMeasureExt' for type 'ns2:ThermalConductanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermalConductanceMeasureExt
#define SOAP_TYPE_ns2__ThermalConductanceMeasureExt (2155)
#endif

/* struct ns2__ThermalConductanceMeasure has binding name 'ns2__ThermalConductanceMeasure' for type 'ns2:ThermalConductanceMeasure' */
#ifndef SOAP_TYPE_ns2__ThermalConductanceMeasure
#define SOAP_TYPE_ns2__ThermalConductanceMeasure (2154)
#endif

/* struct ns2__TemperatureIntervalPerTimeMeasureExt has binding name 'ns2__TemperatureIntervalPerTimeMeasureExt' for type 'ns2:TemperatureIntervalPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasureExt (2153)
#endif

/* struct ns2__TemperatureIntervalPerTimeMeasure has binding name 'ns2__TemperatureIntervalPerTimeMeasure' for type 'ns2:TemperatureIntervalPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeMeasure (2152)
#endif

/* struct ns2__TemperatureIntervalPerPressureMeasureExt has binding name 'ns2__TemperatureIntervalPerPressureMeasureExt' for type 'ns2:TemperatureIntervalPerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasureExt (2151)
#endif

/* struct ns2__TemperatureIntervalPerPressureMeasure has binding name 'ns2__TemperatureIntervalPerPressureMeasure' for type 'ns2:TemperatureIntervalPerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureMeasure (2150)
#endif

/* struct ns2__TemperatureIntervalPerLengthMeasureExt has binding name 'ns2__TemperatureIntervalPerLengthMeasureExt' for type 'ns2:TemperatureIntervalPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasureExt (2149)
#endif

/* struct ns2__TemperatureIntervalPerLengthMeasure has binding name 'ns2__TemperatureIntervalPerLengthMeasure' for type 'ns2:TemperatureIntervalPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthMeasure (2148)
#endif

/* struct ns2__TemperatureIntervalMeasureExt has binding name 'ns2__TemperatureIntervalMeasureExt' for type 'ns2:TemperatureIntervalMeasureExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalMeasureExt
#define SOAP_TYPE_ns2__TemperatureIntervalMeasureExt (2147)
#endif

/* struct ns2__TemperatureIntervalMeasure has binding name 'ns2__TemperatureIntervalMeasure' for type 'ns2:TemperatureIntervalMeasure' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalMeasure
#define SOAP_TYPE_ns2__TemperatureIntervalMeasure (2146)
#endif

/* struct ns2__SpecificHeatCapacityMeasureExt has binding name 'ns2__SpecificHeatCapacityMeasureExt' for type 'ns2:SpecificHeatCapacityMeasureExt' */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityMeasureExt
#define SOAP_TYPE_ns2__SpecificHeatCapacityMeasureExt (2145)
#endif

/* struct ns2__SolidAngleMeasureExt has binding name 'ns2__SolidAngleMeasureExt' for type 'ns2:SolidAngleMeasureExt' */
#ifndef SOAP_TYPE_ns2__SolidAngleMeasureExt
#define SOAP_TYPE_ns2__SolidAngleMeasureExt (2144)
#endif

/* struct ns2__SolidAngleMeasure has binding name 'ns2__SolidAngleMeasure' for type 'ns2:SolidAngleMeasure' */
#ifndef SOAP_TYPE_ns2__SolidAngleMeasure
#define SOAP_TYPE_ns2__SolidAngleMeasure (2143)
#endif

/* struct ns2__SignalingEventPerTimeMeasureExt has binding name 'ns2__SignalingEventPerTimeMeasureExt' for type 'ns2:SignalingEventPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeMeasureExt
#define SOAP_TYPE_ns2__SignalingEventPerTimeMeasureExt (2142)
#endif

/* struct ns2__SignalingEventPerTimeMeasure has binding name 'ns2__SignalingEventPerTimeMeasure' for type 'ns2:SignalingEventPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeMeasure
#define SOAP_TYPE_ns2__SignalingEventPerTimeMeasure (2141)
#endif

/* struct ns2__SecondMomentOfAreaMeasureExt has binding name 'ns2__SecondMomentOfAreaMeasureExt' for type 'ns2:SecondMomentOfAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaMeasureExt
#define SOAP_TYPE_ns2__SecondMomentOfAreaMeasureExt (2140)
#endif

/* struct ns2__SecondMomentOfAreaMeasure has binding name 'ns2__SecondMomentOfAreaMeasure' for type 'ns2:SecondMomentOfAreaMeasure' */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaMeasure
#define SOAP_TYPE_ns2__SecondMomentOfAreaMeasure (2139)
#endif

/* struct ns2__ReluctanceMeasureExt has binding name 'ns2__ReluctanceMeasureExt' for type 'ns2:ReluctanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReluctanceMeasureExt
#define SOAP_TYPE_ns2__ReluctanceMeasureExt (2138)
#endif

/* struct ns2__ReluctanceMeasure has binding name 'ns2__ReluctanceMeasure' for type 'ns2:ReluctanceMeasure' */
#ifndef SOAP_TYPE_ns2__ReluctanceMeasure
#define SOAP_TYPE_ns2__ReluctanceMeasure (2137)
#endif

/* struct ns2__ReciprocalVolumeMeasureExt has binding name 'ns2__ReciprocalVolumeMeasureExt' for type 'ns2:ReciprocalVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalVolumeMeasureExt (2136)
#endif

/* struct ns2__ReciprocalVolumeMeasure has binding name 'ns2__ReciprocalVolumeMeasure' for type 'ns2:ReciprocalVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeMeasure
#define SOAP_TYPE_ns2__ReciprocalVolumeMeasure (2135)
#endif

/* struct ns2__ReciprocalTimeMeasureExt has binding name 'ns2__ReciprocalTimeMeasureExt' for type 'ns2:ReciprocalTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalTimeMeasureExt (2134)
#endif

/* struct ns2__ReciprocalTimeMeasure has binding name 'ns2__ReciprocalTimeMeasure' for type 'ns2:ReciprocalTimeMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeMeasure
#define SOAP_TYPE_ns2__ReciprocalTimeMeasure (2133)
#endif

/* struct ns2__ReciprocalPressureMeasureExt has binding name 'ns2__ReciprocalPressureMeasureExt' for type 'ns2:ReciprocalPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureMeasureExt
#define SOAP_TYPE_ns2__ReciprocalPressureMeasureExt (2132)
#endif

/* struct ns2__ReciprocalPressureMeasure has binding name 'ns2__ReciprocalPressureMeasure' for type 'ns2:ReciprocalPressureMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureMeasure
#define SOAP_TYPE_ns2__ReciprocalPressureMeasure (2131)
#endif

/* struct ns2__ReciprocalMassTimeMeasureExt has binding name 'ns2__ReciprocalMassTimeMeasureExt' for type 'ns2:ReciprocalMassTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeMeasureExt
#define SOAP_TYPE_ns2__ReciprocalMassTimeMeasureExt (2130)
#endif

/* struct ns2__ReciprocalMassTimeMeasure has binding name 'ns2__ReciprocalMassTimeMeasure' for type 'ns2:ReciprocalMassTimeMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeMeasure
#define SOAP_TYPE_ns2__ReciprocalMassTimeMeasure (2129)
#endif

/* struct ns2__ReciprocalMassMeasureExt has binding name 'ns2__ReciprocalMassMeasureExt' for type 'ns2:ReciprocalMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassMeasureExt
#define SOAP_TYPE_ns2__ReciprocalMassMeasureExt (2128)
#endif

/* struct ns2__ReciprocalMassMeasure has binding name 'ns2__ReciprocalMassMeasure' for type 'ns2:ReciprocalMassMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassMeasure
#define SOAP_TYPE_ns2__ReciprocalMassMeasure (2127)
#endif

/* struct ns2__ReciprocalLengthMeasureExt has binding name 'ns2__ReciprocalLengthMeasureExt' for type 'ns2:ReciprocalLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthMeasureExt
#define SOAP_TYPE_ns2__ReciprocalLengthMeasureExt (2126)
#endif

/* struct ns2__ReciprocalForceMeasureExt has binding name 'ns2__ReciprocalForceMeasureExt' for type 'ns2:ReciprocalForceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalForceMeasureExt
#define SOAP_TYPE_ns2__ReciprocalForceMeasureExt (2125)
#endif

/* struct ns2__ReciprocalForceMeasure has binding name 'ns2__ReciprocalForceMeasure' for type 'ns2:ReciprocalForceMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalForceMeasure
#define SOAP_TYPE_ns2__ReciprocalForceMeasure (2124)
#endif

/* struct ns2__ReciprocalElectricPotentialDifferenceMeasureExt has binding name 'ns2__ReciprocalElectricPotentialDifferenceMeasureExt' for type 'ns2:ReciprocalElectricPotentialDifferenceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasureExt
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasureExt (2123)
#endif

/* struct ns2__ReciprocalElectricPotentialDifferenceMeasure has binding name 'ns2__ReciprocalElectricPotentialDifferenceMeasure' for type 'ns2:ReciprocalElectricPotentialDifferenceMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasure
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceMeasure (2122)
#endif

/* struct ns2__ReciprocalAreaMeasureExt has binding name 'ns2__ReciprocalAreaMeasureExt' for type 'ns2:ReciprocalAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaMeasureExt
#define SOAP_TYPE_ns2__ReciprocalAreaMeasureExt (2121)
#endif

/* struct ns2__ReciprocalAreaMeasure has binding name 'ns2__ReciprocalAreaMeasure' for type 'ns2:ReciprocalAreaMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaMeasure
#define SOAP_TYPE_ns2__ReciprocalAreaMeasure (2120)
#endif

/* struct ns2__RadiantIntensityMeasureExt has binding name 'ns2__RadiantIntensityMeasureExt' for type 'ns2:RadiantIntensityMeasureExt' */
#ifndef SOAP_TYPE_ns2__RadiantIntensityMeasureExt
#define SOAP_TYPE_ns2__RadiantIntensityMeasureExt (2119)
#endif

/* struct ns2__RadiantIntensityMeasure has binding name 'ns2__RadiantIntensityMeasure' for type 'ns2:RadiantIntensityMeasure' */
#ifndef SOAP_TYPE_ns2__RadiantIntensityMeasure
#define SOAP_TYPE_ns2__RadiantIntensityMeasure (2118)
#endif

/* struct ns2__RadianceMeasureExt has binding name 'ns2__RadianceMeasureExt' for type 'ns2:RadianceMeasureExt' */
#ifndef SOAP_TYPE_ns2__RadianceMeasureExt
#define SOAP_TYPE_ns2__RadianceMeasureExt (2117)
#endif

/* struct ns2__RadianceMeasure has binding name 'ns2__RadianceMeasure' for type 'ns2:RadianceMeasure' */
#ifndef SOAP_TYPE_ns2__RadianceMeasure
#define SOAP_TYPE_ns2__RadianceMeasure (2116)
#endif

/* struct ns2__QuantityOfLightMeasureExt has binding name 'ns2__QuantityOfLightMeasureExt' for type 'ns2:QuantityOfLightMeasureExt' */
#ifndef SOAP_TYPE_ns2__QuantityOfLightMeasureExt
#define SOAP_TYPE_ns2__QuantityOfLightMeasureExt (2115)
#endif

/* struct ns2__QuantityOfLightMeasure has binding name 'ns2__QuantityOfLightMeasure' for type 'ns2:QuantityOfLightMeasure' */
#ifndef SOAP_TYPE_ns2__QuantityOfLightMeasure
#define SOAP_TYPE_ns2__QuantityOfLightMeasure (2114)
#endif

/* struct ns2__PressureTimePerVolumeMeasureExt has binding name 'ns2__PressureTimePerVolumeMeasureExt' for type 'ns2:PressureTimePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeMeasureExt
#define SOAP_TYPE_ns2__PressureTimePerVolumeMeasureExt (2113)
#endif

/* struct ns2__PressureTimePerVolumeMeasure has binding name 'ns2__PressureTimePerVolumeMeasure' for type 'ns2:PressureTimePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeMeasure
#define SOAP_TYPE_ns2__PressureTimePerVolumeMeasure (2112)
#endif

/* struct ns2__PressureSquaredPerForceTimePerAreaMeasureExt has binding name 'ns2__PressureSquaredPerForceTimePerAreaMeasureExt' for type 'ns2:PressureSquaredPerForceTimePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasureExt (2111)
#endif

/* struct ns2__PressureSquaredPerForceTimePerAreaMeasure has binding name 'ns2__PressureSquaredPerForceTimePerAreaMeasure' for type 'ns2:PressureSquaredPerForceTimePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasure
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaMeasure (2110)
#endif

/* struct ns2__PressureSquaredMeasureExt has binding name 'ns2__PressureSquaredMeasureExt' for type 'ns2:PressureSquaredMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressureSquaredMeasureExt
#define SOAP_TYPE_ns2__PressureSquaredMeasureExt (2109)
#endif

/* struct ns2__PressureSquaredMeasure has binding name 'ns2__PressureSquaredMeasure' for type 'ns2:PressureSquaredMeasure' */
#ifndef SOAP_TYPE_ns2__PressureSquaredMeasure
#define SOAP_TYPE_ns2__PressureSquaredMeasure (2108)
#endif

/* struct ns2__PressurePerVolumeMeasureExt has binding name 'ns2__PressurePerVolumeMeasureExt' for type 'ns2:PressurePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeMeasureExt
#define SOAP_TYPE_ns2__PressurePerVolumeMeasureExt (2107)
#endif

/* struct ns2__PressurePerVolumeMeasure has binding name 'ns2__PressurePerVolumeMeasure' for type 'ns2:PressurePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeMeasure
#define SOAP_TYPE_ns2__PressurePerVolumeMeasure (2106)
#endif

/* struct ns2__PressurePerTimeMeasureExt has binding name 'ns2__PressurePerTimeMeasureExt' for type 'ns2:PressurePerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressurePerTimeMeasureExt
#define SOAP_TYPE_ns2__PressurePerTimeMeasureExt (2105)
#endif

/* struct ns2__PressurePerTimeMeasure has binding name 'ns2__PressurePerTimeMeasure' for type 'ns2:PressurePerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__PressurePerTimeMeasure
#define SOAP_TYPE_ns2__PressurePerTimeMeasure (2104)
#endif

/* struct ns2__PressurePerPressureMeasureExt has binding name 'ns2__PressurePerPressureMeasureExt' for type 'ns2:PressurePerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressurePerPressureMeasureExt
#define SOAP_TYPE_ns2__PressurePerPressureMeasureExt (2103)
#endif

/* struct ns2__PressurePerPressureMeasure has binding name 'ns2__PressurePerPressureMeasure' for type 'ns2:PressurePerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__PressurePerPressureMeasure
#define SOAP_TYPE_ns2__PressurePerPressureMeasure (2102)
#endif

/* struct ns2__PressurePerFlowrateSquaredMeasureExt has binding name 'ns2__PressurePerFlowrateSquaredMeasureExt' for type 'ns2:PressurePerFlowrateSquaredMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasureExt
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasureExt (2101)
#endif

/* struct ns2__PressurePerFlowrateSquaredMeasure has binding name 'ns2__PressurePerFlowrateSquaredMeasure' for type 'ns2:PressurePerFlowrateSquaredMeasure' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasure
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredMeasure (2100)
#endif

/* struct ns2__PressurePerFlowrateMeasureExt has binding name 'ns2__PressurePerFlowrateMeasureExt' for type 'ns2:PressurePerFlowrateMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateMeasureExt
#define SOAP_TYPE_ns2__PressurePerFlowrateMeasureExt (2099)
#endif

/* struct ns2__PressurePerFlowrateMeasure has binding name 'ns2__PressurePerFlowrateMeasure' for type 'ns2:PressurePerFlowrateMeasure' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateMeasure
#define SOAP_TYPE_ns2__PressurePerFlowrateMeasure (2098)
#endif

/* struct ns2__PowerPerVolumeMeasureExt has binding name 'ns2__PowerPerVolumeMeasureExt' for type 'ns2:PowerPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeMeasureExt
#define SOAP_TYPE_ns2__PowerPerVolumeMeasureExt (2097)
#endif

/* struct ns2__PowerPerVolumeMeasure has binding name 'ns2__PowerPerVolumeMeasure' for type 'ns2:PowerPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeMeasure
#define SOAP_TYPE_ns2__PowerPerVolumeMeasure (2096)
#endif

/* struct ns2__PowerPerPowerMeasureExt has binding name 'ns2__PowerPerPowerMeasureExt' for type 'ns2:PowerPerPowerMeasureExt' */
#ifndef SOAP_TYPE_ns2__PowerPerPowerMeasureExt
#define SOAP_TYPE_ns2__PowerPerPowerMeasureExt (2095)
#endif

/* struct ns2__PowerPerAreaMeasureExt has binding name 'ns2__PowerPerAreaMeasureExt' for type 'ns2:PowerPerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__PowerPerAreaMeasureExt
#define SOAP_TYPE_ns2__PowerPerAreaMeasureExt (2094)
#endif

/* struct ns2__PowerPerAreaMeasure has binding name 'ns2__PowerPerAreaMeasure' for type 'ns2:PowerPerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__PowerPerAreaMeasure
#define SOAP_TYPE_ns2__PowerPerAreaMeasure (2093)
#endif

/* struct ns2__PowerMeasureExt has binding name 'ns2__PowerMeasureExt' for type 'ns2:PowerMeasureExt' */
#ifndef SOAP_TYPE_ns2__PowerMeasureExt
#define SOAP_TYPE_ns2__PowerMeasureExt (2092)
#endif

/* struct ns2__PotentialDifferencePerPowerDropMeasureExt has binding name 'ns2__PotentialDifferencePerPowerDropMeasureExt' for type 'ns2:PotentialDifferencePerPowerDropMeasureExt' */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasureExt
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasureExt (2091)
#endif

/* struct ns2__PotentialDifferencePerPowerDropMeasure has binding name 'ns2__PotentialDifferencePerPowerDropMeasure' for type 'ns2:PotentialDifferencePerPowerDropMeasure' */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasure
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropMeasure (2090)
#endif

/* struct ns2__PermittivityMeasureExt has binding name 'ns2__PermittivityMeasureExt' for type 'ns2:PermittivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__PermittivityMeasureExt
#define SOAP_TYPE_ns2__PermittivityMeasureExt (2089)
#endif

/* struct ns2__PermittivityMeasure has binding name 'ns2__PermittivityMeasure' for type 'ns2:PermittivityMeasure' */
#ifndef SOAP_TYPE_ns2__PermittivityMeasure
#define SOAP_TYPE_ns2__PermittivityMeasure (2088)
#endif

/* struct ns2__PermeabilityRockMeasureExt has binding name 'ns2__PermeabilityRockMeasureExt' for type 'ns2:PermeabilityRockMeasureExt' */
#ifndef SOAP_TYPE_ns2__PermeabilityRockMeasureExt
#define SOAP_TYPE_ns2__PermeabilityRockMeasureExt (2087)
#endif

/* struct ns2__PermeabilityLengthMeasureExt has binding name 'ns2__PermeabilityLengthMeasureExt' for type 'ns2:PermeabilityLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthMeasureExt
#define SOAP_TYPE_ns2__PermeabilityLengthMeasureExt (2086)
#endif

/* struct ns2__NormalizedPowerMeasureExt has binding name 'ns2__NormalizedPowerMeasureExt' for type 'ns2:NormalizedPowerMeasureExt' */
#ifndef SOAP_TYPE_ns2__NormalizedPowerMeasureExt
#define SOAP_TYPE_ns2__NormalizedPowerMeasureExt (2085)
#endif

/* struct ns2__NormalizedPowerMeasure has binding name 'ns2__NormalizedPowerMeasure' for type 'ns2:NormalizedPowerMeasure' */
#ifndef SOAP_TYPE_ns2__NormalizedPowerMeasure
#define SOAP_TYPE_ns2__NormalizedPowerMeasure (2084)
#endif

/* struct ns2__MomentumMeasureExt has binding name 'ns2__MomentumMeasureExt' for type 'ns2:MomentumMeasureExt' */
#ifndef SOAP_TYPE_ns2__MomentumMeasureExt
#define SOAP_TYPE_ns2__MomentumMeasureExt (2083)
#endif

/* struct ns2__MomentumMeasure has binding name 'ns2__MomentumMeasure' for type 'ns2:MomentumMeasure' */
#ifndef SOAP_TYPE_ns2__MomentumMeasure
#define SOAP_TYPE_ns2__MomentumMeasure (2082)
#endif

/* struct ns2__MomentOfInertiaMeasureExt has binding name 'ns2__MomentOfInertiaMeasureExt' for type 'ns2:MomentOfInertiaMeasureExt' */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaMeasureExt
#define SOAP_TYPE_ns2__MomentOfInertiaMeasureExt (2081)
#endif

/* struct ns2__MomentOfInertiaMeasure has binding name 'ns2__MomentOfInertiaMeasure' for type 'ns2:MomentOfInertiaMeasure' */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaMeasure
#define SOAP_TYPE_ns2__MomentOfInertiaMeasure (2080)
#endif

/* struct ns2__MomentOfForceMeasureExt has binding name 'ns2__MomentOfForceMeasureExt' for type 'ns2:MomentOfForceMeasureExt' */
#ifndef SOAP_TYPE_ns2__MomentOfForceMeasureExt
#define SOAP_TYPE_ns2__MomentOfForceMeasureExt (2079)
#endif

/* struct ns2__MolecularWeightMeasureExt has binding name 'ns2__MolecularWeightMeasureExt' for type 'ns2:MolecularWeightMeasureExt' */
#ifndef SOAP_TYPE_ns2__MolecularWeightMeasureExt
#define SOAP_TYPE_ns2__MolecularWeightMeasureExt (2078)
#endif

/* struct ns2__MolecularWeightMeasure has binding name 'ns2__MolecularWeightMeasure' for type 'ns2:MolecularWeightMeasure' */
#ifndef SOAP_TYPE_ns2__MolecularWeightMeasure
#define SOAP_TYPE_ns2__MolecularWeightMeasure (2077)
#endif

/* struct ns2__MolarVolumeMeasureExt has binding name 'ns2__MolarVolumeMeasureExt' for type 'ns2:MolarVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__MolarVolumeMeasureExt
#define SOAP_TYPE_ns2__MolarVolumeMeasureExt (2076)
#endif

/* struct ns2__MolarVolumeMeasure has binding name 'ns2__MolarVolumeMeasure' for type 'ns2:MolarVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__MolarVolumeMeasure
#define SOAP_TYPE_ns2__MolarVolumeMeasure (2075)
#endif

/* struct ns2__MolarHeatCapacityMeasureExt has binding name 'ns2__MolarHeatCapacityMeasureExt' for type 'ns2:MolarHeatCapacityMeasureExt' */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityMeasureExt
#define SOAP_TYPE_ns2__MolarHeatCapacityMeasureExt (2074)
#endif

/* struct ns2__MolarHeatCapacityMeasure has binding name 'ns2__MolarHeatCapacityMeasure' for type 'ns2:MolarHeatCapacityMeasure' */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityMeasure
#define SOAP_TYPE_ns2__MolarHeatCapacityMeasure (2073)
#endif

/* struct ns2__MolarEnergyMeasureExt has binding name 'ns2__MolarEnergyMeasureExt' for type 'ns2:MolarEnergyMeasureExt' */
#ifndef SOAP_TYPE_ns2__MolarEnergyMeasureExt
#define SOAP_TYPE_ns2__MolarEnergyMeasureExt (2072)
#endif

/* struct ns2__MolarEnergyMeasure has binding name 'ns2__MolarEnergyMeasure' for type 'ns2:MolarEnergyMeasure' */
#ifndef SOAP_TYPE_ns2__MolarEnergyMeasure
#define SOAP_TYPE_ns2__MolarEnergyMeasure (2071)
#endif

/* struct ns2__MobilityMeasureExt has binding name 'ns2__MobilityMeasureExt' for type 'ns2:MobilityMeasureExt' */
#ifndef SOAP_TYPE_ns2__MobilityMeasureExt
#define SOAP_TYPE_ns2__MobilityMeasureExt (2070)
#endif

/* struct ns2__MobilityMeasure has binding name 'ns2__MobilityMeasure' for type 'ns2:MobilityMeasure' */
#ifndef SOAP_TYPE_ns2__MobilityMeasure
#define SOAP_TYPE_ns2__MobilityMeasure (2069)
#endif

/* struct ns2__MassPerVolumePerTemperatureMeasureExt has binding name 'ns2__MassPerVolumePerTemperatureMeasureExt' for type 'ns2:MassPerVolumePerTemperatureMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasureExt (2068)
#endif

/* struct ns2__MassPerVolumePerTemperatureMeasure has binding name 'ns2__MassPerVolumePerTemperatureMeasure' for type 'ns2:MassPerVolumePerTemperatureMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureMeasure (2067)
#endif

/* struct ns2__MassPerVolumePerPressureMeasureExt has binding name 'ns2__MassPerVolumePerPressureMeasureExt' for type 'ns2:MassPerVolumePerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerPressureMeasureExt (2066)
#endif

/* struct ns2__MassPerVolumePerPressureMeasure has binding name 'ns2__MassPerVolumePerPressureMeasure' for type 'ns2:MassPerVolumePerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerPressureMeasure (2065)
#endif

/* struct ns2__MassPerVolumePerLengthMeasureExt has binding name 'ns2__MassPerVolumePerLengthMeasureExt' for type 'ns2:MassPerVolumePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumePerLengthMeasureExt (2064)
#endif

/* struct ns2__MassPerVolumePerLengthMeasure has binding name 'ns2__MassPerVolumePerLengthMeasure' for type 'ns2:MassPerVolumePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthMeasure
#define SOAP_TYPE_ns2__MassPerVolumePerLengthMeasure (2063)
#endif

/* struct ns2__MassPerVolumeMeasureExt has binding name 'ns2__MassPerVolumeMeasureExt' for type 'ns2:MassPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumeMeasureExt
#define SOAP_TYPE_ns2__MassPerVolumeMeasureExt (2062)
#endif

/* struct ns2__MassPerTimePerLengthMeasureExt has binding name 'ns2__MassPerTimePerLengthMeasureExt' for type 'ns2:MassPerTimePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerTimePerLengthMeasureExt (2061)
#endif

/* struct ns2__MassPerTimePerLengthMeasure has binding name 'ns2__MassPerTimePerLengthMeasure' for type 'ns2:MassPerTimePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthMeasure
#define SOAP_TYPE_ns2__MassPerTimePerLengthMeasure (2060)
#endif

/* struct ns2__MassPerTimePerAreaMeasureExt has binding name 'ns2__MassPerTimePerAreaMeasureExt' for type 'ns2:MassPerTimePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__MassPerTimePerAreaMeasureExt (2059)
#endif

/* struct ns2__MassPerTimePerAreaMeasure has binding name 'ns2__MassPerTimePerAreaMeasure' for type 'ns2:MassPerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaMeasure
#define SOAP_TYPE_ns2__MassPerTimePerAreaMeasure (2058)
#endif

/* struct ns2__MassPerTimeMeasureExt has binding name 'ns2__MassPerTimeMeasureExt' for type 'ns2:MassPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimeMeasureExt
#define SOAP_TYPE_ns2__MassPerTimeMeasureExt (2057)
#endif

/* struct ns2__MassPerMassMeasureExt has binding name 'ns2__MassPerMassMeasureExt' for type 'ns2:MassPerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerMassMeasureExt
#define SOAP_TYPE_ns2__MassPerMassMeasureExt (2056)
#endif

/* struct ns2__MassPerLengthMeasureExt has binding name 'ns2__MassPerLengthMeasureExt' for type 'ns2:MassPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerLengthMeasureExt
#define SOAP_TYPE_ns2__MassPerLengthMeasureExt (2055)
#endif

/* struct ns2__MassPerEnergyMeasureExt has binding name 'ns2__MassPerEnergyMeasureExt' for type 'ns2:MassPerEnergyMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerEnergyMeasureExt
#define SOAP_TYPE_ns2__MassPerEnergyMeasureExt (2054)
#endif

/* struct ns2__MassPerEnergyMeasure has binding name 'ns2__MassPerEnergyMeasure' for type 'ns2:MassPerEnergyMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerEnergyMeasure
#define SOAP_TYPE_ns2__MassPerEnergyMeasure (2053)
#endif

/* struct ns2__MassPerAreaMeasureExt has binding name 'ns2__MassPerAreaMeasureExt' for type 'ns2:MassPerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassPerAreaMeasureExt
#define SOAP_TYPE_ns2__MassPerAreaMeasureExt (2052)
#endif

/* struct ns2__MassPerAreaMeasure has binding name 'ns2__MassPerAreaMeasure' for type 'ns2:MassPerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerAreaMeasure
#define SOAP_TYPE_ns2__MassPerAreaMeasure (2051)
#endif

/* struct ns2__MassLengthMeasureExt has binding name 'ns2__MassLengthMeasureExt' for type 'ns2:MassLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassLengthMeasureExt
#define SOAP_TYPE_ns2__MassLengthMeasureExt (2050)
#endif

/* struct ns2__MassLengthMeasure has binding name 'ns2__MassLengthMeasure' for type 'ns2:MassLengthMeasure' */
#ifndef SOAP_TYPE_ns2__MassLengthMeasure
#define SOAP_TYPE_ns2__MassLengthMeasure (2049)
#endif

/* struct ns2__MagneticVectorPotentialMeasureExt has binding name 'ns2__MagneticVectorPotentialMeasureExt' for type 'ns2:MagneticVectorPotentialMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialMeasureExt
#define SOAP_TYPE_ns2__MagneticVectorPotentialMeasureExt (2048)
#endif

/* struct ns2__MagneticVectorPotentialMeasure has binding name 'ns2__MagneticVectorPotentialMeasure' for type 'ns2:MagneticVectorPotentialMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialMeasure
#define SOAP_TYPE_ns2__MagneticVectorPotentialMeasure (2047)
#endif

/* struct ns2__MagneticPermeabilityMeasureExt has binding name 'ns2__MagneticPermeabilityMeasureExt' for type 'ns2:MagneticPermeabilityMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityMeasureExt
#define SOAP_TYPE_ns2__MagneticPermeabilityMeasureExt (2046)
#endif

/* struct ns2__MagneticPermeabilityMeasure has binding name 'ns2__MagneticPermeabilityMeasure' for type 'ns2:MagneticPermeabilityMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityMeasure
#define SOAP_TYPE_ns2__MagneticPermeabilityMeasure (2045)
#endif

/* struct ns2__MagneticFluxMeasureExt has binding name 'ns2__MagneticFluxMeasureExt' for type 'ns2:MagneticFluxMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxMeasureExt (2044)
#endif

/* struct ns2__MagneticFluxMeasure has binding name 'ns2__MagneticFluxMeasure' for type 'ns2:MagneticFluxMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticFluxMeasure
#define SOAP_TYPE_ns2__MagneticFluxMeasure (2043)
#endif

/* struct ns2__MagneticFluxDensityPerLengthMeasureExt has binding name 'ns2__MagneticFluxDensityPerLengthMeasureExt' for type 'ns2:MagneticFluxDensityPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasureExt (2042)
#endif

/* struct ns2__MagneticFluxDensityPerLengthMeasure has binding name 'ns2__MagneticFluxDensityPerLengthMeasure' for type 'ns2:MagneticFluxDensityPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasure
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthMeasure (2041)
#endif

/* struct ns2__MagneticFluxDensityMeasureExt has binding name 'ns2__MagneticFluxDensityMeasureExt' for type 'ns2:MagneticFluxDensityMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityMeasureExt
#define SOAP_TYPE_ns2__MagneticFluxDensityMeasureExt (2040)
#endif

/* struct ns2__MagneticFieldStrengthMeasureExt has binding name 'ns2__MagneticFieldStrengthMeasureExt' for type 'ns2:MagneticFieldStrengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthMeasureExt
#define SOAP_TYPE_ns2__MagneticFieldStrengthMeasureExt (2039)
#endif

/* struct ns2__MagneticFieldStrengthMeasure has binding name 'ns2__MagneticFieldStrengthMeasure' for type 'ns2:MagneticFieldStrengthMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthMeasure
#define SOAP_TYPE_ns2__MagneticFieldStrengthMeasure (2038)
#endif

/* struct ns2__MagneticDipoleMomentMeasureExt has binding name 'ns2__MagneticDipoleMomentMeasureExt' for type 'ns2:MagneticDipoleMomentMeasureExt' */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentMeasureExt
#define SOAP_TYPE_ns2__MagneticDipoleMomentMeasureExt (2037)
#endif

/* struct ns2__MagneticDipoleMomentMeasure has binding name 'ns2__MagneticDipoleMomentMeasure' for type 'ns2:MagneticDipoleMomentMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentMeasure
#define SOAP_TYPE_ns2__MagneticDipoleMomentMeasure (2036)
#endif

/* struct ns2__LuminousIntensityMeasureExt has binding name 'ns2__LuminousIntensityMeasureExt' for type 'ns2:LuminousIntensityMeasureExt' */
#ifndef SOAP_TYPE_ns2__LuminousIntensityMeasureExt
#define SOAP_TYPE_ns2__LuminousIntensityMeasureExt (2035)
#endif

/* struct ns2__LuminousIntensityMeasure has binding name 'ns2__LuminousIntensityMeasure' for type 'ns2:LuminousIntensityMeasure' */
#ifndef SOAP_TYPE_ns2__LuminousIntensityMeasure
#define SOAP_TYPE_ns2__LuminousIntensityMeasure (2034)
#endif

/* struct ns2__LuminousFluxMeasureExt has binding name 'ns2__LuminousFluxMeasureExt' for type 'ns2:LuminousFluxMeasureExt' */
#ifndef SOAP_TYPE_ns2__LuminousFluxMeasureExt
#define SOAP_TYPE_ns2__LuminousFluxMeasureExt (2033)
#endif

/* struct ns2__LuminousFluxMeasure has binding name 'ns2__LuminousFluxMeasure' for type 'ns2:LuminousFluxMeasure' */
#ifndef SOAP_TYPE_ns2__LuminousFluxMeasure
#define SOAP_TYPE_ns2__LuminousFluxMeasure (2032)
#endif

/* struct ns2__LuminousEfficacyMeasureExt has binding name 'ns2__LuminousEfficacyMeasureExt' for type 'ns2:LuminousEfficacyMeasureExt' */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyMeasureExt
#define SOAP_TYPE_ns2__LuminousEfficacyMeasureExt (2031)
#endif

/* struct ns2__LuminousEfficacyMeasure has binding name 'ns2__LuminousEfficacyMeasure' for type 'ns2:LuminousEfficacyMeasure' */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyMeasure
#define SOAP_TYPE_ns2__LuminousEfficacyMeasure (2030)
#endif

/* struct ns2__LuminanceMeasureExt has binding name 'ns2__LuminanceMeasureExt' for type 'ns2:LuminanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__LuminanceMeasureExt
#define SOAP_TYPE_ns2__LuminanceMeasureExt (2029)
#endif

/* struct ns2__LuminanceMeasure has binding name 'ns2__LuminanceMeasure' for type 'ns2:LuminanceMeasure' */
#ifndef SOAP_TYPE_ns2__LuminanceMeasure
#define SOAP_TYPE_ns2__LuminanceMeasure (2028)
#endif

/* struct ns2__LogarithmicPowerRatioPerLengthMeasureExt has binding name 'ns2__LogarithmicPowerRatioPerLengthMeasureExt' for type 'ns2:LogarithmicPowerRatioPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasureExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasureExt (2027)
#endif

/* struct ns2__LogarithmicPowerRatioPerLengthMeasure has binding name 'ns2__LogarithmicPowerRatioPerLengthMeasure' for type 'ns2:LogarithmicPowerRatioPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasure
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthMeasure (2026)
#endif

/* struct ns2__LogarithmicPowerRatioMeasureExt has binding name 'ns2__LogarithmicPowerRatioMeasureExt' for type 'ns2:LogarithmicPowerRatioMeasureExt' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioMeasureExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioMeasureExt (2025)
#endif

/* struct ns2__LogarithmicPowerRatioMeasure has binding name 'ns2__LogarithmicPowerRatioMeasure' for type 'ns2:LogarithmicPowerRatioMeasure' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioMeasure
#define SOAP_TYPE_ns2__LogarithmicPowerRatioMeasure (2024)
#endif

/* struct ns2__LinearThermalExpansionMeasureExt has binding name 'ns2__LinearThermalExpansionMeasureExt' for type 'ns2:LinearThermalExpansionMeasureExt' */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionMeasureExt
#define SOAP_TYPE_ns2__LinearThermalExpansionMeasureExt (2023)
#endif

/* struct ns2__LinearThermalExpansionMeasure has binding name 'ns2__LinearThermalExpansionMeasure' for type 'ns2:LinearThermalExpansionMeasure' */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionMeasure
#define SOAP_TYPE_ns2__LinearThermalExpansionMeasure (2022)
#endif

/* struct ns2__LinearAccelerationMeasureExt has binding name 'ns2__LinearAccelerationMeasureExt' for type 'ns2:LinearAccelerationMeasureExt' */
#ifndef SOAP_TYPE_ns2__LinearAccelerationMeasureExt
#define SOAP_TYPE_ns2__LinearAccelerationMeasureExt (2021)
#endif

/* struct ns2__LightExposureMeasureExt has binding name 'ns2__LightExposureMeasureExt' for type 'ns2:LightExposureMeasureExt' */
#ifndef SOAP_TYPE_ns2__LightExposureMeasureExt
#define SOAP_TYPE_ns2__LightExposureMeasureExt (2020)
#endif

/* struct ns2__LightExposureMeasure has binding name 'ns2__LightExposureMeasure' for type 'ns2:LightExposureMeasure' */
#ifndef SOAP_TYPE_ns2__LightExposureMeasure
#define SOAP_TYPE_ns2__LightExposureMeasure (2019)
#endif

/* struct ns2__LengthPerVolumeMeasureExt has binding name 'ns2__LengthPerVolumeMeasureExt' for type 'ns2:LengthPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeMeasureExt
#define SOAP_TYPE_ns2__LengthPerVolumeMeasureExt (2018)
#endif

/* struct ns2__LengthPerVolumeMeasure has binding name 'ns2__LengthPerVolumeMeasure' for type 'ns2:LengthPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeMeasure
#define SOAP_TYPE_ns2__LengthPerVolumeMeasure (2017)
#endif

/* struct ns2__LengthPerTemperatureMeasureExt has binding name 'ns2__LengthPerTemperatureMeasureExt' for type 'ns2:LengthPerTemperatureMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureMeasureExt
#define SOAP_TYPE_ns2__LengthPerTemperatureMeasureExt (2016)
#endif

/* struct ns2__LengthPerTemperatureMeasure has binding name 'ns2__LengthPerTemperatureMeasure' for type 'ns2:LengthPerTemperatureMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureMeasure
#define SOAP_TYPE_ns2__LengthPerTemperatureMeasure (2015)
#endif

/* struct ns2__LengthPerPressureMeasureExt has binding name 'ns2__LengthPerPressureMeasureExt' for type 'ns2:LengthPerPressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerPressureMeasureExt
#define SOAP_TYPE_ns2__LengthPerPressureMeasureExt (2014)
#endif

/* struct ns2__LengthPerPressureMeasure has binding name 'ns2__LengthPerPressureMeasure' for type 'ns2:LengthPerPressureMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerPressureMeasure
#define SOAP_TYPE_ns2__LengthPerPressureMeasure (2013)
#endif

/* struct ns2__LengthPerMassMeasureExt has binding name 'ns2__LengthPerMassMeasureExt' for type 'ns2:LengthPerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerMassMeasureExt
#define SOAP_TYPE_ns2__LengthPerMassMeasureExt (2012)
#endif

/* struct ns2__LengthPerMassMeasure has binding name 'ns2__LengthPerMassMeasure' for type 'ns2:LengthPerMassMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerMassMeasure
#define SOAP_TYPE_ns2__LengthPerMassMeasure (2011)
#endif

/* struct ns2__LengthPerAngleMeasureExt has binding name 'ns2__LengthPerAngleMeasureExt' for type 'ns2:LengthPerAngleMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerAngleMeasureExt
#define SOAP_TYPE_ns2__LengthPerAngleMeasureExt (2010)
#endif

/* struct ns2__LengthPerAngleMeasure has binding name 'ns2__LengthPerAngleMeasure' for type 'ns2:LengthPerAngleMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerAngleMeasure
#define SOAP_TYPE_ns2__LengthPerAngleMeasure (2009)
#endif

/* struct ns2__LengthOrTimeMeasureExt has binding name 'ns2__LengthOrTimeMeasureExt' for type 'ns2:LengthOrTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthOrTimeMeasureExt
#define SOAP_TYPE_ns2__LengthOrTimeMeasureExt (2008)
#endif

/* struct ns2__KinematicViscosityMeasureExt has binding name 'ns2__KinematicViscosityMeasureExt' for type 'ns2:KinematicViscosityMeasureExt' */
#ifndef SOAP_TYPE_ns2__KinematicViscosityMeasureExt
#define SOAP_TYPE_ns2__KinematicViscosityMeasureExt (2007)
#endif

/* struct ns2__KinematicViscosityMeasure has binding name 'ns2__KinematicViscosityMeasure' for type 'ns2:KinematicViscosityMeasure' */
#ifndef SOAP_TYPE_ns2__KinematicViscosityMeasure
#define SOAP_TYPE_ns2__KinematicViscosityMeasure (2006)
#endif

/* struct ns2__IsothermalCompressibilityMeasureExt has binding name 'ns2__IsothermalCompressibilityMeasureExt' for type 'ns2:IsothermalCompressibilityMeasureExt' */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityMeasureExt
#define SOAP_TYPE_ns2__IsothermalCompressibilityMeasureExt (2005)
#endif

/* struct ns2__InductanceMeasureExt has binding name 'ns2__InductanceMeasureExt' for type 'ns2:InductanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__InductanceMeasureExt
#define SOAP_TYPE_ns2__InductanceMeasureExt (2004)
#endif

/* struct ns2__InductanceMeasure has binding name 'ns2__InductanceMeasure' for type 'ns2:InductanceMeasure' */
#ifndef SOAP_TYPE_ns2__InductanceMeasure
#define SOAP_TYPE_ns2__InductanceMeasure (2003)
#endif

/* struct ns2__IlluminanceMeasureExt has binding name 'ns2__IlluminanceMeasureExt' for type 'ns2:IlluminanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__IlluminanceMeasureExt
#define SOAP_TYPE_ns2__IlluminanceMeasureExt (2002)
#endif

/* struct ns2__HeatTransferCoefficientMeasureExt has binding name 'ns2__HeatTransferCoefficientMeasureExt' for type 'ns2:HeatTransferCoefficientMeasureExt' */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientMeasureExt
#define SOAP_TYPE_ns2__HeatTransferCoefficientMeasureExt (2001)
#endif

/* struct ns2__HeatTransferCoefficientMeasure has binding name 'ns2__HeatTransferCoefficientMeasure' for type 'ns2:HeatTransferCoefficientMeasure' */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientMeasure
#define SOAP_TYPE_ns2__HeatTransferCoefficientMeasure (2000)
#endif

/* struct ns2__HeatFlowRateMeasureExt has binding name 'ns2__HeatFlowRateMeasureExt' for type 'ns2:HeatFlowRateMeasureExt' */
#ifndef SOAP_TYPE_ns2__HeatFlowRateMeasureExt
#define SOAP_TYPE_ns2__HeatFlowRateMeasureExt (1999)
#endif

/* struct ns2__HeatFlowRateMeasure has binding name 'ns2__HeatFlowRateMeasure' for type 'ns2:HeatFlowRateMeasure' */
#ifndef SOAP_TYPE_ns2__HeatFlowRateMeasure
#define SOAP_TYPE_ns2__HeatFlowRateMeasure (1998)
#endif

/* struct ns2__HeatCapacityMeasureExt has binding name 'ns2__HeatCapacityMeasureExt' for type 'ns2:HeatCapacityMeasureExt' */
#ifndef SOAP_TYPE_ns2__HeatCapacityMeasureExt
#define SOAP_TYPE_ns2__HeatCapacityMeasureExt (1997)
#endif

/* struct ns2__HeatCapacityMeasure has binding name 'ns2__HeatCapacityMeasure' for type 'ns2:HeatCapacityMeasure' */
#ifndef SOAP_TYPE_ns2__HeatCapacityMeasure
#define SOAP_TYPE_ns2__HeatCapacityMeasure (1996)
#endif

/* struct ns2__FrequencyMeasureExt has binding name 'ns2__FrequencyMeasureExt' for type 'ns2:FrequencyMeasureExt' */
#ifndef SOAP_TYPE_ns2__FrequencyMeasureExt
#define SOAP_TYPE_ns2__FrequencyMeasureExt (1995)
#endif

/* struct ns2__FrequencyMeasure has binding name 'ns2__FrequencyMeasure' for type 'ns2:FrequencyMeasure' */
#ifndef SOAP_TYPE_ns2__FrequencyMeasure
#define SOAP_TYPE_ns2__FrequencyMeasure (1994)
#endif

/* struct ns2__FrequencyIntervalMeasureExt has binding name 'ns2__FrequencyIntervalMeasureExt' for type 'ns2:FrequencyIntervalMeasureExt' */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalMeasureExt
#define SOAP_TYPE_ns2__FrequencyIntervalMeasureExt (1993)
#endif

/* struct ns2__FrequencyIntervalMeasure has binding name 'ns2__FrequencyIntervalMeasure' for type 'ns2:FrequencyIntervalMeasure' */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalMeasure
#define SOAP_TYPE_ns2__FrequencyIntervalMeasure (1992)
#endif

/* struct ns2__ForcePerLengthMeasureExt has binding name 'ns2__ForcePerLengthMeasureExt' for type 'ns2:ForcePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForcePerLengthMeasureExt
#define SOAP_TYPE_ns2__ForcePerLengthMeasureExt (1991)
#endif

/* struct ns2__ForcePerForceMeasureExt has binding name 'ns2__ForcePerForceMeasureExt' for type 'ns2:ForcePerForceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForcePerForceMeasureExt
#define SOAP_TYPE_ns2__ForcePerForceMeasureExt (1990)
#endif

/* struct ns2__ForcePerForceMeasure has binding name 'ns2__ForcePerForceMeasure' for type 'ns2:ForcePerForceMeasure' */
#ifndef SOAP_TYPE_ns2__ForcePerForceMeasure
#define SOAP_TYPE_ns2__ForcePerForceMeasure (1989)
#endif

/* struct ns2__ForceLengthPerLengthMeasureExt has binding name 'ns2__ForceLengthPerLengthMeasureExt' for type 'ns2:ForceLengthPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthMeasureExt
#define SOAP_TYPE_ns2__ForceLengthPerLengthMeasureExt (1988)
#endif

/* struct ns2__ForceLengthPerLengthMeasure has binding name 'ns2__ForceLengthPerLengthMeasure' for type 'ns2:ForceLengthPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthMeasure
#define SOAP_TYPE_ns2__ForceLengthPerLengthMeasure (1987)
#endif

/* struct ns2__ForceAreaMeasureExt has binding name 'ns2__ForceAreaMeasureExt' for type 'ns2:ForceAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForceAreaMeasureExt
#define SOAP_TYPE_ns2__ForceAreaMeasureExt (1986)
#endif

/* struct ns2__ForceAreaMeasure has binding name 'ns2__ForceAreaMeasure' for type 'ns2:ForceAreaMeasure' */
#ifndef SOAP_TYPE_ns2__ForceAreaMeasure
#define SOAP_TYPE_ns2__ForceAreaMeasure (1985)
#endif

/* struct ns2__EnergyPerVolumeMeasureExt has binding name 'ns2__EnergyPerVolumeMeasureExt' for type 'ns2:EnergyPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeMeasureExt
#define SOAP_TYPE_ns2__EnergyPerVolumeMeasureExt (1984)
#endif

/* struct ns2__EnergyPerVolumeMeasure has binding name 'ns2__EnergyPerVolumeMeasure' for type 'ns2:EnergyPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeMeasure
#define SOAP_TYPE_ns2__EnergyPerVolumeMeasure (1983)
#endif

/* struct ns2__EnergyPerMassPerTimeMeasureExt has binding name 'ns2__EnergyPerMassPerTimeMeasureExt' for type 'ns2:EnergyPerMassPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasureExt
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasureExt (1982)
#endif

/* struct ns2__EnergyPerMassPerTimeMeasure has binding name 'ns2__EnergyPerMassPerTimeMeasure' for type 'ns2:EnergyPerMassPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasure
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeMeasure (1981)
#endif

/* struct ns2__EnergyPerMassMeasureExt has binding name 'ns2__EnergyPerMassMeasureExt' for type 'ns2:EnergyPerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassMeasureExt
#define SOAP_TYPE_ns2__EnergyPerMassMeasureExt (1980)
#endif

/* struct ns2__EnergyPerMassMeasure has binding name 'ns2__EnergyPerMassMeasure' for type 'ns2:EnergyPerMassMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassMeasure
#define SOAP_TYPE_ns2__EnergyPerMassMeasure (1979)
#endif

/* struct ns2__EnergyPerLengthMeasureExt has binding name 'ns2__EnergyPerLengthMeasureExt' for type 'ns2:EnergyPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthMeasureExt
#define SOAP_TYPE_ns2__EnergyPerLengthMeasureExt (1978)
#endif

/* struct ns2__EnergyPerLengthMeasure has binding name 'ns2__EnergyPerLengthMeasure' for type 'ns2:EnergyPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthMeasure
#define SOAP_TYPE_ns2__EnergyPerLengthMeasure (1977)
#endif

/* struct ns2__EnergyPerAreaMeasureExt has binding name 'ns2__EnergyPerAreaMeasureExt' for type 'ns2:EnergyPerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaMeasureExt
#define SOAP_TYPE_ns2__EnergyPerAreaMeasureExt (1976)
#endif

/* struct ns2__EnergyPerAreaMeasure has binding name 'ns2__EnergyPerAreaMeasure' for type 'ns2:EnergyPerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaMeasure
#define SOAP_TYPE_ns2__EnergyPerAreaMeasure (1975)
#endif

/* struct ns2__EnergyMeasureExt has binding name 'ns2__EnergyMeasureExt' for type 'ns2:EnergyMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyMeasureExt
#define SOAP_TYPE_ns2__EnergyMeasureExt (1974)
#endif

/* struct ns2__EnergyMeasure has binding name 'ns2__EnergyMeasure' for type 'ns2:EnergyMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyMeasure
#define SOAP_TYPE_ns2__EnergyMeasure (1973)
#endif

/* struct ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt has binding name 'ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt' for type 'ns2:EnergyLengthPerTimeAreaTemperatureMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasureExt (1972)
#endif

/* struct ns2__EnergyLengthPerTimeAreaTemperatureMeasure has binding name 'ns2__EnergyLengthPerTimeAreaTemperatureMeasure' for type 'ns2:EnergyLengthPerTimeAreaTemperatureMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasure
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureMeasure (1971)
#endif

/* struct ns2__EnergyLengthPerAreaMeasureExt has binding name 'ns2__EnergyLengthPerAreaMeasureExt' for type 'ns2:EnergyLengthPerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaMeasureExt
#define SOAP_TYPE_ns2__EnergyLengthPerAreaMeasureExt (1970)
#endif

/* struct ns2__EnergyLengthPerAreaMeasure has binding name 'ns2__EnergyLengthPerAreaMeasure' for type 'ns2:EnergyLengthPerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaMeasure
#define SOAP_TYPE_ns2__EnergyLengthPerAreaMeasure (1969)
#endif

/* struct ns2__ElectromagneticMomentMeasureExt has binding name 'ns2__ElectromagneticMomentMeasureExt' for type 'ns2:ElectromagneticMomentMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentMeasureExt
#define SOAP_TYPE_ns2__ElectromagneticMomentMeasureExt (1968)
#endif

/* struct ns2__ElectromagneticMomentMeasure has binding name 'ns2__ElectromagneticMomentMeasure' for type 'ns2:ElectromagneticMomentMeasure' */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentMeasure
#define SOAP_TYPE_ns2__ElectromagneticMomentMeasure (1967)
#endif

/* struct ns2__ElectricResistancePerLengthMeasureExt has binding name 'ns2__ElectricResistancePerLengthMeasureExt' for type 'ns2:ElectricResistancePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthMeasureExt
#define SOAP_TYPE_ns2__ElectricResistancePerLengthMeasureExt (1966)
#endif

/* struct ns2__ElectricResistancePerLengthMeasure has binding name 'ns2__ElectricResistancePerLengthMeasure' for type 'ns2:ElectricResistancePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthMeasure
#define SOAP_TYPE_ns2__ElectricResistancePerLengthMeasure (1965)
#endif

/* struct ns2__ElectricResistanceMeasureExt has binding name 'ns2__ElectricResistanceMeasureExt' for type 'ns2:ElectricResistanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricResistanceMeasureExt
#define SOAP_TYPE_ns2__ElectricResistanceMeasureExt (1964)
#endif

/* struct ns2__ElectricResistanceMeasure has binding name 'ns2__ElectricResistanceMeasure' for type 'ns2:ElectricResistanceMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricResistanceMeasure
#define SOAP_TYPE_ns2__ElectricResistanceMeasure (1963)
#endif

/* struct ns2__ElectricPotentialDifferenceMeasureExt has binding name 'ns2__ElectricPotentialDifferenceMeasureExt' for type 'ns2:ElectricPotentialDifferenceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasureExt
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasureExt (1962)
#endif

/* struct ns2__ElectricFieldStrengthMeasureExt has binding name 'ns2__ElectricFieldStrengthMeasureExt' for type 'ns2:ElectricFieldStrengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthMeasureExt
#define SOAP_TYPE_ns2__ElectricFieldStrengthMeasureExt (1961)
#endif

/* struct ns2__ElectricFieldStrengthMeasure has binding name 'ns2__ElectricFieldStrengthMeasure' for type 'ns2:ElectricFieldStrengthMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthMeasure
#define SOAP_TYPE_ns2__ElectricFieldStrengthMeasure (1960)
#endif

/* struct ns2__ElectricCurrentMeasureExt has binding name 'ns2__ElectricCurrentMeasureExt' for type 'ns2:ElectricCurrentMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentMeasureExt
#define SOAP_TYPE_ns2__ElectricCurrentMeasureExt (1959)
#endif

/* struct ns2__ElectricCurrentDensityMeasureExt has binding name 'ns2__ElectricCurrentDensityMeasureExt' for type 'ns2:ElectricCurrentDensityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityMeasureExt
#define SOAP_TYPE_ns2__ElectricCurrentDensityMeasureExt (1958)
#endif

/* struct ns2__ElectricCurrentDensityMeasure has binding name 'ns2__ElectricCurrentDensityMeasure' for type 'ns2:ElectricCurrentDensityMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityMeasure
#define SOAP_TYPE_ns2__ElectricCurrentDensityMeasure (1957)
#endif

/* struct ns2__ElectricConductivityMeasureExt has binding name 'ns2__ElectricConductivityMeasureExt' for type 'ns2:ElectricConductivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricConductivityMeasureExt
#define SOAP_TYPE_ns2__ElectricConductivityMeasureExt (1956)
#endif

/* struct ns2__ElectricConductivityMeasure has binding name 'ns2__ElectricConductivityMeasure' for type 'ns2:ElectricConductivityMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricConductivityMeasure
#define SOAP_TYPE_ns2__ElectricConductivityMeasure (1955)
#endif

/* struct ns2__ElectricConductanceMeasureExt has binding name 'ns2__ElectricConductanceMeasureExt' for type 'ns2:ElectricConductanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricConductanceMeasureExt
#define SOAP_TYPE_ns2__ElectricConductanceMeasureExt (1954)
#endif

/* struct ns2__ElectricConductanceMeasure has binding name 'ns2__ElectricConductanceMeasure' for type 'ns2:ElectricConductanceMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricConductanceMeasure
#define SOAP_TYPE_ns2__ElectricConductanceMeasure (1953)
#endif

/* struct ns2__ElectricChargePerVolumeMeasureExt has binding name 'ns2__ElectricChargePerVolumeMeasureExt' for type 'ns2:ElectricChargePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerVolumeMeasureExt (1952)
#endif

/* struct ns2__ElectricChargePerVolumeMeasure has binding name 'ns2__ElectricChargePerVolumeMeasure' for type 'ns2:ElectricChargePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeMeasure
#define SOAP_TYPE_ns2__ElectricChargePerVolumeMeasure (1951)
#endif

/* struct ns2__ElectricChargePerMassMeasureExt has binding name 'ns2__ElectricChargePerMassMeasureExt' for type 'ns2:ElectricChargePerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerMassMeasureExt (1950)
#endif

/* struct ns2__ElectricChargePerMassMeasure has binding name 'ns2__ElectricChargePerMassMeasure' for type 'ns2:ElectricChargePerMassMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassMeasure
#define SOAP_TYPE_ns2__ElectricChargePerMassMeasure (1949)
#endif

/* struct ns2__ElectricChargePerAreaMeasureExt has binding name 'ns2__ElectricChargePerAreaMeasureExt' for type 'ns2:ElectricChargePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaMeasureExt
#define SOAP_TYPE_ns2__ElectricChargePerAreaMeasureExt (1948)
#endif

/* struct ns2__ElectricChargePerAreaMeasure has binding name 'ns2__ElectricChargePerAreaMeasure' for type 'ns2:ElectricChargePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaMeasure
#define SOAP_TYPE_ns2__ElectricChargePerAreaMeasure (1947)
#endif

/* struct ns2__ElectricChargeMeasureExt has binding name 'ns2__ElectricChargeMeasureExt' for type 'ns2:ElectricChargeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargeMeasureExt
#define SOAP_TYPE_ns2__ElectricChargeMeasureExt (1946)
#endif

/* struct ns2__ElectricChargeMeasure has binding name 'ns2__ElectricChargeMeasure' for type 'ns2:ElectricChargeMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricChargeMeasure
#define SOAP_TYPE_ns2__ElectricChargeMeasure (1945)
#endif

/* struct ns2__ElectricalResistivityMeasureExt has binding name 'ns2__ElectricalResistivityMeasureExt' for type 'ns2:ElectricalResistivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityMeasureExt
#define SOAP_TYPE_ns2__ElectricalResistivityMeasureExt (1944)
#endif

/* struct ns2__ElectricalResistivityMeasure has binding name 'ns2__ElectricalResistivityMeasure' for type 'ns2:ElectricalResistivityMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityMeasure
#define SOAP_TYPE_ns2__ElectricalResistivityMeasure (1943)
#endif

/* struct ns2__DynamicViscosityMeasureExt has binding name 'ns2__DynamicViscosityMeasureExt' for type 'ns2:DynamicViscosityMeasureExt' */
#ifndef SOAP_TYPE_ns2__DynamicViscosityMeasureExt
#define SOAP_TYPE_ns2__DynamicViscosityMeasureExt (1942)
#endif

/* struct ns2__DoseEquivalentMeasureExt has binding name 'ns2__DoseEquivalentMeasureExt' for type 'ns2:DoseEquivalentMeasureExt' */
#ifndef SOAP_TYPE_ns2__DoseEquivalentMeasureExt
#define SOAP_TYPE_ns2__DoseEquivalentMeasureExt (1941)
#endif

/* struct ns2__DoseEquivalentMeasure has binding name 'ns2__DoseEquivalentMeasure' for type 'ns2:DoseEquivalentMeasure' */
#ifndef SOAP_TYPE_ns2__DoseEquivalentMeasure
#define SOAP_TYPE_ns2__DoseEquivalentMeasure (1940)
#endif

/* struct ns2__DipoleMomentMeasureExt has binding name 'ns2__DipoleMomentMeasureExt' for type 'ns2:DipoleMomentMeasureExt' */
#ifndef SOAP_TYPE_ns2__DipoleMomentMeasureExt
#define SOAP_TYPE_ns2__DipoleMomentMeasureExt (1939)
#endif

/* struct ns2__DipoleMomentMeasure has binding name 'ns2__DipoleMomentMeasure' for type 'ns2:DipoleMomentMeasure' */
#ifndef SOAP_TYPE_ns2__DipoleMomentMeasure
#define SOAP_TYPE_ns2__DipoleMomentMeasure (1938)
#endif

/* struct ns2__DimensionlessMeasureExt has binding name 'ns2__DimensionlessMeasureExt' for type 'ns2:DimensionlessMeasureExt' */
#ifndef SOAP_TYPE_ns2__DimensionlessMeasureExt
#define SOAP_TYPE_ns2__DimensionlessMeasureExt (1937)
#endif

/* struct ns2__DigitalStorageMeasureExt has binding name 'ns2__DigitalStorageMeasureExt' for type 'ns2:DigitalStorageMeasureExt' */
#ifndef SOAP_TYPE_ns2__DigitalStorageMeasureExt
#define SOAP_TYPE_ns2__DigitalStorageMeasureExt (1936)
#endif

/* struct ns2__DiffusiveTimeOfFlightMeasureExt has binding name 'ns2__DiffusiveTimeOfFlightMeasureExt' for type 'ns2:DiffusiveTimeOfFlightMeasureExt' */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasureExt
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasureExt (1935)
#endif

/* struct ns2__DiffusiveTimeOfFlightMeasure has binding name 'ns2__DiffusiveTimeOfFlightMeasure' for type 'ns2:DiffusiveTimeOfFlightMeasure' */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasure
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightMeasure (1934)
#endif

/* struct ns2__DiffusionCoefficientMeasureExt has binding name 'ns2__DiffusionCoefficientMeasureExt' for type 'ns2:DiffusionCoefficientMeasureExt' */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientMeasureExt
#define SOAP_TYPE_ns2__DiffusionCoefficientMeasureExt (1933)
#endif

/* struct ns2__DiffusionCoefficientMeasure has binding name 'ns2__DiffusionCoefficientMeasure' for type 'ns2:DiffusionCoefficientMeasure' */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientMeasure
#define SOAP_TYPE_ns2__DiffusionCoefficientMeasure (1932)
#endif

/* struct ns2__DataTransferSpeedMeasureExt has binding name 'ns2__DataTransferSpeedMeasureExt' for type 'ns2:DataTransferSpeedMeasureExt' */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedMeasureExt
#define SOAP_TYPE_ns2__DataTransferSpeedMeasureExt (1931)
#endif

/* struct ns2__DataTransferSpeedMeasure has binding name 'ns2__DataTransferSpeedMeasure' for type 'ns2:DataTransferSpeedMeasure' */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedMeasure
#define SOAP_TYPE_ns2__DataTransferSpeedMeasure (1930)
#endif

/* struct ns2__CationExchangeCapacityMeasure has binding name 'ns2__CationExchangeCapacityMeasure' for type 'ns2:CationExchangeCapacityMeasure' */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityMeasure
#define SOAP_TYPE_ns2__CationExchangeCapacityMeasure (1929)
#endif

/* struct ns2__CapacitanceMeasureExt has binding name 'ns2__CapacitanceMeasureExt' for type 'ns2:CapacitanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__CapacitanceMeasureExt
#define SOAP_TYPE_ns2__CapacitanceMeasureExt (1928)
#endif

/* struct ns2__CapacitanceMeasure has binding name 'ns2__CapacitanceMeasure' for type 'ns2:CapacitanceMeasure' */
#ifndef SOAP_TYPE_ns2__CapacitanceMeasure
#define SOAP_TYPE_ns2__CapacitanceMeasure (1927)
#endif

/* struct ns2__AttenuationPerFrequencyIntervalMeasureExt has binding name 'ns2__AttenuationPerFrequencyIntervalMeasureExt' for type 'ns2:AttenuationPerFrequencyIntervalMeasureExt' */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasureExt
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasureExt (1926)
#endif

/* struct ns2__AttenuationPerFrequencyIntervalMeasure has binding name 'ns2__AttenuationPerFrequencyIntervalMeasure' for type 'ns2:AttenuationPerFrequencyIntervalMeasure' */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasure
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalMeasure (1925)
#endif

/* struct ns2__AreaPerVolumeMeasureExt has binding name 'ns2__AreaPerVolumeMeasureExt' for type 'ns2:AreaPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeMeasureExt
#define SOAP_TYPE_ns2__AreaPerVolumeMeasureExt (1924)
#endif

/* struct ns2__AreaPerVolumeMeasure has binding name 'ns2__AreaPerVolumeMeasure' for type 'ns2:AreaPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeMeasure
#define SOAP_TYPE_ns2__AreaPerVolumeMeasure (1923)
#endif

/* struct ns2__AreaPerTimeMeasureExt has binding name 'ns2__AreaPerTimeMeasureExt' for type 'ns2:AreaPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerTimeMeasureExt
#define SOAP_TYPE_ns2__AreaPerTimeMeasureExt (1922)
#endif

/* struct ns2__AreaPerTimeMeasure has binding name 'ns2__AreaPerTimeMeasure' for type 'ns2:AreaPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerTimeMeasure
#define SOAP_TYPE_ns2__AreaPerTimeMeasure (1921)
#endif

/* struct ns2__AreaPerMassMeasureExt has binding name 'ns2__AreaPerMassMeasureExt' for type 'ns2:AreaPerMassMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerMassMeasureExt
#define SOAP_TYPE_ns2__AreaPerMassMeasureExt (1920)
#endif

/* struct ns2__AreaPerCountMeasureExt has binding name 'ns2__AreaPerCountMeasureExt' for type 'ns2:AreaPerCountMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerCountMeasureExt
#define SOAP_TYPE_ns2__AreaPerCountMeasureExt (1919)
#endif

/* struct ns2__AreaPerCountMeasure has binding name 'ns2__AreaPerCountMeasure' for type 'ns2:AreaPerCountMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerCountMeasure
#define SOAP_TYPE_ns2__AreaPerCountMeasure (1918)
#endif

/* struct ns2__AreaPerAreaMeasureExt has binding name 'ns2__AreaPerAreaMeasureExt' for type 'ns2:AreaPerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerAreaMeasureExt
#define SOAP_TYPE_ns2__AreaPerAreaMeasureExt (1917)
#endif

/* struct ns2__AreaPerAmountOfSubstanceMeasureExt has binding name 'ns2__AreaPerAmountOfSubstanceMeasureExt' for type 'ns2:AreaPerAmountOfSubstanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasureExt (1916)
#endif

/* struct ns2__AreaPerAmountOfSubstanceMeasure has binding name 'ns2__AreaPerAmountOfSubstanceMeasure' for type 'ns2:AreaPerAmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceMeasure (1915)
#endif

/* struct ns2__AreaMeasureExt has binding name 'ns2__AreaMeasureExt' for type 'ns2:AreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__AreaMeasureExt
#define SOAP_TYPE_ns2__AreaMeasureExt (1914)
#endif

/* struct ns2__APINeutronMeasureExt has binding name 'ns2__APINeutronMeasureExt' for type 'ns2:APINeutronMeasureExt' */
#ifndef SOAP_TYPE_ns2__APINeutronMeasureExt
#define SOAP_TYPE_ns2__APINeutronMeasureExt (1913)
#endif

/* struct ns2__APINeutronMeasure has binding name 'ns2__APINeutronMeasure' for type 'ns2:APINeutronMeasure' */
#ifndef SOAP_TYPE_ns2__APINeutronMeasure
#define SOAP_TYPE_ns2__APINeutronMeasure (1912)
#endif

/* struct ns2__APIGravityMeasureExt has binding name 'ns2__APIGravityMeasureExt' for type 'ns2:APIGravityMeasureExt' */
#ifndef SOAP_TYPE_ns2__APIGravityMeasureExt
#define SOAP_TYPE_ns2__APIGravityMeasureExt (1911)
#endif

/* struct ns2__APIGravityMeasure has binding name 'ns2__APIGravityMeasure' for type 'ns2:APIGravityMeasure' */
#ifndef SOAP_TYPE_ns2__APIGravityMeasure
#define SOAP_TYPE_ns2__APIGravityMeasure (1910)
#endif

/* struct ns2__APIGammaRayMeasureExt has binding name 'ns2__APIGammaRayMeasureExt' for type 'ns2:APIGammaRayMeasureExt' */
#ifndef SOAP_TYPE_ns2__APIGammaRayMeasureExt
#define SOAP_TYPE_ns2__APIGammaRayMeasureExt (1909)
#endif

/* struct ns2__APIGammaRayMeasure has binding name 'ns2__APIGammaRayMeasure' for type 'ns2:APIGammaRayMeasure' */
#ifndef SOAP_TYPE_ns2__APIGammaRayMeasure
#define SOAP_TYPE_ns2__APIGammaRayMeasure (1908)
#endif

/* struct ns2__AngularVelocityMeasureExt has binding name 'ns2__AngularVelocityMeasureExt' for type 'ns2:AngularVelocityMeasureExt' */
#ifndef SOAP_TYPE_ns2__AngularVelocityMeasureExt
#define SOAP_TYPE_ns2__AngularVelocityMeasureExt (1907)
#endif

/* struct ns2__AngularAccelerationMeasureExt has binding name 'ns2__AngularAccelerationMeasureExt' for type 'ns2:AngularAccelerationMeasureExt' */
#ifndef SOAP_TYPE_ns2__AngularAccelerationMeasureExt
#define SOAP_TYPE_ns2__AngularAccelerationMeasureExt (1906)
#endif

/* struct ns2__AngularAccelerationMeasure has binding name 'ns2__AngularAccelerationMeasure' for type 'ns2:AngularAccelerationMeasure' */
#ifndef SOAP_TYPE_ns2__AngularAccelerationMeasure
#define SOAP_TYPE_ns2__AngularAccelerationMeasure (1905)
#endif

/* struct ns2__AnglePerVolumeMeasureExt has binding name 'ns2__AnglePerVolumeMeasureExt' for type 'ns2:AnglePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeMeasureExt
#define SOAP_TYPE_ns2__AnglePerVolumeMeasureExt (1904)
#endif

/* struct ns2__AnglePerVolumeMeasure has binding name 'ns2__AnglePerVolumeMeasure' for type 'ns2:AnglePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeMeasure
#define SOAP_TYPE_ns2__AnglePerVolumeMeasure (1903)
#endif

/* struct ns2__AnglePerLengthMeasureExt has binding name 'ns2__AnglePerLengthMeasureExt' for type 'ns2:AnglePerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__AnglePerLengthMeasureExt
#define SOAP_TYPE_ns2__AnglePerLengthMeasureExt (1902)
#endif

/* struct ns2__AmountOfSubstancePerVolumeMeasureExt has binding name 'ns2__AmountOfSubstancePerVolumeMeasureExt' for type 'ns2:AmountOfSubstancePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasureExt (1901)
#endif

/* struct ns2__AmountOfSubstancePerVolumeMeasure has binding name 'ns2__AmountOfSubstancePerVolumeMeasure' for type 'ns2:AmountOfSubstancePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeMeasure (1900)
#endif

/* struct ns2__AmountOfSubstancePerTimePerAreaMeasureExt has binding name 'ns2__AmountOfSubstancePerTimePerAreaMeasureExt' for type 'ns2:AmountOfSubstancePerTimePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasureExt (1899)
#endif

/* struct ns2__AmountOfSubstancePerTimePerAreaMeasure has binding name 'ns2__AmountOfSubstancePerTimePerAreaMeasure' for type 'ns2:AmountOfSubstancePerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaMeasure (1898)
#endif

/* struct ns2__AmountOfSubstancePerTimeMeasureExt has binding name 'ns2__AmountOfSubstancePerTimeMeasureExt' for type 'ns2:AmountOfSubstancePerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasureExt (1897)
#endif

/* struct ns2__AmountOfSubstancePerTimeMeasure has binding name 'ns2__AmountOfSubstancePerTimeMeasure' for type 'ns2:AmountOfSubstancePerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeMeasure (1896)
#endif

/* struct ns2__AmountOfSubstancePerAreaMeasureExt has binding name 'ns2__AmountOfSubstancePerAreaMeasureExt' for type 'ns2:AmountOfSubstancePerAreaMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasureExt (1895)
#endif

/* struct ns2__AmountOfSubstancePerAreaMeasure has binding name 'ns2__AmountOfSubstancePerAreaMeasure' for type 'ns2:AmountOfSubstancePerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaMeasure (1894)
#endif

/* struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt has binding name 'ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt' for type 'ns2:AmountOfSubstancePerAmountOfSubstanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasureExt (1893)
#endif

/* struct ns2__AmountOfSubstancePerAmountOfSubstanceMeasure has binding name 'ns2__AmountOfSubstancePerAmountOfSubstanceMeasure' for type 'ns2:AmountOfSubstancePerAmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceMeasure (1892)
#endif

/* struct ns2__AmountOfSubstanceMeasureExt has binding name 'ns2__AmountOfSubstanceMeasureExt' for type 'ns2:AmountOfSubstanceMeasureExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceMeasureExt
#define SOAP_TYPE_ns2__AmountOfSubstanceMeasureExt (1891)
#endif

/* struct ns2__AmountOfSubstanceMeasure has binding name 'ns2__AmountOfSubstanceMeasure' for type 'ns2:AmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceMeasure
#define SOAP_TYPE_ns2__AmountOfSubstanceMeasure (1890)
#endif

/* struct ns2__ActivityOfRadioactivityPerVolumeMeasureExt has binding name 'ns2__ActivityOfRadioactivityPerVolumeMeasureExt' for type 'ns2:ActivityOfRadioactivityPerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasureExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasureExt (1889)
#endif

/* struct ns2__ActivityOfRadioactivityPerVolumeMeasure has binding name 'ns2__ActivityOfRadioactivityPerVolumeMeasure' for type 'ns2:ActivityOfRadioactivityPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasure
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeMeasure (1887)
#endif

/* struct ns2__ActivityOfRadioactivityMeasureExt has binding name 'ns2__ActivityOfRadioactivityMeasureExt' for type 'ns2:ActivityOfRadioactivityMeasureExt' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityMeasureExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityMeasureExt (1886)
#endif

/* struct ns2__ActivityOfRadioactivityMeasure has binding name 'ns2__ActivityOfRadioactivityMeasure' for type 'ns2:ActivityOfRadioactivityMeasure' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityMeasure
#define SOAP_TYPE_ns2__ActivityOfRadioactivityMeasure (1885)
#endif

/* struct ns2__AbsorbedDoseMeasureExt has binding name 'ns2__AbsorbedDoseMeasureExt' for type 'ns2:AbsorbedDoseMeasureExt' */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseMeasureExt
#define SOAP_TYPE_ns2__AbsorbedDoseMeasureExt (1884)
#endif

/* struct ns2__AbsorbedDoseMeasure has binding name 'ns2__AbsorbedDoseMeasure' for type 'ns2:AbsorbedDoseMeasure' */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseMeasure
#define SOAP_TYPE_ns2__AbsorbedDoseMeasure (1883)
#endif

/* struct ns2__ProjectedCrs has binding name 'ns2__ProjectedCrs' for type 'ns2:ProjectedCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedCrs
#define SOAP_TYPE_ns2__ProjectedCrs (1879)
#endif

/* struct ns2__LocalEngineering2dCrs has binding name 'ns2__LocalEngineering2dCrs' for type 'ns2:LocalEngineering2dCrs' */
#ifndef SOAP_TYPE_ns2__LocalEngineering2dCrs
#define SOAP_TYPE_ns2__LocalEngineering2dCrs (1877)
#endif

/* struct ns2__IntegerXmlArray has binding name 'ns2__IntegerXmlArray' for type 'ns2:IntegerXmlArray' */
#ifndef SOAP_TYPE_ns2__IntegerXmlArray
#define SOAP_TYPE_ns2__IntegerXmlArray (1871)
#endif

/* struct ns2__IntegerLatticeArray has binding name 'ns2__IntegerLatticeArray' for type 'ns2:IntegerLatticeArray' */
#ifndef SOAP_TYPE_ns2__IntegerLatticeArray
#define SOAP_TYPE_ns2__IntegerLatticeArray (1869)
#endif

/* struct ns2__IntegerExternalArray has binding name 'ns2__IntegerExternalArray' for type 'ns2:IntegerExternalArray' */
#ifndef SOAP_TYPE_ns2__IntegerExternalArray
#define SOAP_TYPE_ns2__IntegerExternalArray (1867)
#endif

/* struct ns2__IntegerConstantArray has binding name 'ns2__IntegerConstantArray' for type 'ns2:IntegerConstantArray' */
#ifndef SOAP_TYPE_ns2__IntegerConstantArray
#define SOAP_TYPE_ns2__IntegerConstantArray (1865)
#endif

/* struct ns2__IntegerArrayFromBooleanMaskArray has binding name 'ns2__IntegerArrayFromBooleanMaskArray' for type 'ns2:IntegerArrayFromBooleanMaskArray' */
#ifndef SOAP_TYPE_ns2__IntegerArrayFromBooleanMaskArray
#define SOAP_TYPE_ns2__IntegerArrayFromBooleanMaskArray (1863)
#endif

/* struct ns2__FloatingPointXmlArray has binding name 'ns2__FloatingPointXmlArray' for type 'ns2:FloatingPointXmlArray' */
#ifndef SOAP_TYPE_ns2__FloatingPointXmlArray
#define SOAP_TYPE_ns2__FloatingPointXmlArray (1860)
#endif

/* struct ns2__FloatingPointLatticeArray has binding name 'ns2__FloatingPointLatticeArray' for type 'ns2:FloatingPointLatticeArray' */
#ifndef SOAP_TYPE_ns2__FloatingPointLatticeArray
#define SOAP_TYPE_ns2__FloatingPointLatticeArray (1858)
#endif

/* struct ns2__FloatingPointExternalArray has binding name 'ns2__FloatingPointExternalArray' for type 'ns2:FloatingPointExternalArray' */
#ifndef SOAP_TYPE_ns2__FloatingPointExternalArray
#define SOAP_TYPE_ns2__FloatingPointExternalArray (1856)
#endif

/* struct ns2__FloatingPointConstantArray has binding name 'ns2__FloatingPointConstantArray' for type 'ns2:FloatingPointConstantArray' */
#ifndef SOAP_TYPE_ns2__FloatingPointConstantArray
#define SOAP_TYPE_ns2__FloatingPointConstantArray (1854)
#endif

/* struct ns2__ReferencePointInAWellbore has binding name 'ns2__ReferencePointInAWellbore' for type 'ns2:ReferencePointInAWellbore' */
#ifndef SOAP_TYPE_ns2__ReferencePointInAWellbore
#define SOAP_TYPE_ns2__ReferencePointInAWellbore (1849)
#endif

/* struct ns2__PublicLandSurveySystem2dPosition has binding name 'ns2__PublicLandSurveySystem2dPosition' for type 'ns2:PublicLandSurveySystem2dPosition' */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystem2dPosition
#define SOAP_TYPE_ns2__PublicLandSurveySystem2dPosition (1842)
#endif

/* struct ns2__LocalEngineering2dPosition has binding name 'ns2__LocalEngineering2dPosition' for type 'ns2:LocalEngineering2dPosition' */
#ifndef SOAP_TYPE_ns2__LocalEngineering2dPosition
#define SOAP_TYPE_ns2__LocalEngineering2dPosition (1839)
#endif

/* struct ns2__AbstractTimeGrowingObject has binding name 'ns2__AbstractTimeGrowingObject' for type 'ns2:AbstractTimeGrowingObject' */
#ifndef SOAP_TYPE_ns2__AbstractTimeGrowingObject
#define SOAP_TYPE_ns2__AbstractTimeGrowingObject (1837)
#endif

/* struct ns2__AbstractMdGrowingObject has binding name 'ns2__AbstractMdGrowingObject' for type 'ns2:AbstractMdGrowingObject' */
#ifndef SOAP_TYPE_ns2__AbstractMdGrowingObject
#define SOAP_TYPE_ns2__AbstractMdGrowingObject (1835)
#endif

/* struct ns1__ShowEvaluation has binding name 'ns1__ShowEvaluation' for type 'ns1:ShowEvaluation' */
#ifndef SOAP_TYPE_ns1__ShowEvaluation
#define SOAP_TYPE_ns1__ShowEvaluation (1823)
#endif

/* struct ns1__InterpretedGeology has binding name 'ns1__InterpretedGeology' for type 'ns1:InterpretedGeology' */
#ifndef SOAP_TYPE_ns1__InterpretedGeology
#define SOAP_TYPE_ns1__InterpretedGeology (1821)
#endif

/* struct ns1__CuttingsGeology has binding name 'ns1__CuttingsGeology' for type 'ns1:CuttingsGeology' */
#ifndef SOAP_TYPE_ns1__CuttingsGeology
#define SOAP_TYPE_ns1__CuttingsGeology (1819)
#endif

/* struct ns2__IlluminanceMeasure has binding name 'ns2__IlluminanceMeasure' for type 'ns2:IlluminanceMeasure' */
#ifndef SOAP_TYPE_ns2__IlluminanceMeasure
#define SOAP_TYPE_ns2__IlluminanceMeasure (1815)
#endif

/* struct ns1__PPFGLog has binding name 'ns1__PPFGLog' for type 'ns1:PPFGLog' */
#ifndef SOAP_TYPE_ns1__PPFGLog
#define SOAP_TYPE_ns1__PPFGLog (1795)
#endif

/* struct ns1__PPFGChannelSet has binding name 'ns1__PPFGChannelSet' for type 'ns1:PPFGChannelSet' */
#ifndef SOAP_TYPE_ns1__PPFGChannelSet
#define SOAP_TYPE_ns1__PPFGChannelSet (1791)
#endif

/* struct ns1__PPFGChannel has binding name 'ns1__PPFGChannel' for type 'ns1:PPFGChannel' */
#ifndef SOAP_TYPE_ns1__PPFGChannel
#define SOAP_TYPE_ns1__PPFGChannel (1787)
#endif

/* struct ns2__Projected2dPosition has binding name 'ns2__Projected2dPosition' for type 'ns2:Projected2dPosition' */
#ifndef SOAP_TYPE_ns2__Projected2dPosition
#define SOAP_TYPE_ns2__Projected2dPosition (1776)
#endif

/* struct ns2__EmailQualifierStruct has binding name 'ns2__EmailQualifierStruct' for type 'ns2:EmailQualifierStruct' */
#ifndef SOAP_TYPE_ns2__EmailQualifierStruct
#define SOAP_TYPE_ns2__EmailQualifierStruct (1754)
#endif

/* struct ns2__ReferencePressure has binding name 'ns2__ReferencePressure' for type 'ns2:ReferencePressure' */
#ifndef SOAP_TYPE_ns2__ReferencePressure
#define SOAP_TYPE_ns2__ReferencePressure (1747)
#endif

/* struct ns2__AuthorityQualifiedName has binding name 'ns2__AuthorityQualifiedName' for type 'ns2:AuthorityQualifiedName' */
#ifndef SOAP_TYPE_ns2__AuthorityQualifiedName
#define SOAP_TYPE_ns2__AuthorityQualifiedName (1744)
#endif

/* struct ns2__ProjectedCompoundCrs has binding name 'ns2__ProjectedCompoundCrs' for type 'ns2:ProjectedCompoundCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedCompoundCrs
#define SOAP_TYPE_ns2__ProjectedCompoundCrs (1742)
#endif

/* struct ns2__LocalEngineeringCompoundCrs has binding name 'ns2__LocalEngineeringCompoundCrs' for type 'ns2:LocalEngineeringCompoundCrs' */
#ifndef SOAP_TYPE_ns2__LocalEngineeringCompoundCrs
#define SOAP_TYPE_ns2__LocalEngineeringCompoundCrs (1740)
#endif

/* struct ns2__GeographicCompoundCrs has binding name 'ns2__GeographicCompoundCrs' for type 'ns2:GeographicCompoundCrs' */
#ifndef SOAP_TYPE_ns2__GeographicCompoundCrs
#define SOAP_TYPE_ns2__GeographicCompoundCrs (1738)
#endif

/* struct ns2__Geographic2dCrs has binding name 'ns2__Geographic2dCrs' for type 'ns2:Geographic2dCrs' */
#ifndef SOAP_TYPE_ns2__Geographic2dCrs
#define SOAP_TYPE_ns2__Geographic2dCrs (1736)
#endif

/* struct ns2__Cartesian2dCrs has binding name 'ns2__Cartesian2dCrs' for type 'ns2:Cartesian2dCrs' */
#ifndef SOAP_TYPE_ns2__Cartesian2dCrs
#define SOAP_TYPE_ns2__Cartesian2dCrs (1734)
#endif

/* struct ns2__ReferencePointTvdInterval has binding name 'ns2__ReferencePointTvdInterval' for type 'ns2:ReferencePointTvdInterval' */
#ifndef SOAP_TYPE_ns2__ReferencePointTvdInterval
#define SOAP_TYPE_ns2__ReferencePointTvdInterval (1732)
#endif

/* struct ns2__DatumTvdInterval has binding name 'ns2__DatumTvdInterval' for type 'ns2:DatumTvdInterval' */
#ifndef SOAP_TYPE_ns2__DatumTvdInterval
#define SOAP_TYPE_ns2__DatumTvdInterval (1730)
#endif

/* struct ns2__StringXmlArray has binding name 'ns2__StringXmlArray' for type 'ns2:StringXmlArray' */
#ifndef SOAP_TYPE_ns2__StringXmlArray
#define SOAP_TYPE_ns2__StringXmlArray (1728)
#endif

/* struct ns2__StringExternalArray has binding name 'ns2__StringExternalArray' for type 'ns2:StringExternalArray' */
#ifndef SOAP_TYPE_ns2__StringExternalArray
#define SOAP_TYPE_ns2__StringExternalArray (1726)
#endif

/* struct ns2__StringConstantArray has binding name 'ns2__StringConstantArray' for type 'ns2:StringConstantArray' */
#ifndef SOAP_TYPE_ns2__StringConstantArray
#define SOAP_TYPE_ns2__StringConstantArray (1724)
#endif

/* struct ns2__RelativePressureInterval has binding name 'ns2__RelativePressureInterval' for type 'ns2:RelativePressureInterval' */
#ifndef SOAP_TYPE_ns2__RelativePressureInterval
#define SOAP_TYPE_ns2__RelativePressureInterval (1721)
#endif

/* struct ns2__GaugePressureInterval has binding name 'ns2__GaugePressureInterval' for type 'ns2:GaugePressureInterval' */
#ifndef SOAP_TYPE_ns2__GaugePressureInterval
#define SOAP_TYPE_ns2__GaugePressureInterval (1719)
#endif

/* struct ns2__AbsolutePressureInterval has binding name 'ns2__AbsolutePressureInterval' for type 'ns2:AbsolutePressureInterval' */
#ifndef SOAP_TYPE_ns2__AbsolutePressureInterval
#define SOAP_TYPE_ns2__AbsolutePressureInterval (1717)
#endif

/* struct ns2__AbstractFloatingPointArray has binding name 'ns2__AbstractFloatingPointArray' for type 'ns2:AbstractFloatingPointArray' */
#ifndef SOAP_TYPE_ns2__AbstractFloatingPointArray
#define SOAP_TYPE_ns2__AbstractFloatingPointArray (1714)
#endif

/* struct ns2__BooleanXmlArray has binding name 'ns2__BooleanXmlArray' for type 'ns2:BooleanXmlArray' */
#ifndef SOAP_TYPE_ns2__BooleanXmlArray
#define SOAP_TYPE_ns2__BooleanXmlArray (1712)
#endif

/* struct ns2__BooleanExternalArray has binding name 'ns2__BooleanExternalArray' for type 'ns2:BooleanExternalArray' */
#ifndef SOAP_TYPE_ns2__BooleanExternalArray
#define SOAP_TYPE_ns2__BooleanExternalArray (1710)
#endif

/* struct ns2__BooleanConstantArray has binding name 'ns2__BooleanConstantArray' for type 'ns2:BooleanConstantArray' */
#ifndef SOAP_TYPE_ns2__BooleanConstantArray
#define SOAP_TYPE_ns2__BooleanConstantArray (1708)
#endif

/* struct ns2__BooleanArrayFromIndexArray has binding name 'ns2__BooleanArrayFromIndexArray' for type 'ns2:BooleanArrayFromIndexArray' */
#ifndef SOAP_TYPE_ns2__BooleanArrayFromIndexArray
#define SOAP_TYPE_ns2__BooleanArrayFromIndexArray (1706)
#endif

/* struct ns2__ReferencePointInALocalEngineeringCompoundCrs has binding name 'ns2__ReferencePointInALocalEngineeringCompoundCrs' for type 'ns2:ReferencePointInALocalEngineeringCompoundCrs' */
#ifndef SOAP_TYPE_ns2__ReferencePointInALocalEngineeringCompoundCrs
#define SOAP_TYPE_ns2__ReferencePointInALocalEngineeringCompoundCrs (1702)
#endif

/* struct ns2__ReferencePointInACrs has binding name 'ns2__ReferencePointInACrs' for type 'ns2:ReferencePointInACrs' */
#ifndef SOAP_TYPE_ns2__ReferencePointInACrs
#define SOAP_TYPE_ns2__ReferencePointInACrs (1700)
#endif

/* struct ns2__RecursiveReferencePoint has binding name 'ns2__RecursiveReferencePoint' for type 'ns2:RecursiveReferencePoint' */
#ifndef SOAP_TYPE_ns2__RecursiveReferencePoint
#define SOAP_TYPE_ns2__RecursiveReferencePoint (1698)
#endif

/* struct ns2__ProjectedCompoundPosition has binding name 'ns2__ProjectedCompoundPosition' for type 'ns2:ProjectedCompoundPosition' */
#ifndef SOAP_TYPE_ns2__ProjectedCompoundPosition
#define SOAP_TYPE_ns2__ProjectedCompoundPosition (1694)
#endif

/* struct ns2__GeographicCompoundPosition has binding name 'ns2__GeographicCompoundPosition' for type 'ns2:GeographicCompoundPosition' */
#ifndef SOAP_TYPE_ns2__GeographicCompoundPosition
#define SOAP_TYPE_ns2__GeographicCompoundPosition (1692)
#endif

/* struct ns2__EngineeringCompoundPosition has binding name 'ns2__EngineeringCompoundPosition' for type 'ns2:EngineeringCompoundPosition' */
#ifndef SOAP_TYPE_ns2__EngineeringCompoundPosition
#define SOAP_TYPE_ns2__EngineeringCompoundPosition (1690)
#endif

/* struct ns2__Projected3dPosition has binding name 'ns2__Projected3dPosition' for type 'ns2:Projected3dPosition' */
#ifndef SOAP_TYPE_ns2__Projected3dPosition
#define SOAP_TYPE_ns2__Projected3dPosition (1688)
#endif

/* struct ns2__LocalEngineering3dPosition has binding name 'ns2__LocalEngineering3dPosition' for type 'ns2:LocalEngineering3dPosition' */
#ifndef SOAP_TYPE_ns2__LocalEngineering3dPosition
#define SOAP_TYPE_ns2__LocalEngineering3dPosition (1686)
#endif

/* struct ns2__Geographic3dPosition has binding name 'ns2__Geographic3dPosition' for type 'ns2:Geographic3dPosition' */
#ifndef SOAP_TYPE_ns2__Geographic3dPosition
#define SOAP_TYPE_ns2__Geographic3dPosition (1684)
#endif

/* struct ns2__Geocentric3dPosition has binding name 'ns2__Geocentric3dPosition' for type 'ns2:Geocentric3dPosition' */
#ifndef SOAP_TYPE_ns2__Geocentric3dPosition
#define SOAP_TYPE_ns2__Geocentric3dPosition (1682)
#endif

/* struct ns2__Geographic2dPosition has binding name 'ns2__Geographic2dPosition' for type 'ns2:Geographic2dPosition' */
#ifndef SOAP_TYPE_ns2__Geographic2dPosition
#define SOAP_TYPE_ns2__Geographic2dPosition (1680)
#endif

/* struct ns2__AbstractCartesian2dPosition has binding name 'ns2__AbstractCartesian2dPosition' for type 'ns2:AbstractCartesian2dPosition' */
#ifndef SOAP_TYPE_ns2__AbstractCartesian2dPosition
#define SOAP_TYPE_ns2__AbstractCartesian2dPosition (1678)
#endif

/* struct ns1__ShowEvaluationInterval has binding name 'ns1__ShowEvaluationInterval' for type 'ns1:ShowEvaluationInterval' */
#ifndef SOAP_TYPE_ns1__ShowEvaluationInterval
#define SOAP_TYPE_ns1__ShowEvaluationInterval (1675)
#endif

/* struct ns1__InterpretedGeologyInterval has binding name 'ns1__InterpretedGeologyInterval' for type 'ns1:InterpretedGeologyInterval' */
#ifndef SOAP_TYPE_ns1__InterpretedGeologyInterval
#define SOAP_TYPE_ns1__InterpretedGeologyInterval (1673)
#endif

/* struct ns1__CuttingsGeologyInterval has binding name 'ns1__CuttingsGeologyInterval' for type 'ns1:CuttingsGeologyInterval' */
#ifndef SOAP_TYPE_ns1__CuttingsGeologyInterval
#define SOAP_TYPE_ns1__CuttingsGeologyInterval (1671)
#endif

/* struct ns1__MudlogReportInterval has binding name 'ns1__MudlogReportInterval' for type 'ns1:MudlogReportInterval' */
#ifndef SOAP_TYPE_ns1__MudlogReportInterval
#define SOAP_TYPE_ns1__MudlogReportInterval (1669)
#endif

/* struct ns1__WellboreGeology has binding name 'ns1__WellboreGeology' for type 'ns1:WellboreGeology' */
#ifndef SOAP_TYPE_ns1__WellboreGeology
#define SOAP_TYPE_ns1__WellboreGeology (1665)
#endif

/* struct ns1__RigUtilization has binding name 'ns1__RigUtilization' for type 'ns1:RigUtilization' */
#ifndef SOAP_TYPE_ns1__RigUtilization
#define SOAP_TYPE_ns1__RigUtilization (1663)
#endif

/* struct ns1__Rig has binding name 'ns1__Rig' for type 'ns1:Rig' */
#ifndef SOAP_TYPE_ns1__Rig
#define SOAP_TYPE_ns1__Rig (1661)
#endif

/* struct ns1__Log has binding name 'ns1__Log' for type 'ns1:Log' */
#ifndef SOAP_TYPE_ns1__Log
#define SOAP_TYPE_ns1__Log (1659)
#endif

/* struct ns1__ChannelSet has binding name 'ns1__ChannelSet' for type 'ns1:ChannelSet' */
#ifndef SOAP_TYPE_ns1__ChannelSet
#define SOAP_TYPE_ns1__ChannelSet (1657)
#endif

/* struct ns1__Channel has binding name 'ns1__Channel' for type 'ns1:Channel' */
#ifndef SOAP_TYPE_ns1__Channel
#define SOAP_TYPE_ns1__Channel (1655)
#endif

/* struct ns1__Well has binding name 'ns1__Well' for type 'ns1:Well' */
#ifndef SOAP_TYPE_ns1__Well
#define SOAP_TYPE_ns1__Well (1653)
#endif

/* struct ns1__Wellbore has binding name 'ns1__Wellbore' for type 'ns1:Wellbore' */
#ifndef SOAP_TYPE_ns1__Wellbore
#define SOAP_TYPE_ns1__Wellbore (1651)
#endif

/* struct ns2__AbstractGrowingObject has binding name 'ns2__AbstractGrowingObject' for type 'ns2:AbstractGrowingObject' */
#ifndef SOAP_TYPE_ns2__AbstractGrowingObject
#define SOAP_TYPE_ns2__AbstractGrowingObject (1649)
#endif

/* struct ns2__TimeMeasureExt has binding name 'ns2__TimeMeasureExt' for type 'ns2:TimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__TimeMeasureExt
#define SOAP_TYPE_ns2__TimeMeasureExt (1646)
#endif

/* struct ns1__LithostratigraphicUnit has binding name 'ns1__LithostratigraphicUnit' for type 'ns1:LithostratigraphicUnit' */
#ifndef SOAP_TYPE_ns1__LithostratigraphicUnit
#define SOAP_TYPE_ns1__LithostratigraphicUnit (1644)
#endif

/* struct ns1__GeochronologicalUnit has binding name 'ns1__GeochronologicalUnit' for type 'ns1:GeochronologicalUnit' */
#ifndef SOAP_TYPE_ns1__GeochronologicalUnit
#define SOAP_TYPE_ns1__GeochronologicalUnit (1642)
#endif

/* struct ns2__AreaPerMassMeasure has binding name 'ns2__AreaPerMassMeasure' for type 'ns2:AreaPerMassMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerMassMeasure
#define SOAP_TYPE_ns2__AreaPerMassMeasure (1620)
#endif

/* struct ns2__ForcePerVolumeMeasureExt has binding name 'ns2__ForcePerVolumeMeasureExt' for type 'ns2:ForcePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeMeasureExt
#define SOAP_TYPE_ns2__ForcePerVolumeMeasureExt (1586)
#endif

/* struct ns2__ForceMeasureExt has binding name 'ns2__ForceMeasureExt' for type 'ns2:ForceMeasureExt' */
#ifndef SOAP_TYPE_ns2__ForceMeasureExt
#define SOAP_TYPE_ns2__ForceMeasureExt (1584)
#endif

/* struct ns2__VolumePerVolumeMeasureExt has binding name 'ns2__VolumePerVolumeMeasureExt' for type 'ns2:VolumePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeMeasureExt
#define SOAP_TYPE_ns2__VolumePerVolumeMeasureExt (1582)
#endif

/* struct ns1__TimestampedCommentString has binding name 'ns1__TimestampedCommentString' for type 'ns1:TimestampedCommentString' */
#ifndef SOAP_TYPE_ns1__TimestampedCommentString
#define SOAP_TYPE_ns1__TimestampedCommentString (1568)
#endif

/* struct ns1__EventType has binding name 'ns1__EventType' for type 'ns1:EventType' */
#ifndef SOAP_TYPE_ns1__EventType
#define SOAP_TYPE_ns1__EventType (1558)
#endif

/* struct ns2__DigitalStorageMeasure has binding name 'ns2__DigitalStorageMeasure' for type 'ns2:DigitalStorageMeasure' */
#ifndef SOAP_TYPE_ns2__DigitalStorageMeasure
#define SOAP_TYPE_ns2__DigitalStorageMeasure (1542)
#endif

/* struct ns2__AbstractGraphicalInformation has binding name 'ns2__AbstractGraphicalInformation' for type 'ns2:AbstractGraphicalInformation' */
#ifndef SOAP_TYPE_ns2__AbstractGraphicalInformation
#define SOAP_TYPE_ns2__AbstractGraphicalInformation (1526)
#endif

/* struct ns2__IndexRange has binding name 'ns2__IndexRange' for type 'ns2:IndexRange' */
#ifndef SOAP_TYPE_ns2__IndexRange
#define SOAP_TYPE_ns2__IndexRange (1525)
#endif

/* struct ns2__FailingRule has binding name 'ns2__FailingRule' for type 'ns2:FailingRule' */
#ifndef SOAP_TYPE_ns2__FailingRule
#define SOAP_TYPE_ns2__FailingRule (1524)
#endif

/* struct ns2__NestedColumnBasedTable has binding name 'ns2__NestedColumnBasedTable' for type 'ns2:NestedColumnBasedTable' */
#ifndef SOAP_TYPE_ns2__NestedColumnBasedTable
#define SOAP_TYPE_ns2__NestedColumnBasedTable (1522)
#endif

/* struct ns2__Column has binding name 'ns2__Column' for type 'ns2:Column' */
#ifndef SOAP_TYPE_ns2__Column
#define SOAP_TYPE_ns2__Column (1520)
#endif

/* struct ns2__SingleCollectionAssociation has binding name 'ns2__SingleCollectionAssociation' for type 'ns2:SingleCollectionAssociation' */
#ifndef SOAP_TYPE_ns2__SingleCollectionAssociation
#define SOAP_TYPE_ns2__SingleCollectionAssociation (1519)
#endif

/* struct ns2__ParameterTemplate has binding name 'ns2__ParameterTemplate' for type 'ns2:ParameterTemplate' */
#ifndef SOAP_TYPE_ns2__ParameterTemplate
#define SOAP_TYPE_ns2__ParameterTemplate (1516)
#endif

/* struct ns2__TimeIndexParameterKey has binding name 'ns2__TimeIndexParameterKey' for type 'ns2:TimeIndexParameterKey' */
#ifndef SOAP_TYPE_ns2__TimeIndexParameterKey
#define SOAP_TYPE_ns2__TimeIndexParameterKey (1514)
#endif

/* struct ns2__StringParameterKey has binding name 'ns2__StringParameterKey' for type 'ns2:StringParameterKey' */
#ifndef SOAP_TYPE_ns2__StringParameterKey
#define SOAP_TYPE_ns2__StringParameterKey (1512)
#endif

/* struct ns2__ObjectParameterKey has binding name 'ns2__ObjectParameterKey' for type 'ns2:ObjectParameterKey' */
#ifndef SOAP_TYPE_ns2__ObjectParameterKey
#define SOAP_TYPE_ns2__ObjectParameterKey (1510)
#endif

/* struct ns2__IntegerParameterKey has binding name 'ns2__IntegerParameterKey' for type 'ns2:IntegerParameterKey' */
#ifndef SOAP_TYPE_ns2__IntegerParameterKey
#define SOAP_TYPE_ns2__IntegerParameterKey (1508)
#endif

/* struct ns2__DoubleParameterKey has binding name 'ns2__DoubleParameterKey' for type 'ns2:DoubleParameterKey' */
#ifndef SOAP_TYPE_ns2__DoubleParameterKey
#define SOAP_TYPE_ns2__DoubleParameterKey (1506)
#endif

/* struct ns2__TimeIndexParameter has binding name 'ns2__TimeIndexParameter' for type 'ns2:TimeIndexParameter' */
#ifndef SOAP_TYPE_ns2__TimeIndexParameter
#define SOAP_TYPE_ns2__TimeIndexParameter (1504)
#endif

/* struct ns2__StringParameter has binding name 'ns2__StringParameter' for type 'ns2:StringParameter' */
#ifndef SOAP_TYPE_ns2__StringParameter
#define SOAP_TYPE_ns2__StringParameter (1502)
#endif

/* struct ns2__IntegerQuantityParameter has binding name 'ns2__IntegerQuantityParameter' for type 'ns2:IntegerQuantityParameter' */
#ifndef SOAP_TYPE_ns2__IntegerQuantityParameter
#define SOAP_TYPE_ns2__IntegerQuantityParameter (1500)
#endif

/* struct ns2__DoubleQuantityParameter has binding name 'ns2__DoubleQuantityParameter' for type 'ns2:DoubleQuantityParameter' */
#ifndef SOAP_TYPE_ns2__DoubleQuantityParameter
#define SOAP_TYPE_ns2__DoubleQuantityParameter (1498)
#endif

/* struct ns2__DataObjectParameter has binding name 'ns2__DataObjectParameter' for type 'ns2:DataObjectParameter' */
#ifndef SOAP_TYPE_ns2__DataObjectParameter
#define SOAP_TYPE_ns2__DataObjectParameter (1496)
#endif

/* struct ns2__AbstractParameterKey has binding name 'ns2__AbstractParameterKey' for type 'ns2:AbstractParameterKey' */
#ifndef SOAP_TYPE_ns2__AbstractParameterKey
#define SOAP_TYPE_ns2__AbstractParameterKey (1494)
#endif

/* struct ns2__AbstractActivityParameter has binding name 'ns2__AbstractActivityParameter' for type 'ns2:AbstractActivityParameter' */
#ifndef SOAP_TYPE_ns2__AbstractActivityParameter
#define SOAP_TYPE_ns2__AbstractActivityParameter (1493)
#endif

/* struct ns2__PhoneNumberStruct has binding name 'ns2__PhoneNumberStruct' for type 'ns2:PhoneNumberStruct' */
#ifndef SOAP_TYPE_ns2__PhoneNumberStruct
#define SOAP_TYPE_ns2__PhoneNumberStruct (1491)
#endif

/* struct ns2__PersonName has binding name 'ns2__PersonName' for type 'ns2:PersonName' */
#ifndef SOAP_TYPE_ns2__PersonName
#define SOAP_TYPE_ns2__PersonName (1490)
#endif

/* struct ns2__GeneralAddress has binding name 'ns2__GeneralAddress' for type 'ns2:GeneralAddress' */
#ifndef SOAP_TYPE_ns2__GeneralAddress
#define SOAP_TYPE_ns2__GeneralAddress (1488)
#endif

/* struct ns2__WellStatusPeriod has binding name 'ns2__WellStatusPeriod' for type 'ns2:WellStatusPeriod' */
#ifndef SOAP_TYPE_ns2__WellStatusPeriod
#define SOAP_TYPE_ns2__WellStatusPeriod (1487)
#endif

/* struct ns2__TimeSeriesParentage has binding name 'ns2__TimeSeriesParentage' for type 'ns2:TimeSeriesParentage' */
#ifndef SOAP_TYPE_ns2__TimeSeriesParentage
#define SOAP_TYPE_ns2__TimeSeriesParentage (1485)
#endif

/* struct ns2__TimeOrIntervalSeries has binding name 'ns2__TimeOrIntervalSeries' for type 'ns2:TimeOrIntervalSeries' */
#ifndef SOAP_TYPE_ns2__TimeOrIntervalSeries
#define SOAP_TYPE_ns2__TimeOrIntervalSeries (1484)
#endif

/* struct ns2__TimeIndex has binding name 'ns2__TimeIndex' for type 'ns2:TimeIndex' */
#ifndef SOAP_TYPE_ns2__TimeIndex
#define SOAP_TYPE_ns2__TimeIndex (1483)
#endif

/* struct ns2__PropertyKindFacet has binding name 'ns2__PropertyKindFacet' for type 'ns2:PropertyKindFacet' */
#ifndef SOAP_TYPE_ns2__PropertyKindFacet
#define SOAP_TYPE_ns2__PropertyKindFacet (1482)
#endif

/* struct ns2__GeologicTime has binding name 'ns2__GeologicTime' for type 'ns2:GeologicTime' */
#ifndef SOAP_TYPE_ns2__GeologicTime
#define SOAP_TYPE_ns2__GeologicTime (1481)
#endif

/* struct ns2__FacilityOperator has binding name 'ns2__FacilityOperator' for type 'ns2:FacilityOperator' */
#ifndef SOAP_TYPE_ns2__FacilityOperator
#define SOAP_TYPE_ns2__FacilityOperator (1480)
#endif

/* struct ns2__FacilityLifecyclePeriod has binding name 'ns2__FacilityLifecyclePeriod' for type 'ns2:FacilityLifecyclePeriod' */
#ifndef SOAP_TYPE_ns2__FacilityLifecyclePeriod
#define SOAP_TYPE_ns2__FacilityLifecyclePeriod (1479)
#endif

/* struct ns2__OSDUReferencePointIntegration has binding name 'ns2__OSDUReferencePointIntegration' for type 'ns2:OSDUReferencePointIntegration' */
#ifndef SOAP_TYPE_ns2__OSDUReferencePointIntegration
#define SOAP_TYPE_ns2__OSDUReferencePointIntegration (1478)
#endif

/* struct ns2__OSDULineageAssertion has binding name 'ns2__OSDULineageAssertion' for type 'ns2:OSDULineageAssertion' */
#ifndef SOAP_TYPE_ns2__OSDULineageAssertion
#define SOAP_TYPE_ns2__OSDULineageAssertion (1476)
#endif

/* struct ns2__VolumeValue has binding name 'ns2__VolumeValue' for type 'ns2:VolumeValue' */
#ifndef SOAP_TYPE_ns2__VolumeValue
#define SOAP_TYPE_ns2__VolumeValue (1475)
#endif

/* struct ns2__PressureValue has binding name 'ns2__PressureValue' for type 'ns2:PressureValue' */
#ifndef SOAP_TYPE_ns2__PressureValue
#define SOAP_TYPE_ns2__PressureValue (1473)
#endif

/* struct ns2__FlowRateValue has binding name 'ns2__FlowRateValue' for type 'ns2:FlowRateValue' */
#ifndef SOAP_TYPE_ns2__FlowRateValue
#define SOAP_TYPE_ns2__FlowRateValue (1472)
#endif

/* struct ns2__DensityValue has binding name 'ns2__DensityValue' for type 'ns2:DensityValue' */
#ifndef SOAP_TYPE_ns2__DensityValue
#define SOAP_TYPE_ns2__DensityValue (1470)
#endif

/* struct ns2__TemperaturePressure has binding name 'ns2__TemperaturePressure' for type 'ns2:TemperaturePressure' */
#ifndef SOAP_TYPE_ns2__TemperaturePressure
#define SOAP_TYPE_ns2__TemperaturePressure (1468)
#endif

/* struct ns2__ReferenceTemperaturePressure has binding name 'ns2__ReferenceTemperaturePressure' for type 'ns2:ReferenceTemperaturePressure' */
#ifndef SOAP_TYPE_ns2__ReferenceTemperaturePressure
#define SOAP_TYPE_ns2__ReferenceTemperaturePressure (1466)
#endif

/* struct ns2__AbstractTemperaturePressure has binding name 'ns2__AbstractTemperaturePressure' for type 'ns2:AbstractTemperaturePressure' */
#ifndef SOAP_TYPE_ns2__AbstractTemperaturePressure
#define SOAP_TYPE_ns2__AbstractTemperaturePressure (1465)
#endif

/* struct ns2__RelativePressure has binding name 'ns2__RelativePressure' for type 'ns2:RelativePressure' */
#ifndef SOAP_TYPE_ns2__RelativePressure
#define SOAP_TYPE_ns2__RelativePressure (1463)
#endif

/* struct ns2__GaugePressure has binding name 'ns2__GaugePressure' for type 'ns2:GaugePressure' */
#ifndef SOAP_TYPE_ns2__GaugePressure
#define SOAP_TYPE_ns2__GaugePressure (1461)
#endif

/* struct ns2__AbsolutePressure has binding name 'ns2__AbsolutePressure' for type 'ns2:AbsolutePressure' */
#ifndef SOAP_TYPE_ns2__AbsolutePressure
#define SOAP_TYPE_ns2__AbsolutePressure (1459)
#endif

/* struct ns2__AbstractPressureValue has binding name 'ns2__AbstractPressureValue' for type 'ns2:AbstractPressureValue' */
#ifndef SOAP_TYPE_ns2__AbstractPressureValue
#define SOAP_TYPE_ns2__AbstractPressureValue (1458)
#endif

/* struct ns2__VerticalAxis has binding name 'ns2__VerticalAxis' for type 'ns2:VerticalAxis' */
#ifndef SOAP_TYPE_ns2__VerticalAxis
#define SOAP_TYPE_ns2__VerticalAxis (1457)
#endif

/* struct ns2__Vector has binding name 'ns2__Vector' for type 'ns2:Vector' */
#ifndef SOAP_TYPE_ns2__Vector
#define SOAP_TYPE_ns2__Vector (1456)
#endif

/* struct ns2__PublicLandSurveySystemLocation has binding name 'ns2__PublicLandSurveySystemLocation' for type 'ns2:PublicLandSurveySystemLocation' */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemLocation
#define SOAP_TYPE_ns2__PublicLandSurveySystemLocation (1452)
#endif

/* struct ns2__HorizontalAxes has binding name 'ns2__HorizontalAxes' for type 'ns2:HorizontalAxes' */
#ifndef SOAP_TYPE_ns2__HorizontalAxes
#define SOAP_TYPE_ns2__HorizontalAxes (1451)
#endif

/* struct ns2__VerticalWktCrs has binding name 'ns2__VerticalWktCrs' for type 'ns2:VerticalWktCrs' */
#ifndef SOAP_TYPE_ns2__VerticalWktCrs
#define SOAP_TYPE_ns2__VerticalWktCrs (1449)
#endif

/* struct ns2__VerticalUnknownCrs has binding name 'ns2__VerticalUnknownCrs' for type 'ns2:VerticalUnknownCrs' */
#ifndef SOAP_TYPE_ns2__VerticalUnknownCrs
#define SOAP_TYPE_ns2__VerticalUnknownCrs (1447)
#endif

/* struct ns2__VerticalLocalAuthorityCrs has binding name 'ns2__VerticalLocalAuthorityCrs' for type 'ns2:VerticalLocalAuthorityCrs' */
#ifndef SOAP_TYPE_ns2__VerticalLocalAuthorityCrs
#define SOAP_TYPE_ns2__VerticalLocalAuthorityCrs (1445)
#endif

/* struct ns2__VerticalEpsgCrs has binding name 'ns2__VerticalEpsgCrs' for type 'ns2:VerticalEpsgCrs' */
#ifndef SOAP_TYPE_ns2__VerticalEpsgCrs
#define SOAP_TYPE_ns2__VerticalEpsgCrs (1443)
#endif

/* struct ns2__AbstractVerticalCrs has binding name 'ns2__AbstractVerticalCrs' for type 'ns2:AbstractVerticalCrs' */
#ifndef SOAP_TYPE_ns2__AbstractVerticalCrs
#define SOAP_TYPE_ns2__AbstractVerticalCrs (1442)
#endif

/* struct ns2__ProjectedWktCrs has binding name 'ns2__ProjectedWktCrs' for type 'ns2:ProjectedWktCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedWktCrs
#define SOAP_TYPE_ns2__ProjectedWktCrs (1440)
#endif

/* struct ns2__ProjectedUnknownCrs has binding name 'ns2__ProjectedUnknownCrs' for type 'ns2:ProjectedUnknownCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedUnknownCrs
#define SOAP_TYPE_ns2__ProjectedUnknownCrs (1438)
#endif

/* struct ns2__ProjectedLocalAuthorityCrs has binding name 'ns2__ProjectedLocalAuthorityCrs' for type 'ns2:ProjectedLocalAuthorityCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedLocalAuthorityCrs
#define SOAP_TYPE_ns2__ProjectedLocalAuthorityCrs (1436)
#endif

/* struct ns2__ProjectedEpsgCrs has binding name 'ns2__ProjectedEpsgCrs' for type 'ns2:ProjectedEpsgCrs' */
#ifndef SOAP_TYPE_ns2__ProjectedEpsgCrs
#define SOAP_TYPE_ns2__ProjectedEpsgCrs (1434)
#endif

/* struct ns2__AbstractProjectedCrs has binding name 'ns2__AbstractProjectedCrs' for type 'ns2:AbstractProjectedCrs' */
#ifndef SOAP_TYPE_ns2__AbstractProjectedCrs
#define SOAP_TYPE_ns2__AbstractProjectedCrs (1433)
#endif

/* struct ns2__GeodeticWktCrs has binding name 'ns2__GeodeticWktCrs' for type 'ns2:GeodeticWktCrs' */
#ifndef SOAP_TYPE_ns2__GeodeticWktCrs
#define SOAP_TYPE_ns2__GeodeticWktCrs (1431)
#endif

/* struct ns2__GeodeticUnknownCrs has binding name 'ns2__GeodeticUnknownCrs' for type 'ns2:GeodeticUnknownCrs' */
#ifndef SOAP_TYPE_ns2__GeodeticUnknownCrs
#define SOAP_TYPE_ns2__GeodeticUnknownCrs (1429)
#endif

/* struct ns2__GeodeticLocalAuthorityCrs has binding name 'ns2__GeodeticLocalAuthorityCrs' for type 'ns2:GeodeticLocalAuthorityCrs' */
#ifndef SOAP_TYPE_ns2__GeodeticLocalAuthorityCrs
#define SOAP_TYPE_ns2__GeodeticLocalAuthorityCrs (1427)
#endif

/* struct ns2__GeodeticEpsgCrs has binding name 'ns2__GeodeticEpsgCrs' for type 'ns2:GeodeticEpsgCrs' */
#ifndef SOAP_TYPE_ns2__GeodeticEpsgCrs
#define SOAP_TYPE_ns2__GeodeticEpsgCrs (1425)
#endif

/* struct ns2__AbstractGeographic2dCrs has binding name 'ns2__AbstractGeographic2dCrs' for type 'ns2:AbstractGeographic2dCrs' */
#ifndef SOAP_TYPE_ns2__AbstractGeographic2dCrs
#define SOAP_TYPE_ns2__AbstractGeographic2dCrs (1424)
#endif

/* struct ns2__StringArrayStatistics has binding name 'ns2__StringArrayStatistics' for type 'ns2:StringArrayStatistics' */
#ifndef SOAP_TYPE_ns2__StringArrayStatistics
#define SOAP_TYPE_ns2__StringArrayStatistics (1423)
#endif

/* struct ns2__AbstractIntegerArray has binding name 'ns2__AbstractIntegerArray' for type 'ns2:AbstractIntegerArray' */
#ifndef SOAP_TYPE_ns2__AbstractIntegerArray
#define SOAP_TYPE_ns2__AbstractIntegerArray (1421)
#endif

/* struct ns2__JaggedArray has binding name 'ns2__JaggedArray' for type 'ns2:JaggedArray' */
#ifndef SOAP_TYPE_ns2__JaggedArray
#define SOAP_TYPE_ns2__JaggedArray (1419)
#endif

/* struct ns2__IntegerArrayStatistics has binding name 'ns2__IntegerArrayStatistics' for type 'ns2:IntegerArrayStatistics' */
#ifndef SOAP_TYPE_ns2__IntegerArrayStatistics
#define SOAP_TYPE_ns2__IntegerArrayStatistics (1418)
#endif

/* struct ns2__FloatingPointArrayStatistics has binding name 'ns2__FloatingPointArrayStatistics' for type 'ns2:FloatingPointArrayStatistics' */
#ifndef SOAP_TYPE_ns2__FloatingPointArrayStatistics
#define SOAP_TYPE_ns2__FloatingPointArrayStatistics (1417)
#endif

/* struct ns2__BooleanArrayStatistics has binding name 'ns2__BooleanArrayStatistics' for type 'ns2:BooleanArrayStatistics' */
#ifndef SOAP_TYPE_ns2__BooleanArrayStatistics
#define SOAP_TYPE_ns2__BooleanArrayStatistics (1416)
#endif

/* struct ns2__ReferencePointVerticalDepth has binding name 'ns2__ReferencePointVerticalDepth' for type 'ns2:ReferencePointVerticalDepth' */
#ifndef SOAP_TYPE_ns2__ReferencePointVerticalDepth
#define SOAP_TYPE_ns2__ReferencePointVerticalDepth (1414)
#endif

/* struct ns2__DatumVerticalDepth has binding name 'ns2__DatumVerticalDepth' for type 'ns2:DatumVerticalDepth' */
#ifndef SOAP_TYPE_ns2__DatumVerticalDepth
#define SOAP_TYPE_ns2__DatumVerticalDepth (1412)
#endif

/* struct ns2__AbstractStringArray has binding name 'ns2__AbstractStringArray' for type 'ns2:AbstractStringArray' */
#ifndef SOAP_TYPE_ns2__AbstractStringArray
#define SOAP_TYPE_ns2__AbstractStringArray (1410)
#endif

/* struct ns2__AbstractNumericArray has binding name 'ns2__AbstractNumericArray' for type 'ns2:AbstractNumericArray' */
#ifndef SOAP_TYPE_ns2__AbstractNumericArray
#define SOAP_TYPE_ns2__AbstractNumericArray (1408)
#endif

/* struct ns2__AbstractBooleanArray has binding name 'ns2__AbstractBooleanArray' for type 'ns2:AbstractBooleanArray' */
#ifndef SOAP_TYPE_ns2__AbstractBooleanArray
#define SOAP_TYPE_ns2__AbstractBooleanArray (1406)
#endif

/* struct ns2__AbstractValueArray has binding name 'ns2__AbstractValueArray' for type 'ns2:AbstractValueArray' */
#ifndef SOAP_TYPE_ns2__AbstractValueArray
#define SOAP_TYPE_ns2__AbstractValueArray (1405)
#endif

/* struct ns1__PassIndexedDepthInterval has binding name 'ns1__PassIndexedDepthInterval' for type 'ns1:PassIndexedDepthInterval' */
#ifndef SOAP_TYPE_ns1__PassIndexedDepthInterval
#define SOAP_TYPE_ns1__PassIndexedDepthInterval (1403)
#endif

/* struct ns2__TemperatureInterval has binding name 'ns2__TemperatureInterval' for type 'ns2:TemperatureInterval' */
#ifndef SOAP_TYPE_ns2__TemperatureInterval
#define SOAP_TYPE_ns2__TemperatureInterval (1401)
#endif

/* struct ns2__ScalarInterval has binding name 'ns2__ScalarInterval' for type 'ns2:ScalarInterval' */
#ifndef SOAP_TYPE_ns2__ScalarInterval
#define SOAP_TYPE_ns2__ScalarInterval (1399)
#endif

/* struct ns2__ElapsedTimeInterval has binding name 'ns2__ElapsedTimeInterval' for type 'ns2:ElapsedTimeInterval' */
#ifndef SOAP_TYPE_ns2__ElapsedTimeInterval
#define SOAP_TYPE_ns2__ElapsedTimeInterval (1396)
#endif

/* struct ns2__DateTimeInterval has binding name 'ns2__DateTimeInterval' for type 'ns2:DateTimeInterval' */
#ifndef SOAP_TYPE_ns2__DateTimeInterval
#define SOAP_TYPE_ns2__DateTimeInterval (1394)
#endif

/* struct ns2__AbstractPressureInterval has binding name 'ns2__AbstractPressureInterval' for type 'ns2:AbstractPressureInterval' */
#ifndef SOAP_TYPE_ns2__AbstractPressureInterval
#define SOAP_TYPE_ns2__AbstractPressureInterval (1391)
#endif

/* struct ns2__ReferencePointElevation has binding name 'ns2__ReferencePointElevation' for type 'ns2:ReferencePointElevation' */
#ifndef SOAP_TYPE_ns2__ReferencePointElevation
#define SOAP_TYPE_ns2__ReferencePointElevation (1389)
#endif

/* struct ns2__DatumElevation has binding name 'ns2__DatumElevation' for type 'ns2:DatumElevation' */
#ifndef SOAP_TYPE_ns2__DatumElevation
#define SOAP_TYPE_ns2__DatumElevation (1387)
#endif

/* struct ns2__ExternalDataArrayPart has binding name 'ns2__ExternalDataArrayPart' for type 'ns2:ExternalDataArrayPart' */
#ifndef SOAP_TYPE_ns2__ExternalDataArrayPart
#define SOAP_TYPE_ns2__ExternalDataArrayPart (1385)
#endif

/* struct ns2__ExternalDataArray has binding name 'ns2__ExternalDataArray' for type 'ns2:ExternalDataArray' */
#ifndef SOAP_TYPE_ns2__ExternalDataArray
#define SOAP_TYPE_ns2__ExternalDataArray (1384)
#endif

/* struct ns2__VerticalPosition1d has binding name 'ns2__VerticalPosition1d' for type 'ns2:VerticalPosition1d' */
#ifndef SOAP_TYPE_ns2__VerticalPosition1d
#define SOAP_TYPE_ns2__VerticalPosition1d (1382)
#endif

/* struct ns2__HorizontalCoordinates has binding name 'ns2__HorizontalCoordinates' for type 'ns2:HorizontalCoordinates' */
#ifndef SOAP_TYPE_ns2__HorizontalCoordinates
#define SOAP_TYPE_ns2__HorizontalCoordinates (1381)
#endif

/* struct ns2__AbstractCompoundPosition has binding name 'ns2__AbstractCompoundPosition' for type 'ns2:AbstractCompoundPosition' */
#ifndef SOAP_TYPE_ns2__AbstractCompoundPosition
#define SOAP_TYPE_ns2__AbstractCompoundPosition (1379)
#endif

/* struct ns2__PublicLandSurveySystemCoordinates has binding name 'ns2__PublicLandSurveySystemCoordinates' for type 'ns2:PublicLandSurveySystemCoordinates' */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemCoordinates
#define SOAP_TYPE_ns2__PublicLandSurveySystemCoordinates (1375)
#endif

/* struct ns2__ProjectedCoordinates has binding name 'ns2__ProjectedCoordinates' for type 'ns2:ProjectedCoordinates' */
#ifndef SOAP_TYPE_ns2__ProjectedCoordinates
#define SOAP_TYPE_ns2__ProjectedCoordinates (1373)
#endif

/* struct ns2__GeographicCoordinates has binding name 'ns2__GeographicCoordinates' for type 'ns2:GeographicCoordinates' */
#ifndef SOAP_TYPE_ns2__GeographicCoordinates
#define SOAP_TYPE_ns2__GeographicCoordinates (1371)
#endif

/* struct ns2__AbstractHorizontalCoordinates has binding name 'ns2__AbstractHorizontalCoordinates' for type 'ns2:AbstractHorizontalCoordinates' */
#ifndef SOAP_TYPE_ns2__AbstractHorizontalCoordinates
#define SOAP_TYPE_ns2__AbstractHorizontalCoordinates (1370)
#endif

/* struct ns2__GrowingObjectIndex has binding name 'ns2__GrowingObjectIndex' for type 'ns2:GrowingObjectIndex' */
#ifndef SOAP_TYPE_ns2__GrowingObjectIndex
#define SOAP_TYPE_ns2__GrowingObjectIndex (1369)
#endif

/* struct ns2__StringMeasure has binding name 'ns2__StringMeasure' for type 'ns2:StringMeasure' */
#ifndef SOAP_TYPE_ns2__StringMeasure
#define SOAP_TYPE_ns2__StringMeasure (1366)
#endif

/* struct ns1__WellboreMarkerSet has binding name 'ns1__WellboreMarkerSet' for type 'ns1:WellboreMarkerSet' */
#ifndef SOAP_TYPE_ns1__WellboreMarkerSet
#define SOAP_TYPE_ns1__WellboreMarkerSet (1363)
#endif

/* struct ns1__WellboreMarker has binding name 'ns1__WellboreMarker' for type 'ns1:WellboreMarker' */
#ifndef SOAP_TYPE_ns1__WellboreMarker
#define SOAP_TYPE_ns1__WellboreMarker (1361)
#endif

/* struct ns1__WellCompletion has binding name 'ns1__WellCompletion' for type 'ns1:WellCompletion' */
#ifndef SOAP_TYPE_ns1__WellCompletion
#define SOAP_TYPE_ns1__WellCompletion (1359)
#endif

/* struct ns1__WellboreCompletion has binding name 'ns1__WellboreCompletion' for type 'ns1:WellboreCompletion' */
#ifndef SOAP_TYPE_ns1__WellboreCompletion
#define SOAP_TYPE_ns1__WellboreCompletion (1357)
#endif

/* struct ns1__Risk has binding name 'ns1__Risk' for type 'ns1:Risk' */
#ifndef SOAP_TYPE_ns1__Risk
#define SOAP_TYPE_ns1__Risk (1355)
#endif

/* struct ns1__OpsReport has binding name 'ns1__OpsReport' for type 'ns1:OpsReport' */
#ifndef SOAP_TYPE_ns1__OpsReport
#define SOAP_TYPE_ns1__OpsReport (1353)
#endif

/* struct ns1__StimJobStage has binding name 'ns1__StimJobStage' for type 'ns1:StimJobStage' */
#ifndef SOAP_TYPE_ns1__StimJobStage
#define SOAP_TYPE_ns1__StimJobStage (1350)
#endif

/* struct ns1__StimJob has binding name 'ns1__StimJob' for type 'ns1:StimJob' */
#ifndef SOAP_TYPE_ns1__StimJob
#define SOAP_TYPE_ns1__StimJob (1348)
#endif

/* struct ns1__SurveyProgram has binding name 'ns1__SurveyProgram' for type 'ns1:SurveyProgram' */
#ifndef SOAP_TYPE_ns1__SurveyProgram
#define SOAP_TYPE_ns1__SurveyProgram (1346)
#endif

/* struct ns1__WeightingFunctionDictionary has binding name 'ns1__WeightingFunctionDictionary' for type 'ns1:WeightingFunctionDictionary' */
#ifndef SOAP_TYPE_ns1__WeightingFunctionDictionary
#define SOAP_TYPE_ns1__WeightingFunctionDictionary (1344)
#endif

/* struct ns1__WeightingFunction has binding name 'ns1__WeightingFunction' for type 'ns1:WeightingFunction' */
#ifndef SOAP_TYPE_ns1__WeightingFunction
#define SOAP_TYPE_ns1__WeightingFunction (1342)
#endif

/* struct ns1__ToolErrorModelDictionary has binding name 'ns1__ToolErrorModelDictionary' for type 'ns1:ToolErrorModelDictionary' */
#ifndef SOAP_TYPE_ns1__ToolErrorModelDictionary
#define SOAP_TYPE_ns1__ToolErrorModelDictionary (1340)
#endif

/* struct ns1__ToolErrorModel has binding name 'ns1__ToolErrorModel' for type 'ns1:ToolErrorModel' */
#ifndef SOAP_TYPE_ns1__ToolErrorModel
#define SOAP_TYPE_ns1__ToolErrorModel (1338)
#endif

/* struct ns1__ErrorTermDictionary has binding name 'ns1__ErrorTermDictionary' for type 'ns1:ErrorTermDictionary' */
#ifndef SOAP_TYPE_ns1__ErrorTermDictionary
#define SOAP_TYPE_ns1__ErrorTermDictionary (1336)
#endif

/* struct ns1__ErrorTerm has binding name 'ns1__ErrorTerm' for type 'ns1:ErrorTerm' */
#ifndef SOAP_TYPE_ns1__ErrorTerm
#define SOAP_TYPE_ns1__ErrorTerm (1334)
#endif

/* struct ns1__Target has binding name 'ns1__Target' for type 'ns1:Target' */
#ifndef SOAP_TYPE_ns1__Target
#define SOAP_TYPE_ns1__Target (1332)
#endif

/* struct ns1__DrillReport has binding name 'ns1__DrillReport' for type 'ns1:DrillReport' */
#ifndef SOAP_TYPE_ns1__DrillReport
#define SOAP_TYPE_ns1__DrillReport (1330)
#endif

/* struct ns1__WellCMLedger has binding name 'ns1__WellCMLedger' for type 'ns1:WellCMLedger' */
#ifndef SOAP_TYPE_ns1__WellCMLedger
#define SOAP_TYPE_ns1__WellCMLedger (1328)
#endif

/* struct ns1__DownholeComponent has binding name 'ns1__DownholeComponent' for type 'ns1:DownholeComponent' */
#ifndef SOAP_TYPE_ns1__DownholeComponent
#define SOAP_TYPE_ns1__DownholeComponent (1326)
#endif

/* struct ns1__LoggingToolKindDictionary has binding name 'ns1__LoggingToolKindDictionary' for type 'ns1:LoggingToolKindDictionary' */
#ifndef SOAP_TYPE_ns1__LoggingToolKindDictionary
#define SOAP_TYPE_ns1__LoggingToolKindDictionary (1324)
#endif

/* struct ns1__LoggingToolKind has binding name 'ns1__LoggingToolKind' for type 'ns1:LoggingToolKind' */
#ifndef SOAP_TYPE_ns1__LoggingToolKind
#define SOAP_TYPE_ns1__LoggingToolKind (1322)
#endif

/* struct ns1__ChannelKindDictionary has binding name 'ns1__ChannelKindDictionary' for type 'ns1:ChannelKindDictionary' */
#ifndef SOAP_TYPE_ns1__ChannelKindDictionary
#define SOAP_TYPE_ns1__ChannelKindDictionary (1320)
#endif

/* struct ns1__ChannelKind has binding name 'ns1__ChannelKind' for type 'ns1:ChannelKind' */
#ifndef SOAP_TYPE_ns1__ChannelKind
#define SOAP_TYPE_ns1__ChannelKind (1318)
#endif

/* struct ns1__DepthRegImage has binding name 'ns1__DepthRegImage' for type 'ns1:DepthRegImage' */
#ifndef SOAP_TYPE_ns1__DepthRegImage
#define SOAP_TYPE_ns1__DepthRegImage (1316)
#endif

/* struct ns1__CementJobEvaluation has binding name 'ns1__CementJobEvaluation' for type 'ns1:CementJobEvaluation' */
#ifndef SOAP_TYPE_ns1__CementJobEvaluation
#define SOAP_TYPE_ns1__CementJobEvaluation (1314)
#endif

/* struct ns1__CementJob has binding name 'ns1__CementJob' for type 'ns1:CementJob' */
#ifndef SOAP_TYPE_ns1__CementJob
#define SOAP_TYPE_ns1__CementJob (1312)
#endif

/* struct ns1__Tubular has binding name 'ns1__Tubular' for type 'ns1:Tubular' */
#ifndef SOAP_TYPE_ns1__Tubular
#define SOAP_TYPE_ns1__Tubular (1310)
#endif

/* struct ns1__FluidsReport has binding name 'ns1__FluidsReport' for type 'ns1:FluidsReport' */
#ifndef SOAP_TYPE_ns1__FluidsReport
#define SOAP_TYPE_ns1__FluidsReport (1308)
#endif

/* struct ns1__BhaRun has binding name 'ns1__BhaRun' for type 'ns1:BhaRun' */
#ifndef SOAP_TYPE_ns1__BhaRun
#define SOAP_TYPE_ns1__BhaRun (1306)
#endif

/* struct ns2__GraphicalInformationSet has binding name 'ns2__GraphicalInformationSet' for type 'ns2:GraphicalInformationSet' */
#ifndef SOAP_TYPE_ns2__GraphicalInformationSet
#define SOAP_TYPE_ns2__GraphicalInformationSet (1304)
#endif

/* struct ns2__DataAssuranceRecord has binding name 'ns2__DataAssuranceRecord' for type 'ns2:DataAssuranceRecord' */
#ifndef SOAP_TYPE_ns2__DataAssuranceRecord
#define SOAP_TYPE_ns2__DataAssuranceRecord (1302)
#endif

/* struct ns2__ColumnBasedTable has binding name 'ns2__ColumnBasedTable' for type 'ns2:ColumnBasedTable' */
#ifndef SOAP_TYPE_ns2__ColumnBasedTable
#define SOAP_TYPE_ns2__ColumnBasedTable (1300)
#endif

/* struct ns2__DataobjectCollection has binding name 'ns2__DataobjectCollection' for type 'ns2:DataobjectCollection' */
#ifndef SOAP_TYPE_ns2__DataobjectCollection
#define SOAP_TYPE_ns2__DataobjectCollection (1298)
#endif

/* struct ns2__CollectionsToDataobjectsAssociationSet has binding name 'ns2__CollectionsToDataobjectsAssociationSet' for type 'ns2:CollectionsToDataobjectsAssociationSet' */
#ifndef SOAP_TYPE_ns2__CollectionsToDataobjectsAssociationSet
#define SOAP_TYPE_ns2__CollectionsToDataobjectsAssociationSet (1296)
#endif

/* struct ns2__Attachment has binding name 'ns2__Attachment' for type 'ns2:Attachment' */
#ifndef SOAP_TYPE_ns2__Attachment
#define SOAP_TYPE_ns2__Attachment (1294)
#endif

/* struct ns2__Aggregate has binding name 'ns2__Aggregate' for type 'ns2:Aggregate' */
#ifndef SOAP_TYPE_ns2__Aggregate
#define SOAP_TYPE_ns2__Aggregate (1292)
#endif

/* struct ns2__ActivityTemplate has binding name 'ns2__ActivityTemplate' for type 'ns2:ActivityTemplate' */
#ifndef SOAP_TYPE_ns2__ActivityTemplate
#define SOAP_TYPE_ns2__ActivityTemplate (1290)
#endif

/* struct ns2__Activity has binding name 'ns2__Activity' for type 'ns2:Activity' */
#ifndef SOAP_TYPE_ns2__Activity
#define SOAP_TYPE_ns2__Activity (1288)
#endif

/* struct ns2__BusinessAssociate has binding name 'ns2__BusinessAssociate' for type 'ns2:BusinessAssociate' */
#ifndef SOAP_TYPE_ns2__BusinessAssociate
#define SOAP_TYPE_ns2__BusinessAssociate (1286)
#endif

/* struct ns2__TimeSeries has binding name 'ns2__TimeSeries' for type 'ns2:TimeSeries' */
#ifndef SOAP_TYPE_ns2__TimeSeries
#define SOAP_TYPE_ns2__TimeSeries (1284)
#endif

/* struct ns2__PropertyKindDictionary has binding name 'ns2__PropertyKindDictionary' for type 'ns2:PropertyKindDictionary' */
#ifndef SOAP_TYPE_ns2__PropertyKindDictionary
#define SOAP_TYPE_ns2__PropertyKindDictionary (1282)
#endif

/* struct ns2__PropertyKind has binding name 'ns2__PropertyKind' for type 'ns2:PropertyKind' */
#ifndef SOAP_TYPE_ns2__PropertyKind
#define SOAP_TYPE_ns2__PropertyKind (1280)
#endif

/* struct ns2__VerticalCrs has binding name 'ns2__VerticalCrs' for type 'ns2:VerticalCrs' */
#ifndef SOAP_TYPE_ns2__VerticalCrs
#define SOAP_TYPE_ns2__VerticalCrs (1278)
#endif

/* struct ns2__Geographic3dCrs has binding name 'ns2__Geographic3dCrs' for type 'ns2:Geographic3dCrs' */
#ifndef SOAP_TYPE_ns2__Geographic3dCrs
#define SOAP_TYPE_ns2__Geographic3dCrs (1276)
#endif

/* struct ns2__Geocentric3dCrs has binding name 'ns2__Geocentric3dCrs' for type 'ns2:Geocentric3dCrs' */
#ifndef SOAP_TYPE_ns2__Geocentric3dCrs
#define SOAP_TYPE_ns2__Geocentric3dCrs (1274)
#endif

/* struct ns2__AbstractCompoundCrs has binding name 'ns2__AbstractCompoundCrs' for type 'ns2:AbstractCompoundCrs' */
#ifndef SOAP_TYPE_ns2__AbstractCompoundCrs
#define SOAP_TYPE_ns2__AbstractCompoundCrs (1272)
#endif

/* struct ns2__Abstract2dCrs has binding name 'ns2__Abstract2dCrs' for type 'ns2:Abstract2dCrs' */
#ifndef SOAP_TYPE_ns2__Abstract2dCrs
#define SOAP_TYPE_ns2__Abstract2dCrs (1270)
#endif

/* struct ns2__AbstractReferencePoint has binding name 'ns2__AbstractReferencePoint' for type 'ns2:AbstractReferencePoint' */
#ifndef SOAP_TYPE_ns2__AbstractReferencePoint
#define SOAP_TYPE_ns2__AbstractReferencePoint (1268)
#endif

/* struct ns2__AbstractActiveObject has binding name 'ns2__AbstractActiveObject' for type 'ns2:AbstractActiveObject' */
#ifndef SOAP_TYPE_ns2__AbstractActiveObject
#define SOAP_TYPE_ns2__AbstractActiveObject (1266)
#endif

/* struct ns2__CustomData has binding name 'ns2__CustomData' for type 'ns2:CustomData' */
#ifndef SOAP_TYPE_ns2__CustomData
#define SOAP_TYPE_ns2__CustomData (1264)
#endif

/* struct ns2__OSDUIntegration has binding name 'ns2__OSDUIntegration' for type 'ns2:OSDUIntegration' */
#ifndef SOAP_TYPE_ns2__OSDUIntegration
#define SOAP_TYPE_ns2__OSDUIntegration (1262)
#endif

/* struct ns2__ObjectAlias has binding name 'ns2__ObjectAlias' for type 'ns2:ObjectAlias' */
#ifndef SOAP_TYPE_ns2__ObjectAlias
#define SOAP_TYPE_ns2__ObjectAlias (1259)
#endif

/* struct ns2__AbstractObject has binding name 'ns2__AbstractObject' for type 'ns2:AbstractObject' */
#ifndef SOAP_TYPE_ns2__AbstractObject
#define SOAP_TYPE_ns2__AbstractObject (1258)
#endif

/* struct ns2__AbstractTimeIntervalGrowingPart has binding name 'ns2__AbstractTimeIntervalGrowingPart' for type 'ns2:AbstractTimeIntervalGrowingPart' */
#ifndef SOAP_TYPE_ns2__AbstractTimeIntervalGrowingPart
#define SOAP_TYPE_ns2__AbstractTimeIntervalGrowingPart (1256)
#endif

/* struct ns2__AbstractTimeGrowingPart has binding name 'ns2__AbstractTimeGrowingPart' for type 'ns2:AbstractTimeGrowingPart' */
#ifndef SOAP_TYPE_ns2__AbstractTimeGrowingPart
#define SOAP_TYPE_ns2__AbstractTimeGrowingPart (1254)
#endif

/* struct ns2__AbstractMdIntervalGrowingPart has binding name 'ns2__AbstractMdIntervalGrowingPart' for type 'ns2:AbstractMdIntervalGrowingPart' */
#ifndef SOAP_TYPE_ns2__AbstractMdIntervalGrowingPart
#define SOAP_TYPE_ns2__AbstractMdIntervalGrowingPart (1252)
#endif

/* struct ns2__AbstractMdGrowingPart has binding name 'ns2__AbstractMdGrowingPart' for type 'ns2:AbstractMdGrowingPart' */
#ifndef SOAP_TYPE_ns2__AbstractMdGrowingPart
#define SOAP_TYPE_ns2__AbstractMdGrowingPart (1250)
#endif

/* struct ns2__AbstractGrowingObjectPart has binding name 'ns2__AbstractGrowingObjectPart' for type 'ns2:AbstractGrowingObjectPart' */
#ifndef SOAP_TYPE_ns2__AbstractGrowingObjectPart
#define SOAP_TYPE_ns2__AbstractGrowingObjectPart (1249)
#endif

/* struct ns1__CompletionStatusHistory has binding name 'ns1__CompletionStatusHistory' for type 'ns1:CompletionStatusHistory' */
#ifndef SOAP_TYPE_ns1__CompletionStatusHistory
#define SOAP_TYPE_ns1__CompletionStatusHistory (1247)
#endif

/* struct ns1__PerforationStatusHistory has binding name 'ns1__PerforationStatusHistory' for type 'ns1:PerforationStatusHistory' */
#ifndef SOAP_TYPE_ns1__PerforationStatusHistory
#define SOAP_TYPE_ns1__PerforationStatusHistory (1244)
#endif

/* struct ns1__IntervalStatusHistory has binding name 'ns1__IntervalStatusHistory' for type 'ns1:IntervalStatusHistory' */
#ifndef SOAP_TYPE_ns1__IntervalStatusHistory
#define SOAP_TYPE_ns1__IntervalStatusHistory (1240)
#endif

/* struct ns1__SlotsInterval has binding name 'ns1__SlotsInterval' for type 'ns1:SlotsInterval' */
#ifndef SOAP_TYPE_ns1__SlotsInterval
#define SOAP_TYPE_ns1__SlotsInterval (1238)
#endif

/* struct ns1__PerforationSetInterval has binding name 'ns1__PerforationSetInterval' for type 'ns1:PerforationSetInterval' */
#ifndef SOAP_TYPE_ns1__PerforationSetInterval
#define SOAP_TYPE_ns1__PerforationSetInterval (1236)
#endif

/* struct ns1__OpenHoleInterval has binding name 'ns1__OpenHoleInterval' for type 'ns1:OpenHoleInterval' */
#ifndef SOAP_TYPE_ns1__OpenHoleInterval
#define SOAP_TYPE_ns1__OpenHoleInterval (1234)
#endif

/* struct ns1__GravelPackInterval has binding name 'ns1__GravelPackInterval' for type 'ns1:GravelPackInterval' */
#ifndef SOAP_TYPE_ns1__GravelPackInterval
#define SOAP_TYPE_ns1__GravelPackInterval (1232)
#endif

/* struct ns1__ContactIntervalSet has binding name 'ns1__ContactIntervalSet' for type 'ns1:ContactIntervalSet' */
#ifndef SOAP_TYPE_ns1__ContactIntervalSet
#define SOAP_TYPE_ns1__ContactIntervalSet (1231)
#endif

/* struct ns1__PPFGLogOSDUIntegration has binding name 'ns1__PPFGLogOSDUIntegration' for type 'ns1:PPFGLogOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__PPFGLogOSDUIntegration
#define SOAP_TYPE_ns1__PPFGLogOSDUIntegration (1230)
#endif

/* struct ns1__PPFGChannelSetOSDUIntegration has binding name 'ns1__PPFGChannelSetOSDUIntegration' for type 'ns1:PPFGChannelSetOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__PPFGChannelSetOSDUIntegration
#define SOAP_TYPE_ns1__PPFGChannelSetOSDUIntegration (1229)
#endif

/* struct ns1__PPFGChannelOSDUIntegration has binding name 'ns1__PPFGChannelOSDUIntegration' for type 'ns1:PPFGChannelOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__PPFGChannelOSDUIntegration
#define SOAP_TYPE_ns1__PPFGChannelOSDUIntegration (1228)
#endif

/* struct ns1__Weather has binding name 'ns1__Weather' for type 'ns1:Weather' */
#ifndef SOAP_TYPE_ns1__Weather
#define SOAP_TYPE_ns1__Weather (1226)
#endif

/* struct ns1__SupportCraft has binding name 'ns1__SupportCraft' for type 'ns1:SupportCraft' */
#ifndef SOAP_TYPE_ns1__SupportCraft
#define SOAP_TYPE_ns1__SupportCraft (1225)
#endif

/* struct ns1__ShakerScreen has binding name 'ns1__ShakerScreen' for type 'ns1:ShakerScreen' */
#ifndef SOAP_TYPE_ns1__ShakerScreen
#define SOAP_TYPE_ns1__ShakerScreen (1223)
#endif

/* struct ns1__ShakerOp has binding name 'ns1__ShakerOp' for type 'ns1:ShakerOp' */
#ifndef SOAP_TYPE_ns1__ShakerOp
#define SOAP_TYPE_ns1__ShakerOp (1222)
#endif

/* struct ns1__Scr has binding name 'ns1__Scr' for type 'ns1:Scr' */
#ifndef SOAP_TYPE_ns1__Scr
#define SOAP_TYPE_ns1__Scr (1221)
#endif

/* struct ns1__RigResponse has binding name 'ns1__RigResponse' for type 'ns1:RigResponse' */
#ifndef SOAP_TYPE_ns1__RigResponse
#define SOAP_TYPE_ns1__RigResponse (1219)
#endif

/* struct ns1__PumpOp has binding name 'ns1__PumpOp' for type 'ns1:PumpOp' */
#ifndef SOAP_TYPE_ns1__PumpOp
#define SOAP_TYPE_ns1__PumpOp (1217)
#endif

/* struct ns1__PitVolume has binding name 'ns1__PitVolume' for type 'ns1:PitVolume' */
#ifndef SOAP_TYPE_ns1__PitVolume
#define SOAP_TYPE_ns1__PitVolume (1216)
#endif

/* struct ns1__Personnel has binding name 'ns1__Personnel' for type 'ns1:Personnel' */
#ifndef SOAP_TYPE_ns1__Personnel
#define SOAP_TYPE_ns1__Personnel (1215)
#endif

/* struct ns1__MudVolume has binding name 'ns1__MudVolume' for type 'ns1:MudVolume' */
#ifndef SOAP_TYPE_ns1__MudVolume
#define SOAP_TYPE_ns1__MudVolume (1213)
#endif

/* struct ns1__MudLosses has binding name 'ns1__MudLosses' for type 'ns1:MudLosses' */
#ifndef SOAP_TYPE_ns1__MudLosses
#define SOAP_TYPE_ns1__MudLosses (1212)
#endif

/* struct ns1__Inventory has binding name 'ns1__Inventory' for type 'ns1:Inventory' */
#ifndef SOAP_TYPE_ns1__Inventory
#define SOAP_TYPE_ns1__Inventory (1210)
#endif

/* struct ns1__Incident has binding name 'ns1__Incident' for type 'ns1:Incident' */
#ifndef SOAP_TYPE_ns1__Incident
#define SOAP_TYPE_ns1__Incident (1208)
#endif

/* struct ns1__Hse has binding name 'ns1__Hse' for type 'ns1:Hse' */
#ifndef SOAP_TYPE_ns1__Hse
#define SOAP_TYPE_ns1__Hse (1207)
#endif

/* struct ns1__DayCost has binding name 'ns1__DayCost' for type 'ns1:DayCost' */
#ifndef SOAP_TYPE_ns1__DayCost
#define SOAP_TYPE_ns1__DayCost (1206)
#endif

/* struct ns1__AnchorState has binding name 'ns1__AnchorState' for type 'ns1:AnchorState' */
#ifndef SOAP_TYPE_ns1__AnchorState
#define SOAP_TYPE_ns1__AnchorState (1205)
#endif

/* struct ns1__ItemWtPerUnit has binding name 'ns1__ItemWtPerUnit' for type 'ns1:ItemWtPerUnit' */
#ifndef SOAP_TYPE_ns1__ItemWtPerUnit
#define SOAP_TYPE_ns1__ItemWtPerUnit (1203)
#endif

/* struct ns1__ItemVolPerUnit has binding name 'ns1__ItemVolPerUnit' for type 'ns1:ItemVolPerUnit' */
#ifndef SOAP_TYPE_ns1__ItemVolPerUnit
#define SOAP_TYPE_ns1__ItemVolPerUnit (1201)
#endif

/* struct ns1__AbstractItemWtOrVolPerUnit has binding name 'ns1__AbstractItemWtOrVolPerUnit' for type 'ns1:AbstractItemWtOrVolPerUnit' */
#ifndef SOAP_TYPE_ns1__AbstractItemWtOrVolPerUnit
#define SOAP_TYPE_ns1__AbstractItemWtOrVolPerUnit (1200)
#endif

/* struct ns2__VolumePerLengthMeasure has binding name 'ns2__VolumePerLengthMeasure' for type 'ns2:VolumePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerLengthMeasure
#define SOAP_TYPE_ns2__VolumePerLengthMeasure (1198)
#endif

/* struct ns1__StimShutInPressure has binding name 'ns1__StimShutInPressure' for type 'ns1:StimShutInPressure' */
#ifndef SOAP_TYPE_ns1__StimShutInPressure
#define SOAP_TYPE_ns1__StimShutInPressure (1196)
#endif

/* struct ns1__StimReservoirInterval has binding name 'ns1__StimReservoirInterval' for type 'ns1:StimReservoirInterval' */
#ifndef SOAP_TYPE_ns1__StimReservoirInterval
#define SOAP_TYPE_ns1__StimReservoirInterval (1195)
#endif

/* struct ns1__StimPumpFlowBackTestStep has binding name 'ns1__StimPumpFlowBackTestStep' for type 'ns1:StimPumpFlowBackTestStep' */
#ifndef SOAP_TYPE_ns1__StimPumpFlowBackTestStep
#define SOAP_TYPE_ns1__StimPumpFlowBackTestStep (1193)
#endif

/* struct ns1__StimPressureFlowRate has binding name 'ns1__StimPressureFlowRate' for type 'ns1:StimPressureFlowRate' */
#ifndef SOAP_TYPE_ns1__StimPressureFlowRate
#define SOAP_TYPE_ns1__StimPressureFlowRate (1192)
#endif

/* struct ns1__StimPerforationCluster has binding name 'ns1__StimPerforationCluster' for type 'ns1:StimPerforationCluster' */
#ifndef SOAP_TYPE_ns1__StimPerforationCluster
#define SOAP_TYPE_ns1__StimPerforationCluster (1190)
#endif

/* struct ns1__StimPerforationClusterSet has binding name 'ns1__StimPerforationClusterSet' for type 'ns1:StimPerforationClusterSet' */
#ifndef SOAP_TYPE_ns1__StimPerforationClusterSet
#define SOAP_TYPE_ns1__StimPerforationClusterSet (1189)
#endif

/* struct ns2__MassPerTimeMeasure has binding name 'ns2__MassPerTimeMeasure' for type 'ns2:MassPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerTimeMeasure
#define SOAP_TYPE_ns2__MassPerTimeMeasure (1187)
#endif

/* struct ns1__StimMaterial has binding name 'ns1__StimMaterial' for type 'ns1:StimMaterial' */
#ifndef SOAP_TYPE_ns1__StimMaterial
#define SOAP_TYPE_ns1__StimMaterial (1183)
#endif

/* struct ns1__StimJobStep has binding name 'ns1__StimJobStep' for type 'ns1:StimJobStep' */
#ifndef SOAP_TYPE_ns1__StimJobStep
#define SOAP_TYPE_ns1__StimJobStep (1181)
#endif

/* struct ns1__StimProppantAgent has binding name 'ns1__StimProppantAgent' for type 'ns1:StimProppantAgent' */
#ifndef SOAP_TYPE_ns1__StimProppantAgent
#define SOAP_TYPE_ns1__StimProppantAgent (1179)
#endif

/* struct ns1__StimAdditive has binding name 'ns1__StimAdditive' for type 'ns1:StimAdditive' */
#ifndef SOAP_TYPE_ns1__StimAdditive
#define SOAP_TYPE_ns1__StimAdditive (1177)
#endif

/* struct ns1__StimJobMaterialCatalog has binding name 'ns1__StimJobMaterialCatalog' for type 'ns1:StimJobMaterialCatalog' */
#ifndef SOAP_TYPE_ns1__StimJobMaterialCatalog
#define SOAP_TYPE_ns1__StimJobMaterialCatalog (1176)
#endif

/* struct ns1__StimJobLogCatalog has binding name 'ns1__StimJobLogCatalog' for type 'ns1:StimJobLogCatalog' */
#ifndef SOAP_TYPE_ns1__StimJobLogCatalog
#define SOAP_TYPE_ns1__StimJobLogCatalog (1175)
#endif

/* struct ns1__StimJobDiversion has binding name 'ns1__StimJobDiversion' for type 'ns1:StimJobDiversion' */
#ifndef SOAP_TYPE_ns1__StimJobDiversion
#define SOAP_TYPE_ns1__StimJobDiversion (1173)
#endif

/* struct ns1__StimPumpFlowBackTest has binding name 'ns1__StimPumpFlowBackTest' for type 'ns1:StimPumpFlowBackTest' */
#ifndef SOAP_TYPE_ns1__StimPumpFlowBackTest
#define SOAP_TYPE_ns1__StimPumpFlowBackTest (1171)
#endif

/* struct ns1__StimStepDownTest has binding name 'ns1__StimStepDownTest' for type 'ns1:StimStepDownTest' */
#ifndef SOAP_TYPE_ns1__StimStepDownTest
#define SOAP_TYPE_ns1__StimStepDownTest (1169)
#endif

/* struct ns1__StimStepTest has binding name 'ns1__StimStepTest' for type 'ns1:StimStepTest' */
#ifndef SOAP_TYPE_ns1__StimStepTest
#define SOAP_TYPE_ns1__StimStepTest (1167)
#endif

/* struct ns2__VolumetricThermalExpansionMeasure has binding name 'ns2__VolumetricThermalExpansionMeasure' for type 'ns2:VolumetricThermalExpansionMeasure' */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionMeasure
#define SOAP_TYPE_ns2__VolumetricThermalExpansionMeasure (1164)
#endif

/* struct ns2__ThermalConductivityMeasure has binding name 'ns2__ThermalConductivityMeasure' for type 'ns2:ThermalConductivityMeasure' */
#ifndef SOAP_TYPE_ns2__ThermalConductivityMeasure
#define SOAP_TYPE_ns2__ThermalConductivityMeasure (1162)
#endif

/* struct ns2__SpecificHeatCapacityMeasure has binding name 'ns2__SpecificHeatCapacityMeasure' for type 'ns2:SpecificHeatCapacityMeasure' */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityMeasure
#define SOAP_TYPE_ns2__SpecificHeatCapacityMeasure (1160)
#endif

/* struct ns2__IsothermalCompressibilityMeasure has binding name 'ns2__IsothermalCompressibilityMeasure' for type 'ns2:IsothermalCompressibilityMeasure' */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityMeasure
#define SOAP_TYPE_ns2__IsothermalCompressibilityMeasure (1158)
#endif

/* struct ns1__StimJobDiagnosticSession has binding name 'ns1__StimJobDiagnosticSession' for type 'ns1:StimJobDiagnosticSession' */
#ifndef SOAP_TYPE_ns1__StimJobDiagnosticSession
#define SOAP_TYPE_ns1__StimJobDiagnosticSession (1156)
#endif

/* struct ns2__PermeabilityLengthMeasure has binding name 'ns2__PermeabilityLengthMeasure' for type 'ns2:PermeabilityLengthMeasure' */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthMeasure
#define SOAP_TYPE_ns2__PermeabilityLengthMeasure (1154)
#endif

/* struct ns1__StimISO13503_USCORE5Point has binding name 'ns1__StimISO13503_USCORE5Point' for type 'ns1:StimISO13503_5Point' */
#ifndef SOAP_TYPE_ns1__StimISO13503_USCORE5Point
#define SOAP_TYPE_ns1__StimISO13503_USCORE5Point (1153)
#endif

/* struct ns1__StimISO13503_USCORE2Properties has binding name 'ns1__StimISO13503_USCORE2Properties' for type 'ns1:StimISO13503_2Properties' */
#ifndef SOAP_TYPE_ns1__StimISO13503_USCORE2Properties
#define SOAP_TYPE_ns1__StimISO13503_USCORE2Properties (1150)
#endif

/* struct ns1__StimMaterialQuantity has binding name 'ns1__StimMaterialQuantity' for type 'ns1:StimMaterialQuantity' */
#ifndef SOAP_TYPE_ns1__StimMaterialQuantity
#define SOAP_TYPE_ns1__StimMaterialQuantity (1148)
#endif

/* struct ns2__UnitlessMeasure has binding name 'ns2__UnitlessMeasure' for type 'ns2:UnitlessMeasure' */
#ifndef SOAP_TYPE_ns2__UnitlessMeasure
#define SOAP_TYPE_ns2__UnitlessMeasure (1146)
#endif

/* struct ns1__StimFluid has binding name 'ns1__StimFluid' for type 'ns1:StimFluid' */
#ifndef SOAP_TYPE_ns1__StimFluid
#define SOAP_TYPE_ns1__StimFluid (1143)
#endif

/* struct ns1__StimTubular has binding name 'ns1__StimTubular' for type 'ns1:StimTubular' */
#ifndef SOAP_TYPE_ns1__StimTubular
#define SOAP_TYPE_ns1__StimTubular (1141)
#endif

/* struct ns1__StimFlowPath has binding name 'ns1__StimFlowPath' for type 'ns1:StimFlowPath' */
#ifndef SOAP_TYPE_ns1__StimFlowPath
#define SOAP_TYPE_ns1__StimFlowPath (1139)
#endif

/* struct ns2__PermeabilityRockMeasure has binding name 'ns2__PermeabilityRockMeasure' for type 'ns2:PermeabilityRockMeasure' */
#ifndef SOAP_TYPE_ns2__PermeabilityRockMeasure
#define SOAP_TYPE_ns2__PermeabilityRockMeasure (1137)
#endif

/* struct ns2__ForcePerVolumeMeasure has binding name 'ns2__ForcePerVolumeMeasure' for type 'ns2:ForcePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeMeasure
#define SOAP_TYPE_ns2__ForcePerVolumeMeasure (1135)
#endif

/* struct ns1__StimFetTest has binding name 'ns1__StimFetTest' for type 'ns1:StimFetTest' */
#ifndef SOAP_TYPE_ns1__StimFetTest
#define SOAP_TYPE_ns1__StimFetTest (1133)
#endif

/* struct ns1__StimEvent has binding name 'ns1__StimEvent' for type 'ns1:StimEvent' */
#ifndef SOAP_TYPE_ns1__StimEvent
#define SOAP_TYPE_ns1__StimEvent (1132)
#endif

/* struct ns1__ISO13503_USCORE2SieveAnalysisData has binding name 'ns1__ISO13503_USCORE2SieveAnalysisData' for type 'ns1:ISO13503_2SieveAnalysisData' */
#ifndef SOAP_TYPE_ns1__ISO13503_USCORE2SieveAnalysisData
#define SOAP_TYPE_ns1__ISO13503_USCORE2SieveAnalysisData (1131)
#endif

/* struct ns1__ISO13503_USCORE2CrushTestData has binding name 'ns1__ISO13503_USCORE2CrushTestData' for type 'ns1:ISO13503_2CrushTestData' */
#ifndef SOAP_TYPE_ns1__ISO13503_USCORE2CrushTestData
#define SOAP_TYPE_ns1__ISO13503_USCORE2CrushTestData (1130)
#endif

/* struct ns1__SurveySection has binding name 'ns1__SurveySection' for type 'ns1:SurveySection' */
#ifndef SOAP_TYPE_ns1__SurveySection
#define SOAP_TYPE_ns1__SurveySection (1128)
#endif

/* struct ns1__AzimuthRange has binding name 'ns1__AzimuthRange' for type 'ns1:AzimuthRange' */
#ifndef SOAP_TYPE_ns1__AzimuthRange
#define SOAP_TYPE_ns1__AzimuthRange (1126)
#endif

/* struct ns1__OperatingConstraints has binding name 'ns1__OperatingConstraints' for type 'ns1:OperatingConstraints' */
#ifndef SOAP_TYPE_ns1__OperatingConstraints
#define SOAP_TYPE_ns1__OperatingConstraints (1124)
#endif

/* struct ns1__StationaryGyro has binding name 'ns1__StationaryGyro' for type 'ns1:StationaryGyro' */
#ifndef SOAP_TYPE_ns1__StationaryGyro
#define SOAP_TYPE_ns1__StationaryGyro (1122)
#endif

/* struct ns1__XyAccelerometer has binding name 'ns1__XyAccelerometer' for type 'ns1:XyAccelerometer' */
#ifndef SOAP_TYPE_ns1__XyAccelerometer
#define SOAP_TYPE_ns1__XyAccelerometer (1120)
#endif

/* struct ns1__GyroToolConfiguration has binding name 'ns1__GyroToolConfiguration' for type 'ns1:GyroToolConfiguration' */
#ifndef SOAP_TYPE_ns1__GyroToolConfiguration
#define SOAP_TYPE_ns1__GyroToolConfiguration (1117)
#endif

/* struct ns1__ErrorTermValue has binding name 'ns1__ErrorTermValue' for type 'ns1:ErrorTermValue' */
#ifndef SOAP_TYPE_ns1__ErrorTermValue
#define SOAP_TYPE_ns1__ErrorTermValue (1116)
#endif

/* struct ns2__LengthPerTimeMeasureExt has binding name 'ns2__LengthPerTimeMeasureExt' for type 'ns2:LengthPerTimeMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerTimeMeasureExt
#define SOAP_TYPE_ns2__LengthPerTimeMeasureExt (1114)
#endif

/* struct ns1__ContinuousGyro has binding name 'ns1__ContinuousGyro' for type 'ns1:ContinuousGyro' */
#ifndef SOAP_TYPE_ns1__ContinuousGyro
#define SOAP_TYPE_ns1__ContinuousGyro (1112)
#endif

/* struct ns1__ContinuousAzimuthFormula has binding name 'ns1__ContinuousAzimuthFormula' for type 'ns1:ContinuousAzimuthFormula' */
#ifndef SOAP_TYPE_ns1__ContinuousAzimuthFormula
#define SOAP_TYPE_ns1__ContinuousAzimuthFormula (1110)
#endif

/* struct ns1__Parameter has binding name 'ns1__Parameter' for type 'ns1:Parameter' */
#ifndef SOAP_TYPE_ns1__Parameter
#define SOAP_TYPE_ns1__Parameter (1108)
#endif

/* struct ns1__AzimuthFormula has binding name 'ns1__AzimuthFormula' for type 'ns1:AzimuthFormula' */
#ifndef SOAP_TYPE_ns1__AzimuthFormula
#define SOAP_TYPE_ns1__AzimuthFormula (1107)
#endif

/* struct ns1__Authorization has binding name 'ns1__Authorization' for type 'ns1:Authorization' */
#ifndef SOAP_TYPE_ns1__Authorization
#define SOAP_TYPE_ns1__Authorization (1105)
#endif

/* struct ns1__PlaneAngleOperatingRange has binding name 'ns1__PlaneAngleOperatingRange' for type 'ns1:PlaneAngleOperatingRange' */
#ifndef SOAP_TYPE_ns1__PlaneAngleOperatingRange
#define SOAP_TYPE_ns1__PlaneAngleOperatingRange (1103)
#endif

/* struct ns1__CustomOperatingRange has binding name 'ns1__CustomOperatingRange' for type 'ns1:CustomOperatingRange' */
#ifndef SOAP_TYPE_ns1__CustomOperatingRange
#define SOAP_TYPE_ns1__CustomOperatingRange (1101)
#endif

/* struct ns1__AbstractOperatingRange has binding name 'ns1__AbstractOperatingRange' for type 'ns1:AbstractOperatingRange' */
#ifndef SOAP_TYPE_ns1__AbstractOperatingRange
#define SOAP_TYPE_ns1__AbstractOperatingRange (1100)
#endif

/* struct ns2__Abstract3dPosition has binding name 'ns2__Abstract3dPosition' for type 'ns2:Abstract3dPosition' */
#ifndef SOAP_TYPE_ns2__Abstract3dPosition
#define SOAP_TYPE_ns2__Abstract3dPosition (1098)
#endif

/* struct ns1__TargetSection has binding name 'ns1__TargetSection' for type 'ns1:TargetSection' */
#ifndef SOAP_TYPE_ns1__TargetSection
#define SOAP_TYPE_ns1__TargetSection (1097)
#endif

/* struct ns1__TrajectoryStationOSDUIntegration has binding name 'ns1__TrajectoryStationOSDUIntegration' for type 'ns1:TrajectoryStationOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__TrajectoryStationOSDUIntegration
#define SOAP_TYPE_ns1__TrajectoryStationOSDUIntegration (1096)
#endif

/* struct ns1__TrajectoryStation has binding name 'ns1__TrajectoryStation' for type 'ns1:TrajectoryStation' */
#ifndef SOAP_TYPE_ns1__TrajectoryStation
#define SOAP_TYPE_ns1__TrajectoryStation (1094)
#endif

/* struct ns1__TrajectoryReport has binding name 'ns1__TrajectoryReport' for type 'ns1:TrajectoryReport' */
#ifndef SOAP_TYPE_ns1__TrajectoryReport
#define SOAP_TYPE_ns1__TrajectoryReport (1093)
#endif

/* struct ns1__StnTrajValid has binding name 'ns1__StnTrajValid' for type 'ns1:StnTrajValid' */
#ifndef SOAP_TYPE_ns1__StnTrajValid
#define SOAP_TYPE_ns1__StnTrajValid (1091)
#endif

/* struct ns1__StnTrajRawData has binding name 'ns1__StnTrajRawData' for type 'ns1:StnTrajRawData' */
#ifndef SOAP_TYPE_ns1__StnTrajRawData
#define SOAP_TYPE_ns1__StnTrajRawData (1090)
#endif

/* struct ns1__StnTrajMatrixCov has binding name 'ns1__StnTrajMatrixCov' for type 'ns1:StnTrajMatrixCov' */
#ifndef SOAP_TYPE_ns1__StnTrajMatrixCov
#define SOAP_TYPE_ns1__StnTrajMatrixCov (1089)
#endif

/* struct ns2__MagneticFluxDensityMeasure has binding name 'ns2__MagneticFluxDensityMeasure' for type 'ns2:MagneticFluxDensityMeasure' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityMeasure
#define SOAP_TYPE_ns2__MagneticFluxDensityMeasure (1087)
#endif

/* struct ns2__LinearAccelerationMeasure has binding name 'ns2__LinearAccelerationMeasure' for type 'ns2:LinearAccelerationMeasure' */
#ifndef SOAP_TYPE_ns2__LinearAccelerationMeasure
#define SOAP_TYPE_ns2__LinearAccelerationMeasure (1085)
#endif

/* struct ns1__StnTrajCorUsed has binding name 'ns1__StnTrajCorUsed' for type 'ns1:StnTrajCorUsed' */
#ifndef SOAP_TYPE_ns1__StnTrajCorUsed
#define SOAP_TYPE_ns1__StnTrajCorUsed (1084)
#endif

/* struct ns1__SourceTrajectoryStation has binding name 'ns1__SourceTrajectoryStation' for type 'ns1:SourceTrajectoryStation' */
#ifndef SOAP_TYPE_ns1__SourceTrajectoryStation
#define SOAP_TYPE_ns1__SourceTrajectoryStation (1083)
#endif

/* struct ns1__InterpretedIntervalLithology has binding name 'ns1__InterpretedIntervalLithology' for type 'ns1:InterpretedIntervalLithology' */
#ifndef SOAP_TYPE_ns1__InterpretedIntervalLithology
#define SOAP_TYPE_ns1__InterpretedIntervalLithology (1082)
#endif

/* struct ns2__AreaPerAreaMeasure has binding name 'ns2__AreaPerAreaMeasure' for type 'ns2:AreaPerAreaMeasure' */
#ifndef SOAP_TYPE_ns2__AreaPerAreaMeasure
#define SOAP_TYPE_ns2__AreaPerAreaMeasure (1077)
#endif

/* struct ns1__LithologyQualifier has binding name 'ns1__LithologyQualifier' for type 'ns1:LithologyQualifier' */
#ifndef SOAP_TYPE_ns1__LithologyQualifier
#define SOAP_TYPE_ns1__LithologyQualifier (1074)
#endif

/* struct ns1__CuttingsIntervalShow has binding name 'ns1__CuttingsIntervalShow' for type 'ns1:CuttingsIntervalShow' */
#ifndef SOAP_TYPE_ns1__CuttingsIntervalShow
#define SOAP_TYPE_ns1__CuttingsIntervalShow (1072)
#endif

/* struct ns1__CuttingsIntervalLithology has binding name 'ns1__CuttingsIntervalLithology' for type 'ns1:CuttingsIntervalLithology' */
#ifndef SOAP_TYPE_ns1__CuttingsIntervalLithology
#define SOAP_TYPE_ns1__CuttingsIntervalLithology (1070)
#endif

/* struct ns2__ElectricCurrentMeasure has binding name 'ns2__ElectricCurrentMeasure' for type 'ns2:ElectricCurrentMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentMeasure
#define SOAP_TYPE_ns2__ElectricCurrentMeasure (1068)
#endif

/* struct ns1__MudLogStringParameter has binding name 'ns1__MudLogStringParameter' for type 'ns1:MudLogStringParameter' */
#ifndef SOAP_TYPE_ns1__MudLogStringParameter
#define SOAP_TYPE_ns1__MudLogStringParameter (1066)
#endif

/* struct ns1__MudLogPressureParameter has binding name 'ns1__MudLogPressureParameter' for type 'ns1:MudLogPressureParameter' */
#ifndef SOAP_TYPE_ns1__MudLogPressureParameter
#define SOAP_TYPE_ns1__MudLogPressureParameter (1064)
#endif

/* struct ns1__MudLogPressureGradientParameter has binding name 'ns1__MudLogPressureGradientParameter' for type 'ns1:MudLogPressureGradientParameter' */
#ifndef SOAP_TYPE_ns1__MudLogPressureGradientParameter
#define SOAP_TYPE_ns1__MudLogPressureGradientParameter (1062)
#endif

/* struct ns1__MudLogForceParameter has binding name 'ns1__MudLogForceParameter' for type 'ns1:MudLogForceParameter' */
#ifndef SOAP_TYPE_ns1__MudLogForceParameter
#define SOAP_TYPE_ns1__MudLogForceParameter (1060)
#endif

/* struct ns1__MudLogConcentrationParameter has binding name 'ns1__MudLogConcentrationParameter' for type 'ns1:MudLogConcentrationParameter' */
#ifndef SOAP_TYPE_ns1__MudLogConcentrationParameter
#define SOAP_TYPE_ns1__MudLogConcentrationParameter (1058)
#endif

/* struct ns2__Citation has binding name 'ns2__Citation' for type 'ns2:Citation' */
#ifndef SOAP_TYPE_ns2__Citation
#define SOAP_TYPE_ns2__Citation (1056)
#endif

/* struct ns1__MudLogParameter has binding name 'ns1__MudLogParameter' for type 'ns1:MudLogParameter' */
#ifndef SOAP_TYPE_ns1__MudLogParameter
#define SOAP_TYPE_ns1__MudLogParameter (1055)
#endif

/* struct ns1__MudGas has binding name 'ns1__MudGas' for type 'ns1:MudGas' */
#ifndef SOAP_TYPE_ns1__MudGas
#define SOAP_TYPE_ns1__MudGas (1052)
#endif

/* struct ns1__GasPeak has binding name 'ns1__GasPeak' for type 'ns1:GasPeak' */
#ifndef SOAP_TYPE_ns1__GasPeak
#define SOAP_TYPE_ns1__GasPeak (1051)
#endif

/* struct ns1__GasInMud has binding name 'ns1__GasInMud' for type 'ns1:GasInMud' */
#ifndef SOAP_TYPE_ns1__GasInMud
#define SOAP_TYPE_ns1__GasInMud (1050)
#endif

/* struct ns1__DxcStatistics has binding name 'ns1__DxcStatistics' for type 'ns1:DxcStatistics' */
#ifndef SOAP_TYPE_ns1__DxcStatistics
#define SOAP_TYPE_ns1__DxcStatistics (1048)
#endif

/* struct ns1__EcdStatistics has binding name 'ns1__EcdStatistics' for type 'ns1:EcdStatistics' */
#ifndef SOAP_TYPE_ns1__EcdStatistics
#define SOAP_TYPE_ns1__EcdStatistics (1046)
#endif

/* struct ns1__MudDensityStatistics has binding name 'ns1__MudDensityStatistics' for type 'ns1:MudDensityStatistics' */
#ifndef SOAP_TYPE_ns1__MudDensityStatistics
#define SOAP_TYPE_ns1__MudDensityStatistics (1044)
#endif

/* struct ns1__RpmStatistics has binding name 'ns1__RpmStatistics' for type 'ns1:RpmStatistics' */
#ifndef SOAP_TYPE_ns1__RpmStatistics
#define SOAP_TYPE_ns1__RpmStatistics (1042)
#endif

/* struct ns1__TorqueCurrentStatistics has binding name 'ns1__TorqueCurrentStatistics' for type 'ns1:TorqueCurrentStatistics' */
#ifndef SOAP_TYPE_ns1__TorqueCurrentStatistics
#define SOAP_TYPE_ns1__TorqueCurrentStatistics (1040)
#endif

/* struct ns1__TorqueStatistics has binding name 'ns1__TorqueStatistics' for type 'ns1:TorqueStatistics' */
#ifndef SOAP_TYPE_ns1__TorqueStatistics
#define SOAP_TYPE_ns1__TorqueStatistics (1038)
#endif

/* struct ns1__WobStatistics has binding name 'ns1__WobStatistics' for type 'ns1:WobStatistics' */
#ifndef SOAP_TYPE_ns1__WobStatistics
#define SOAP_TYPE_ns1__WobStatistics (1036)
#endif

/* struct ns1__RopStatistics has binding name 'ns1__RopStatistics' for type 'ns1:RopStatistics' */
#ifndef SOAP_TYPE_ns1__RopStatistics
#define SOAP_TYPE_ns1__RopStatistics (1034)
#endif

/* struct ns1__DrillingParameters has binding name 'ns1__DrillingParameters' for type 'ns1:DrillingParameters' */
#ifndef SOAP_TYPE_ns1__DrillingParameters
#define SOAP_TYPE_ns1__DrillingParameters (1033)
#endif

/* struct ns1__Chromatograph has binding name 'ns1__Chromatograph' for type 'ns1:Chromatograph' */
#ifndef SOAP_TYPE_ns1__Chromatograph
#define SOAP_TYPE_ns1__Chromatograph (1032)
#endif

/* struct ns1__SurfaceEquipment has binding name 'ns1__SurfaceEquipment' for type 'ns1:SurfaceEquipment' */
#ifndef SOAP_TYPE_ns1__SurfaceEquipment
#define SOAP_TYPE_ns1__SurfaceEquipment (1031)
#endif

/* struct ns1__Shaker has binding name 'ns1__Shaker' for type 'ns1:Shaker' */
#ifndef SOAP_TYPE_ns1__Shaker
#define SOAP_TYPE_ns1__Shaker (1030)
#endif

/* struct ns1__Pit has binding name 'ns1__Pit' for type 'ns1:Pit' */
#ifndef SOAP_TYPE_ns1__Pit
#define SOAP_TYPE_ns1__Pit (1028)
#endif

/* struct ns2__PowerPerPowerMeasure has binding name 'ns2__PowerPerPowerMeasure' for type 'ns2:PowerPerPowerMeasure' */
#ifndef SOAP_TYPE_ns2__PowerPerPowerMeasure
#define SOAP_TYPE_ns2__PowerPerPowerMeasure (1026)
#endif

/* struct ns1__MudPump has binding name 'ns1__MudPump' for type 'ns1:MudPump' */
#ifndef SOAP_TYPE_ns1__MudPump
#define SOAP_TYPE_ns1__MudPump (1023)
#endif

/* struct ns1__Hydrocyclone has binding name 'ns1__Hydrocyclone' for type 'ns1:Hydrocyclone' */
#ifndef SOAP_TYPE_ns1__Hydrocyclone
#define SOAP_TYPE_ns1__Hydrocyclone (1022)
#endif

/* struct ns1__Degasser has binding name 'ns1__Degasser' for type 'ns1:Degasser' */
#ifndef SOAP_TYPE_ns1__Degasser
#define SOAP_TYPE_ns1__Degasser (1021)
#endif

/* struct ns1__Centrifuge has binding name 'ns1__Centrifuge' for type 'ns1:Centrifuge' */
#ifndef SOAP_TYPE_ns1__Centrifuge
#define SOAP_TYPE_ns1__Centrifuge (1020)
#endif

/* struct ns1__BopComponent has binding name 'ns1__BopComponent' for type 'ns1:BopComponent' */
#ifndef SOAP_TYPE_ns1__BopComponent
#define SOAP_TYPE_ns1__BopComponent (1017)
#endif

/* struct ns1__Bop has binding name 'ns1__Bop' for type 'ns1:Bop' */
#ifndef SOAP_TYPE_ns1__Bop
#define SOAP_TYPE_ns1__Bop (1016)
#endif

/* struct ns1__DrillReportWellTestInfo has binding name 'ns1__DrillReportWellTestInfo' for type 'ns1:DrillReportWellTestInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportWellTestInfo
#define SOAP_TYPE_ns1__DrillReportWellTestInfo (1014)
#endif

/* struct ns1__DrillReportWellboreInfo has binding name 'ns1__DrillReportWellboreInfo' for type 'ns1:DrillReportWellboreInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportWellboreInfo
#define SOAP_TYPE_ns1__DrillReportWellboreInfo (1013)
#endif

/* struct ns2__LengthPerLengthMeasureExt has binding name 'ns2__LengthPerLengthMeasureExt' for type 'ns2:LengthPerLengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthPerLengthMeasureExt
#define SOAP_TYPE_ns2__LengthPerLengthMeasureExt (1009)
#endif

/* struct ns1__TrajectoryOSDUIntegration has binding name 'ns1__TrajectoryOSDUIntegration' for type 'ns1:TrajectoryOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__TrajectoryOSDUIntegration
#define SOAP_TYPE_ns1__TrajectoryOSDUIntegration (1007)
#endif

/* struct ns2__PlaneAngleMeasureExt has binding name 'ns2__PlaneAngleMeasureExt' for type 'ns2:PlaneAngleMeasureExt' */
#ifndef SOAP_TYPE_ns2__PlaneAngleMeasureExt
#define SOAP_TYPE_ns2__PlaneAngleMeasureExt (1005)
#endif

/* struct ns1__DrillReportSurveyStationReport has binding name 'ns1__DrillReportSurveyStationReport' for type 'ns1:DrillReportSurveyStationReport' */
#ifndef SOAP_TYPE_ns1__DrillReportSurveyStationReport
#define SOAP_TYPE_ns1__DrillReportSurveyStationReport (1004)
#endif

/* struct ns2__Abstract2dPosition has binding name 'ns2__Abstract2dPosition' for type 'ns2:Abstract2dPosition' */
#ifndef SOAP_TYPE_ns2__Abstract2dPosition
#define SOAP_TYPE_ns2__Abstract2dPosition (1002)
#endif

/* struct ns1__DrillReportSurveyStation has binding name 'ns1__DrillReportSurveyStation' for type 'ns1:DrillReportSurveyStation' */
#ifndef SOAP_TYPE_ns1__DrillReportSurveyStation
#define SOAP_TYPE_ns1__DrillReportSurveyStation (1001)
#endif

/* struct ns1__DrillReportStratInfo has binding name 'ns1__DrillReportStratInfo' for type 'ns1:DrillReportStratInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportStratInfo
#define SOAP_TYPE_ns1__DrillReportStratInfo (1000)
#endif

/* struct ns2__AbstractElevation has binding name 'ns2__AbstractElevation' for type 'ns2:AbstractElevation' */
#ifndef SOAP_TYPE_ns2__AbstractElevation
#define SOAP_TYPE_ns2__AbstractElevation (998)
#endif

/* struct ns1__DrillReportStatusInfo has binding name 'ns1__DrillReportStatusInfo' for type 'ns1:DrillReportStatusInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportStatusInfo
#define SOAP_TYPE_ns1__DrillReportStatusInfo (995)
#endif

/* struct ns1__DrillReportPorePressure has binding name 'ns1__DrillReportPorePressure' for type 'ns1:DrillReportPorePressure' */
#ifndef SOAP_TYPE_ns1__DrillReportPorePressure
#define SOAP_TYPE_ns1__DrillReportPorePressure (994)
#endif

/* struct ns1__DrillReportPerfInfo has binding name 'ns1__DrillReportPerfInfo' for type 'ns1:DrillReportPerfInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportPerfInfo
#define SOAP_TYPE_ns1__DrillReportPerfInfo (993)
#endif

/* struct ns1__DrillReportLogInfo has binding name 'ns1__DrillReportLogInfo' for type 'ns1:DrillReportLogInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportLogInfo
#define SOAP_TYPE_ns1__DrillReportLogInfo (991)
#endif

/* struct ns1__DrillReportLithShowInfo has binding name 'ns1__DrillReportLithShowInfo' for type 'ns1:DrillReportLithShowInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportLithShowInfo
#define SOAP_TYPE_ns1__DrillReportLithShowInfo (990)
#endif

/* struct ns1__DrillReportGasReadingInfo has binding name 'ns1__DrillReportGasReadingInfo' for type 'ns1:DrillReportGasReadingInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportGasReadingInfo
#define SOAP_TYPE_ns1__DrillReportGasReadingInfo (988)
#endif

/* struct ns1__DrillReportFormTestInfo has binding name 'ns1__DrillReportFormTestInfo' for type 'ns1:DrillReportFormTestInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportFormTestInfo
#define SOAP_TYPE_ns1__DrillReportFormTestInfo (987)
#endif

/* struct ns1__DrillReportEquipFailureInfo has binding name 'ns1__DrillReportEquipFailureInfo' for type 'ns1:DrillReportEquipFailureInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportEquipFailureInfo
#define SOAP_TYPE_ns1__DrillReportEquipFailureInfo (986)
#endif

/* struct ns1__DrillReportCoreInfo has binding name 'ns1__DrillReportCoreInfo' for type 'ns1:DrillReportCoreInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportCoreInfo
#define SOAP_TYPE_ns1__DrillReportCoreInfo (984)
#endif

/* struct ns1__DrillReportControlIncidentInfo has binding name 'ns1__DrillReportControlIncidentInfo' for type 'ns1:DrillReportControlIncidentInfo' */
#ifndef SOAP_TYPE_ns1__DrillReportControlIncidentInfo
#define SOAP_TYPE_ns1__DrillReportControlIncidentInfo (981)
#endif

/* struct ns2__NameStruct has binding name 'ns2__NameStruct' for type 'ns2:NameStruct' */
#ifndef SOAP_TYPE_ns2__NameStruct
#define SOAP_TYPE_ns2__NameStruct (975)
#endif

/* struct ns1__DrillActivity has binding name 'ns1__DrillActivity' for type 'ns1:DrillActivity' */
#ifndef SOAP_TYPE_ns1__DrillActivity
#define SOAP_TYPE_ns1__DrillActivity (974)
#endif

/* struct ns1__BottomHoleStaticTemperature has binding name 'ns1__BottomHoleStaticTemperature' for type 'ns1:BottomHoleStaticTemperature' */
#ifndef SOAP_TYPE_ns1__BottomHoleStaticTemperature
#define SOAP_TYPE_ns1__BottomHoleStaticTemperature (972)
#endif

/* struct ns1__BottomHoleCirculatingTemperature has binding name 'ns1__BottomHoleCirculatingTemperature' for type 'ns1:BottomHoleCirculatingTemperature' */
#ifndef SOAP_TYPE_ns1__BottomHoleCirculatingTemperature
#define SOAP_TYPE_ns1__BottomHoleCirculatingTemperature (970)
#endif

/* struct ns1__AbstractBottomHoleTemperature has binding name 'ns1__AbstractBottomHoleTemperature' for type 'ns1:AbstractBottomHoleTemperature' */
#ifndef SOAP_TYPE_ns1__AbstractBottomHoleTemperature
#define SOAP_TYPE_ns1__AbstractBottomHoleTemperature (969)
#endif

/* struct ns1__Perforating has binding name 'ns1__Perforating' for type 'ns1:Perforating' */
#ifndef SOAP_TYPE_ns1__Perforating
#define SOAP_TYPE_ns1__Perforating (967)
#endif

/* struct ns1__Participant has binding name 'ns1__Participant' for type 'ns1:Participant' */
#ifndef SOAP_TYPE_ns1__Participant
#define SOAP_TYPE_ns1__Participant (965)
#endif

/* struct ns1__MemberObject has binding name 'ns1__MemberObject' for type 'ns1:MemberObject' */
#ifndef SOAP_TYPE_ns1__MemberObject
#define SOAP_TYPE_ns1__MemberObject (963)
#endif

/* struct ns1__DownholeStringReference has binding name 'ns1__DownholeStringReference' for type 'ns1:DownholeStringReference' */
#ifndef SOAP_TYPE_ns1__DownholeStringReference
#define SOAP_TYPE_ns1__DownholeStringReference (961)
#endif

/* struct ns1__DownholeComponentReference has binding name 'ns1__DownholeComponentReference' for type 'ns1:DownholeComponentReference' */
#ifndef SOAP_TYPE_ns1__DownholeComponentReference
#define SOAP_TYPE_ns1__DownholeComponentReference (959)
#endif

/* struct ns2__DataObjectComponentReference has binding name 'ns2__DataObjectComponentReference' for type 'ns2:DataObjectComponentReference' */
#ifndef SOAP_TYPE_ns2__DataObjectComponentReference
#define SOAP_TYPE_ns2__DataObjectComponentReference (957)
#endif

/* struct ns1__BoreholeStringReference has binding name 'ns1__BoreholeStringReference' for type 'ns1:BoreholeStringReference' */
#ifndef SOAP_TYPE_ns1__BoreholeStringReference
#define SOAP_TYPE_ns1__BoreholeStringReference (956)
#endif

/* struct ns1__WaitingOnExtension has binding name 'ns1__WaitingOnExtension' for type 'ns1:WaitingOnExtension' */
#ifndef SOAP_TYPE_ns1__WaitingOnExtension
#define SOAP_TYPE_ns1__WaitingOnExtension (954)
#endif

/* struct ns1__PressureTestExtension has binding name 'ns1__PressureTestExtension' for type 'ns1:PressureTestExtension' */
#ifndef SOAP_TYPE_ns1__PressureTestExtension
#define SOAP_TYPE_ns1__PressureTestExtension (952)
#endif

/* struct ns1__PerforatingExtension has binding name 'ns1__PerforatingExtension' for type 'ns1:PerforatingExtension' */
#ifndef SOAP_TYPE_ns1__PerforatingExtension
#define SOAP_TYPE_ns1__PerforatingExtension (950)
#endif

/* struct ns1__LostCirculationExtension has binding name 'ns1__LostCirculationExtension' for type 'ns1:LostCirculationExtension' */
#ifndef SOAP_TYPE_ns1__LostCirculationExtension
#define SOAP_TYPE_ns1__LostCirculationExtension (948)
#endif

/* struct ns1__JobExtension has binding name 'ns1__JobExtension' for type 'ns1:JobExtension' */
#ifndef SOAP_TYPE_ns1__JobExtension
#define SOAP_TYPE_ns1__JobExtension (946)
#endif

/* struct ns1__FluidReportExtension has binding name 'ns1__FluidReportExtension' for type 'ns1:FluidReportExtension' */
#ifndef SOAP_TYPE_ns1__FluidReportExtension
#define SOAP_TYPE_ns1__FluidReportExtension (944)
#endif

/* struct ns1__DownholeExtension has binding name 'ns1__DownholeExtension' for type 'ns1:DownholeExtension' */
#ifndef SOAP_TYPE_ns1__DownholeExtension
#define SOAP_TYPE_ns1__DownholeExtension (942)
#endif

/* struct ns1__DirectionalSurveyExtension has binding name 'ns1__DirectionalSurveyExtension' for type 'ns1:DirectionalSurveyExtension' */
#ifndef SOAP_TYPE_ns1__DirectionalSurveyExtension
#define SOAP_TYPE_ns1__DirectionalSurveyExtension (940)
#endif

/* struct ns1__CleanFillExtension has binding name 'ns1__CleanFillExtension' for type 'ns1:CleanFillExtension' */
#ifndef SOAP_TYPE_ns1__CleanFillExtension
#define SOAP_TYPE_ns1__CleanFillExtension (938)
#endif

/* struct ns1__CementExtension has binding name 'ns1__CementExtension' for type 'ns1:CementExtension' */
#ifndef SOAP_TYPE_ns1__CementExtension
#define SOAP_TYPE_ns1__CementExtension (936)
#endif

/* struct ns1__BHPExtension has binding name 'ns1__BHPExtension' for type 'ns1:BHPExtension' */
#ifndef SOAP_TYPE_ns1__BHPExtension
#define SOAP_TYPE_ns1__BHPExtension (934)
#endif

/* struct ns1__AcidizeFracExtension has binding name 'ns1__AcidizeFracExtension' for type 'ns1:AcidizeFracExtension' */
#ifndef SOAP_TYPE_ns1__AcidizeFracExtension
#define SOAP_TYPE_ns1__AcidizeFracExtension (932)
#endif

/* struct ns1__AbstractEventExtension has binding name 'ns1__AbstractEventExtension' for type 'ns1:AbstractEventExtension' */
#ifndef SOAP_TYPE_ns1__AbstractEventExtension
#define SOAP_TYPE_ns1__AbstractEventExtension (931)
#endif

/* struct ns1__ReferenceContainer has binding name 'ns1__ReferenceContainer' for type 'ns1:ReferenceContainer' */
#ifndef SOAP_TYPE_ns1__ReferenceContainer
#define SOAP_TYPE_ns1__ReferenceContainer (926)
#endif

/* struct ns1__PerforationSets has binding name 'ns1__PerforationSets' for type 'ns1:PerforationSets' */
#ifndef SOAP_TYPE_ns1__PerforationSets
#define SOAP_TYPE_ns1__PerforationSets (924)
#endif

/* struct ns1__PerforationSet has binding name 'ns1__PerforationSet' for type 'ns1:PerforationSet' */
#ifndef SOAP_TYPE_ns1__PerforationSet
#define SOAP_TYPE_ns1__PerforationSet (922)
#endif

/* struct ns2__ReciprocalLengthMeasure has binding name 'ns2__ReciprocalLengthMeasure' for type 'ns2:ReciprocalLengthMeasure' */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthMeasure
#define SOAP_TYPE_ns2__ReciprocalLengthMeasure (920)
#endif

/* struct ns1__ObjectSequence has binding name 'ns1__ObjectSequence' for type 'ns1:ObjectSequence' */
#ifndef SOAP_TYPE_ns1__ObjectSequence
#define SOAP_TYPE_ns1__ObjectSequence (919)
#endif

/* struct ns1__EventRefInfo has binding name 'ns1__EventRefInfo' for type 'ns1:EventRefInfo' */
#ifndef SOAP_TYPE_ns1__EventRefInfo
#define SOAP_TYPE_ns1__EventRefInfo (916)
#endif

/* struct ns1__EquipmentSet has binding name 'ns1__EquipmentSet' for type 'ns1:EquipmentSet' */
#ifndef SOAP_TYPE_ns1__EquipmentSet
#define SOAP_TYPE_ns1__EquipmentSet (914)
#endif

/* struct ns1__PerfHole has binding name 'ns1__PerfHole' for type 'ns1:PerfHole' */
#ifndef SOAP_TYPE_ns1__PerfHole
#define SOAP_TYPE_ns1__PerfHole (912)
#endif

/* struct ns1__PerfSlot has binding name 'ns1__PerfSlot' for type 'ns1:PerfSlot' */
#ifndef SOAP_TYPE_ns1__PerfSlot
#define SOAP_TYPE_ns1__PerfSlot (910)
#endif

/* struct ns1__ExtPropNameValue has binding name 'ns1__ExtPropNameValue' for type 'ns1:ExtPropNameValue' */
#ifndef SOAP_TYPE_ns1__ExtPropNameValue
#define SOAP_TYPE_ns1__ExtPropNameValue (908)
#endif

/* struct ns1__Equipment has binding name 'ns1__Equipment' for type 'ns1:Equipment' */
#ifndef SOAP_TYPE_ns1__Equipment
#define SOAP_TYPE_ns1__Equipment (905)
#endif

/* struct ns1__DownholeStringSet has binding name 'ns1__DownholeStringSet' for type 'ns1:DownholeStringSet' */
#ifndef SOAP_TYPE_ns1__DownholeStringSet
#define SOAP_TYPE_ns1__DownholeStringSet (903)
#endif

/* struct ns1__StringEquipmentSet has binding name 'ns1__StringEquipmentSet' for type 'ns1:StringEquipmentSet' */
#ifndef SOAP_TYPE_ns1__StringEquipmentSet
#define SOAP_TYPE_ns1__StringEquipmentSet (901)
#endif

/* struct ns1__DownholeString has binding name 'ns1__DownholeString' for type 'ns1:DownholeString' */
#ifndef SOAP_TYPE_ns1__DownholeString
#define SOAP_TYPE_ns1__DownholeString (899)
#endif

/* struct ns1__BoreholeStringSet has binding name 'ns1__BoreholeStringSet' for type 'ns1:BoreholeStringSet' */
#ifndef SOAP_TYPE_ns1__BoreholeStringSet
#define SOAP_TYPE_ns1__BoreholeStringSet (897)
#endif

/* struct ns1__StringAccessory has binding name 'ns1__StringAccessory' for type 'ns1:StringAccessory' */
#ifndef SOAP_TYPE_ns1__StringAccessory
#define SOAP_TYPE_ns1__StringAccessory (895)
#endif

/* struct ns1__GeologyFeature has binding name 'ns1__GeologyFeature' for type 'ns1:GeologyFeature' */
#ifndef SOAP_TYPE_ns1__GeologyFeature
#define SOAP_TYPE_ns1__GeologyFeature (893)
#endif

/* struct ns1__BoreholeString has binding name 'ns1__BoreholeString' for type 'ns1:BoreholeString' */
#ifndef SOAP_TYPE_ns1__BoreholeString
#define SOAP_TYPE_ns1__BoreholeString (891)
#endif

/* struct ns1__EventInfo has binding name 'ns1__EventInfo' for type 'ns1:EventInfo' */
#ifndef SOAP_TYPE_ns1__EventInfo
#define SOAP_TYPE_ns1__EventInfo (889)
#endif

/* struct ns2__AbstractTvdInterval has binding name 'ns2__AbstractTvdInterval' for type 'ns2:AbstractTvdInterval' */
#ifndef SOAP_TYPE_ns2__AbstractTvdInterval
#define SOAP_TYPE_ns2__AbstractTvdInterval (887)
#endif

/* struct ns1__Borehole has binding name 'ns1__Borehole' for type 'ns1:Borehole' */
#ifndef SOAP_TYPE_ns1__Borehole
#define SOAP_TYPE_ns1__Borehole (885)
#endif

/* struct ns1__StringEquipment has binding name 'ns1__StringEquipment' for type 'ns1:StringEquipment' */
#ifndef SOAP_TYPE_ns1__StringEquipment
#define SOAP_TYPE_ns1__StringEquipment (883)
#endif

/* struct ns1__Assembly has binding name 'ns1__Assembly' for type 'ns1:Assembly' */
#ifndef SOAP_TYPE_ns1__Assembly
#define SOAP_TYPE_ns1__Assembly (882)
#endif

/* struct ns1__TubingConnectionType has binding name 'ns1__TubingConnectionType' for type 'ns1:TubingConnectionType' */
#ifndef SOAP_TYPE_ns1__TubingConnectionType
#define SOAP_TYPE_ns1__TubingConnectionType (880)
#endif

/* struct ns1__RodConnectionType has binding name 'ns1__RodConnectionType' for type 'ns1:RodConnectionType' */
#ifndef SOAP_TYPE_ns1__RodConnectionType
#define SOAP_TYPE_ns1__RodConnectionType (878)
#endif

/* struct ns1__OtherConnectionType has binding name 'ns1__OtherConnectionType' for type 'ns1:OtherConnectionType' */
#ifndef SOAP_TYPE_ns1__OtherConnectionType
#define SOAP_TYPE_ns1__OtherConnectionType (876)
#endif

/* struct ns1__CasingConnectionType has binding name 'ns1__CasingConnectionType' for type 'ns1:CasingConnectionType' */
#ifndef SOAP_TYPE_ns1__CasingConnectionType
#define SOAP_TYPE_ns1__CasingConnectionType (874)
#endif

/* struct ns1__AbstractConnectionType has binding name 'ns1__AbstractConnectionType' for type 'ns1:AbstractConnectionType' */
#ifndef SOAP_TYPE_ns1__AbstractConnectionType
#define SOAP_TYPE_ns1__AbstractConnectionType (873)
#endif

/* struct ns1__PointMetadata has binding name 'ns1__PointMetadata' for type 'ns1:PointMetadata' */
#ifndef SOAP_TYPE_ns1__PointMetadata
#define SOAP_TYPE_ns1__PointMetadata (871)
#endif

/* struct ns1__PassIndexedDepth has binding name 'ns1__PassIndexedDepth' for type 'ns1:PassIndexedDepth' */
#ifndef SOAP_TYPE_ns1__PassIndexedDepth
#define SOAP_TYPE_ns1__PassIndexedDepth (870)
#endif

/* struct ns1__PassDetail has binding name 'ns1__PassDetail' for type 'ns1:PassDetail' */
#ifndef SOAP_TYPE_ns1__PassDetail
#define SOAP_TYPE_ns1__PassDetail (869)
#endif

/* struct ns1__LogOSDUIntegration has binding name 'ns1__LogOSDUIntegration' for type 'ns1:LogOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__LogOSDUIntegration
#define SOAP_TYPE_ns1__LogOSDUIntegration (868)
#endif

/* struct ns1__LogChannelAxis has binding name 'ns1__LogChannelAxis' for type 'ns1:LogChannelAxis' */
#ifndef SOAP_TYPE_ns1__LogChannelAxis
#define SOAP_TYPE_ns1__LogChannelAxis (867)
#endif

/* struct ns1__ChannelSetOSDUIntegration has binding name 'ns1__ChannelSetOSDUIntegration' for type 'ns1:ChannelSetOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__ChannelSetOSDUIntegration
#define SOAP_TYPE_ns1__ChannelSetOSDUIntegration (866)
#endif

/* struct ns1__ChannelOSDUIntegration has binding name 'ns1__ChannelOSDUIntegration' for type 'ns1:ChannelOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__ChannelOSDUIntegration
#define SOAP_TYPE_ns1__ChannelOSDUIntegration (865)
#endif

/* struct ns1__ChannelIndex has binding name 'ns1__ChannelIndex' for type 'ns1:ChannelIndex' */
#ifndef SOAP_TYPE_ns1__ChannelIndex
#define SOAP_TYPE_ns1__ChannelIndex (864)
#endif

/* struct ns1__ChannelData has binding name 'ns1__ChannelData' for type 'ns1:ChannelData' */
#ifndef SOAP_TYPE_ns1__ChannelData
#define SOAP_TYPE_ns1__ChannelData (863)
#endif

/* struct ns1__DepthRegTrackCurve has binding name 'ns1__DepthRegTrackCurve' for type 'ns1:DepthRegTrackCurve' */
#ifndef SOAP_TYPE_ns1__DepthRegTrackCurve
#define SOAP_TYPE_ns1__DepthRegTrackCurve (861)
#endif

/* struct ns1__DepthRegTrack has binding name 'ns1__DepthRegTrack' for type 'ns1:DepthRegTrack' */
#ifndef SOAP_TYPE_ns1__DepthRegTrack
#define SOAP_TYPE_ns1__DepthRegTrack (859)
#endif

/* struct ns2__AbstractInterval has binding name 'ns2__AbstractInterval' for type 'ns2:AbstractInterval' */
#ifndef SOAP_TYPE_ns2__AbstractInterval
#define SOAP_TYPE_ns2__AbstractInterval (856)
#endif

/* struct ns1__DepthRegLogSection has binding name 'ns1__DepthRegLogSection' for type 'ns1:DepthRegLogSection' */
#ifndef SOAP_TYPE_ns1__DepthRegLogSection
#define SOAP_TYPE_ns1__DepthRegLogSection (854)
#endif

/* struct ns1__DepthRegRectangle has binding name 'ns1__DepthRegRectangle' for type 'ns1:DepthRegRectangle' */
#ifndef SOAP_TYPE_ns1__DepthRegRectangle
#define SOAP_TYPE_ns1__DepthRegRectangle (852)
#endif

/* struct ns1__DepthRegLogRect has binding name 'ns1__DepthRegLogRect' for type 'ns1:DepthRegLogRect' */
#ifndef SOAP_TYPE_ns1__DepthRegLogRect
#define SOAP_TYPE_ns1__DepthRegLogRect (850)
#endif

/* struct ns1__DepthRegPoint has binding name 'ns1__DepthRegPoint' for type 'ns1:DepthRegPoint' */
#ifndef SOAP_TYPE_ns1__DepthRegPoint
#define SOAP_TYPE_ns1__DepthRegPoint (848)
#endif

/* struct ns1__DepthRegParameter has binding name 'ns1__DepthRegParameter' for type 'ns1:DepthRegParameter' */
#ifndef SOAP_TYPE_ns1__DepthRegParameter
#define SOAP_TYPE_ns1__DepthRegParameter (846)
#endif

/* struct ns2__GenericMeasure has binding name 'ns2__GenericMeasure' for type 'ns2:GenericMeasure' */
#ifndef SOAP_TYPE_ns2__GenericMeasure
#define SOAP_TYPE_ns2__GenericMeasure (843)
#endif

/* struct ns1__DepthRegCalibrationPoint has binding name 'ns1__DepthRegCalibrationPoint' for type 'ns1:DepthRegCalibrationPoint' */
#ifndef SOAP_TYPE_ns1__DepthRegCalibrationPoint
#define SOAP_TYPE_ns1__DepthRegCalibrationPoint (842)
#endif

/* struct ns2__LengthMeasureExt has binding name 'ns2__LengthMeasureExt' for type 'ns2:LengthMeasureExt' */
#ifndef SOAP_TYPE_ns2__LengthMeasureExt
#define SOAP_TYPE_ns2__LengthMeasureExt (840)
#endif

/* struct ns1__WellboreGeometrySection has binding name 'ns1__WellboreGeometrySection' for type 'ns1:WellboreGeometrySection' */
#ifndef SOAP_TYPE_ns1__WellboreGeometrySection
#define SOAP_TYPE_ns1__WellboreGeometrySection (838)
#endif

/* struct ns1__WellboreGeometryReport has binding name 'ns1__WellboreGeometryReport' for type 'ns1:WellboreGeometryReport' */
#ifndef SOAP_TYPE_ns1__WellboreGeometryReport
#define SOAP_TYPE_ns1__WellboreGeometryReport (837)
#endif

/* struct ns2__DimensionlessMeasure has binding name 'ns2__DimensionlessMeasure' for type 'ns2:DimensionlessMeasure' */
#ifndef SOAP_TYPE_ns2__DimensionlessMeasure
#define SOAP_TYPE_ns2__DimensionlessMeasure (834)
#endif

/* struct ns2__VolumePerMassMeasure has binding name 'ns2__VolumePerMassMeasure' for type 'ns2:VolumePerMassMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerMassMeasure
#define SOAP_TYPE_ns2__VolumePerMassMeasure (832)
#endif

/* struct ns1__CementingFluid has binding name 'ns1__CementingFluid' for type 'ns1:CementingFluid' */
#ifndef SOAP_TYPE_ns1__CementingFluid
#define SOAP_TYPE_ns1__CementingFluid (830)
#endif

/* struct ns1__CementAdditive has binding name 'ns1__CementAdditive' for type 'ns1:CementAdditive' */
#ifndef SOAP_TYPE_ns1__CementAdditive
#define SOAP_TYPE_ns1__CementAdditive (829)
#endif

/* struct ns1__CementStageReport has binding name 'ns1__CementStageReport' for type 'ns1:CementStageReport' */
#ifndef SOAP_TYPE_ns1__CementStageReport
#define SOAP_TYPE_ns1__CementStageReport (827)
#endif

/* struct ns1__CementStageDesign has binding name 'ns1__CementStageDesign' for type 'ns1:CementStageDesign' */
#ifndef SOAP_TYPE_ns1__CementStageDesign
#define SOAP_TYPE_ns1__CementStageDesign (825)
#endif

/* struct ns1__CementDesignStage has binding name 'ns1__CementDesignStage' for type 'ns1:CementDesignStage' */
#ifndef SOAP_TYPE_ns1__CementDesignStage
#define SOAP_TYPE_ns1__CementDesignStage (823)
#endif

/* struct ns1__FluidLocation has binding name 'ns1__FluidLocation' for type 'ns1:FluidLocation' */
#ifndef SOAP_TYPE_ns1__FluidLocation
#define SOAP_TYPE_ns1__FluidLocation (821)
#endif

/* struct ns1__CementPumpScheduleStep has binding name 'ns1__CementPumpScheduleStep' for type 'ns1:CementPumpScheduleStep' */
#ifndef SOAP_TYPE_ns1__CementPumpScheduleStep
#define SOAP_TYPE_ns1__CementPumpScheduleStep (819)
#endif

/* struct ns1__AbstractCementStage has binding name 'ns1__AbstractCementStage' for type 'ns1:AbstractCementStage' */
#ifndef SOAP_TYPE_ns1__AbstractCementStage
#define SOAP_TYPE_ns1__AbstractCementStage (818)
#endif

/* struct ns1__CementJobReport has binding name 'ns1__CementJobReport' for type 'ns1:CementJobReport' */
#ifndef SOAP_TYPE_ns1__CementJobReport
#define SOAP_TYPE_ns1__CementJobReport (816)
#endif

/* struct ns1__CementJobDesign has binding name 'ns1__CementJobDesign' for type 'ns1:CementJobDesign' */
#ifndef SOAP_TYPE_ns1__CementJobDesign
#define SOAP_TYPE_ns1__CementJobDesign (814)
#endif

/* struct ns2__MdInterval has binding name 'ns2__MdInterval' for type 'ns2:MdInterval' */
#ifndef SOAP_TYPE_ns2__MdInterval
#define SOAP_TYPE_ns2__MdInterval (812)
#endif

/* struct ns1__AbstractCementJob has binding name 'ns1__AbstractCementJob' for type 'ns1:AbstractCementJob' */
#ifndef SOAP_TYPE_ns1__AbstractCementJob
#define SOAP_TYPE_ns1__AbstractCementJob (811)
#endif

/* struct ns1__TubularUmbilicalOSDUIntegration has binding name 'ns1__TubularUmbilicalOSDUIntegration' for type 'ns1:TubularUmbilicalOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__TubularUmbilicalOSDUIntegration
#define SOAP_TYPE_ns1__TubularUmbilicalOSDUIntegration (807)
#endif

/* struct ns1__TubularUmbilicalCut has binding name 'ns1__TubularUmbilicalCut' for type 'ns1:TubularUmbilicalCut' */
#ifndef SOAP_TYPE_ns1__TubularUmbilicalCut
#define SOAP_TYPE_ns1__TubularUmbilicalCut (805)
#endif

/* struct ns2__ComponentReference has binding name 'ns2__ComponentReference' for type 'ns2:ComponentReference' */
#ifndef SOAP_TYPE_ns2__ComponentReference
#define SOAP_TYPE_ns2__ComponentReference (803)
#endif

/* struct ns1__TubularUmbilical has binding name 'ns1__TubularUmbilical' for type 'ns1:TubularUmbilical' */
#ifndef SOAP_TYPE_ns1__TubularUmbilical
#define SOAP_TYPE_ns1__TubularUmbilical (802)
#endif

/* struct ns1__TubularOSDUIntegration has binding name 'ns1__TubularOSDUIntegration' for type 'ns1:TubularOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__TubularOSDUIntegration
#define SOAP_TYPE_ns1__TubularOSDUIntegration (800)
#endif

/* struct ns1__NameTag has binding name 'ns1__NameTag' for type 'ns1:NameTag' */
#ifndef SOAP_TYPE_ns1__NameTag
#define SOAP_TYPE_ns1__NameTag (788)
#endif

/* struct ns2__AnglePerLengthMeasure has binding name 'ns2__AnglePerLengthMeasure' for type 'ns2:AnglePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__AnglePerLengthMeasure
#define SOAP_TYPE_ns2__AnglePerLengthMeasure (786)
#endif

/* struct ns2__ForcePerLengthMeasure has binding name 'ns2__ForcePerLengthMeasure' for type 'ns2:ForcePerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__ForcePerLengthMeasure
#define SOAP_TYPE_ns2__ForcePerLengthMeasure (783)
#endif

/* struct ns2__LengthPerLengthMeasure has binding name 'ns2__LengthPerLengthMeasure' for type 'ns2:LengthPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerLengthMeasure
#define SOAP_TYPE_ns2__LengthPerLengthMeasure (780)
#endif

/* struct ns2__MassPerLengthMeasure has binding name 'ns2__MassPerLengthMeasure' for type 'ns2:MassPerLengthMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerLengthMeasure
#define SOAP_TYPE_ns2__MassPerLengthMeasure (778)
#endif

/* struct ns1__TubularComponentOSDUIntegration has binding name 'ns1__TubularComponentOSDUIntegration' for type 'ns1:TubularComponentOSDUIntegration' */
#ifndef SOAP_TYPE_ns1__TubularComponentOSDUIntegration
#define SOAP_TYPE_ns1__TubularComponentOSDUIntegration (776)
#endif

/* struct ns2__MassMeasureExt has binding name 'ns2__MassMeasureExt' for type 'ns2:MassMeasureExt' */
#ifndef SOAP_TYPE_ns2__MassMeasureExt
#define SOAP_TYPE_ns2__MassMeasureExt (774)
#endif

/* struct ns1__TubularComponent has binding name 'ns1__TubularComponent' for type 'ns1:TubularComponent' */
#ifndef SOAP_TYPE_ns1__TubularComponent
#define SOAP_TYPE_ns1__TubularComponent (773)
#endif

/* struct ns1__Stabilizer has binding name 'ns1__Stabilizer' for type 'ns1:Stabilizer' */
#ifndef SOAP_TYPE_ns1__Stabilizer
#define SOAP_TYPE_ns1__Stabilizer (770)
#endif

/* struct ns1__RotarySteerableTool has binding name 'ns1__RotarySteerableTool' for type 'ns1:RotarySteerableTool' */
#ifndef SOAP_TYPE_ns1__RotarySteerableTool
#define SOAP_TYPE_ns1__RotarySteerableTool (767)
#endif

/* struct ns1__OSDUTubularAssemblyStatus has binding name 'ns1__OSDUTubularAssemblyStatus' for type 'ns1:OSDUTubularAssemblyStatus' */
#ifndef SOAP_TYPE_ns1__OSDUTubularAssemblyStatus
#define SOAP_TYPE_ns1__OSDUTubularAssemblyStatus (766)
#endif

/* struct ns1__Nozzle has binding name 'ns1__Nozzle' for type 'ns1:Nozzle' */
#ifndef SOAP_TYPE_ns1__Nozzle
#define SOAP_TYPE_ns1__Nozzle (764)
#endif

/* struct ns1__MwdTool has binding name 'ns1__MwdTool' for type 'ns1:MwdTool' */
#ifndef SOAP_TYPE_ns1__MwdTool
#define SOAP_TYPE_ns1__MwdTool (763)
#endif

/* struct ns1__Sensor has binding name 'ns1__Sensor' for type 'ns1:Sensor' */
#ifndef SOAP_TYPE_ns1__Sensor
#define SOAP_TYPE_ns1__Sensor (761)
#endif

/* struct ns1__Motor has binding name 'ns1__Motor' for type 'ns1:Motor' */
#ifndef SOAP_TYPE_ns1__Motor
#define SOAP_TYPE_ns1__Motor (758)
#endif

/* struct ns1__Jar has binding name 'ns1__Jar' for type 'ns1:Jar' */
#ifndef SOAP_TYPE_ns1__Jar
#define SOAP_TYPE_ns1__Jar (755)
#endif

/* struct ns1__HoleOpener has binding name 'ns1__HoleOpener' for type 'ns1:HoleOpener' */
#ifndef SOAP_TYPE_ns1__HoleOpener
#define SOAP_TYPE_ns1__HoleOpener (752)
#endif

/* struct ns1__EquipmentConnection has binding name 'ns1__EquipmentConnection' for type 'ns1:EquipmentConnection' */
#ifndef SOAP_TYPE_ns1__EquipmentConnection
#define SOAP_TYPE_ns1__EquipmentConnection (750)
#endif

/* struct ns2__AreaMeasure has binding name 'ns2__AreaMeasure' for type 'ns2:AreaMeasure' */
#ifndef SOAP_TYPE_ns2__AreaMeasure
#define SOAP_TYPE_ns2__AreaMeasure (748)
#endif

/* struct ns1__Connection has binding name 'ns1__Connection' for type 'ns1:Connection' */
#ifndef SOAP_TYPE_ns1__Connection
#define SOAP_TYPE_ns1__Connection (746)
#endif

/* struct ns2__Cost has binding name 'ns2__Cost' for type 'ns2:Cost' */
#ifndef SOAP_TYPE_ns2__Cost
#define SOAP_TYPE_ns2__Cost (744)
#endif

/* struct ns1__BitRecord has binding name 'ns1__BitRecord' for type 'ns1:BitRecord' */
#ifndef SOAP_TYPE_ns1__BitRecord
#define SOAP_TYPE_ns1__BitRecord (738)
#endif

/* struct ns1__Bend has binding name 'ns1__Bend' for type 'ns1:Bend' */
#ifndef SOAP_TYPE_ns1__Bend
#define SOAP_TYPE_ns1__Bend (737)
#endif

/* struct ns1__BendOffset has binding name 'ns1__BendOffset' for type 'ns1:BendOffset' */
#ifndef SOAP_TYPE_ns1__BendOffset
#define SOAP_TYPE_ns1__BendOffset (735)
#endif

/* struct ns1__BendAngle has binding name 'ns1__BendAngle' for type 'ns1:BendAngle' */
#ifndef SOAP_TYPE_ns1__BendAngle
#define SOAP_TYPE_ns1__BendAngle (733)
#endif

/* struct ns1__AbstractRotarySteerableTool has binding name 'ns1__AbstractRotarySteerableTool' for type 'ns1:AbstractRotarySteerableTool' */
#ifndef SOAP_TYPE_ns1__AbstractRotarySteerableTool
#define SOAP_TYPE_ns1__AbstractRotarySteerableTool (732)
#endif

/* struct ns1__WellPurposePeriod has binding name 'ns1__WellPurposePeriod' for type 'ns1:WellPurposePeriod' */
#ifndef SOAP_TYPE_ns1__WellPurposePeriod
#define SOAP_TYPE_ns1__WellPurposePeriod (731)
#endif

/* struct ns1__LicensePeriod has binding name 'ns1__LicensePeriod' for type 'ns1:LicensePeriod' */
#ifndef SOAP_TYPE_ns1__LicensePeriod
#define SOAP_TYPE_ns1__LicensePeriod (730)
#endif

/* struct ns2__OSDUSpatialLocationIntegration has binding name 'ns2__OSDUSpatialLocationIntegration' for type 'ns2:OSDUSpatialLocationIntegration' */
#ifndef SOAP_TYPE_ns2__OSDUSpatialLocationIntegration
#define SOAP_TYPE_ns2__OSDUSpatialLocationIntegration (728)
#endif

/* struct ns2__AbstractPosition has binding name 'ns2__AbstractPosition' for type 'ns2:AbstractPosition' */
#ifndef SOAP_TYPE_ns2__AbstractPosition
#define SOAP_TYPE_ns2__AbstractPosition (726)
#endif

/* struct ns1__BottomHoleLocation has binding name 'ns1__BottomHoleLocation' for type 'ns1:BottomHoleLocation' */
#ifndef SOAP_TYPE_ns1__BottomHoleLocation
#define SOAP_TYPE_ns1__BottomHoleLocation (725)
#endif

/* struct ns1__RheometerViscosity has binding name 'ns1__RheometerViscosity' for type 'ns1:RheometerViscosity' */
#ifndef SOAP_TYPE_ns1__RheometerViscosity
#define SOAP_TYPE_ns1__RheometerViscosity (723)
#endif

/* struct ns1__Rheometer has binding name 'ns1__Rheometer' for type 'ns1:Rheometer' */
#ifndef SOAP_TYPE_ns1__Rheometer
#define SOAP_TYPE_ns1__Rheometer (721)
#endif

/* struct ns2__ThermodynamicTemperatureMeasureExt has binding name 'ns2__ThermodynamicTemperatureMeasureExt' for type 'ns2:ThermodynamicTemperatureMeasureExt' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureMeasureExt
#define SOAP_TYPE_ns2__ThermodynamicTemperatureMeasureExt (719)
#endif

/* struct ns2__VolumeMeasureExt has binding name 'ns2__VolumeMeasureExt' for type 'ns2:VolumeMeasureExt' */
#ifndef SOAP_TYPE_ns2__VolumeMeasureExt
#define SOAP_TYPE_ns2__VolumeMeasureExt (717)
#endif

/* struct ns2__MassMeasure has binding name 'ns2__MassMeasure' for type 'ns2:MassMeasure' */
#ifndef SOAP_TYPE_ns2__MassMeasure
#define SOAP_TYPE_ns2__MassMeasure (715)
#endif

/* struct ns2__MassPerMassMeasure has binding name 'ns2__MassPerMassMeasure' for type 'ns2:MassPerMassMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerMassMeasure
#define SOAP_TYPE_ns2__MassPerMassMeasure (713)
#endif

/* struct ns2__ElectricPotentialDifferenceMeasure has binding name 'ns2__ElectricPotentialDifferenceMeasure' for type 'ns2:ElectricPotentialDifferenceMeasure' */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasure
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceMeasure (711)
#endif

/* struct ns2__CationExchangeCapacityMeasureExt has binding name 'ns2__CationExchangeCapacityMeasureExt' for type 'ns2:CationExchangeCapacityMeasureExt' */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityMeasureExt
#define SOAP_TYPE_ns2__CationExchangeCapacityMeasureExt (708)
#endif

/* struct ns2__VolumePerVolumeMeasure has binding name 'ns2__VolumePerVolumeMeasure' for type 'ns2:VolumePerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeMeasure
#define SOAP_TYPE_ns2__VolumePerVolumeMeasure (706)
#endif

/* struct ns2__PressureMeasureExt has binding name 'ns2__PressureMeasureExt' for type 'ns2:PressureMeasureExt' */
#ifndef SOAP_TYPE_ns2__PressureMeasureExt
#define SOAP_TYPE_ns2__PressureMeasureExt (704)
#endif

/* struct ns2__DynamicViscosityMeasure has binding name 'ns2__DynamicViscosityMeasure' for type 'ns2:DynamicViscosityMeasure' */
#ifndef SOAP_TYPE_ns2__DynamicViscosityMeasure
#define SOAP_TYPE_ns2__DynamicViscosityMeasure (702)
#endif

/* struct ns2__VolumeMeasure has binding name 'ns2__VolumeMeasure' for type 'ns2:VolumeMeasure' */
#ifndef SOAP_TYPE_ns2__VolumeMeasure
#define SOAP_TYPE_ns2__VolumeMeasure (700)
#endif

/* struct ns2__AbstractVerticalDepth has binding name 'ns2__AbstractVerticalDepth' for type 'ns2:AbstractVerticalDepth' */
#ifndef SOAP_TYPE_ns2__AbstractVerticalDepth
#define SOAP_TYPE_ns2__AbstractVerticalDepth (698)
#endif

/* struct ns1__Fluid has binding name 'ns1__Fluid' for type 'ns1:Fluid' */
#ifndef SOAP_TYPE_ns1__Fluid
#define SOAP_TYPE_ns1__Fluid (696)
#endif

/* struct ns2__DataObjectReference has binding name 'ns2__DataObjectReference' for type 'ns2:DataObjectReference' */
#ifndef SOAP_TYPE_ns2__DataObjectReference
#define SOAP_TYPE_ns2__DataObjectReference (694)
#endif

/* struct ns2__ExtensionNameValue has binding name 'ns2__ExtensionNameValue' for type 'ns2:ExtensionNameValue' */
#ifndef SOAP_TYPE_ns2__ExtensionNameValue
#define SOAP_TYPE_ns2__ExtensionNameValue (692)
#endif

/* struct ns2__ThermodynamicTemperatureMeasure has binding name 'ns2__ThermodynamicTemperatureMeasure' for type 'ns2:ThermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureMeasure
#define SOAP_TYPE_ns2__ThermodynamicTemperatureMeasure (688)
#endif

/* struct ns2__PlaneAngleMeasure has binding name 'ns2__PlaneAngleMeasure' for type 'ns2:PlaneAngleMeasure' */
#ifndef SOAP_TYPE_ns2__PlaneAngleMeasure
#define SOAP_TYPE_ns2__PlaneAngleMeasure (686)
#endif

/* struct ns2__AngularVelocityMeasure has binding name 'ns2__AngularVelocityMeasure' for type 'ns2:AngularVelocityMeasure' */
#ifndef SOAP_TYPE_ns2__AngularVelocityMeasure
#define SOAP_TYPE_ns2__AngularVelocityMeasure (684)
#endif

/* struct ns2__LengthMeasure has binding name 'ns2__LengthMeasure' for type 'ns2:LengthMeasure' */
#ifndef SOAP_TYPE_ns2__LengthMeasure
#define SOAP_TYPE_ns2__LengthMeasure (682)
#endif

/* struct ns2__PressureMeasure has binding name 'ns2__PressureMeasure' for type 'ns2:PressureMeasure' */
#ifndef SOAP_TYPE_ns2__PressureMeasure
#define SOAP_TYPE_ns2__PressureMeasure (680)
#endif

/* struct ns2__PowerMeasure has binding name 'ns2__PowerMeasure' for type 'ns2:PowerMeasure' */
#ifndef SOAP_TYPE_ns2__PowerMeasure
#define SOAP_TYPE_ns2__PowerMeasure (678)
#endif

/* struct ns2__LengthPerTimeMeasure has binding name 'ns2__LengthPerTimeMeasure' for type 'ns2:LengthPerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__LengthPerTimeMeasure
#define SOAP_TYPE_ns2__LengthPerTimeMeasure (676)
#endif

/* struct ns2__VolumePerTimeMeasure has binding name 'ns2__VolumePerTimeMeasure' for type 'ns2:VolumePerTimeMeasure' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeMeasure
#define SOAP_TYPE_ns2__VolumePerTimeMeasure (674)
#endif

/* struct ns2__MassPerVolumeMeasure has binding name 'ns2__MassPerVolumeMeasure' for type 'ns2:MassPerVolumeMeasure' */
#ifndef SOAP_TYPE_ns2__MassPerVolumeMeasure
#define SOAP_TYPE_ns2__MassPerVolumeMeasure (672)
#endif

/* struct ns2__MomentOfForceMeasure has binding name 'ns2__MomentOfForceMeasure' for type 'ns2:MomentOfForceMeasure' */
#ifndef SOAP_TYPE_ns2__MomentOfForceMeasure
#define SOAP_TYPE_ns2__MomentOfForceMeasure (670)
#endif

/* struct ns2__ForceMeasure has binding name 'ns2__ForceMeasure' for type 'ns2:ForceMeasure' */
#ifndef SOAP_TYPE_ns2__ForceMeasure
#define SOAP_TYPE_ns2__ForceMeasure (668)
#endif

/* struct ns2__MeasuredDepth has binding name 'ns2__MeasuredDepth' for type 'ns2:MeasuredDepth' */
#ifndef SOAP_TYPE_ns2__MeasuredDepth
#define SOAP_TYPE_ns2__MeasuredDepth (666)
#endif

/* struct ns2__TimeMeasure has binding name 'ns2__TimeMeasure' for type 'ns2:TimeMeasure' */
#ifndef SOAP_TYPE_ns2__TimeMeasure
#define SOAP_TYPE_ns2__TimeMeasure (664)
#endif

/* struct ns1__DrillingParams has binding name 'ns1__DrillingParams' for type 'ns1:DrillingParams' */
#ifndef SOAP_TYPE_ns1__DrillingParams
#define SOAP_TYPE_ns1__DrillingParams (663)
#endif

/* struct xsd__base64Binary has binding name 'xsd__base64Binary' for type 'xsd:base64Binary' */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (2337)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (2336)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (2330)
#endif

/* struct ns21__witsmlObject * has binding name 'PointerTons21__witsmlObject' for type 'ns21:witsmlObject' */
#ifndef SOAP_TYPE_PointerTons21__witsmlObject
#define SOAP_TYPE_PointerTons21__witsmlObject (2324)
#endif

/* struct ns1__WellCompletion * has binding name 'PointerTons1__WellCompletion' for type 'ns1:WellCompletion' */
#ifndef SOAP_TYPE_PointerTons1__WellCompletion
#define SOAP_TYPE_PointerTons1__WellCompletion (2323)
#endif

/* struct ns1__WellCMLedger * has binding name 'PointerTons1__WellCMLedger' for type 'ns1:WellCMLedger' */
#ifndef SOAP_TYPE_PointerTons1__WellCMLedger
#define SOAP_TYPE_PointerTons1__WellCMLedger (2322)
#endif

/* struct ns1__WellboreGeometry * has binding name 'PointerTons1__WellboreGeometry' for type 'ns1:WellboreGeometry' */
#ifndef SOAP_TYPE_PointerTons1__WellboreGeometry
#define SOAP_TYPE_PointerTons1__WellboreGeometry (2321)
#endif

/* struct ns1__WellboreGeology * has binding name 'PointerTons1__WellboreGeology' for type 'ns1:WellboreGeology' */
#ifndef SOAP_TYPE_PointerTons1__WellboreGeology
#define SOAP_TYPE_PointerTons1__WellboreGeology (2320)
#endif

/* struct ns1__WellboreCompletion * has binding name 'PointerTons1__WellboreCompletion' for type 'ns1:WellboreCompletion' */
#ifndef SOAP_TYPE_PointerTons1__WellboreCompletion
#define SOAP_TYPE_PointerTons1__WellboreCompletion (2319)
#endif

/* struct ns1__Wellbore * has binding name 'PointerTons1__Wellbore' for type 'ns1:Wellbore' */
#ifndef SOAP_TYPE_PointerTons1__Wellbore
#define SOAP_TYPE_PointerTons1__Wellbore (2318)
#endif

/* struct ns1__Well * has binding name 'PointerTons1__Well' for type 'ns1:Well' */
#ifndef SOAP_TYPE_PointerTons1__Well
#define SOAP_TYPE_PointerTons1__Well (2317)
#endif

/* struct ns1__Tubular * has binding name 'PointerTons1__Tubular' for type 'ns1:Tubular' */
#ifndef SOAP_TYPE_PointerTons1__Tubular
#define SOAP_TYPE_PointerTons1__Tubular (2316)
#endif

/* struct ns1__Trajectory * has binding name 'PointerTons1__Trajectory' for type 'ns1:Trajectory' */
#ifndef SOAP_TYPE_PointerTons1__Trajectory
#define SOAP_TYPE_PointerTons1__Trajectory (2315)
#endif

/* struct ns1__SurveyProgram * has binding name 'PointerTons1__SurveyProgram' for type 'ns1:SurveyProgram' */
#ifndef SOAP_TYPE_PointerTons1__SurveyProgram
#define SOAP_TYPE_PointerTons1__SurveyProgram (2314)
#endif

/* struct ns1__Target * has binding name 'PointerTons1__Target' for type 'ns1:Target' */
#ifndef SOAP_TYPE_PointerTons1__Target
#define SOAP_TYPE_PointerTons1__Target (2313)
#endif

/* struct ns1__StimJob * has binding name 'PointerTons1__StimJob' for type 'ns1:StimJob' */
#ifndef SOAP_TYPE_PointerTons1__StimJob
#define SOAP_TYPE_PointerTons1__StimJob (2312)
#endif

/* struct ns1__Risk * has binding name 'PointerTons1__Risk' for type 'ns1:Risk' */
#ifndef SOAP_TYPE_PointerTons1__Risk
#define SOAP_TYPE_PointerTons1__Risk (2311)
#endif

/* struct ns1__Rig * has binding name 'PointerTons1__Rig' for type 'ns1:Rig' */
#ifndef SOAP_TYPE_PointerTons1__Rig
#define SOAP_TYPE_PointerTons1__Rig (2310)
#endif

/* struct ns1__OpsReport * has binding name 'PointerTons1__OpsReport' for type 'ns1:OpsReport' */
#ifndef SOAP_TYPE_PointerTons1__OpsReport
#define SOAP_TYPE_PointerTons1__OpsReport (2309)
#endif

/* struct ns1__MudLogReport * has binding name 'PointerTons1__MudLogReport' for type 'ns1:MudLogReport' */
#ifndef SOAP_TYPE_PointerTons1__MudLogReport
#define SOAP_TYPE_PointerTons1__MudLogReport (2308)
#endif

/* struct ns1__Log * has binding name 'PointerTons1__Log' for type 'ns1:Log' */
#ifndef SOAP_TYPE_PointerTons1__Log
#define SOAP_TYPE_PointerTons1__Log (2307)
#endif

/* struct ns1__FluidsReport * has binding name 'PointerTons1__FluidsReport' for type 'ns1:FluidsReport' */
#ifndef SOAP_TYPE_PointerTons1__FluidsReport
#define SOAP_TYPE_PointerTons1__FluidsReport (2306)
#endif

/* struct ns1__DrillReport * has binding name 'PointerTons1__DrillReport' for type 'ns1:DrillReport' */
#ifndef SOAP_TYPE_PointerTons1__DrillReport
#define SOAP_TYPE_PointerTons1__DrillReport (2305)
#endif

/* struct ns1__DownholeComponent * has binding name 'PointerTons1__DownholeComponent' for type 'ns1:DownholeComponent' */
#ifndef SOAP_TYPE_PointerTons1__DownholeComponent
#define SOAP_TYPE_PointerTons1__DownholeComponent (2304)
#endif

/* struct ns1__DepthRegImage * has binding name 'PointerTons1__DepthRegImage' for type 'ns1:DepthRegImage' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegImage
#define SOAP_TYPE_PointerTons1__DepthRegImage (2303)
#endif

/* struct ns1__CementJob * has binding name 'PointerTons1__CementJob' for type 'ns1:CementJob' */
#ifndef SOAP_TYPE_PointerTons1__CementJob
#define SOAP_TYPE_PointerTons1__CementJob (2302)
#endif

/* struct ns1__BhaRun * has binding name 'PointerTons1__BhaRun' for type 'ns1:BhaRun' */
#ifndef SOAP_TYPE_PointerTons1__BhaRun
#define SOAP_TYPE_PointerTons1__BhaRun (2301)
#endif

/* struct ns1__MudLogParameter * has binding name 'PointerTons1__MudLogParameter' for type 'ns1:MudLogParameter' */
#ifndef SOAP_TYPE_PointerTons1__MudLogParameter
#define SOAP_TYPE_PointerTons1__MudLogParameter (2224)
#endif

/* struct ns1__MudlogReportInterval * has binding name 'PointerTons1__MudlogReportInterval' for type 'ns1:MudlogReportInterval' */
#ifndef SOAP_TYPE_PointerTons1__MudlogReportInterval
#define SOAP_TYPE_PointerTons1__MudlogReportInterval (2223)
#endif

/* struct ns2__AbstractProjectedCrs * has binding name 'PointerTons2__AbstractProjectedCrs' for type 'ns2:AbstractProjectedCrs' */
#ifndef SOAP_TYPE_PointerTons2__AbstractProjectedCrs
#define SOAP_TYPE_PointerTons2__AbstractProjectedCrs (2222)
#endif

/* struct ns2__ProjectedCrs * has binding name 'PointerTons2__ProjectedCrs' for type 'ns2:ProjectedCrs' */
#ifndef SOAP_TYPE_PointerTons2__ProjectedCrs
#define SOAP_TYPE_PointerTons2__ProjectedCrs (2221)
#endif

/* struct ns2__HorizontalAxes * has binding name 'PointerTons2__HorizontalAxes' for type 'ns2:HorizontalAxes' */
#ifndef SOAP_TYPE_PointerTons2__HorizontalAxes
#define SOAP_TYPE_PointerTons2__HorizontalAxes (2220)
#endif

/* struct ns2__IntegerConstantArray * has binding name 'PointerTons2__IntegerConstantArray' for type 'ns2:IntegerConstantArray' */
#ifndef SOAP_TYPE_PointerTons2__IntegerConstantArray
#define SOAP_TYPE_PointerTons2__IntegerConstantArray (2219)
#endif

/* struct ns2__AbstractBooleanArray * has binding name 'PointerTons2__AbstractBooleanArray' for type 'ns2:AbstractBooleanArray' */
#ifndef SOAP_TYPE_PointerTons2__AbstractBooleanArray
#define SOAP_TYPE_PointerTons2__AbstractBooleanArray (2218)
#endif

/* struct ns2__FloatingPointConstantArray * has binding name 'PointerTons2__FloatingPointConstantArray' for type 'ns2:FloatingPointConstantArray' */
#ifndef SOAP_TYPE_PointerTons2__FloatingPointConstantArray
#define SOAP_TYPE_PointerTons2__FloatingPointConstantArray (2217)
#endif

/* struct ns1__PPFGLogOSDUIntegration * has binding name 'PointerTons1__PPFGLogOSDUIntegration' for type 'ns1:PPFGLogOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__PPFGLogOSDUIntegration
#define SOAP_TYPE_PointerTons1__PPFGLogOSDUIntegration (2207)
#endif

/* struct ns1__PPFGChannelSetOSDUIntegration * has binding name 'PointerTons1__PPFGChannelSetOSDUIntegration' for type 'ns1:PPFGChannelSetOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__PPFGChannelSetOSDUIntegration
#define SOAP_TYPE_PointerTons1__PPFGChannelSetOSDUIntegration (2206)
#endif

/* struct ns1__PPFGChannelOSDUIntegration * has binding name 'PointerTons1__PPFGChannelOSDUIntegration' for type 'ns1:PPFGChannelOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__PPFGChannelOSDUIntegration
#define SOAP_TYPE_PointerTons1__PPFGChannelOSDUIntegration (2205)
#endif

/* char ** has binding name 'PointerTons1__PPFGDataProcessingExt' for type 'ns1:PPFGDataProcessingExt' */
#ifndef SOAP_TYPE_PointerTons1__PPFGDataProcessingExt
#define SOAP_TYPE_PointerTons1__PPFGDataProcessingExt (2204)
#endif

/* enum ns2__ReferencePressureKind * has binding name 'PointerTons2__ReferencePressureKind' for type 'ns2:ReferencePressureKind' */
#ifndef SOAP_TYPE_PointerTons2__ReferencePressureKind
#define SOAP_TYPE_PointerTons2__ReferencePressureKind (2203)
#endif

/* enum ns2__ActivityOfRadioactivityPerVolumeUom * has binding name 'PointerTons2__ActivityOfRadioactivityPerVolumeUom' for type 'ns2:ActivityOfRadioactivityPerVolumeUom' */
#ifndef SOAP_TYPE_PointerTons2__ActivityOfRadioactivityPerVolumeUom
#define SOAP_TYPE_PointerTons2__ActivityOfRadioactivityPerVolumeUom (1888)
#endif

/* struct ns2__VerticalAxis * has binding name 'PointerTons2__VerticalAxis' for type 'ns2:VerticalAxis' */
#ifndef SOAP_TYPE_PointerTons2__VerticalAxis
#define SOAP_TYPE_PointerTons2__VerticalAxis (1882)
#endif

/* struct ns2__AbstractGeographic2dCrs * has binding name 'PointerTons2__AbstractGeographic2dCrs' for type 'ns2:AbstractGeographic2dCrs' */
#ifndef SOAP_TYPE_PointerTons2__AbstractGeographic2dCrs
#define SOAP_TYPE_PointerTons2__AbstractGeographic2dCrs (1881)
#endif

/* char ** has binding name 'PointerTostring' for type 'xsd:string' */
#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (1876)
#endif

/* struct ns2__RelativePressure * has binding name 'PointerTons2__RelativePressure' for type 'ns2:RelativePressure' */
#ifndef SOAP_TYPE_PointerTons2__RelativePressure
#define SOAP_TYPE_PointerTons2__RelativePressure (1875)
#endif

/* struct ns2__GaugePressure * has binding name 'PointerTons2__GaugePressure' for type 'ns2:GaugePressure' */
#ifndef SOAP_TYPE_PointerTons2__GaugePressure
#define SOAP_TYPE_PointerTons2__GaugePressure (1874)
#endif

/* struct ns2__ExternalDataArray * has binding name 'PointerTons2__ExternalDataArray' for type 'ns2:ExternalDataArray' */
#ifndef SOAP_TYPE_PointerTons2__ExternalDataArray
#define SOAP_TYPE_PointerTons2__ExternalDataArray (1873)
#endif

/* struct ns2__IntegerArrayStatistics * has binding name 'PointerTons2__IntegerArrayStatistics' for type 'ns2:IntegerArrayStatistics' */
#ifndef SOAP_TYPE_PointerTons2__IntegerArrayStatistics
#define SOAP_TYPE_PointerTons2__IntegerArrayStatistics (1862)
#endif

/* struct ns2__FloatingPointArrayStatistics * has binding name 'PointerTons2__FloatingPointArrayStatistics' for type 'ns2:FloatingPointArrayStatistics' */
#ifndef SOAP_TYPE_PointerTons2__FloatingPointArrayStatistics
#define SOAP_TYPE_PointerTons2__FloatingPointArrayStatistics (1853)
#endif

/* struct ns2__AbsolutePressure * has binding name 'PointerTons2__AbsolutePressure' for type 'ns2:AbsolutePressure' */
#ifndef SOAP_TYPE_PointerTons2__AbsolutePressure
#define SOAP_TYPE_PointerTons2__AbsolutePressure (1852)
#endif

/* struct ns2__AbstractHorizontalCoordinates * has binding name 'PointerTons2__AbstractHorizontalCoordinates' for type 'ns2:AbstractHorizontalCoordinates' */
#ifndef SOAP_TYPE_PointerTons2__AbstractHorizontalCoordinates
#define SOAP_TYPE_PointerTons2__AbstractHorizontalCoordinates (1851)
#endif

/* struct ns2__HorizontalCoordinates * has binding name 'PointerTons2__HorizontalCoordinates' for type 'ns2:HorizontalCoordinates' */
#ifndef SOAP_TYPE_PointerTons2__HorizontalCoordinates
#define SOAP_TYPE_PointerTons2__HorizontalCoordinates (1848)
#endif

/* struct ns2__ProjectedCompoundCrs * has binding name 'PointerTons2__ProjectedCompoundCrs' for type 'ns2:ProjectedCompoundCrs' */
#ifndef SOAP_TYPE_PointerTons2__ProjectedCompoundCrs
#define SOAP_TYPE_PointerTons2__ProjectedCompoundCrs (1847)
#endif

/* struct ns2__GeographicCompoundCrs * has binding name 'PointerTons2__GeographicCompoundCrs' for type 'ns2:GeographicCompoundCrs' */
#ifndef SOAP_TYPE_PointerTons2__GeographicCompoundCrs
#define SOAP_TYPE_PointerTons2__GeographicCompoundCrs (1846)
#endif

/* struct ns2__Geographic3dCrs * has binding name 'PointerTons2__Geographic3dCrs' for type 'ns2:Geographic3dCrs' */
#ifndef SOAP_TYPE_PointerTons2__Geographic3dCrs
#define SOAP_TYPE_PointerTons2__Geographic3dCrs (1845)
#endif

/* struct ns2__Geocentric3dCrs * has binding name 'PointerTons2__Geocentric3dCrs' for type 'ns2:Geocentric3dCrs' */
#ifndef SOAP_TYPE_PointerTons2__Geocentric3dCrs
#define SOAP_TYPE_PointerTons2__Geocentric3dCrs (1844)
#endif

/* struct ns2__GrowingObjectIndex * has binding name 'PointerTons2__GrowingObjectIndex' for type 'ns2:GrowingObjectIndex' */
#ifndef SOAP_TYPE_PointerTons2__GrowingObjectIndex
#define SOAP_TYPE_PointerTons2__GrowingObjectIndex (1834)
#endif

/* struct ns1__SourceTrajectoryStation * has binding name 'PointerTons1__SourceTrajectoryStation' for type 'ns1:SourceTrajectoryStation' */
#ifndef SOAP_TYPE_PointerTons1__SourceTrajectoryStation
#define SOAP_TYPE_PointerTons1__SourceTrajectoryStation (1833)
#endif

/* struct ns1__StnTrajMatrixCov * has binding name 'PointerTons1__StnTrajMatrixCov' for type 'ns1:StnTrajMatrixCov' */
#ifndef SOAP_TYPE_PointerTons1__StnTrajMatrixCov
#define SOAP_TYPE_PointerTons1__StnTrajMatrixCov (1832)
#endif

/* struct ns1__StnTrajValid * has binding name 'PointerTons1__StnTrajValid' for type 'ns1:StnTrajValid' */
#ifndef SOAP_TYPE_PointerTons1__StnTrajValid
#define SOAP_TYPE_PointerTons1__StnTrajValid (1831)
#endif

/* struct ns1__StnTrajCorUsed * has binding name 'PointerTons1__StnTrajCorUsed' for type 'ns1:StnTrajCorUsed' */
#ifndef SOAP_TYPE_PointerTons1__StnTrajCorUsed
#define SOAP_TYPE_PointerTons1__StnTrajCorUsed (1830)
#endif

/* struct ns1__StnTrajRawData * has binding name 'PointerTons1__StnTrajRawData' for type 'ns1:StnTrajRawData' */
#ifndef SOAP_TYPE_PointerTons1__StnTrajRawData
#define SOAP_TYPE_PointerTons1__StnTrajRawData (1829)
#endif

/* enum ns1__TrajStationStatus * has binding name 'PointerTons1__TrajStationStatus' for type 'ns1:TrajStationStatus' */
#ifndef SOAP_TYPE_PointerTons1__TrajStationStatus
#define SOAP_TYPE_PointerTons1__TrajStationStatus (1828)
#endif

/* enum ns1__TrajStnCalcAlgorithm * has binding name 'PointerTons1__TrajStnCalcAlgorithm' for type 'ns1:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_PointerTons1__TrajStnCalcAlgorithm
#define SOAP_TYPE_PointerTons1__TrajStnCalcAlgorithm (1827)
#endif

/* enum ns1__TypeSurveyTool * has binding name 'PointerTons1__TypeSurveyTool' for type 'ns1:TypeSurveyTool' */
#ifndef SOAP_TYPE_PointerTons1__TypeSurveyTool
#define SOAP_TYPE_PointerTons1__TypeSurveyTool (1826)
#endif

/* struct ns1__TrajectoryStationOSDUIntegration * has binding name 'PointerTons1__TrajectoryStationOSDUIntegration' for type 'ns1:TrajectoryStationOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__TrajectoryStationOSDUIntegration
#define SOAP_TYPE_PointerTons1__TrajectoryStationOSDUIntegration (1825)
#endif

/* struct ns1__ShowEvaluation * has binding name 'PointerTons1__ShowEvaluation' for type 'ns1:ShowEvaluation' */
#ifndef SOAP_TYPE_PointerTons1__ShowEvaluation
#define SOAP_TYPE_PointerTons1__ShowEvaluation (1824)
#endif

/* struct ns1__InterpretedGeology * has binding name 'PointerTons1__InterpretedGeology' for type 'ns1:InterpretedGeology' */
#ifndef SOAP_TYPE_PointerTons1__InterpretedGeology
#define SOAP_TYPE_PointerTons1__InterpretedGeology (1822)
#endif

/* struct ns1__CuttingsGeology * has binding name 'PointerTons1__CuttingsGeology' for type 'ns1:CuttingsGeology' */
#ifndef SOAP_TYPE_PointerTons1__CuttingsGeology
#define SOAP_TYPE_PointerTons1__CuttingsGeology (1820)
#endif

/* struct ns1__InterpretedIntervalLithology * has binding name 'PointerTons1__InterpretedIntervalLithology' for type 'ns1:InterpretedIntervalLithology' */
#ifndef SOAP_TYPE_PointerTons1__InterpretedIntervalLithology
#define SOAP_TYPE_PointerTons1__InterpretedIntervalLithology (1818)
#endif

/* struct ns1__CuttingsIntervalLithology * has binding name 'PointerTons1__CuttingsIntervalLithology' for type 'ns1:CuttingsIntervalLithology' */
#ifndef SOAP_TYPE_PointerTons1__CuttingsIntervalLithology
#define SOAP_TYPE_PointerTons1__CuttingsIntervalLithology (1817)
#endif

/* struct ns2__IlluminanceMeasure * has binding name 'PointerTons2__IlluminanceMeasure' for type 'ns2:IlluminanceMeasure' */
#ifndef SOAP_TYPE_PointerTons2__IlluminanceMeasure
#define SOAP_TYPE_PointerTons2__IlluminanceMeasure (1816)
#endif

/* struct ns1__MudGas * has binding name 'PointerTons1__MudGas' for type 'ns1:MudGas' */
#ifndef SOAP_TYPE_PointerTons1__MudGas
#define SOAP_TYPE_PointerTons1__MudGas (1814)
#endif

/* struct ns1__DrillingParameters * has binding name 'PointerTons1__DrillingParameters' for type 'ns1:DrillingParameters' */
#ifndef SOAP_TYPE_PointerTons1__DrillingParameters
#define SOAP_TYPE_PointerTons1__DrillingParameters (1813)
#endif

/* struct ns1__Chromatograph * has binding name 'PointerTons1__Chromatograph' for type 'ns1:Chromatograph' */
#ifndef SOAP_TYPE_PointerTons1__Chromatograph
#define SOAP_TYPE_PointerTons1__Chromatograph (1812)
#endif

/* struct ns1__ShowEvaluationInterval * has binding name 'PointerTons1__ShowEvaluationInterval' for type 'ns1:ShowEvaluationInterval' */
#ifndef SOAP_TYPE_PointerTons1__ShowEvaluationInterval
#define SOAP_TYPE_PointerTons1__ShowEvaluationInterval (1811)
#endif

/* struct ns1__InterpretedGeologyInterval * has binding name 'PointerTons1__InterpretedGeologyInterval' for type 'ns1:InterpretedGeologyInterval' */
#ifndef SOAP_TYPE_PointerTons1__InterpretedGeologyInterval
#define SOAP_TYPE_PointerTons1__InterpretedGeologyInterval (1810)
#endif

/* struct ns1__CuttingsGeologyInterval * has binding name 'PointerTons1__CuttingsGeologyInterval' for type 'ns1:CuttingsGeologyInterval' */
#ifndef SOAP_TYPE_PointerTons1__CuttingsGeologyInterval
#define SOAP_TYPE_PointerTons1__CuttingsGeologyInterval (1809)
#endif

/* struct ns1__Shaker * has binding name 'PointerTons1__Shaker' for type 'ns1:Shaker' */
#ifndef SOAP_TYPE_PointerTons1__Shaker
#define SOAP_TYPE_PointerTons1__Shaker (1808)
#endif

/* struct ns1__SurfaceEquipment * has binding name 'PointerTons1__SurfaceEquipment' for type 'ns1:SurfaceEquipment' */
#ifndef SOAP_TYPE_PointerTons1__SurfaceEquipment
#define SOAP_TYPE_PointerTons1__SurfaceEquipment (1807)
#endif

/* struct ns1__Degasser * has binding name 'PointerTons1__Degasser' for type 'ns1:Degasser' */
#ifndef SOAP_TYPE_PointerTons1__Degasser
#define SOAP_TYPE_PointerTons1__Degasser (1806)
#endif

/* struct ns1__Hydrocyclone * has binding name 'PointerTons1__Hydrocyclone' for type 'ns1:Hydrocyclone' */
#ifndef SOAP_TYPE_PointerTons1__Hydrocyclone
#define SOAP_TYPE_PointerTons1__Hydrocyclone (1805)
#endif

/* struct ns1__Centrifuge * has binding name 'PointerTons1__Centrifuge' for type 'ns1:Centrifuge' */
#ifndef SOAP_TYPE_PointerTons1__Centrifuge
#define SOAP_TYPE_PointerTons1__Centrifuge (1804)
#endif

/* struct ns1__MudPump * has binding name 'PointerTons1__MudPump' for type 'ns1:MudPump' */
#ifndef SOAP_TYPE_PointerTons1__MudPump
#define SOAP_TYPE_PointerTons1__MudPump (1803)
#endif

/* struct ns1__Pit * has binding name 'PointerTons1__Pit' for type 'ns1:Pit' */
#ifndef SOAP_TYPE_PointerTons1__Pit
#define SOAP_TYPE_PointerTons1__Pit (1802)
#endif

/* struct ns1__Bop * has binding name 'PointerTons1__Bop' for type 'ns1:Bop' */
#ifndef SOAP_TYPE_PointerTons1__Bop
#define SOAP_TYPE_PointerTons1__Bop (1801)
#endif

/* enum ns1__DriveType * has binding name 'PointerTons1__DriveType' for type 'ns1:DriveType' */
#ifndef SOAP_TYPE_PointerTons1__DriveType
#define SOAP_TYPE_PointerTons1__DriveType (1800)
#endif

/* enum ns1__DrawWorksType * has binding name 'PointerTons1__DrawWorksType' for type 'ns1:DrawWorksType' */
#ifndef SOAP_TYPE_PointerTons1__DrawWorksType
#define SOAP_TYPE_PointerTons1__DrawWorksType (1799)
#endif

/* enum ns1__DerrickType * has binding name 'PointerTons1__DerrickType' for type 'ns1:DerrickType' */
#ifndef SOAP_TYPE_PointerTons1__DerrickType
#define SOAP_TYPE_PointerTons1__DerrickType (1798)
#endif

/* enum ns1__RigType * has binding name 'PointerTons1__RigType' for type 'ns1:RigType' */
#ifndef SOAP_TYPE_PointerTons1__RigType
#define SOAP_TYPE_PointerTons1__RigType (1797)
#endif

/* struct ns1__ChannelSet * has binding name 'PointerTons1__ChannelSet' for type 'ns1:ChannelSet' */
#ifndef SOAP_TYPE_PointerTons1__ChannelSet
#define SOAP_TYPE_PointerTons1__ChannelSet (1794)
#endif

/* struct ns1__LogOSDUIntegration * has binding name 'PointerTons1__LogOSDUIntegration' for type 'ns1:LogOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__LogOSDUIntegration
#define SOAP_TYPE_PointerTons1__LogOSDUIntegration (1793)
#endif

/* struct ns1__Channel * has binding name 'PointerTons1__Channel' for type 'ns1:Channel' */
#ifndef SOAP_TYPE_PointerTons1__Channel
#define SOAP_TYPE_PointerTons1__Channel (1790)
#endif

/* struct ns1__ChannelSetOSDUIntegration * has binding name 'PointerTons1__ChannelSetOSDUIntegration' for type 'ns1:ChannelSetOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__ChannelSetOSDUIntegration
#define SOAP_TYPE_PointerTons1__ChannelSetOSDUIntegration (1789)
#endif

/* struct ns1__PointMetadata * has binding name 'PointerTons1__PointMetadata' for type 'ns1:PointMetadata' */
#ifndef SOAP_TYPE_PointerTons1__PointMetadata
#define SOAP_TYPE_PointerTons1__PointMetadata (1786)
#endif

/* struct ns1__ChannelIndex * has binding name 'PointerTons1__ChannelIndex' for type 'ns1:ChannelIndex' */
#ifndef SOAP_TYPE_PointerTons1__ChannelIndex
#define SOAP_TYPE_PointerTons1__ChannelIndex (1785)
#endif

/* struct ns1__ChannelData * has binding name 'PointerTons1__ChannelData' for type 'ns1:ChannelData' */
#ifndef SOAP_TYPE_PointerTons1__ChannelData
#define SOAP_TYPE_PointerTons1__ChannelData (1784)
#endif

/* struct ns1__ChannelOSDUIntegration * has binding name 'PointerTons1__ChannelOSDUIntegration' for type 'ns1:ChannelOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__ChannelOSDUIntegration
#define SOAP_TYPE_PointerTons1__ChannelOSDUIntegration (1783)
#endif

/* enum ns1__HoleLoggingStatus * has binding name 'PointerTons1__HoleLoggingStatus' for type 'ns1:HoleLoggingStatus' */
#ifndef SOAP_TYPE_PointerTons1__HoleLoggingStatus
#define SOAP_TYPE_PointerTons1__HoleLoggingStatus (1782)
#endif

/* enum ns1__ChannelDerivation * has binding name 'PointerTons1__ChannelDerivation' for type 'ns1:ChannelDerivation' */
#ifndef SOAP_TYPE_PointerTons1__ChannelDerivation
#define SOAP_TYPE_PointerTons1__ChannelDerivation (1781)
#endif

/* struct ns1__PassDetail * has binding name 'PointerTons1__PassDetail' for type 'ns1:PassDetail' */
#ifndef SOAP_TYPE_PointerTons1__PassDetail
#define SOAP_TYPE_PointerTons1__PassDetail (1780)
#endif

/* enum ns1__ChannelState * has binding name 'PointerTons1__ChannelState' for type 'ns1:ChannelState' */
#ifndef SOAP_TYPE_PointerTons1__ChannelState
#define SOAP_TYPE_PointerTons1__ChannelState (1779)
#endif

/* enum ns1__HoleCasingType * has binding name 'PointerTons1__HoleCasingType' for type 'ns1:HoleCasingType' */
#ifndef SOAP_TYPE_PointerTons1__HoleCasingType
#define SOAP_TYPE_PointerTons1__HoleCasingType (1778)
#endif

/* struct ns2__Projected2dPosition * has binding name 'PointerTons2__Projected2dPosition' for type 'ns2:Projected2dPosition' */
#ifndef SOAP_TYPE_PointerTons2__Projected2dPosition
#define SOAP_TYPE_PointerTons2__Projected2dPosition (1777)
#endif

/* struct ns2__Geographic2dPosition * has binding name 'PointerTons2__Geographic2dPosition' for type 'ns2:Geographic2dPosition' */
#ifndef SOAP_TYPE_PointerTons2__Geographic2dPosition
#define SOAP_TYPE_PointerTons2__Geographic2dPosition (1775)
#endif

/* enum ns1__WellDirection * has binding name 'PointerTons1__WellDirection' for type 'ns1:WellDirection' */
#ifndef SOAP_TYPE_PointerTons1__WellDirection
#define SOAP_TYPE_PointerTons1__WellDirection (1774)
#endif

/* enum ns1__WellFluid * has binding name 'PointerTons1__WellFluid' for type 'ns1:WellFluid' */
#ifndef SOAP_TYPE_PointerTons1__WellFluid
#define SOAP_TYPE_PointerTons1__WellFluid (1773)
#endif

/* enum ns1__WellboreShape * has binding name 'PointerTons1__WellboreShape' for type 'ns1:WellboreShape' */
#ifndef SOAP_TYPE_PointerTons1__WellboreShape
#define SOAP_TYPE_PointerTons1__WellboreShape (1772)
#endif

/* struct ns1__WellPurposePeriod * has binding name 'PointerTons1__WellPurposePeriod' for type 'ns1:WellPurposePeriod' */
#ifndef SOAP_TYPE_PointerTons1__WellPurposePeriod
#define SOAP_TYPE_PointerTons1__WellPurposePeriod (1771)
#endif

/* enum ns1__WellPurpose * has binding name 'PointerTons1__WellPurpose' for type 'ns1:WellPurpose' */
#ifndef SOAP_TYPE_PointerTons1__WellPurpose
#define SOAP_TYPE_PointerTons1__WellPurpose (1770)
#endif

/* struct ns2__WellStatusPeriod * has binding name 'PointerTons2__WellStatusPeriod' for type 'ns2:WellStatusPeriod' */
#ifndef SOAP_TYPE_PointerTons2__WellStatusPeriod
#define SOAP_TYPE_PointerTons2__WellStatusPeriod (1769)
#endif

/* enum ns2__WellStatus * has binding name 'PointerTons2__WellStatus' for type 'ns2:WellStatus' */
#ifndef SOAP_TYPE_PointerTons2__WellStatus
#define SOAP_TYPE_PointerTons2__WellStatus (1768)
#endif

/* struct ns2__FacilityLifecyclePeriod * has binding name 'PointerTons2__FacilityLifecyclePeriod' for type 'ns2:FacilityLifecyclePeriod' */
#ifndef SOAP_TYPE_PointerTons2__FacilityLifecyclePeriod
#define SOAP_TYPE_PointerTons2__FacilityLifecyclePeriod (1767)
#endif

/* struct ns2__FacilityOperator * has binding name 'PointerTons2__FacilityOperator' for type 'ns2:FacilityOperator' */
#ifndef SOAP_TYPE_PointerTons2__FacilityOperator
#define SOAP_TYPE_PointerTons2__FacilityOperator (1766)
#endif

/* struct ns1__LicensePeriod * has binding name 'PointerTons1__LicensePeriod' for type 'ns1:LicensePeriod' */
#ifndef SOAP_TYPE_PointerTons1__LicensePeriod
#define SOAP_TYPE_PointerTons1__LicensePeriod (1765)
#endif

/* struct ns1__BottomHoleLocation * has binding name 'PointerTons1__BottomHoleLocation' for type 'ns1:BottomHoleLocation' */
#ifndef SOAP_TYPE_PointerTons1__BottomHoleLocation
#define SOAP_TYPE_PointerTons1__BottomHoleLocation (1764)
#endif

/* struct ns2__AbstractGraphicalInformation * has binding name 'PointerTons2__AbstractGraphicalInformation' for type 'ns2:AbstractGraphicalInformation' */
#ifndef SOAP_TYPE_PointerTons2__AbstractGraphicalInformation
#define SOAP_TYPE_PointerTons2__AbstractGraphicalInformation (1763)
#endif

/* struct ns2__FailingRule * has binding name 'PointerTons2__FailingRule' for type 'ns2:FailingRule' */
#ifndef SOAP_TYPE_PointerTons2__FailingRule
#define SOAP_TYPE_PointerTons2__FailingRule (1762)
#endif

/* struct ns2__IndexRange * has binding name 'PointerTons2__IndexRange' for type 'ns2:IndexRange' */
#ifndef SOAP_TYPE_PointerTons2__IndexRange
#define SOAP_TYPE_PointerTons2__IndexRange (1761)
#endif

/* struct ns2__SingleCollectionAssociation * has binding name 'PointerTons2__SingleCollectionAssociation' for type 'ns2:SingleCollectionAssociation' */
#ifndef SOAP_TYPE_PointerTons2__SingleCollectionAssociation
#define SOAP_TYPE_PointerTons2__SingleCollectionAssociation (1760)
#endif

/* enum ns2__IndexableElement * has binding name 'PointerTons2__IndexableElement' for type 'ns2:IndexableElement' */
#ifndef SOAP_TYPE_PointerTons2__IndexableElement
#define SOAP_TYPE_PointerTons2__IndexableElement (1759)
#endif

/* struct ns2__AbstractObject * has binding name 'PointerTons2__AbstractObject' for type 'ns2:AbstractObject' */
#ifndef SOAP_TYPE_PointerTons2__AbstractObject
#define SOAP_TYPE_PointerTons2__AbstractObject (1758)
#endif

/* struct ns2__ParameterTemplate * has binding name 'PointerTons2__ParameterTemplate' for type 'ns2:ParameterTemplate' */
#ifndef SOAP_TYPE_PointerTons2__ParameterTemplate
#define SOAP_TYPE_PointerTons2__ParameterTemplate (1757)
#endif

/* struct ns2__PersonName * has binding name 'PointerTons2__PersonName' for type 'ns2:PersonName' */
#ifndef SOAP_TYPE_PointerTons2__PersonName
#define SOAP_TYPE_PointerTons2__PersonName (1756)
#endif

/* struct ns2__EmailQualifierStruct * has binding name 'PointerTons2__EmailQualifierStruct' for type 'ns2:EmailQualifierStruct' */
#ifndef SOAP_TYPE_PointerTons2__EmailQualifierStruct
#define SOAP_TYPE_PointerTons2__EmailQualifierStruct (1755)
#endif

/* struct ns2__PhoneNumberStruct * has binding name 'PointerTons2__PhoneNumberStruct' for type 'ns2:PhoneNumberStruct' */
#ifndef SOAP_TYPE_PointerTons2__PhoneNumberStruct
#define SOAP_TYPE_PointerTons2__PhoneNumberStruct (1753)
#endif

/* struct ns2__GeneralAddress * has binding name 'PointerTons2__GeneralAddress' for type 'ns2:GeneralAddress' */
#ifndef SOAP_TYPE_PointerTons2__GeneralAddress
#define SOAP_TYPE_PointerTons2__GeneralAddress (1752)
#endif

/* struct ns2__TimeSeriesParentage * has binding name 'PointerTons2__TimeSeriesParentage' for type 'ns2:TimeSeriesParentage' */
#ifndef SOAP_TYPE_PointerTons2__TimeSeriesParentage
#define SOAP_TYPE_PointerTons2__TimeSeriesParentage (1751)
#endif

/* struct ns2__GeologicTime * has binding name 'PointerTons2__GeologicTime' for type 'ns2:GeologicTime' */
#ifndef SOAP_TYPE_PointerTons2__GeologicTime
#define SOAP_TYPE_PointerTons2__GeologicTime (1750)
#endif

/* struct ns2__PropertyKind * has binding name 'PointerTons2__PropertyKind' for type 'ns2:PropertyKind' */
#ifndef SOAP_TYPE_PointerTons2__PropertyKind
#define SOAP_TYPE_PointerTons2__PropertyKind (1749)
#endif

/* struct ns2__ReferencePressure * has binding name 'PointerTons2__ReferencePressure' for type 'ns2:ReferencePressure' */
#ifndef SOAP_TYPE_PointerTons2__ReferencePressure
#define SOAP_TYPE_PointerTons2__ReferencePressure (1748)
#endif

/* struct ns2__AbstractVerticalCrs * has binding name 'PointerTons2__AbstractVerticalCrs' for type 'ns2:AbstractVerticalCrs' */
#ifndef SOAP_TYPE_PointerTons2__AbstractVerticalCrs
#define SOAP_TYPE_PointerTons2__AbstractVerticalCrs (1746)
#endif

/* struct ns2__AuthorityQualifiedName * has binding name 'PointerTons2__AuthorityQualifiedName' for type 'ns2:AuthorityQualifiedName' */
#ifndef SOAP_TYPE_PointerTons2__AuthorityQualifiedName
#define SOAP_TYPE_PointerTons2__AuthorityQualifiedName (1745)
#endif

/* struct ns2__StringArrayStatistics * has binding name 'PointerTons2__StringArrayStatistics' for type 'ns2:StringArrayStatistics' */
#ifndef SOAP_TYPE_PointerTons2__StringArrayStatistics
#define SOAP_TYPE_PointerTons2__StringArrayStatistics (1723)
#endif

/* struct ns2__BooleanArrayStatistics * has binding name 'PointerTons2__BooleanArrayStatistics' for type 'ns2:BooleanArrayStatistics' */
#ifndef SOAP_TYPE_PointerTons2__BooleanArrayStatistics
#define SOAP_TYPE_PointerTons2__BooleanArrayStatistics (1705)
#endif

/* struct ns2__PublicLandSurveySystemLocation * has binding name 'PointerTons2__PublicLandSurveySystemLocation' for type 'ns2:PublicLandSurveySystemLocation' */
#ifndef SOAP_TYPE_PointerTons2__PublicLandSurveySystemLocation
#define SOAP_TYPE_PointerTons2__PublicLandSurveySystemLocation (1704)
#endif

/* struct ns2__Vector * has binding name 'PointerTons2__Vector' for type 'ns2:Vector' */
#ifndef SOAP_TYPE_PointerTons2__Vector
#define SOAP_TYPE_PointerTons2__Vector (1697)
#endif

/* struct ns2__OSDUReferencePointIntegration * has binding name 'PointerTons2__OSDUReferencePointIntegration' for type 'ns2:OSDUReferencePointIntegration' */
#ifndef SOAP_TYPE_PointerTons2__OSDUReferencePointIntegration
#define SOAP_TYPE_PointerTons2__OSDUReferencePointIntegration (1696)
#endif

/* struct ns2__DateTimeInterval * has binding name 'PointerTons2__DateTimeInterval' for type 'ns2:DateTimeInterval' */
#ifndef SOAP_TYPE_PointerTons2__DateTimeInterval
#define SOAP_TYPE_PointerTons2__DateTimeInterval (1677)
#endif

/* struct ns1__WellboreMarker * has binding name 'PointerTons1__WellboreMarker' for type 'ns1:WellboreMarker' */
#ifndef SOAP_TYPE_PointerTons1__WellboreMarker
#define SOAP_TYPE_PointerTons1__WellboreMarker (1648)
#endif

/* struct ns2__TimeMeasureExt * has binding name 'PointerTons2__TimeMeasureExt' for type 'ns2:TimeMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__TimeMeasureExt
#define SOAP_TYPE_PointerTons2__TimeMeasureExt (1647)
#endif

/* struct ns1__LithostratigraphicUnit * has binding name 'PointerTons1__LithostratigraphicUnit' for type 'ns1:LithostratigraphicUnit' */
#ifndef SOAP_TYPE_PointerTons1__LithostratigraphicUnit
#define SOAP_TYPE_PointerTons1__LithostratigraphicUnit (1645)
#endif

/* struct ns1__GeochronologicalUnit * has binding name 'PointerTons1__GeochronologicalUnit' for type 'ns1:GeochronologicalUnit' */
#ifndef SOAP_TYPE_PointerTons1__GeochronologicalUnit
#define SOAP_TYPE_PointerTons1__GeochronologicalUnit (1643)
#endif

/* struct ns1__ContactIntervalSet * has binding name 'PointerTons1__ContactIntervalSet' for type 'ns1:ContactIntervalSet' */
#ifndef SOAP_TYPE_PointerTons1__ContactIntervalSet
#define SOAP_TYPE_PointerTons1__ContactIntervalSet (1641)
#endif

/* struct ns1__CompletionStatusHistory * has binding name 'PointerTons1__CompletionStatusHistory' for type 'ns1:CompletionStatusHistory' */
#ifndef SOAP_TYPE_PointerTons1__CompletionStatusHistory
#define SOAP_TYPE_PointerTons1__CompletionStatusHistory (1640)
#endif

/* LONG64 * has binding name 'PointerTons1__LevelIntegerCode' for type 'ns1:LevelIntegerCode' */
#ifndef SOAP_TYPE_PointerTons1__LevelIntegerCode
#define SOAP_TYPE_PointerTons1__LevelIntegerCode (1639)
#endif

/* enum ns1__RiskAffectedPersonnel * has binding name 'PointerTons1__RiskAffectedPersonnel' for type 'ns1:RiskAffectedPersonnel' */
#ifndef SOAP_TYPE_PointerTons1__RiskAffectedPersonnel
#define SOAP_TYPE_PointerTons1__RiskAffectedPersonnel (1638)
#endif

/* enum ns1__RiskSubCategory * has binding name 'PointerTons1__RiskSubCategory' for type 'ns1:RiskSubCategory' */
#ifndef SOAP_TYPE_PointerTons1__RiskSubCategory
#define SOAP_TYPE_PointerTons1__RiskSubCategory (1637)
#endif

/* struct ns1__PitVolume * has binding name 'PointerTons1__PitVolume' for type 'ns1:PitVolume' */
#ifndef SOAP_TYPE_PointerTons1__PitVolume
#define SOAP_TYPE_PointerTons1__PitVolume (1636)
#endif

/* struct ns1__PumpOp * has binding name 'PointerTons1__PumpOp' for type 'ns1:PumpOp' */
#ifndef SOAP_TYPE_PointerTons1__PumpOp
#define SOAP_TYPE_PointerTons1__PumpOp (1635)
#endif

/* struct ns1__Personnel * has binding name 'PointerTons1__Personnel' for type 'ns1:Personnel' */
#ifndef SOAP_TYPE_PointerTons1__Personnel
#define SOAP_TYPE_PointerTons1__Personnel (1634)
#endif

/* struct ns1__Inventory * has binding name 'PointerTons1__Inventory' for type 'ns1:Inventory' */
#ifndef SOAP_TYPE_PointerTons1__Inventory
#define SOAP_TYPE_PointerTons1__Inventory (1633)
#endif

/* struct ns1__MudVolume * has binding name 'PointerTons1__MudVolume' for type 'ns1:MudVolume' */
#ifndef SOAP_TYPE_PointerTons1__MudVolume
#define SOAP_TYPE_PointerTons1__MudVolume (1632)
#endif

/* struct ns1__Weather * has binding name 'PointerTons1__Weather' for type 'ns1:Weather' */
#ifndef SOAP_TYPE_PointerTons1__Weather
#define SOAP_TYPE_PointerTons1__Weather (1631)
#endif

/* struct ns1__SupportCraft * has binding name 'PointerTons1__SupportCraft' for type 'ns1:SupportCraft' */
#ifndef SOAP_TYPE_PointerTons1__SupportCraft
#define SOAP_TYPE_PointerTons1__SupportCraft (1630)
#endif

/* struct ns1__Hse * has binding name 'PointerTons1__Hse' for type 'ns1:Hse' */
#ifndef SOAP_TYPE_PointerTons1__Hse
#define SOAP_TYPE_PointerTons1__Hse (1629)
#endif

/* struct ns1__ShakerOp * has binding name 'PointerTons1__ShakerOp' for type 'ns1:ShakerOp' */
#ifndef SOAP_TYPE_PointerTons1__ShakerOp
#define SOAP_TYPE_PointerTons1__ShakerOp (1628)
#endif

/* struct ns1__RigResponse * has binding name 'PointerTons1__RigResponse' for type 'ns1:RigResponse' */
#ifndef SOAP_TYPE_PointerTons1__RigResponse
#define SOAP_TYPE_PointerTons1__RigResponse (1627)
#endif

/* struct ns1__Scr * has binding name 'PointerTons1__Scr' for type 'ns1:Scr' */
#ifndef SOAP_TYPE_PointerTons1__Scr
#define SOAP_TYPE_PointerTons1__Scr (1626)
#endif

/* struct ns1__TrajectoryReport * has binding name 'PointerTons1__TrajectoryReport' for type 'ns1:TrajectoryReport' */
#ifndef SOAP_TYPE_PointerTons1__TrajectoryReport
#define SOAP_TYPE_PointerTons1__TrajectoryReport (1625)
#endif

/* struct ns1__StimISO13503_USCORE5Point * has binding name 'PointerTons1__StimISO13503_USCORE5Point' for type 'ns1:StimISO13503_5Point' */
#ifndef SOAP_TYPE_PointerTons1__StimISO13503_USCORE5Point
#define SOAP_TYPE_PointerTons1__StimISO13503_USCORE5Point (1624)
#endif

/* struct ns1__StimISO13503_USCORE2Properties * has binding name 'PointerTons1__StimISO13503_USCORE2Properties' for type 'ns1:StimISO13503_2Properties' */
#ifndef SOAP_TYPE_PointerTons1__StimISO13503_USCORE2Properties
#define SOAP_TYPE_PointerTons1__StimISO13503_USCORE2Properties (1623)
#endif

/* enum ns1__ProppantAgentKind * has binding name 'PointerTons1__ProppantAgentKind' for type 'ns1:ProppantAgentKind' */
#ifndef SOAP_TYPE_PointerTons1__ProppantAgentKind
#define SOAP_TYPE_PointerTons1__ProppantAgentKind (1622)
#endif

/* struct ns2__AreaPerMassMeasure * has binding name 'PointerTons2__AreaPerMassMeasure' for type 'ns2:AreaPerMassMeasure' */
#ifndef SOAP_TYPE_PointerTons2__AreaPerMassMeasure
#define SOAP_TYPE_PointerTons2__AreaPerMassMeasure (1621)
#endif

/* struct ns1__StimJobDiversion * has binding name 'PointerTons1__StimJobDiversion' for type 'ns1:StimJobDiversion' */
#ifndef SOAP_TYPE_PointerTons1__StimJobDiversion
#define SOAP_TYPE_PointerTons1__StimJobDiversion (1619)
#endif

/* struct ns1__StimReservoirInterval * has binding name 'PointerTons1__StimReservoirInterval' for type 'ns1:StimReservoirInterval' */
#ifndef SOAP_TYPE_PointerTons1__StimReservoirInterval
#define SOAP_TYPE_PointerTons1__StimReservoirInterval (1618)
#endif

/* struct ns1__StimFlowPath * has binding name 'PointerTons1__StimFlowPath' for type 'ns1:StimFlowPath' */
#ifndef SOAP_TYPE_PointerTons1__StimFlowPath
#define SOAP_TYPE_PointerTons1__StimFlowPath (1617)
#endif

/* struct ns1__StimJobStep * has binding name 'PointerTons1__StimJobStep' for type 'ns1:StimJobStep' */
#ifndef SOAP_TYPE_PointerTons1__StimJobStep
#define SOAP_TYPE_PointerTons1__StimJobStep (1616)
#endif

/* struct ns1__StimEvent * has binding name 'PointerTons1__StimEvent' for type 'ns1:StimEvent' */
#ifndef SOAP_TYPE_PointerTons1__StimEvent
#define SOAP_TYPE_PointerTons1__StimEvent (1615)
#endif

/* struct ns1__StimShutInPressure * has binding name 'PointerTons1__StimShutInPressure' for type 'ns1:StimShutInPressure' */
#ifndef SOAP_TYPE_PointerTons1__StimShutInPressure
#define SOAP_TYPE_PointerTons1__StimShutInPressure (1614)
#endif

/* struct ns1__StimJobDiagnosticSession * has binding name 'PointerTons1__StimJobDiagnosticSession' for type 'ns1:StimJobDiagnosticSession' */
#ifndef SOAP_TYPE_PointerTons1__StimJobDiagnosticSession
#define SOAP_TYPE_PointerTons1__StimJobDiagnosticSession (1613)
#endif

/* struct ns1__StimJobLogCatalog * has binding name 'PointerTons1__StimJobLogCatalog' for type 'ns1:StimJobLogCatalog' */
#ifndef SOAP_TYPE_PointerTons1__StimJobLogCatalog
#define SOAP_TYPE_PointerTons1__StimJobLogCatalog (1612)
#endif

/* struct ns1__StimJobMaterialCatalog * has binding name 'PointerTons1__StimJobMaterialCatalog' for type 'ns1:StimJobMaterialCatalog' */
#ifndef SOAP_TYPE_PointerTons1__StimJobMaterialCatalog
#define SOAP_TYPE_PointerTons1__StimJobMaterialCatalog (1611)
#endif

/* struct ns1__StimJobStage * has binding name 'PointerTons1__StimJobStage' for type 'ns1:StimJobStage' */
#ifndef SOAP_TYPE_PointerTons1__StimJobStage
#define SOAP_TYPE_PointerTons1__StimJobStage (1610)
#endif

/* enum ns1__PIDXCommodityCode * has binding name 'PointerTons1__PIDXCommodityCode' for type 'ns1:PIDXCommodityCode' */
#ifndef SOAP_TYPE_PointerTons1__PIDXCommodityCode
#define SOAP_TYPE_PointerTons1__PIDXCommodityCode (1609)
#endif

/* struct ns1__StimPerforationClusterSet * has binding name 'PointerTons1__StimPerforationClusterSet' for type 'ns1:StimPerforationClusterSet' */
#ifndef SOAP_TYPE_PointerTons1__StimPerforationClusterSet
#define SOAP_TYPE_PointerTons1__StimPerforationClusterSet (1608)
#endif

/* enum ns1__StimAdditiveKind * has binding name 'PointerTons1__StimAdditiveKind' for type 'ns1:StimAdditiveKind' */
#ifndef SOAP_TYPE_PointerTons1__StimAdditiveKind
#define SOAP_TYPE_PointerTons1__StimAdditiveKind (1607)
#endif

/* struct ns1__SurveySection * has binding name 'PointerTons1__SurveySection' for type 'ns1:SurveySection' */
#ifndef SOAP_TYPE_PointerTons1__SurveySection
#define SOAP_TYPE_PointerTons1__SurveySection (1606)
#endif

/* struct ns1__WeightingFunction * has binding name 'PointerTons1__WeightingFunction' for type 'ns1:WeightingFunction' */
#ifndef SOAP_TYPE_PointerTons1__WeightingFunction
#define SOAP_TYPE_PointerTons1__WeightingFunction (1605)
#endif

/* struct ns1__ContinuousAzimuthFormula * has binding name 'PointerTons1__ContinuousAzimuthFormula' for type 'ns1:ContinuousAzimuthFormula' */
#ifndef SOAP_TYPE_PointerTons1__ContinuousAzimuthFormula
#define SOAP_TYPE_PointerTons1__ContinuousAzimuthFormula (1604)
#endif

/* struct ns1__AzimuthFormula * has binding name 'PointerTons1__AzimuthFormula' for type 'ns1:AzimuthFormula' */
#ifndef SOAP_TYPE_PointerTons1__AzimuthFormula
#define SOAP_TYPE_PointerTons1__AzimuthFormula (1603)
#endif

/* enum ns1__ErrorKind * has binding name 'PointerTons1__ErrorKind' for type 'ns1:ErrorKind' */
#ifndef SOAP_TYPE_PointerTons1__ErrorKind
#define SOAP_TYPE_PointerTons1__ErrorKind (1602)
#endif

/* struct ns1__ToolErrorModel * has binding name 'PointerTons1__ToolErrorModel' for type 'ns1:ToolErrorModel' */
#ifndef SOAP_TYPE_PointerTons1__ToolErrorModel
#define SOAP_TYPE_PointerTons1__ToolErrorModel (1601)
#endif

/* struct ns1__GyroToolConfiguration * has binding name 'PointerTons1__GyroToolConfiguration' for type 'ns1:GyroToolConfiguration' */
#ifndef SOAP_TYPE_PointerTons1__GyroToolConfiguration
#define SOAP_TYPE_PointerTons1__GyroToolConfiguration (1600)
#endif

/* struct ns1__ErrorTermValue * has binding name 'PointerTons1__ErrorTermValue' for type 'ns1:ErrorTermValue' */
#ifndef SOAP_TYPE_PointerTons1__ErrorTermValue
#define SOAP_TYPE_PointerTons1__ErrorTermValue (1599)
#endif

/* struct ns1__Authorization * has binding name 'PointerTons1__Authorization' for type 'ns1:Authorization' */
#ifndef SOAP_TYPE_PointerTons1__Authorization
#define SOAP_TYPE_PointerTons1__Authorization (1598)
#endif

/* struct ns1__OperatingConstraints * has binding name 'PointerTons1__OperatingConstraints' for type 'ns1:OperatingConstraints' */
#ifndef SOAP_TYPE_PointerTons1__OperatingConstraints
#define SOAP_TYPE_PointerTons1__OperatingConstraints (1597)
#endif

/* char ** has binding name 'PointerTons1__CorrectionConsideredExt' for type 'ns1:CorrectionConsideredExt' */
#ifndef SOAP_TYPE_PointerTons1__CorrectionConsideredExt
#define SOAP_TYPE_PointerTons1__CorrectionConsideredExt (1596)
#endif

/* char ** has binding name 'PointerTons1__OperatingConditionExt' for type 'ns1:OperatingConditionExt' */
#ifndef SOAP_TYPE_PointerTons1__OperatingConditionExt
#define SOAP_TYPE_PointerTons1__OperatingConditionExt (1595)
#endif

/* char ** has binding name 'PointerTons1__ToolSubKindExt' for type 'ns1:ToolSubKindExt' */
#ifndef SOAP_TYPE_PointerTons1__ToolSubKindExt
#define SOAP_TYPE_PointerTons1__ToolSubKindExt (1594)
#endif

/* enum ns1__ToolKind * has binding name 'PointerTons1__ToolKind' for type 'ns1:ToolKind' */
#ifndef SOAP_TYPE_PointerTons1__ToolKind
#define SOAP_TYPE_PointerTons1__ToolKind (1593)
#endif

/* struct ns1__ErrorTerm * has binding name 'PointerTons1__ErrorTerm' for type 'ns1:ErrorTerm' */
#ifndef SOAP_TYPE_PointerTons1__ErrorTerm
#define SOAP_TYPE_PointerTons1__ErrorTerm (1591)
#endif

/* enum ns1__GyroMode * has binding name 'PointerTons1__GyroMode' for type 'ns1:GyroMode' */
#ifndef SOAP_TYPE_PointerTons1__GyroMode
#define SOAP_TYPE_PointerTons1__GyroMode (1590)
#endif

/* enum ns1__GyroAxisCombination * has binding name 'PointerTons1__GyroAxisCombination' for type 'ns1:GyroAxisCombination' */
#ifndef SOAP_TYPE_PointerTons1__GyroAxisCombination
#define SOAP_TYPE_PointerTons1__GyroAxisCombination (1589)
#endif

/* struct ns1__TargetSection * has binding name 'PointerTons1__TargetSection' for type 'ns1:TargetSection' */
#ifndef SOAP_TYPE_PointerTons1__TargetSection
#define SOAP_TYPE_PointerTons1__TargetSection (1588)
#endif

/* struct ns2__ForcePerVolumeMeasureExt * has binding name 'PointerTons2__ForcePerVolumeMeasureExt' for type 'ns2:ForcePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__ForcePerVolumeMeasureExt
#define SOAP_TYPE_PointerTons2__ForcePerVolumeMeasureExt (1587)
#endif

/* struct ns2__ForceMeasureExt * has binding name 'PointerTons2__ForceMeasureExt' for type 'ns2:ForceMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__ForceMeasureExt
#define SOAP_TYPE_PointerTons2__ForceMeasureExt (1585)
#endif

/* struct ns2__VolumePerVolumeMeasureExt * has binding name 'PointerTons2__VolumePerVolumeMeasureExt' for type 'ns2:VolumePerVolumeMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__VolumePerVolumeMeasureExt
#define SOAP_TYPE_PointerTons2__VolumePerVolumeMeasureExt (1583)
#endif

/* struct ns1__DrillReportGasReadingInfo * has binding name 'PointerTons1__DrillReportGasReadingInfo' for type 'ns1:DrillReportGasReadingInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportGasReadingInfo
#define SOAP_TYPE_PointerTons1__DrillReportGasReadingInfo (1581)
#endif

/* struct ns1__DrillReportPerfInfo * has binding name 'PointerTons1__DrillReportPerfInfo' for type 'ns1:DrillReportPerfInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportPerfInfo
#define SOAP_TYPE_PointerTons1__DrillReportPerfInfo (1580)
#endif

/* struct ns1__DrillReportStratInfo * has binding name 'PointerTons1__DrillReportStratInfo' for type 'ns1:DrillReportStratInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportStratInfo
#define SOAP_TYPE_PointerTons1__DrillReportStratInfo (1579)
#endif

/* struct ns1__DrillReportControlIncidentInfo * has binding name 'PointerTons1__DrillReportControlIncidentInfo' for type 'ns1:DrillReportControlIncidentInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportControlIncidentInfo
#define SOAP_TYPE_PointerTons1__DrillReportControlIncidentInfo (1578)
#endif

/* struct ns1__DrillReportEquipFailureInfo * has binding name 'PointerTons1__DrillReportEquipFailureInfo' for type 'ns1:DrillReportEquipFailureInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportEquipFailureInfo
#define SOAP_TYPE_PointerTons1__DrillReportEquipFailureInfo (1577)
#endif

/* struct ns1__DrillReportLithShowInfo * has binding name 'PointerTons1__DrillReportLithShowInfo' for type 'ns1:DrillReportLithShowInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportLithShowInfo
#define SOAP_TYPE_PointerTons1__DrillReportLithShowInfo (1576)
#endif

/* struct ns1__DrillReportFormTestInfo * has binding name 'PointerTons1__DrillReportFormTestInfo' for type 'ns1:DrillReportFormTestInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportFormTestInfo
#define SOAP_TYPE_PointerTons1__DrillReportFormTestInfo (1575)
#endif

/* struct ns1__DrillReportWellTestInfo * has binding name 'PointerTons1__DrillReportWellTestInfo' for type 'ns1:DrillReportWellTestInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportWellTestInfo
#define SOAP_TYPE_PointerTons1__DrillReportWellTestInfo (1574)
#endif

/* struct ns1__DrillReportCoreInfo * has binding name 'PointerTons1__DrillReportCoreInfo' for type 'ns1:DrillReportCoreInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportCoreInfo
#define SOAP_TYPE_PointerTons1__DrillReportCoreInfo (1573)
#endif

/* struct ns1__DrillReportLogInfo * has binding name 'PointerTons1__DrillReportLogInfo' for type 'ns1:DrillReportLogInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportLogInfo
#define SOAP_TYPE_PointerTons1__DrillReportLogInfo (1572)
#endif

/* struct ns1__DrillActivity * has binding name 'PointerTons1__DrillActivity' for type 'ns1:DrillActivity' */
#ifndef SOAP_TYPE_PointerTons1__DrillActivity
#define SOAP_TYPE_PointerTons1__DrillActivity (1571)
#endif

/* struct ns1__DrillReportSurveyStationReport * has binding name 'PointerTons1__DrillReportSurveyStationReport' for type 'ns1:DrillReportSurveyStationReport' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportSurveyStationReport
#define SOAP_TYPE_PointerTons1__DrillReportSurveyStationReport (1570)
#endif

/* struct ns1__TimestampedCommentString * has binding name 'PointerTons1__TimestampedCommentString' for type 'ns1:TimestampedCommentString' */
#ifndef SOAP_TYPE_PointerTons1__TimestampedCommentString
#define SOAP_TYPE_PointerTons1__TimestampedCommentString (1569)
#endif

/* struct ns1__DrillReportPorePressure * has binding name 'PointerTons1__DrillReportPorePressure' for type 'ns1:DrillReportPorePressure' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportPorePressure
#define SOAP_TYPE_PointerTons1__DrillReportPorePressure (1567)
#endif

/* struct ns1__DrillReportStatusInfo * has binding name 'PointerTons1__DrillReportStatusInfo' for type 'ns1:DrillReportStatusInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportStatusInfo
#define SOAP_TYPE_PointerTons1__DrillReportStatusInfo (1566)
#endif

/* struct ns1__DrillReportWellboreInfo * has binding name 'PointerTons1__DrillReportWellboreInfo' for type 'ns1:DrillReportWellboreInfo' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportWellboreInfo
#define SOAP_TYPE_PointerTons1__DrillReportWellboreInfo (1565)
#endif

/* enum ns1__OpsReportVersion * has binding name 'PointerTons1__OpsReportVersion' for type 'ns1:OpsReportVersion' */
#ifndef SOAP_TYPE_PointerTons1__OpsReportVersion
#define SOAP_TYPE_PointerTons1__OpsReportVersion (1564)
#endif

/* struct ns1__Participant * has binding name 'PointerTons1__Participant' for type 'ns1:Participant' */
#ifndef SOAP_TYPE_PointerTons1__Participant
#define SOAP_TYPE_PointerTons1__Participant (1563)
#endif

/* struct ns1__DayCost * has binding name 'PointerTons1__DayCost' for type 'ns1:DayCost' */
#ifndef SOAP_TYPE_PointerTons1__DayCost
#define SOAP_TYPE_PointerTons1__DayCost (1562)
#endif

/* struct ns1__AbstractEventExtension * has binding name 'PointerTons1__AbstractEventExtension' for type 'ns1:AbstractEventExtension' */
#ifndef SOAP_TYPE_PointerTons1__AbstractEventExtension
#define SOAP_TYPE_PointerTons1__AbstractEventExtension (1561)
#endif

/* struct ns1__DownholeComponentReference * has binding name 'PointerTons1__DownholeComponentReference' for type 'ns1:DownholeComponentReference' */
#ifndef SOAP_TYPE_PointerTons1__DownholeComponentReference
#define SOAP_TYPE_PointerTons1__DownholeComponentReference (1560)
#endif

/* struct ns1__EventType * has binding name 'PointerTons1__EventType' for type 'ns1:EventType' */
#ifndef SOAP_TYPE_PointerTons1__EventType
#define SOAP_TYPE_PointerTons1__EventType (1559)
#endif

/* struct ns1__Perforating * has binding name 'PointerTons1__Perforating' for type 'ns1:Perforating' */
#ifndef SOAP_TYPE_PointerTons1__Perforating
#define SOAP_TYPE_PointerTons1__Perforating (1557)
#endif

/* struct ns1__AbstractConnectionType * has binding name 'PointerTons1__AbstractConnectionType' for type 'ns1:AbstractConnectionType' */
#ifndef SOAP_TYPE_PointerTons1__AbstractConnectionType
#define SOAP_TYPE_PointerTons1__AbstractConnectionType (1556)
#endif

/* enum ns1__ConnectionFormType * has binding name 'PointerTons1__ConnectionFormType' for type 'ns1:ConnectionFormType' */
#ifndef SOAP_TYPE_PointerTons1__ConnectionFormType
#define SOAP_TYPE_PointerTons1__ConnectionFormType (1555)
#endif

/* struct ns1__PerforationSets * has binding name 'PointerTons1__PerforationSets' for type 'ns1:PerforationSets' */
#ifndef SOAP_TYPE_PointerTons1__PerforationSets
#define SOAP_TYPE_PointerTons1__PerforationSets (1554)
#endif

/* struct ns1__EquipmentSet * has binding name 'PointerTons1__EquipmentSet' for type 'ns1:EquipmentSet' */
#ifndef SOAP_TYPE_PointerTons1__EquipmentSet
#define SOAP_TYPE_PointerTons1__EquipmentSet (1553)
#endif

/* struct ns1__DownholeStringSet * has binding name 'PointerTons1__DownholeStringSet' for type 'ns1:DownholeStringSet' */
#ifndef SOAP_TYPE_PointerTons1__DownholeStringSet
#define SOAP_TYPE_PointerTons1__DownholeStringSet (1552)
#endif

/* struct ns1__BoreholeStringSet * has binding name 'PointerTons1__BoreholeStringSet' for type 'ns1:BoreholeStringSet' */
#ifndef SOAP_TYPE_PointerTons1__BoreholeStringSet
#define SOAP_TYPE_PointerTons1__BoreholeStringSet (1551)
#endif

/* struct ns1__LoggingToolKind * has binding name 'PointerTons1__LoggingToolKind' for type 'ns1:LoggingToolKind' */
#ifndef SOAP_TYPE_PointerTons1__LoggingToolKind
#define SOAP_TYPE_PointerTons1__LoggingToolKind (1550)
#endif

/* enum ns1__LoggingMethod * has binding name 'PointerTons1__LoggingMethod' for type 'ns1:LoggingMethod' */
#ifndef SOAP_TYPE_PointerTons1__LoggingMethod
#define SOAP_TYPE_PointerTons1__LoggingMethod (1549)
#endif

/* struct ns1__ChannelKind * has binding name 'PointerTons1__ChannelKind' for type 'ns1:ChannelKind' */
#ifndef SOAP_TYPE_PointerTons1__ChannelKind
#define SOAP_TYPE_PointerTons1__ChannelKind (1548)
#endif

/* struct ns1__PassIndexedDepth * has binding name 'PointerTons1__PassIndexedDepth' for type 'ns1:PassIndexedDepth' */
#ifndef SOAP_TYPE_PointerTons1__PassIndexedDepth
#define SOAP_TYPE_PointerTons1__PassIndexedDepth (1547)
#endif

/* struct ns1__DepthRegLogSection * has binding name 'PointerTons1__DepthRegLogSection' for type 'ns1:DepthRegLogSection' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegLogSection
#define SOAP_TYPE_PointerTons1__DepthRegLogSection (1546)
#endif

/* struct ns1__DepthRegLogRect * has binding name 'PointerTons1__DepthRegLogRect' for type 'ns1:DepthRegLogRect' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegLogRect
#define SOAP_TYPE_PointerTons1__DepthRegLogRect (1545)
#endif

/* enum ns1__MessageDigestType * has binding name 'PointerTons1__MessageDigestType' for type 'ns1:MessageDigestType' */
#ifndef SOAP_TYPE_PointerTons1__MessageDigestType
#define SOAP_TYPE_PointerTons1__MessageDigestType (1544)
#endif

/* struct ns2__DigitalStorageMeasure * has binding name 'PointerTons2__DigitalStorageMeasure' for type 'ns2:DigitalStorageMeasure' */
#ifndef SOAP_TYPE_PointerTons2__DigitalStorageMeasure
#define SOAP_TYPE_PointerTons2__DigitalStorageMeasure (1543)
#endif

/* enum ns1__MimeType * has binding name 'PointerTons1__MimeType' for type 'ns1:MimeType' */
#ifndef SOAP_TYPE_PointerTons1__MimeType
#define SOAP_TYPE_PointerTons1__MimeType (1541)
#endif

/* enum ns1__FileNameType * has binding name 'PointerTons1__FileNameType' for type 'ns1:FileNameType' */
#ifndef SOAP_TYPE_PointerTons1__FileNameType
#define SOAP_TYPE_PointerTons1__FileNameType (1540)
#endif

/* struct ns1__CementStageReport * has binding name 'PointerTons1__CementStageReport' for type 'ns1:CementStageReport' */
#ifndef SOAP_TYPE_PointerTons1__CementStageReport
#define SOAP_TYPE_PointerTons1__CementStageReport (1539)
#endif

/* struct ns1__CementStageDesign * has binding name 'PointerTons1__CementStageDesign' for type 'ns1:CementStageDesign' */
#ifndef SOAP_TYPE_PointerTons1__CementStageDesign
#define SOAP_TYPE_PointerTons1__CementStageDesign (1538)
#endif

/* struct ns1__CementingFluid * has binding name 'PointerTons1__CementingFluid' for type 'ns1:CementingFluid' */
#ifndef SOAP_TYPE_PointerTons1__CementingFluid
#define SOAP_TYPE_PointerTons1__CementingFluid (1537)
#endif

/* struct ns1__CementJobDesign * has binding name 'PointerTons1__CementJobDesign' for type 'ns1:CementJobDesign' */
#ifndef SOAP_TYPE_PointerTons1__CementJobDesign
#define SOAP_TYPE_PointerTons1__CementJobDesign (1536)
#endif

/* struct ns1__CementJobReport * has binding name 'PointerTons1__CementJobReport' for type 'ns1:CementJobReport' */
#ifndef SOAP_TYPE_PointerTons1__CementJobReport
#define SOAP_TYPE_PointerTons1__CementJobReport (1535)
#endif

/* struct ns1__WellboreGeometryReport * has binding name 'PointerTons1__WellboreGeometryReport' for type 'ns1:WellboreGeometryReport' */
#ifndef SOAP_TYPE_PointerTons1__WellboreGeometryReport
#define SOAP_TYPE_PointerTons1__WellboreGeometryReport (1534)
#endif

/* enum ns1__CementJobType * has binding name 'PointerTons1__CementJobType' for type 'ns1:CementJobType' */
#ifndef SOAP_TYPE_PointerTons1__CementJobType
#define SOAP_TYPE_PointerTons1__CementJobType (1533)
#endif

/* struct ns1__TubularComponent * has binding name 'PointerTons1__TubularComponent' for type 'ns1:TubularComponent' */
#ifndef SOAP_TYPE_PointerTons1__TubularComponent
#define SOAP_TYPE_PointerTons1__TubularComponent (1532)
#endif

/* struct ns1__TubularUmbilical * has binding name 'PointerTons1__TubularUmbilical' for type 'ns1:TubularUmbilical' */
#ifndef SOAP_TYPE_PointerTons1__TubularUmbilical
#define SOAP_TYPE_PointerTons1__TubularUmbilical (1531)
#endif

/* struct ns1__TubularOSDUIntegration * has binding name 'PointerTons1__TubularOSDUIntegration' for type 'ns1:TubularOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__TubularOSDUIntegration
#define SOAP_TYPE_PointerTons1__TubularOSDUIntegration (1530)
#endif

/* struct ns1__Fluid * has binding name 'PointerTons1__Fluid' for type 'ns1:Fluid' */
#ifndef SOAP_TYPE_PointerTons1__Fluid
#define SOAP_TYPE_PointerTons1__Fluid (1529)
#endif

/* struct ns1__DrillingParams * has binding name 'PointerTons1__DrillingParams' for type 'ns1:DrillingParams' */
#ifndef SOAP_TYPE_PointerTons1__DrillingParams
#define SOAP_TYPE_PointerTons1__DrillingParams (1528)
#endif

/* enum ns1__BhaStatus * has binding name 'PointerTons1__BhaStatus' for type 'ns1:BhaStatus' */
#ifndef SOAP_TYPE_PointerTons1__BhaStatus
#define SOAP_TYPE_PointerTons1__BhaStatus (1527)
#endif

/* struct ns2__Column * has binding name 'PointerTons2__Column' for type 'ns2:Column' */
#ifndef SOAP_TYPE_PointerTons2__Column
#define SOAP_TYPE_PointerTons2__Column (1523)
#endif

/* struct ns2__PropertyKindFacet * has binding name 'PointerTons2__PropertyKindFacet' for type 'ns2:PropertyKindFacet' */
#ifndef SOAP_TYPE_PointerTons2__PropertyKindFacet
#define SOAP_TYPE_PointerTons2__PropertyKindFacet (1521)
#endif

/* struct ns2__AbstractActivityParameter * has binding name 'PointerTons2__AbstractActivityParameter' for type 'ns2:AbstractActivityParameter' */
#ifndef SOAP_TYPE_PointerTons2__AbstractActivityParameter
#define SOAP_TYPE_PointerTons2__AbstractActivityParameter (1518)
#endif

/* enum ns2__ActivityParameterKind * has binding name 'PointerTons2__ActivityParameterKind' for type 'ns2:ActivityParameterKind' */
#ifndef SOAP_TYPE_PointerTons2__ActivityParameterKind
#define SOAP_TYPE_PointerTons2__ActivityParameterKind (1517)
#endif

/* struct ns2__AbstractParameterKey * has binding name 'PointerTons2__AbstractParameterKey' for type 'ns2:AbstractParameterKey' */
#ifndef SOAP_TYPE_PointerTons2__AbstractParameterKey
#define SOAP_TYPE_PointerTons2__AbstractParameterKey (1495)
#endif

/* enum ns2__AddressQualifier * has binding name 'PointerTons2__AddressQualifier' for type 'ns2:AddressQualifier' */
#ifndef SOAP_TYPE_PointerTons2__AddressQualifier
#define SOAP_TYPE_PointerTons2__AddressQualifier (1492)
#endif

/* enum ns2__AddressKindEnum * has binding name 'PointerTons2__AddressKindEnum' for type 'ns2:AddressKindEnum' */
#ifndef SOAP_TYPE_PointerTons2__AddressKindEnum
#define SOAP_TYPE_PointerTons2__AddressKindEnum (1489)
#endif

/* struct ns2__TimeIndex * has binding name 'PointerTons2__TimeIndex' for type 'ns2:TimeIndex' */
#ifndef SOAP_TYPE_PointerTons2__TimeIndex
#define SOAP_TYPE_PointerTons2__TimeIndex (1486)
#endif

/* struct ns2__OSDULineageAssertion * has binding name 'PointerTons2__OSDULineageAssertion' for type 'ns2:OSDULineageAssertion' */
#ifndef SOAP_TYPE_PointerTons2__OSDULineageAssertion
#define SOAP_TYPE_PointerTons2__OSDULineageAssertion (1477)
#endif

/* struct ns2__AbstractPressureValue * has binding name 'PointerTons2__AbstractPressureValue' for type 'ns2:AbstractPressureValue' */
#ifndef SOAP_TYPE_PointerTons2__AbstractPressureValue
#define SOAP_TYPE_PointerTons2__AbstractPressureValue (1474)
#endif

/* struct ns2__AbstractTemperaturePressure * has binding name 'PointerTons2__AbstractTemperaturePressure' for type 'ns2:AbstractTemperaturePressure' */
#ifndef SOAP_TYPE_PointerTons2__AbstractTemperaturePressure
#define SOAP_TYPE_PointerTons2__AbstractTemperaturePressure (1471)
#endif

/* enum ns2__NorthOrSouth * has binding name 'PointerTons2__NorthOrSouth' for type 'ns2:NorthOrSouth' */
#ifndef SOAP_TYPE_PointerTons2__NorthOrSouth
#define SOAP_TYPE_PointerTons2__NorthOrSouth (1455)
#endif

/* enum ns2__EastOrWest * has binding name 'PointerTons2__EastOrWest' for type 'ns2:EastOrWest' */
#ifndef SOAP_TYPE_PointerTons2__EastOrWest
#define SOAP_TYPE_PointerTons2__EastOrWest (1454)
#endif

/* enum ns2__PrincipalMeridian * has binding name 'PointerTons2__PrincipalMeridian' for type 'ns2:PrincipalMeridian' */
#ifndef SOAP_TYPE_PointerTons2__PrincipalMeridian
#define SOAP_TYPE_PointerTons2__PrincipalMeridian (1453)
#endif

/* struct ns2__AbstractIntegerArray * has binding name 'PointerTons2__AbstractIntegerArray' for type 'ns2:AbstractIntegerArray' */
#ifndef SOAP_TYPE_PointerTons2__AbstractIntegerArray
#define SOAP_TYPE_PointerTons2__AbstractIntegerArray (1422)
#endif

/* struct ns2__AbstractValueArray * has binding name 'PointerTons2__AbstractValueArray' for type 'ns2:AbstractValueArray' */
#ifndef SOAP_TYPE_PointerTons2__AbstractValueArray
#define SOAP_TYPE_PointerTons2__AbstractValueArray (1420)
#endif

/* struct ns2__ExternalDataArrayPart * has binding name 'PointerTons2__ExternalDataArrayPart' for type 'ns2:ExternalDataArrayPart' */
#ifndef SOAP_TYPE_PointerTons2__ExternalDataArrayPart
#define SOAP_TYPE_PointerTons2__ExternalDataArrayPart (1386)
#endif

/* char ** has binding name 'PointerToxsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_PointerToxsd__anyURI
#define SOAP_TYPE_PointerToxsd__anyURI (1383)
#endif

/* enum ns2__MeasureClass * has binding name 'PointerTons2__MeasureClass' for type 'ns2:MeasureClass' */
#ifndef SOAP_TYPE_PointerTons2__MeasureClass
#define SOAP_TYPE_PointerTons2__MeasureClass (1368)
#endif

/* struct ns2__StringMeasure * has binding name 'PointerTons2__StringMeasure' for type 'ns2:StringMeasure' */
#ifndef SOAP_TYPE_PointerTons2__StringMeasure
#define SOAP_TYPE_PointerTons2__StringMeasure (1367)
#endif

/* char ** has binding name 'PointerTo_XML' for type '' */
#ifndef SOAP_TYPE_PointerTo_XML
#define SOAP_TYPE_PointerTo_XML (1365)
#endif

/* struct ns2__CustomData * has binding name 'PointerTons2__CustomData' for type 'ns2:CustomData' */
#ifndef SOAP_TYPE_PointerTons2__CustomData
#define SOAP_TYPE_PointerTons2__CustomData (1265)
#endif

/* struct ns2__OSDUIntegration * has binding name 'PointerTons2__OSDUIntegration' for type 'ns2:OSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons2__OSDUIntegration
#define SOAP_TYPE_PointerTons2__OSDUIntegration (1263)
#endif

/* char ** has binding name 'PointerTons2__String64' for type 'ns2:String64' */
#ifndef SOAP_TYPE_PointerTons2__String64
#define SOAP_TYPE_PointerTons2__String64 (1261)
#endif

/* struct ns2__ObjectAlias * has binding name 'PointerTons2__ObjectAlias' for type 'ns2:ObjectAlias' */
#ifndef SOAP_TYPE_PointerTons2__ObjectAlias
#define SOAP_TYPE_PointerTons2__ObjectAlias (1260)
#endif

/* enum ns1__CompletionStatus * has binding name 'PointerTons1__CompletionStatus' for type 'ns1:CompletionStatus' */
#ifndef SOAP_TYPE_PointerTons1__CompletionStatus
#define SOAP_TYPE_PointerTons1__CompletionStatus (1248)
#endif

/* enum ns1__PerforationStatus * has binding name 'PointerTons1__PerforationStatus' for type 'ns1:PerforationStatus' */
#ifndef SOAP_TYPE_PointerTons1__PerforationStatus
#define SOAP_TYPE_PointerTons1__PerforationStatus (1246)
#endif

/* struct ns1__PerforationStatusHistory * has binding name 'PointerTons1__PerforationStatusHistory' for type 'ns1:PerforationStatusHistory' */
#ifndef SOAP_TYPE_PointerTons1__PerforationStatusHistory
#define SOAP_TYPE_PointerTons1__PerforationStatusHistory (1245)
#endif

/* double * has binding name 'PointerTons1__NonNegativeFraction' for type 'ns1:NonNegativeFraction' */
#ifndef SOAP_TYPE_PointerTons1__NonNegativeFraction
#define SOAP_TYPE_PointerTons1__NonNegativeFraction (1243)
#endif

/* enum ns1__PhysicalStatus * has binding name 'PointerTons1__PhysicalStatus' for type 'ns1:PhysicalStatus' */
#ifndef SOAP_TYPE_PointerTons1__PhysicalStatus
#define SOAP_TYPE_PointerTons1__PhysicalStatus (1242)
#endif

/* struct ns1__IntervalStatusHistory * has binding name 'PointerTons1__IntervalStatusHistory' for type 'ns1:IntervalStatusHistory' */
#ifndef SOAP_TYPE_PointerTons1__IntervalStatusHistory
#define SOAP_TYPE_PointerTons1__IntervalStatusHistory (1241)
#endif

/* struct ns1__SlotsInterval * has binding name 'PointerTons1__SlotsInterval' for type 'ns1:SlotsInterval' */
#ifndef SOAP_TYPE_PointerTons1__SlotsInterval
#define SOAP_TYPE_PointerTons1__SlotsInterval (1239)
#endif

/* struct ns1__PerforationSetInterval * has binding name 'PointerTons1__PerforationSetInterval' for type 'ns1:PerforationSetInterval' */
#ifndef SOAP_TYPE_PointerTons1__PerforationSetInterval
#define SOAP_TYPE_PointerTons1__PerforationSetInterval (1237)
#endif

/* struct ns1__OpenHoleInterval * has binding name 'PointerTons1__OpenHoleInterval' for type 'ns1:OpenHoleInterval' */
#ifndef SOAP_TYPE_PointerTons1__OpenHoleInterval
#define SOAP_TYPE_PointerTons1__OpenHoleInterval (1235)
#endif

/* struct ns1__GravelPackInterval * has binding name 'PointerTons1__GravelPackInterval' for type 'ns1:GravelPackInterval' */
#ifndef SOAP_TYPE_PointerTons1__GravelPackInterval
#define SOAP_TYPE_PointerTons1__GravelPackInterval (1233)
#endif

/* LONG64 * has binding name 'PointerTons1__BeaufortScaleIntegerCode' for type 'ns1:BeaufortScaleIntegerCode' */
#ifndef SOAP_TYPE_PointerTons1__BeaufortScaleIntegerCode
#define SOAP_TYPE_PointerTons1__BeaufortScaleIntegerCode (1227)
#endif

/* struct ns1__ShakerScreen * has binding name 'PointerTons1__ShakerScreen' for type 'ns1:ShakerScreen' */
#ifndef SOAP_TYPE_PointerTons1__ShakerScreen
#define SOAP_TYPE_PointerTons1__ShakerScreen (1224)
#endif

/* struct ns1__AnchorState * has binding name 'PointerTons1__AnchorState' for type 'ns1:AnchorState' */
#ifndef SOAP_TYPE_PointerTons1__AnchorState
#define SOAP_TYPE_PointerTons1__AnchorState (1220)
#endif

/* enum ns1__PumpOpType * has binding name 'PointerTons1__PumpOpType' for type 'ns1:PumpOpType' */
#ifndef SOAP_TYPE_PointerTons1__PumpOpType
#define SOAP_TYPE_PointerTons1__PumpOpType (1218)
#endif

/* struct ns1__MudLosses * has binding name 'PointerTons1__MudLosses' for type 'ns1:MudLosses' */
#ifndef SOAP_TYPE_PointerTons1__MudLosses
#define SOAP_TYPE_PointerTons1__MudLosses (1214)
#endif

/* struct ns1__AbstractItemWtOrVolPerUnit * has binding name 'PointerTons1__AbstractItemWtOrVolPerUnit' for type 'ns1:AbstractItemWtOrVolPerUnit' */
#ifndef SOAP_TYPE_PointerTons1__AbstractItemWtOrVolPerUnit
#define SOAP_TYPE_PointerTons1__AbstractItemWtOrVolPerUnit (1211)
#endif

/* struct ns1__Incident * has binding name 'PointerTons1__Incident' for type 'ns1:Incident' */
#ifndef SOAP_TYPE_PointerTons1__Incident
#define SOAP_TYPE_PointerTons1__Incident (1209)
#endif

/* struct ns2__VolumePerLengthMeasure * has binding name 'PointerTons2__VolumePerLengthMeasure' for type 'ns2:VolumePerLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumePerLengthMeasure
#define SOAP_TYPE_PointerTons2__VolumePerLengthMeasure (1199)
#endif

/* struct ns1__StimPressureFlowRate * has binding name 'PointerTons1__StimPressureFlowRate' for type 'ns1:StimPressureFlowRate' */
#ifndef SOAP_TYPE_PointerTons1__StimPressureFlowRate
#define SOAP_TYPE_PointerTons1__StimPressureFlowRate (1197)
#endif

/* struct ns1__StimPumpFlowBackTestStep * has binding name 'PointerTons1__StimPumpFlowBackTestStep' for type 'ns1:StimPumpFlowBackTestStep' */
#ifndef SOAP_TYPE_PointerTons1__StimPumpFlowBackTestStep
#define SOAP_TYPE_PointerTons1__StimPumpFlowBackTestStep (1194)
#endif

/* struct ns1__StimPerforationCluster * has binding name 'PointerTons1__StimPerforationCluster' for type 'ns1:StimPerforationCluster' */
#ifndef SOAP_TYPE_PointerTons1__StimPerforationCluster
#define SOAP_TYPE_PointerTons1__StimPerforationCluster (1191)
#endif

/* struct ns2__MassPerTimeMeasure * has binding name 'PointerTons2__MassPerTimeMeasure' for type 'ns2:MassPerTimeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MassPerTimeMeasure
#define SOAP_TYPE_PointerTons2__MassPerTimeMeasure (1188)
#endif

/* enum ns1__StimMaterialKind * has binding name 'PointerTons1__StimMaterialKind' for type 'ns1:StimMaterialKind' */
#ifndef SOAP_TYPE_PointerTons1__StimMaterialKind
#define SOAP_TYPE_PointerTons1__StimMaterialKind (1184)
#endif

/* struct ns1__StimFluid * has binding name 'PointerTons1__StimFluid' for type 'ns1:StimFluid' */
#ifndef SOAP_TYPE_PointerTons1__StimFluid
#define SOAP_TYPE_PointerTons1__StimFluid (1182)
#endif

/* struct ns1__StimProppantAgent * has binding name 'PointerTons1__StimProppantAgent' for type 'ns1:StimProppantAgent' */
#ifndef SOAP_TYPE_PointerTons1__StimProppantAgent
#define SOAP_TYPE_PointerTons1__StimProppantAgent (1180)
#endif

/* struct ns1__StimAdditive * has binding name 'PointerTons1__StimAdditive' for type 'ns1:StimAdditive' */
#ifndef SOAP_TYPE_PointerTons1__StimAdditive
#define SOAP_TYPE_PointerTons1__StimAdditive (1178)
#endif

/* enum ns1__StimJobDiversionMethod * has binding name 'PointerTons1__StimJobDiversionMethod' for type 'ns1:StimJobDiversionMethod' */
#ifndef SOAP_TYPE_PointerTons1__StimJobDiversionMethod
#define SOAP_TYPE_PointerTons1__StimJobDiversionMethod (1174)
#endif

/* struct ns1__StimPumpFlowBackTest * has binding name 'PointerTons1__StimPumpFlowBackTest' for type 'ns1:StimPumpFlowBackTest' */
#ifndef SOAP_TYPE_PointerTons1__StimPumpFlowBackTest
#define SOAP_TYPE_PointerTons1__StimPumpFlowBackTest (1172)
#endif

/* struct ns1__StimStepDownTest * has binding name 'PointerTons1__StimStepDownTest' for type 'ns1:StimStepDownTest' */
#ifndef SOAP_TYPE_PointerTons1__StimStepDownTest
#define SOAP_TYPE_PointerTons1__StimStepDownTest (1170)
#endif

/* struct ns1__StimStepTest * has binding name 'PointerTons1__StimStepTest' for type 'ns1:StimStepTest' */
#ifndef SOAP_TYPE_PointerTons1__StimStepTest
#define SOAP_TYPE_PointerTons1__StimStepTest (1168)
#endif

/* struct ns1__StimFetTest * has binding name 'PointerTons1__StimFetTest' for type 'ns1:StimFetTest' */
#ifndef SOAP_TYPE_PointerTons1__StimFetTest
#define SOAP_TYPE_PointerTons1__StimFetTest (1166)
#endif

/* struct ns2__VolumetricThermalExpansionMeasure * has binding name 'PointerTons2__VolumetricThermalExpansionMeasure' for type 'ns2:VolumetricThermalExpansionMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumetricThermalExpansionMeasure
#define SOAP_TYPE_PointerTons2__VolumetricThermalExpansionMeasure (1165)
#endif

/* struct ns2__ThermalConductivityMeasure * has binding name 'PointerTons2__ThermalConductivityMeasure' for type 'ns2:ThermalConductivityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ThermalConductivityMeasure
#define SOAP_TYPE_PointerTons2__ThermalConductivityMeasure (1163)
#endif

/* struct ns2__SpecificHeatCapacityMeasure * has binding name 'PointerTons2__SpecificHeatCapacityMeasure' for type 'ns2:SpecificHeatCapacityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__SpecificHeatCapacityMeasure
#define SOAP_TYPE_PointerTons2__SpecificHeatCapacityMeasure (1161)
#endif

/* struct ns2__IsothermalCompressibilityMeasure * has binding name 'PointerTons2__IsothermalCompressibilityMeasure' for type 'ns2:IsothermalCompressibilityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__IsothermalCompressibilityMeasure
#define SOAP_TYPE_PointerTons2__IsothermalCompressibilityMeasure (1159)
#endif

/* LONG64 * has binding name 'PointerTons2__NonNegativeLong' for type 'ns2:NonNegativeLong' */
#ifndef SOAP_TYPE_PointerTons2__NonNegativeLong
#define SOAP_TYPE_PointerTons2__NonNegativeLong (1157)
#endif

/* struct ns2__PermeabilityLengthMeasure * has binding name 'PointerTons2__PermeabilityLengthMeasure' for type 'ns2:PermeabilityLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PermeabilityLengthMeasure
#define SOAP_TYPE_PointerTons2__PermeabilityLengthMeasure (1155)
#endif

/* struct ns1__ISO13503_USCORE2SieveAnalysisData * has binding name 'PointerTons1__ISO13503_USCORE2SieveAnalysisData' for type 'ns1:ISO13503_2SieveAnalysisData' */
#ifndef SOAP_TYPE_PointerTons1__ISO13503_USCORE2SieveAnalysisData
#define SOAP_TYPE_PointerTons1__ISO13503_USCORE2SieveAnalysisData (1152)
#endif

/* struct ns1__ISO13503_USCORE2CrushTestData * has binding name 'PointerTons1__ISO13503_USCORE2CrushTestData' for type 'ns1:ISO13503_2CrushTestData' */
#ifndef SOAP_TYPE_PointerTons1__ISO13503_USCORE2CrushTestData
#define SOAP_TYPE_PointerTons1__ISO13503_USCORE2CrushTestData (1151)
#endif

/* struct ns1__StimMaterialQuantity * has binding name 'PointerTons1__StimMaterialQuantity' for type 'ns1:StimMaterialQuantity' */
#ifndef SOAP_TYPE_PointerTons1__StimMaterialQuantity
#define SOAP_TYPE_PointerTons1__StimMaterialQuantity (1149)
#endif

/* struct ns2__UnitlessMeasure * has binding name 'PointerTons2__UnitlessMeasure' for type 'ns2:UnitlessMeasure' */
#ifndef SOAP_TYPE_PointerTons2__UnitlessMeasure
#define SOAP_TYPE_PointerTons2__UnitlessMeasure (1147)
#endif

/* enum ns1__StimFluidSubtype * has binding name 'PointerTons1__StimFluidSubtype' for type 'ns1:StimFluidSubtype' */
#ifndef SOAP_TYPE_PointerTons1__StimFluidSubtype
#define SOAP_TYPE_PointerTons1__StimFluidSubtype (1145)
#endif

/* enum ns1__StimFluidKind * has binding name 'PointerTons1__StimFluidKind' for type 'ns1:StimFluidKind' */
#ifndef SOAP_TYPE_PointerTons1__StimFluidKind
#define SOAP_TYPE_PointerTons1__StimFluidKind (1144)
#endif

/* struct ns1__StimTubular * has binding name 'PointerTons1__StimTubular' for type 'ns1:StimTubular' */
#ifndef SOAP_TYPE_PointerTons1__StimTubular
#define SOAP_TYPE_PointerTons1__StimTubular (1142)
#endif

/* enum ns1__StimFlowPathType * has binding name 'PointerTons1__StimFlowPathType' for type 'ns1:StimFlowPathType' */
#ifndef SOAP_TYPE_PointerTons1__StimFlowPathType
#define SOAP_TYPE_PointerTons1__StimFlowPathType (1140)
#endif

/* struct ns2__PermeabilityRockMeasure * has binding name 'PointerTons2__PermeabilityRockMeasure' for type 'ns2:PermeabilityRockMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PermeabilityRockMeasure
#define SOAP_TYPE_PointerTons2__PermeabilityRockMeasure (1138)
#endif

/* struct ns2__ForcePerVolumeMeasure * has binding name 'PointerTons2__ForcePerVolumeMeasure' for type 'ns2:ForcePerVolumeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ForcePerVolumeMeasure
#define SOAP_TYPE_PointerTons2__ForcePerVolumeMeasure (1136)
#endif

/* enum ns1__StimFetTestAnalysisMethod * has binding name 'PointerTons1__StimFetTestAnalysisMethod' for type 'ns1:StimFetTestAnalysisMethod' */
#ifndef SOAP_TYPE_PointerTons1__StimFetTestAnalysisMethod
#define SOAP_TYPE_PointerTons1__StimFetTestAnalysisMethod (1134)
#endif

/* enum ns2__ExistenceKind * has binding name 'PointerTons2__ExistenceKind' for type 'ns2:ExistenceKind' */
#ifndef SOAP_TYPE_PointerTons2__ExistenceKind
#define SOAP_TYPE_PointerTons2__ExistenceKind (1129)
#endif

/* struct ns1__AzimuthRange * has binding name 'PointerTons1__AzimuthRange' for type 'ns1:AzimuthRange' */
#ifndef SOAP_TYPE_PointerTons1__AzimuthRange
#define SOAP_TYPE_PointerTons1__AzimuthRange (1127)
#endif

/* struct ns1__CustomOperatingRange * has binding name 'PointerTons1__CustomOperatingRange' for type 'ns1:CustomOperatingRange' */
#ifndef SOAP_TYPE_PointerTons1__CustomOperatingRange
#define SOAP_TYPE_PointerTons1__CustomOperatingRange (1125)
#endif

/* struct ns1__StationaryGyro * has binding name 'PointerTons1__StationaryGyro' for type 'ns1:StationaryGyro' */
#ifndef SOAP_TYPE_PointerTons1__StationaryGyro
#define SOAP_TYPE_PointerTons1__StationaryGyro (1123)
#endif

/* struct ns1__XyAccelerometer * has binding name 'PointerTons1__XyAccelerometer' for type 'ns1:XyAccelerometer' */
#ifndef SOAP_TYPE_PointerTons1__XyAccelerometer
#define SOAP_TYPE_PointerTons1__XyAccelerometer (1121)
#endif

/* struct ns1__ContinuousGyro * has binding name 'PointerTons1__ContinuousGyro' for type 'ns1:ContinuousGyro' */
#ifndef SOAP_TYPE_PointerTons1__ContinuousGyro
#define SOAP_TYPE_PointerTons1__ContinuousGyro (1119)
#endif

/* enum ns1__AccelerometerAxisCombination * has binding name 'PointerTons1__AccelerometerAxisCombination' for type 'ns1:AccelerometerAxisCombination' */
#ifndef SOAP_TYPE_PointerTons1__AccelerometerAxisCombination
#define SOAP_TYPE_PointerTons1__AccelerometerAxisCombination (1118)
#endif

/* struct ns2__LengthPerTimeMeasureExt * has binding name 'PointerTons2__LengthPerTimeMeasureExt' for type 'ns2:LengthPerTimeMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__LengthPerTimeMeasureExt
#define SOAP_TYPE_PointerTons2__LengthPerTimeMeasureExt (1115)
#endif

/* struct ns1__PlaneAngleOperatingRange * has binding name 'PointerTons1__PlaneAngleOperatingRange' for type 'ns1:PlaneAngleOperatingRange' */
#ifndef SOAP_TYPE_PointerTons1__PlaneAngleOperatingRange
#define SOAP_TYPE_PointerTons1__PlaneAngleOperatingRange (1113)
#endif

/* struct ns1__Parameter * has binding name 'PointerTons1__Parameter' for type 'ns1:Parameter' */
#ifndef SOAP_TYPE_PointerTons1__Parameter
#define SOAP_TYPE_PointerTons1__Parameter (1109)
#endif

/* enum ns1__AuthorizationStatus * has binding name 'PointerTons1__AuthorizationStatus' for type 'ns1:AuthorizationStatus' */
#ifndef SOAP_TYPE_PointerTons1__AuthorizationStatus
#define SOAP_TYPE_PointerTons1__AuthorizationStatus (1106)
#endif

/* struct ns2__Abstract3dPosition * has binding name 'PointerTons2__Abstract3dPosition' for type 'ns2:Abstract3dPosition' */
#ifndef SOAP_TYPE_PointerTons2__Abstract3dPosition
#define SOAP_TYPE_PointerTons2__Abstract3dPosition (1099)
#endif

/* struct ns1__TrajectoryStation * has binding name 'PointerTons1__TrajectoryStation' for type 'ns1:TrajectoryStation' */
#ifndef SOAP_TYPE_PointerTons1__TrajectoryStation
#define SOAP_TYPE_PointerTons1__TrajectoryStation (1095)
#endif

/* char ** has binding name 'PointerTons2__String256' for type 'ns2:String256' */
#ifndef SOAP_TYPE_PointerTons2__String256
#define SOAP_TYPE_PointerTons2__String256 (1092)
#endif

/* struct ns2__MagneticFluxDensityMeasure * has binding name 'PointerTons2__MagneticFluxDensityMeasure' for type 'ns2:MagneticFluxDensityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MagneticFluxDensityMeasure
#define SOAP_TYPE_PointerTons2__MagneticFluxDensityMeasure (1088)
#endif

/* struct ns2__LinearAccelerationMeasure * has binding name 'PointerTons2__LinearAccelerationMeasure' for type 'ns2:LinearAccelerationMeasure' */
#ifndef SOAP_TYPE_PointerTons2__LinearAccelerationMeasure
#define SOAP_TYPE_PointerTons2__LinearAccelerationMeasure (1086)
#endif

/* enum ns1__ShowFluorescence * has binding name 'PointerTons1__ShowFluorescence' for type 'ns1:ShowFluorescence' */
#ifndef SOAP_TYPE_PointerTons1__ShowFluorescence
#define SOAP_TYPE_PointerTons1__ShowFluorescence (1081)
#endif

/* enum ns1__ShowLevel * has binding name 'PointerTons1__ShowLevel' for type 'ns1:ShowLevel' */
#ifndef SOAP_TYPE_PointerTons1__ShowLevel
#define SOAP_TYPE_PointerTons1__ShowLevel (1080)
#endif

/* enum ns1__ShowSpeed * has binding name 'PointerTons1__ShowSpeed' for type 'ns1:ShowSpeed' */
#ifndef SOAP_TYPE_PointerTons1__ShowSpeed
#define SOAP_TYPE_PointerTons1__ShowSpeed (1079)
#endif

/* struct ns2__AreaPerAreaMeasure * has binding name 'PointerTons2__AreaPerAreaMeasure' for type 'ns2:AreaPerAreaMeasure' */
#ifndef SOAP_TYPE_PointerTons2__AreaPerAreaMeasure
#define SOAP_TYPE_PointerTons2__AreaPerAreaMeasure (1078)
#endif

/* enum ns1__ShowRating * has binding name 'PointerTons1__ShowRating' for type 'ns1:ShowRating' */
#ifndef SOAP_TYPE_PointerTons1__ShowRating
#define SOAP_TYPE_PointerTons1__ShowRating (1076)
#endif

/* struct ns1__LithologyQualifier * has binding name 'PointerTons1__LithologyQualifier' for type 'ns1:LithologyQualifier' */
#ifndef SOAP_TYPE_PointerTons1__LithologyQualifier
#define SOAP_TYPE_PointerTons1__LithologyQualifier (1075)
#endif

/* struct ns1__CuttingsIntervalShow * has binding name 'PointerTons1__CuttingsIntervalShow' for type 'ns1:CuttingsIntervalShow' */
#ifndef SOAP_TYPE_PointerTons1__CuttingsIntervalShow
#define SOAP_TYPE_PointerTons1__CuttingsIntervalShow (1073)
#endif

/* enum ns2__MatrixCementKind * has binding name 'PointerTons2__MatrixCementKind' for type 'ns2:MatrixCementKind' */
#ifndef SOAP_TYPE_PointerTons2__MatrixCementKind
#define SOAP_TYPE_PointerTons2__MatrixCementKind (1071)
#endif

/* struct ns2__ElectricCurrentMeasure * has binding name 'PointerTons2__ElectricCurrentMeasure' for type 'ns2:ElectricCurrentMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ElectricCurrentMeasure
#define SOAP_TYPE_PointerTons2__ElectricCurrentMeasure (1069)
#endif

/* struct ns2__Citation * has binding name 'PointerTons2__Citation' for type 'ns2:Citation' */
#ifndef SOAP_TYPE_PointerTons2__Citation
#define SOAP_TYPE_PointerTons2__Citation (1057)
#endif

/* struct ns1__GasPeak * has binding name 'PointerTons1__GasPeak' for type 'ns1:GasPeak' */
#ifndef SOAP_TYPE_PointerTons1__GasPeak
#define SOAP_TYPE_PointerTons1__GasPeak (1054)
#endif

/* struct ns1__GasInMud * has binding name 'PointerTons1__GasInMud' for type 'ns1:GasInMud' */
#ifndef SOAP_TYPE_PointerTons1__GasInMud
#define SOAP_TYPE_PointerTons1__GasInMud (1053)
#endif

/* struct ns1__DxcStatistics * has binding name 'PointerTons1__DxcStatistics' for type 'ns1:DxcStatistics' */
#ifndef SOAP_TYPE_PointerTons1__DxcStatistics
#define SOAP_TYPE_PointerTons1__DxcStatistics (1049)
#endif

/* struct ns1__EcdStatistics * has binding name 'PointerTons1__EcdStatistics' for type 'ns1:EcdStatistics' */
#ifndef SOAP_TYPE_PointerTons1__EcdStatistics
#define SOAP_TYPE_PointerTons1__EcdStatistics (1047)
#endif

/* struct ns1__MudDensityStatistics * has binding name 'PointerTons1__MudDensityStatistics' for type 'ns1:MudDensityStatistics' */
#ifndef SOAP_TYPE_PointerTons1__MudDensityStatistics
#define SOAP_TYPE_PointerTons1__MudDensityStatistics (1045)
#endif

/* struct ns1__RpmStatistics * has binding name 'PointerTons1__RpmStatistics' for type 'ns1:RpmStatistics' */
#ifndef SOAP_TYPE_PointerTons1__RpmStatistics
#define SOAP_TYPE_PointerTons1__RpmStatistics (1043)
#endif

/* struct ns1__TorqueCurrentStatistics * has binding name 'PointerTons1__TorqueCurrentStatistics' for type 'ns1:TorqueCurrentStatistics' */
#ifndef SOAP_TYPE_PointerTons1__TorqueCurrentStatistics
#define SOAP_TYPE_PointerTons1__TorqueCurrentStatistics (1041)
#endif

/* struct ns1__TorqueStatistics * has binding name 'PointerTons1__TorqueStatistics' for type 'ns1:TorqueStatistics' */
#ifndef SOAP_TYPE_PointerTons1__TorqueStatistics
#define SOAP_TYPE_PointerTons1__TorqueStatistics (1039)
#endif

/* struct ns1__WobStatistics * has binding name 'PointerTons1__WobStatistics' for type 'ns1:WobStatistics' */
#ifndef SOAP_TYPE_PointerTons1__WobStatistics
#define SOAP_TYPE_PointerTons1__WobStatistics (1037)
#endif

/* struct ns1__RopStatistics * has binding name 'PointerTons1__RopStatistics' for type 'ns1:RopStatistics' */
#ifndef SOAP_TYPE_PointerTons1__RopStatistics
#define SOAP_TYPE_PointerTons1__RopStatistics (1035)
#endif

/* enum ns1__PitType * has binding name 'PointerTons1__PitType' for type 'ns1:PitType' */
#ifndef SOAP_TYPE_PointerTons1__PitType
#define SOAP_TYPE_PointerTons1__PitType (1029)
#endif

/* struct ns2__PowerPerPowerMeasure * has binding name 'PointerTons2__PowerPerPowerMeasure' for type 'ns2:PowerPerPowerMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PowerPerPowerMeasure
#define SOAP_TYPE_PointerTons2__PowerPerPowerMeasure (1027)
#endif

/* LONG64 * has binding name 'PointerTons1__PumpActionIntegerCode' for type 'ns1:PumpActionIntegerCode' */
#ifndef SOAP_TYPE_PointerTons1__PumpActionIntegerCode
#define SOAP_TYPE_PointerTons1__PumpActionIntegerCode (1025)
#endif

/* enum ns1__PumpType * has binding name 'PointerTons1__PumpType' for type 'ns1:PumpType' */
#ifndef SOAP_TYPE_PointerTons1__PumpType
#define SOAP_TYPE_PointerTons1__PumpType (1024)
#endif

/* enum ns1__BopType * has binding name 'PointerTons1__BopType' for type 'ns1:BopType' */
#ifndef SOAP_TYPE_PointerTons1__BopType
#define SOAP_TYPE_PointerTons1__BopType (1019)
#endif

/* struct ns1__BopComponent * has binding name 'PointerTons1__BopComponent' for type 'ns1:BopComponent' */
#ifndef SOAP_TYPE_PointerTons1__BopComponent
#define SOAP_TYPE_PointerTons1__BopComponent (1018)
#endif

/* enum ns1__WellTestType * has binding name 'PointerTons1__WellTestType' for type 'ns1:WellTestType' */
#ifndef SOAP_TYPE_PointerTons1__WellTestType
#define SOAP_TYPE_PointerTons1__WellTestType (1015)
#endif

/* struct ns1__DrillReportSurveyStation * has binding name 'PointerTons1__DrillReportSurveyStation' for type 'ns1:DrillReportSurveyStation' */
#ifndef SOAP_TYPE_PointerTons1__DrillReportSurveyStation
#define SOAP_TYPE_PointerTons1__DrillReportSurveyStation (1012)
#endif

/* enum ns2__NorthReferenceKind * has binding name 'PointerTons2__NorthReferenceKind' for type 'ns2:NorthReferenceKind' */
#ifndef SOAP_TYPE_PointerTons2__NorthReferenceKind
#define SOAP_TYPE_PointerTons2__NorthReferenceKind (1011)
#endif

/* struct ns2__LengthPerLengthMeasureExt * has binding name 'PointerTons2__LengthPerLengthMeasureExt' for type 'ns2:LengthPerLengthMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__LengthPerLengthMeasureExt
#define SOAP_TYPE_PointerTons2__LengthPerLengthMeasureExt (1010)
#endif

/* struct ns1__TrajectoryOSDUIntegration * has binding name 'PointerTons1__TrajectoryOSDUIntegration' for type 'ns1:TrajectoryOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__TrajectoryOSDUIntegration
#define SOAP_TYPE_PointerTons1__TrajectoryOSDUIntegration (1008)
#endif

/* struct ns2__PlaneAngleMeasureExt * has binding name 'PointerTons2__PlaneAngleMeasureExt' for type 'ns2:PlaneAngleMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__PlaneAngleMeasureExt
#define SOAP_TYPE_PointerTons2__PlaneAngleMeasureExt (1006)
#endif

/* struct ns2__Abstract2dPosition * has binding name 'PointerTons2__Abstract2dPosition' for type 'ns2:Abstract2dPosition' */
#ifndef SOAP_TYPE_PointerTons2__Abstract2dPosition
#define SOAP_TYPE_PointerTons2__Abstract2dPosition (1003)
#endif

/* struct ns2__AbstractElevation * has binding name 'PointerTons2__AbstractElevation' for type 'ns2:AbstractElevation' */
#ifndef SOAP_TYPE_PointerTons2__AbstractElevation
#define SOAP_TYPE_PointerTons2__AbstractElevation (999)
#endif

/* enum ns1__PresTestType * has binding name 'PointerTons1__PresTestType' for type 'ns1:PresTestType' */
#ifndef SOAP_TYPE_PointerTons1__PresTestType
#define SOAP_TYPE_PointerTons1__PresTestType (997)
#endif

/* enum ns1__WellboreType * has binding name 'PointerTons1__WellboreType' for type 'ns1:WellboreType' */
#ifndef SOAP_TYPE_PointerTons1__WellboreType
#define SOAP_TYPE_PointerTons1__WellboreType (996)
#endif

/* struct ns1__AbstractBottomHoleTemperature * has binding name 'PointerTons1__AbstractBottomHoleTemperature' for type 'ns1:AbstractBottomHoleTemperature' */
#ifndef SOAP_TYPE_PointerTons1__AbstractBottomHoleTemperature
#define SOAP_TYPE_PointerTons1__AbstractBottomHoleTemperature (992)
#endif

/* enum ns1__GasPeakType * has binding name 'PointerTons1__GasPeakType' for type 'ns1:GasPeakType' */
#ifndef SOAP_TYPE_PointerTons1__GasPeakType
#define SOAP_TYPE_PointerTons1__GasPeakType (989)
#endif

/* enum ns1__InnerBarrelType * has binding name 'PointerTons1__InnerBarrelType' for type 'ns1:InnerBarrelType' */
#ifndef SOAP_TYPE_PointerTons1__InnerBarrelType
#define SOAP_TYPE_PointerTons1__InnerBarrelType (985)
#endif

/* enum ns1__WellKillingProcedureType * has binding name 'PointerTons1__WellKillingProcedureType' for type 'ns1:WellKillingProcedureType' */
#ifndef SOAP_TYPE_PointerTons1__WellKillingProcedureType
#define SOAP_TYPE_PointerTons1__WellKillingProcedureType (983)
#endif

/* enum ns1__WellControlIncidentType * has binding name 'PointerTons1__WellControlIncidentType' for type 'ns1:WellControlIncidentType' */
#ifndef SOAP_TYPE_PointerTons1__WellControlIncidentType
#define SOAP_TYPE_PointerTons1__WellControlIncidentType (982)
#endif

/* enum ns1__ItemState * has binding name 'PointerTons1__ItemState' for type 'ns1:ItemState' */
#ifndef SOAP_TYPE_PointerTons1__ItemState
#define SOAP_TYPE_PointerTons1__ItemState (980)
#endif

/* enum ns1__StateDetailActivity * has binding name 'PointerTons1__StateDetailActivity' for type 'ns1:StateDetailActivity' */
#ifndef SOAP_TYPE_PointerTons1__StateDetailActivity
#define SOAP_TYPE_PointerTons1__StateDetailActivity (979)
#endif

/* enum ns1__DrillActivityClassType * has binding name 'PointerTons1__DrillActivityClassType' for type 'ns1:DrillActivityClassType' */
#ifndef SOAP_TYPE_PointerTons1__DrillActivityClassType
#define SOAP_TYPE_PointerTons1__DrillActivityClassType (978)
#endif

/* enum ns1__DrillActivityCode * has binding name 'PointerTons1__DrillActivityCode' for type 'ns1:DrillActivityCode' */
#ifndef SOAP_TYPE_PointerTons1__DrillActivityCode
#define SOAP_TYPE_PointerTons1__DrillActivityCode (977)
#endif

/* struct ns2__NameStruct * has binding name 'PointerTons2__NameStruct' for type 'ns2:NameStruct' */
#ifndef SOAP_TYPE_PointerTons2__NameStruct
#define SOAP_TYPE_PointerTons2__NameStruct (976)
#endif

/* enum ns1__PerfConveyanceMethod * has binding name 'PointerTons1__PerfConveyanceMethod' for type 'ns1:PerfConveyanceMethod' */
#ifndef SOAP_TYPE_PointerTons1__PerfConveyanceMethod
#define SOAP_TYPE_PointerTons1__PerfConveyanceMethod (968)
#endif

/* struct ns1__MemberObject * has binding name 'PointerTons1__MemberObject' for type 'ns1:MemberObject' */
#ifndef SOAP_TYPE_PointerTons1__MemberObject
#define SOAP_TYPE_PointerTons1__MemberObject (966)
#endif

/* enum ns2__DataIndexKind * has binding name 'PointerTons2__DataIndexKind' for type 'ns2:DataIndexKind' */
#ifndef SOAP_TYPE_PointerTons2__DataIndexKind
#define SOAP_TYPE_PointerTons2__DataIndexKind (964)
#endif

/* struct ns1__DownholeStringReference * has binding name 'PointerTons1__DownholeStringReference' for type 'ns1:DownholeStringReference' */
#ifndef SOAP_TYPE_PointerTons1__DownholeStringReference
#define SOAP_TYPE_PointerTons1__DownholeStringReference (962)
#endif

/* struct ns1__BoreholeStringReference * has binding name 'PointerTons1__BoreholeStringReference' for type 'ns1:BoreholeStringReference' */
#ifndef SOAP_TYPE_PointerTons1__BoreholeStringReference
#define SOAP_TYPE_PointerTons1__BoreholeStringReference (960)
#endif

/* struct ns2__DataObjectComponentReference * has binding name 'PointerTons2__DataObjectComponentReference' for type 'ns2:DataObjectComponentReference' */
#ifndef SOAP_TYPE_PointerTons2__DataObjectComponentReference
#define SOAP_TYPE_PointerTons2__DataObjectComponentReference (958)
#endif

/* struct ns1__Assembly * has binding name 'PointerTons1__Assembly' for type 'ns1:Assembly' */
#ifndef SOAP_TYPE_PointerTons1__Assembly
#define SOAP_TYPE_PointerTons1__Assembly (930)
#endif

/* struct ns1__EquipmentConnection * has binding name 'PointerTons1__EquipmentConnection' for type 'ns1:EquipmentConnection' */
#ifndef SOAP_TYPE_PointerTons1__EquipmentConnection
#define SOAP_TYPE_PointerTons1__EquipmentConnection (929)
#endif

/* struct ns1__ReferenceContainer * has binding name 'PointerTons1__ReferenceContainer' for type 'ns1:ReferenceContainer' */
#ifndef SOAP_TYPE_PointerTons1__ReferenceContainer
#define SOAP_TYPE_PointerTons1__ReferenceContainer (928)
#endif

/* struct ns1__ObjectSequence * has binding name 'PointerTons1__ObjectSequence' for type 'ns1:ObjectSequence' */
#ifndef SOAP_TYPE_PointerTons1__ObjectSequence
#define SOAP_TYPE_PointerTons1__ObjectSequence (927)
#endif

/* struct ns1__PerforationSet * has binding name 'PointerTons1__PerforationSet' for type 'ns1:PerforationSet' */
#ifndef SOAP_TYPE_PointerTons1__PerforationSet
#define SOAP_TYPE_PointerTons1__PerforationSet (925)
#endif

/* enum ns1__PerforationToolType * has binding name 'PointerTons1__PerforationToolType' for type 'ns1:PerforationToolType' */
#ifndef SOAP_TYPE_PointerTons1__PerforationToolType
#define SOAP_TYPE_PointerTons1__PerforationToolType (923)
#endif

/* struct ns2__ReciprocalLengthMeasure * has binding name 'PointerTons2__ReciprocalLengthMeasure' for type 'ns2:ReciprocalLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ReciprocalLengthMeasure
#define SOAP_TYPE_PointerTons2__ReciprocalLengthMeasure (921)
#endif

/* enum ns1__GeologyType * has binding name 'PointerTons1__GeologyType' for type 'ns1:GeologyType' */
#ifndef SOAP_TYPE_PointerTons1__GeologyType
#define SOAP_TYPE_PointerTons1__GeologyType (918)
#endif

/* struct ns1__EventRefInfo * has binding name 'PointerTons1__EventRefInfo' for type 'ns1:EventRefInfo' */
#ifndef SOAP_TYPE_PointerTons1__EventRefInfo
#define SOAP_TYPE_PointerTons1__EventRefInfo (917)
#endif

/* struct ns1__Equipment * has binding name 'PointerTons1__Equipment' for type 'ns1:Equipment' */
#ifndef SOAP_TYPE_PointerTons1__Equipment
#define SOAP_TYPE_PointerTons1__Equipment (915)
#endif

/* struct ns1__PerfHole * has binding name 'PointerTons1__PerfHole' for type 'ns1:PerfHole' */
#ifndef SOAP_TYPE_PointerTons1__PerfHole
#define SOAP_TYPE_PointerTons1__PerfHole (913)
#endif

/* struct ns1__PerfSlot * has binding name 'PointerTons1__PerfSlot' for type 'ns1:PerfSlot' */
#ifndef SOAP_TYPE_PointerTons1__PerfSlot
#define SOAP_TYPE_PointerTons1__PerfSlot (911)
#endif

/* struct ns1__ExtPropNameValue * has binding name 'PointerTons1__ExtPropNameValue' for type 'ns1:ExtPropNameValue' */
#ifndef SOAP_TYPE_PointerTons1__ExtPropNameValue
#define SOAP_TYPE_PointerTons1__ExtPropNameValue (909)
#endif

/* enum ns1__Coating * has binding name 'PointerTons1__Coating' for type 'ns1:Coating' */
#ifndef SOAP_TYPE_PointerTons1__Coating
#define SOAP_TYPE_PointerTons1__Coating (907)
#endif

/* enum ns1__GradeType * has binding name 'PointerTons1__GradeType' for type 'ns1:GradeType' */
#ifndef SOAP_TYPE_PointerTons1__GradeType
#define SOAP_TYPE_PointerTons1__GradeType (906)
#endif

/* struct ns1__DownholeString * has binding name 'PointerTons1__DownholeString' for type 'ns1:DownholeString' */
#ifndef SOAP_TYPE_PointerTons1__DownholeString
#define SOAP_TYPE_PointerTons1__DownholeString (904)
#endif

/* struct ns1__StringEquipmentSet * has binding name 'PointerTons1__StringEquipmentSet' for type 'ns1:StringEquipmentSet' */
#ifndef SOAP_TYPE_PointerTons1__StringEquipmentSet
#define SOAP_TYPE_PointerTons1__StringEquipmentSet (902)
#endif

/* enum ns1__SubStringType * has binding name 'PointerTons1__SubStringType' for type 'ns1:SubStringType' */
#ifndef SOAP_TYPE_PointerTons1__SubStringType
#define SOAP_TYPE_PointerTons1__SubStringType (900)
#endif

/* struct ns1__BoreholeString * has binding name 'PointerTons1__BoreholeString' for type 'ns1:BoreholeString' */
#ifndef SOAP_TYPE_PointerTons1__BoreholeString
#define SOAP_TYPE_PointerTons1__BoreholeString (898)
#endif

/* struct ns1__StringAccessory * has binding name 'PointerTons1__StringAccessory' for type 'ns1:StringAccessory' */
#ifndef SOAP_TYPE_PointerTons1__StringAccessory
#define SOAP_TYPE_PointerTons1__StringAccessory (896)
#endif

/* struct ns1__GeologyFeature * has binding name 'PointerTons1__GeologyFeature' for type 'ns1:GeologyFeature' */
#ifndef SOAP_TYPE_PointerTons1__GeologyFeature
#define SOAP_TYPE_PointerTons1__GeologyFeature (894)
#endif

/* struct ns1__Borehole * has binding name 'PointerTons1__Borehole' for type 'ns1:Borehole' */
#ifndef SOAP_TYPE_PointerTons1__Borehole
#define SOAP_TYPE_PointerTons1__Borehole (892)
#endif

/* struct ns1__EventInfo * has binding name 'PointerTons1__EventInfo' for type 'ns1:EventInfo' */
#ifndef SOAP_TYPE_PointerTons1__EventInfo
#define SOAP_TYPE_PointerTons1__EventInfo (890)
#endif

/* struct ns2__AbstractTvdInterval * has binding name 'PointerTons2__AbstractTvdInterval' for type 'ns2:AbstractTvdInterval' */
#ifndef SOAP_TYPE_PointerTons2__AbstractTvdInterval
#define SOAP_TYPE_PointerTons2__AbstractTvdInterval (888)
#endif

/* enum ns1__BoreholeType * has binding name 'PointerTons1__BoreholeType' for type 'ns1:BoreholeType' */
#ifndef SOAP_TYPE_PointerTons1__BoreholeType
#define SOAP_TYPE_PointerTons1__BoreholeType (886)
#endif

/* struct ns1__StringEquipment * has binding name 'PointerTons1__StringEquipment' for type 'ns1:StringEquipment' */
#ifndef SOAP_TYPE_PointerTons1__StringEquipment
#define SOAP_TYPE_PointerTons1__StringEquipment (884)
#endif

/* struct ns1__LogChannelAxis * has binding name 'PointerTons1__LogChannelAxis' for type 'ns1:LogChannelAxis' */
#ifndef SOAP_TYPE_PointerTons1__LogChannelAxis
#define SOAP_TYPE_PointerTons1__LogChannelAxis (872)
#endif

/* struct ns1__DepthRegTrackCurve * has binding name 'PointerTons1__DepthRegTrackCurve' for type 'ns1:DepthRegTrackCurve' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegTrackCurve
#define SOAP_TYPE_PointerTons1__DepthRegTrackCurve (862)
#endif

/* struct ns1__DepthRegTrack * has binding name 'PointerTons1__DepthRegTrack' for type 'ns1:DepthRegTrack' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegTrack
#define SOAP_TYPE_PointerTons1__DepthRegTrack (860)
#endif

/* struct ns1__DepthRegCalibrationPoint * has binding name 'PointerTons1__DepthRegCalibrationPoint' for type 'ns1:DepthRegCalibrationPoint' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegCalibrationPoint
#define SOAP_TYPE_PointerTons1__DepthRegCalibrationPoint (858)
#endif

/* struct ns2__AbstractInterval * has binding name 'PointerTons2__AbstractInterval' for type 'ns2:AbstractInterval' */
#ifndef SOAP_TYPE_PointerTons2__AbstractInterval
#define SOAP_TYPE_PointerTons2__AbstractInterval (857)
#endif

/* enum ns1__LogSectionType * has binding name 'PointerTons1__LogSectionType' for type 'ns1:LogSectionType' */
#ifndef SOAP_TYPE_PointerTons1__LogSectionType
#define SOAP_TYPE_PointerTons1__LogSectionType (855)
#endif

/* struct ns1__DepthRegRectangle * has binding name 'PointerTons1__DepthRegRectangle' for type 'ns1:DepthRegRectangle' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegRectangle
#define SOAP_TYPE_PointerTons1__DepthRegRectangle (853)
#endif

/* enum ns1__LogRectangleType * has binding name 'PointerTons1__LogRectangleType' for type 'ns1:LogRectangleType' */
#ifndef SOAP_TYPE_PointerTons1__LogRectangleType
#define SOAP_TYPE_PointerTons1__LogRectangleType (851)
#endif

/* struct ns1__DepthRegPoint * has binding name 'PointerTons1__DepthRegPoint' for type 'ns1:DepthRegPoint' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegPoint
#define SOAP_TYPE_PointerTons1__DepthRegPoint (849)
#endif

/* struct ns1__DepthRegParameter * has binding name 'PointerTons1__DepthRegParameter' for type 'ns1:DepthRegParameter' */
#ifndef SOAP_TYPE_PointerTons1__DepthRegParameter
#define SOAP_TYPE_PointerTons1__DepthRegParameter (847)
#endif

/* char ** has binding name 'PointerTons2__String2000' for type 'ns2:String2000' */
#ifndef SOAP_TYPE_PointerTons2__String2000
#define SOAP_TYPE_PointerTons2__String2000 (845)
#endif

/* struct ns2__GenericMeasure * has binding name 'PointerTons2__GenericMeasure' for type 'ns2:GenericMeasure' */
#ifndef SOAP_TYPE_PointerTons2__GenericMeasure
#define SOAP_TYPE_PointerTons2__GenericMeasure (844)
#endif

/* struct ns2__LengthMeasureExt * has binding name 'PointerTons2__LengthMeasureExt' for type 'ns2:LengthMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__LengthMeasureExt
#define SOAP_TYPE_PointerTons2__LengthMeasureExt (841)
#endif

/* struct ns1__WellboreGeometrySection * has binding name 'PointerTons1__WellboreGeometrySection' for type 'ns1:WellboreGeometrySection' */
#ifndef SOAP_TYPE_PointerTons1__WellboreGeometrySection
#define SOAP_TYPE_PointerTons1__WellboreGeometrySection (839)
#endif

/* struct ns1__CementAdditive * has binding name 'PointerTons1__CementAdditive' for type 'ns1:CementAdditive' */
#ifndef SOAP_TYPE_PointerTons1__CementAdditive
#define SOAP_TYPE_PointerTons1__CementAdditive (836)
#endif

/* struct ns2__DimensionlessMeasure * has binding name 'PointerTons2__DimensionlessMeasure' for type 'ns2:DimensionlessMeasure' */
#ifndef SOAP_TYPE_PointerTons2__DimensionlessMeasure
#define SOAP_TYPE_PointerTons2__DimensionlessMeasure (835)
#endif

/* struct ns2__VolumePerMassMeasure * has binding name 'PointerTons2__VolumePerMassMeasure' for type 'ns2:VolumePerMassMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumePerMassMeasure
#define SOAP_TYPE_PointerTons2__VolumePerMassMeasure (833)
#endif

/* LONG64 * has binding name 'PointerTons2__PositiveLong' for type 'ns2:PositiveLong' */
#ifndef SOAP_TYPE_PointerTons2__PositiveLong
#define SOAP_TYPE_PointerTons2__PositiveLong (831)
#endif

/* struct ns1__FluidLocation * has binding name 'PointerTons1__FluidLocation' for type 'ns1:FluidLocation' */
#ifndef SOAP_TYPE_PointerTons1__FluidLocation
#define SOAP_TYPE_PointerTons1__FluidLocation (822)
#endif

/* struct ns1__CementPumpScheduleStep * has binding name 'PointerTons1__CementPumpScheduleStep' for type 'ns1:CementPumpScheduleStep' */
#ifndef SOAP_TYPE_PointerTons1__CementPumpScheduleStep
#define SOAP_TYPE_PointerTons1__CementPumpScheduleStep (820)
#endif

/* struct ns2__MdInterval * has binding name 'PointerTons2__MdInterval' for type 'ns2:MdInterval' */
#ifndef SOAP_TYPE_PointerTons2__MdInterval
#define SOAP_TYPE_PointerTons2__MdInterval (813)
#endif

/* enum ns1__NameTagLocation * has binding name 'PointerTons1__NameTagLocation' for type 'ns1:NameTagLocation' */
#ifndef SOAP_TYPE_PointerTons1__NameTagLocation
#define SOAP_TYPE_PointerTons1__NameTagLocation (810)
#endif

/* enum ns1__NameTagTechnology * has binding name 'PointerTons1__NameTagTechnology' for type 'ns1:NameTagTechnology' */
#ifndef SOAP_TYPE_PointerTons1__NameTagTechnology
#define SOAP_TYPE_PointerTons1__NameTagTechnology (809)
#endif

/* struct ns1__TubularUmbilicalOSDUIntegration * has binding name 'PointerTons1__TubularUmbilicalOSDUIntegration' for type 'ns1:TubularUmbilicalOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__TubularUmbilicalOSDUIntegration
#define SOAP_TYPE_PointerTons1__TubularUmbilicalOSDUIntegration (808)
#endif

/* struct ns1__TubularUmbilicalCut * has binding name 'PointerTons1__TubularUmbilicalCut' for type 'ns1:TubularUmbilicalCut' */
#ifndef SOAP_TYPE_PointerTons1__TubularUmbilicalCut
#define SOAP_TYPE_PointerTons1__TubularUmbilicalCut (806)
#endif

/* struct ns2__ComponentReference * has binding name 'PointerTons2__ComponentReference' for type 'ns2:ComponentReference' */
#ifndef SOAP_TYPE_PointerTons2__ComponentReference
#define SOAP_TYPE_PointerTons2__ComponentReference (804)
#endif

/* struct ns1__OSDUTubularAssemblyStatus * has binding name 'PointerTons1__OSDUTubularAssemblyStatus' for type 'ns1:OSDUTubularAssemblyStatus' */
#ifndef SOAP_TYPE_PointerTons1__OSDUTubularAssemblyStatus
#define SOAP_TYPE_PointerTons1__OSDUTubularAssemblyStatus (801)
#endif

/* struct ns1__Nozzle * has binding name 'PointerTons1__Nozzle' for type 'ns1:Nozzle' */
#ifndef SOAP_TYPE_PointerTons1__Nozzle
#define SOAP_TYPE_PointerTons1__Nozzle (799)
#endif

/* struct ns1__BitRecord * has binding name 'PointerTons1__BitRecord' for type 'ns1:BitRecord' */
#ifndef SOAP_TYPE_PointerTons1__BitRecord
#define SOAP_TYPE_PointerTons1__BitRecord (798)
#endif

/* struct ns1__RotarySteerableTool * has binding name 'PointerTons1__RotarySteerableTool' for type 'ns1:RotarySteerableTool' */
#ifndef SOAP_TYPE_PointerTons1__RotarySteerableTool
#define SOAP_TYPE_PointerTons1__RotarySteerableTool (797)
#endif

/* struct ns1__HoleOpener * has binding name 'PointerTons1__HoleOpener' for type 'ns1:HoleOpener' */
#ifndef SOAP_TYPE_PointerTons1__HoleOpener
#define SOAP_TYPE_PointerTons1__HoleOpener (796)
#endif

/* struct ns1__Bend * has binding name 'PointerTons1__Bend' for type 'ns1:Bend' */
#ifndef SOAP_TYPE_PointerTons1__Bend
#define SOAP_TYPE_PointerTons1__Bend (795)
#endif

/* struct ns1__Stabilizer * has binding name 'PointerTons1__Stabilizer' for type 'ns1:Stabilizer' */
#ifndef SOAP_TYPE_PointerTons1__Stabilizer
#define SOAP_TYPE_PointerTons1__Stabilizer (794)
#endif

/* struct ns1__Motor * has binding name 'PointerTons1__Motor' for type 'ns1:Motor' */
#ifndef SOAP_TYPE_PointerTons1__Motor
#define SOAP_TYPE_PointerTons1__Motor (793)
#endif

/* struct ns1__MwdTool * has binding name 'PointerTons1__MwdTool' for type 'ns1:MwdTool' */
#ifndef SOAP_TYPE_PointerTons1__MwdTool
#define SOAP_TYPE_PointerTons1__MwdTool (792)
#endif

/* struct ns1__Jar * has binding name 'PointerTons1__Jar' for type 'ns1:Jar' */
#ifndef SOAP_TYPE_PointerTons1__Jar
#define SOAP_TYPE_PointerTons1__Jar (791)
#endif

/* struct ns1__Connection * has binding name 'PointerTons1__Connection' for type 'ns1:Connection' */
#ifndef SOAP_TYPE_PointerTons1__Connection
#define SOAP_TYPE_PointerTons1__Connection (790)
#endif

/* struct ns1__NameTag * has binding name 'PointerTons1__NameTag' for type 'ns1:NameTag' */
#ifndef SOAP_TYPE_PointerTons1__NameTag
#define SOAP_TYPE_PointerTons1__NameTag (789)
#endif

/* struct ns2__AnglePerLengthMeasure * has binding name 'PointerTons2__AnglePerLengthMeasure' for type 'ns2:AnglePerLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__AnglePerLengthMeasure
#define SOAP_TYPE_PointerTons2__AnglePerLengthMeasure (787)
#endif

/* enum ns1__MaterialType * has binding name 'PointerTons1__MaterialType' for type 'ns1:MaterialType' */
#ifndef SOAP_TYPE_PointerTons1__MaterialType
#define SOAP_TYPE_PointerTons1__MaterialType (785)
#endif

/* struct ns2__ForcePerLengthMeasure * has binding name 'PointerTons2__ForcePerLengthMeasure' for type 'ns2:ForcePerLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ForcePerLengthMeasure
#define SOAP_TYPE_PointerTons2__ForcePerLengthMeasure (784)
#endif

/* enum ns1__BoxPinConfig * has binding name 'PointerTons1__BoxPinConfig' for type 'ns1:BoxPinConfig' */
#ifndef SOAP_TYPE_PointerTons1__BoxPinConfig
#define SOAP_TYPE_PointerTons1__BoxPinConfig (782)
#endif

/* struct ns2__LengthPerLengthMeasure * has binding name 'PointerTons2__LengthPerLengthMeasure' for type 'ns2:LengthPerLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__LengthPerLengthMeasure
#define SOAP_TYPE_PointerTons2__LengthPerLengthMeasure (781)
#endif

/* struct ns2__MassPerLengthMeasure * has binding name 'PointerTons2__MassPerLengthMeasure' for type 'ns2:MassPerLengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MassPerLengthMeasure
#define SOAP_TYPE_PointerTons2__MassPerLengthMeasure (779)
#endif

/* struct ns1__TubularComponentOSDUIntegration * has binding name 'PointerTons1__TubularComponentOSDUIntegration' for type 'ns1:TubularComponentOSDUIntegration' */
#ifndef SOAP_TYPE_PointerTons1__TubularComponentOSDUIntegration
#define SOAP_TYPE_PointerTons1__TubularComponentOSDUIntegration (777)
#endif

/* struct ns2__MassMeasureExt * has binding name 'PointerTons2__MassMeasureExt' for type 'ns2:MassMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__MassMeasureExt
#define SOAP_TYPE_PointerTons2__MassMeasureExt (775)
#endif

/* enum ns1__BladeType * has binding name 'PointerTons1__BladeType' for type 'ns1:BladeType' */
#ifndef SOAP_TYPE_PointerTons1__BladeType
#define SOAP_TYPE_PointerTons1__BladeType (772)
#endif

/* enum ns1__BladeShapeType * has binding name 'PointerTons1__BladeShapeType' for type 'ns1:BladeShapeType' */
#ifndef SOAP_TYPE_PointerTons1__BladeShapeType
#define SOAP_TYPE_PointerTons1__BladeShapeType (771)
#endif

/* enum ns1__MeasurementType * has binding name 'PointerTons1__MeasurementType' for type 'ns1:MeasurementType' */
#ifndef SOAP_TYPE_PointerTons1__MeasurementType
#define SOAP_TYPE_PointerTons1__MeasurementType (769)
#endif

/* struct ns1__AbstractRotarySteerableTool * has binding name 'PointerTons1__AbstractRotarySteerableTool' for type 'ns1:AbstractRotarySteerableTool' */
#ifndef SOAP_TYPE_PointerTons1__AbstractRotarySteerableTool
#define SOAP_TYPE_PointerTons1__AbstractRotarySteerableTool (768)
#endif

/* enum ns1__NozzleType * has binding name 'PointerTons1__NozzleType' for type 'ns1:NozzleType' */
#ifndef SOAP_TYPE_PointerTons1__NozzleType
#define SOAP_TYPE_PointerTons1__NozzleType (765)
#endif

/* struct ns1__Sensor * has binding name 'PointerTons1__Sensor' for type 'ns1:Sensor' */
#ifndef SOAP_TYPE_PointerTons1__Sensor
#define SOAP_TYPE_PointerTons1__Sensor (762)
#endif

/* enum xsd__boolean * has binding name 'PointerToxsd__boolean' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_PointerToxsd__boolean
#define SOAP_TYPE_PointerToxsd__boolean (760)
#endif

/* enum ns1__BearingType * has binding name 'PointerTons1__BearingType' for type 'ns1:BearingType' */
#ifndef SOAP_TYPE_PointerTons1__BearingType
#define SOAP_TYPE_PointerTons1__BearingType (759)
#endif

/* enum ns1__JarAction * has binding name 'PointerTons1__JarAction' for type 'ns1:JarAction' */
#ifndef SOAP_TYPE_PointerTons1__JarAction
#define SOAP_TYPE_PointerTons1__JarAction (757)
#endif

/* enum ns1__JarType * has binding name 'PointerTons1__JarType' for type 'ns1:JarType' */
#ifndef SOAP_TYPE_PointerTons1__JarType
#define SOAP_TYPE_PointerTons1__JarType (756)
#endif

/* LONG64 * has binding name 'PointerToLONG64' for type 'xsd:long' */
#ifndef SOAP_TYPE_PointerToLONG64
#define SOAP_TYPE_PointerToLONG64 (754)
#endif

/* enum ns1__HoleOpenerType * has binding name 'PointerTons1__HoleOpenerType' for type 'ns1:HoleOpenerType' */
#ifndef SOAP_TYPE_PointerTons1__HoleOpenerType
#define SOAP_TYPE_PointerTons1__HoleOpenerType (753)
#endif

/* struct ns2__AreaMeasure * has binding name 'PointerTons2__AreaMeasure' for type 'ns2:AreaMeasure' */
#ifndef SOAP_TYPE_PointerTons2__AreaMeasure
#define SOAP_TYPE_PointerTons2__AreaMeasure (749)
#endif

/* enum ns1__ConnectionPosition * has binding name 'PointerTons1__ConnectionPosition' for type 'ns1:ConnectionPosition' */
#ifndef SOAP_TYPE_PointerTons1__ConnectionPosition
#define SOAP_TYPE_PointerTons1__ConnectionPosition (747)
#endif

/* struct ns2__Cost * has binding name 'PointerTons2__Cost' for type 'ns2:Cost' */
#ifndef SOAP_TYPE_PointerTons2__Cost
#define SOAP_TYPE_PointerTons2__Cost (745)
#endif

/* enum ns1__BitReasonPulled * has binding name 'PointerTons1__BitReasonPulled' for type 'ns1:BitReasonPulled' */
#ifndef SOAP_TYPE_PointerTons1__BitReasonPulled
#define SOAP_TYPE_PointerTons1__BitReasonPulled (743)
#endif

/* enum ns1__IadcBearingWearCode * has binding name 'PointerTons1__IadcBearingWearCode' for type 'ns1:IadcBearingWearCode' */
#ifndef SOAP_TYPE_PointerTons1__IadcBearingWearCode
#define SOAP_TYPE_PointerTons1__IadcBearingWearCode (742)
#endif

/* enum ns1__BitDullCode * has binding name 'PointerTons1__BitDullCode' for type 'ns1:BitDullCode' */
#ifndef SOAP_TYPE_PointerTons1__BitDullCode
#define SOAP_TYPE_PointerTons1__BitDullCode (741)
#endif

/* enum ns1__IadcIntegerCode * has binding name 'PointerTons1__IadcIntegerCode' for type 'ns1:IadcIntegerCode' */
#ifndef SOAP_TYPE_PointerTons1__IadcIntegerCode
#define SOAP_TYPE_PointerTons1__IadcIntegerCode (740)
#endif

/* enum ns1__BitType * has binding name 'PointerTons1__BitType' for type 'ns1:BitType' */
#ifndef SOAP_TYPE_PointerTons1__BitType
#define SOAP_TYPE_PointerTons1__BitType (739)
#endif

/* struct ns2__OSDUSpatialLocationIntegration * has binding name 'PointerTons2__OSDUSpatialLocationIntegration' for type 'ns2:OSDUSpatialLocationIntegration' */
#ifndef SOAP_TYPE_PointerTons2__OSDUSpatialLocationIntegration
#define SOAP_TYPE_PointerTons2__OSDUSpatialLocationIntegration (729)
#endif

/* struct ns2__AbstractPosition * has binding name 'PointerTons2__AbstractPosition' for type 'ns2:AbstractPosition' */
#ifndef SOAP_TYPE_PointerTons2__AbstractPosition
#define SOAP_TYPE_PointerTons2__AbstractPosition (727)
#endif

/* struct ns1__RheometerViscosity * has binding name 'PointerTons1__RheometerViscosity' for type 'ns1:RheometerViscosity' */
#ifndef SOAP_TYPE_PointerTons1__RheometerViscosity
#define SOAP_TYPE_PointerTons1__RheometerViscosity (724)
#endif

/* struct ns1__Rheometer * has binding name 'PointerTons1__Rheometer' for type 'ns1:Rheometer' */
#ifndef SOAP_TYPE_PointerTons1__Rheometer
#define SOAP_TYPE_PointerTons1__Rheometer (722)
#endif

/* struct ns2__ThermodynamicTemperatureMeasureExt * has binding name 'PointerTons2__ThermodynamicTemperatureMeasureExt' for type 'ns2:ThermodynamicTemperatureMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__ThermodynamicTemperatureMeasureExt
#define SOAP_TYPE_PointerTons2__ThermodynamicTemperatureMeasureExt (720)
#endif

/* struct ns2__VolumeMeasureExt * has binding name 'PointerTons2__VolumeMeasureExt' for type 'ns2:VolumeMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__VolumeMeasureExt
#define SOAP_TYPE_PointerTons2__VolumeMeasureExt (718)
#endif

/* struct ns2__MassMeasure * has binding name 'PointerTons2__MassMeasure' for type 'ns2:MassMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MassMeasure
#define SOAP_TYPE_PointerTons2__MassMeasure (716)
#endif

/* struct ns2__MassPerMassMeasure * has binding name 'PointerTons2__MassPerMassMeasure' for type 'ns2:MassPerMassMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MassPerMassMeasure
#define SOAP_TYPE_PointerTons2__MassPerMassMeasure (714)
#endif

/* struct ns2__ElectricPotentialDifferenceMeasure * has binding name 'PointerTons2__ElectricPotentialDifferenceMeasure' for type 'ns2:ElectricPotentialDifferenceMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ElectricPotentialDifferenceMeasure
#define SOAP_TYPE_PointerTons2__ElectricPotentialDifferenceMeasure (712)
#endif

/* double * has binding name 'PointerTodouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (710)
#endif

/* struct ns2__CationExchangeCapacityMeasureExt * has binding name 'PointerTons2__CationExchangeCapacityMeasureExt' for type 'ns2:CationExchangeCapacityMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__CationExchangeCapacityMeasureExt
#define SOAP_TYPE_PointerTons2__CationExchangeCapacityMeasureExt (709)
#endif

/* struct ns2__VolumePerVolumeMeasure * has binding name 'PointerTons2__VolumePerVolumeMeasure' for type 'ns2:VolumePerVolumeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumePerVolumeMeasure
#define SOAP_TYPE_PointerTons2__VolumePerVolumeMeasure (707)
#endif

/* struct ns2__PressureMeasureExt * has binding name 'PointerTons2__PressureMeasureExt' for type 'ns2:PressureMeasureExt' */
#ifndef SOAP_TYPE_PointerTons2__PressureMeasureExt
#define SOAP_TYPE_PointerTons2__PressureMeasureExt (705)
#endif

/* struct ns2__DynamicViscosityMeasure * has binding name 'PointerTons2__DynamicViscosityMeasure' for type 'ns2:DynamicViscosityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__DynamicViscosityMeasure
#define SOAP_TYPE_PointerTons2__DynamicViscosityMeasure (703)
#endif

/* struct ns2__VolumeMeasure * has binding name 'PointerTons2__VolumeMeasure' for type 'ns2:VolumeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumeMeasure
#define SOAP_TYPE_PointerTons2__VolumeMeasure (701)
#endif

/* struct ns2__AbstractVerticalDepth * has binding name 'PointerTons2__AbstractVerticalDepth' for type 'ns2:AbstractVerticalDepth' */
#ifndef SOAP_TYPE_PointerTons2__AbstractVerticalDepth
#define SOAP_TYPE_PointerTons2__AbstractVerticalDepth (699)
#endif

/* time_t * has binding name 'PointerTons2__TimeStamp' for type 'ns2:TimeStamp' */
#ifndef SOAP_TYPE_PointerTons2__TimeStamp
#define SOAP_TYPE_PointerTons2__TimeStamp (697)
#endif

/* struct ns2__DataObjectReference * has binding name 'PointerTons2__DataObjectReference' for type 'ns2:DataObjectReference' */
#ifndef SOAP_TYPE_PointerTons2__DataObjectReference
#define SOAP_TYPE_PointerTons2__DataObjectReference (695)
#endif

/* struct ns2__ExtensionNameValue * has binding name 'PointerTons2__ExtensionNameValue' for type 'ns2:ExtensionNameValue' */
#ifndef SOAP_TYPE_PointerTons2__ExtensionNameValue
#define SOAP_TYPE_PointerTons2__ExtensionNameValue (693)
#endif

/* enum ns1__MudSubClass * has binding name 'PointerTons1__MudSubClass' for type 'ns1:MudSubClass' */
#ifndef SOAP_TYPE_PointerTons1__MudSubClass
#define SOAP_TYPE_PointerTons1__MudSubClass (691)
#endif

/* enum ns1__MudClass * has binding name 'PointerTons1__MudClass' for type 'ns1:MudClass' */
#ifndef SOAP_TYPE_PointerTons1__MudClass
#define SOAP_TYPE_PointerTons1__MudClass (690)
#endif

/* struct ns2__ThermodynamicTemperatureMeasure * has binding name 'PointerTons2__ThermodynamicTemperatureMeasure' for type 'ns2:ThermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ThermodynamicTemperatureMeasure
#define SOAP_TYPE_PointerTons2__ThermodynamicTemperatureMeasure (689)
#endif

/* struct ns2__PlaneAngleMeasure * has binding name 'PointerTons2__PlaneAngleMeasure' for type 'ns2:PlaneAngleMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PlaneAngleMeasure
#define SOAP_TYPE_PointerTons2__PlaneAngleMeasure (687)
#endif

/* struct ns2__AngularVelocityMeasure * has binding name 'PointerTons2__AngularVelocityMeasure' for type 'ns2:AngularVelocityMeasure' */
#ifndef SOAP_TYPE_PointerTons2__AngularVelocityMeasure
#define SOAP_TYPE_PointerTons2__AngularVelocityMeasure (685)
#endif

/* struct ns2__LengthMeasure * has binding name 'PointerTons2__LengthMeasure' for type 'ns2:LengthMeasure' */
#ifndef SOAP_TYPE_PointerTons2__LengthMeasure
#define SOAP_TYPE_PointerTons2__LengthMeasure (683)
#endif

/* struct ns2__PressureMeasure * has binding name 'PointerTons2__PressureMeasure' for type 'ns2:PressureMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PressureMeasure
#define SOAP_TYPE_PointerTons2__PressureMeasure (681)
#endif

/* struct ns2__PowerMeasure * has binding name 'PointerTons2__PowerMeasure' for type 'ns2:PowerMeasure' */
#ifndef SOAP_TYPE_PointerTons2__PowerMeasure
#define SOAP_TYPE_PointerTons2__PowerMeasure (679)
#endif

/* struct ns2__LengthPerTimeMeasure * has binding name 'PointerTons2__LengthPerTimeMeasure' for type 'ns2:LengthPerTimeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__LengthPerTimeMeasure
#define SOAP_TYPE_PointerTons2__LengthPerTimeMeasure (677)
#endif

/* struct ns2__VolumePerTimeMeasure * has binding name 'PointerTons2__VolumePerTimeMeasure' for type 'ns2:VolumePerTimeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__VolumePerTimeMeasure
#define SOAP_TYPE_PointerTons2__VolumePerTimeMeasure (675)
#endif

/* struct ns2__MassPerVolumeMeasure * has binding name 'PointerTons2__MassPerVolumeMeasure' for type 'ns2:MassPerVolumeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MassPerVolumeMeasure
#define SOAP_TYPE_PointerTons2__MassPerVolumeMeasure (673)
#endif

/* struct ns2__MomentOfForceMeasure * has binding name 'PointerTons2__MomentOfForceMeasure' for type 'ns2:MomentOfForceMeasure' */
#ifndef SOAP_TYPE_PointerTons2__MomentOfForceMeasure
#define SOAP_TYPE_PointerTons2__MomentOfForceMeasure (671)
#endif

/* struct ns2__ForceMeasure * has binding name 'PointerTons2__ForceMeasure' for type 'ns2:ForceMeasure' */
#ifndef SOAP_TYPE_PointerTons2__ForceMeasure
#define SOAP_TYPE_PointerTons2__ForceMeasure (669)
#endif

/* struct ns2__MeasuredDepth * has binding name 'PointerTons2__MeasuredDepth' for type 'ns2:MeasuredDepth' */
#ifndef SOAP_TYPE_PointerTons2__MeasuredDepth
#define SOAP_TYPE_PointerTons2__MeasuredDepth (667)
#endif

/* struct ns2__TimeMeasure * has binding name 'PointerTons2__TimeMeasure' for type 'ns2:TimeMeasure' */
#ifndef SOAP_TYPE_PointerTons2__TimeMeasure
#define SOAP_TYPE_PointerTons2__TimeMeasure (665)
#endif

/* ns2__SectionNumber has binding name 'ns2__SectionNumber' for type 'ns2:SectionNumber' */
#ifndef SOAP_TYPE_ns2__SectionNumber
#define SOAP_TYPE_ns2__SectionNumber (284)
#endif

/* ns2__PublicLandSurveySystemQuarterTownship has binding name 'ns2__PublicLandSurveySystemQuarterTownship' for type 'ns2:PublicLandSurveySystemQuarterTownship' */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemQuarterTownship
#define SOAP_TYPE_ns2__PublicLandSurveySystemQuarterTownship (283)
#endif

/* ns2__PublicLandSurveySystemQuarterSection has binding name 'ns2__PublicLandSurveySystemQuarterSection' for type 'ns2:PublicLandSurveySystemQuarterSection' */
#ifndef SOAP_TYPE_ns2__PublicLandSurveySystemQuarterSection
#define SOAP_TYPE_ns2__PublicLandSurveySystemQuarterSection (282)
#endif

/* ns2__TypeEnum has binding name 'ns2__TypeEnum' for type 'ns2:TypeEnum' */
#ifndef SOAP_TYPE_ns2__TypeEnum
#define SOAP_TYPE_ns2__TypeEnum (279)
#endif

/* ns2__TimeZone has binding name 'ns2__TimeZone' for type 'ns2:TimeZone' */
#ifndef SOAP_TYPE_ns2__TimeZone
#define SOAP_TYPE_ns2__TimeZone (278)
#endif

/* ns2__QualifiedType has binding name 'ns2__QualifiedType' for type 'ns2:QualifiedType' */
#ifndef SOAP_TYPE_ns2__QualifiedType
#define SOAP_TYPE_ns2__QualifiedType (277)
#endif

/* ns2__UuidString has binding name 'ns2__UuidString' for type 'ns2:UuidString' */
#ifndef SOAP_TYPE_ns2__UuidString
#define SOAP_TYPE_ns2__UuidString (276)
#endif

/* ns2__UomEnum has binding name 'ns2__UomEnum' for type 'ns2:UomEnum' */
#ifndef SOAP_TYPE_ns2__UomEnum
#define SOAP_TYPE_ns2__UomEnum (275)
#endif

/* ns2__String64 has binding name 'ns2__String64' for type 'ns2:String64' */
#ifndef SOAP_TYPE_ns2__String64
#define SOAP_TYPE_ns2__String64 (274)
#endif

/* ns2__String256 has binding name 'ns2__String256' for type 'ns2:String256' */
#ifndef SOAP_TYPE_ns2__String256
#define SOAP_TYPE_ns2__String256 (273)
#endif

/* ns2__String2000 has binding name 'ns2__String2000' for type 'ns2:String2000' */
#ifndef SOAP_TYPE_ns2__String2000
#define SOAP_TYPE_ns2__String2000 (272)
#endif

/* ns2__EnumExtensionPattern has binding name 'ns2__EnumExtensionPattern' for type 'ns2:EnumExtensionPattern' */
#ifndef SOAP_TYPE_ns2__EnumExtensionPattern
#define SOAP_TYPE_ns2__EnumExtensionPattern (271)
#endif

/* ns2__AbstractString has binding name 'ns2__AbstractString' for type 'ns2:AbstractString' */
#ifndef SOAP_TYPE_ns2__AbstractString
#define SOAP_TYPE_ns2__AbstractString (265)
#endif

/* ns2__CollectionKindExt has binding name 'ns2__CollectionKindExt' for type 'ns2:CollectionKindExt' */
#ifndef SOAP_TYPE_ns2__CollectionKindExt
#define SOAP_TYPE_ns2__CollectionKindExt (257)
#endif

/* ns2__OrganizationKindExt has binding name 'ns2__OrganizationKindExt' for type 'ns2:OrganizationKindExt' */
#ifndef SOAP_TYPE_ns2__OrganizationKindExt
#define SOAP_TYPE_ns2__OrganizationKindExt (256)
#endif

/* ns2__FacilityLifecycleStateExt has binding name 'ns2__FacilityLifecycleStateExt' for type 'ns2:FacilityLifecycleStateExt' */
#ifndef SOAP_TYPE_ns2__FacilityLifecycleStateExt
#define SOAP_TYPE_ns2__FacilityLifecycleStateExt (255)
#endif

/* ns2__FacetExt has binding name 'ns2__FacetExt' for type 'ns2:FacetExt' */
#ifndef SOAP_TYPE_ns2__FacetExt
#define SOAP_TYPE_ns2__FacetExt (254)
#endif

/* ns2__VolumeUomExt has binding name 'ns2__VolumeUomExt' for type 'ns2:VolumeUomExt' */
#ifndef SOAP_TYPE_ns2__VolumeUomExt
#define SOAP_TYPE_ns2__VolumeUomExt (253)
#endif

/* ns2__VolumetricThermalExpansionUomExt has binding name 'ns2__VolumetricThermalExpansionUomExt' for type 'ns2:VolumetricThermalExpansionUomExt' */
#ifndef SOAP_TYPE_ns2__VolumetricThermalExpansionUomExt
#define SOAP_TYPE_ns2__VolumetricThermalExpansionUomExt (252)
#endif

/* ns2__VolumetricHeatTransferCoefficientUomExt has binding name 'ns2__VolumetricHeatTransferCoefficientUomExt' for type 'ns2:VolumetricHeatTransferCoefficientUomExt' */
#ifndef SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUomExt
#define SOAP_TYPE_ns2__VolumetricHeatTransferCoefficientUomExt (251)
#endif

/* ns2__VolumePerVolumeUomExt has binding name 'ns2__VolumePerVolumeUomExt' for type 'ns2:VolumePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUomExt
#define SOAP_TYPE_ns2__VolumePerVolumeUomExt (250)
#endif

/* ns2__VolumePerTimeUomExt has binding name 'ns2__VolumePerTimeUomExt' for type 'ns2:VolumePerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUomExt
#define SOAP_TYPE_ns2__VolumePerTimeUomExt (249)
#endif

/* ns2__VolumePerTimePerVolumeUomExt has binding name 'ns2__VolumePerTimePerVolumeUomExt' for type 'ns2:VolumePerTimePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerVolumeUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerVolumeUomExt (248)
#endif

/* ns2__VolumePerTimePerTimeUomExt has binding name 'ns2__VolumePerTimePerTimeUomExt' for type 'ns2:VolumePerTimePerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerTimeUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerTimeUomExt (247)
#endif

/* ns2__VolumePerTimePerPressureUomExt has binding name 'ns2__VolumePerTimePerPressureUomExt' for type 'ns2:VolumePerTimePerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureUomExt (246)
#endif

/* ns2__VolumePerTimePerPressureLengthUomExt has binding name 'ns2__VolumePerTimePerPressureLengthUomExt' for type 'ns2:VolumePerTimePerPressureLengthUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerPressureLengthUomExt (245)
#endif

/* ns2__VolumePerTimePerLengthUomExt has binding name 'ns2__VolumePerTimePerLengthUomExt' for type 'ns2:VolumePerTimePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerLengthUomExt (244)
#endif

/* ns2__VolumePerTimePerAreaUomExt has binding name 'ns2__VolumePerTimePerAreaUomExt' for type 'ns2:VolumePerTimePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimePerAreaUomExt
#define SOAP_TYPE_ns2__VolumePerTimePerAreaUomExt (243)
#endif

/* ns2__VolumePerTimeLengthUomExt has binding name 'ns2__VolumePerTimeLengthUomExt' for type 'ns2:VolumePerTimeLengthUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeLengthUomExt
#define SOAP_TYPE_ns2__VolumePerTimeLengthUomExt (242)
#endif

/* ns2__VolumePerRotationUomExt has binding name 'ns2__VolumePerRotationUomExt' for type 'ns2:VolumePerRotationUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerRotationUomExt
#define SOAP_TYPE_ns2__VolumePerRotationUomExt (241)
#endif

/* ns2__VolumePerPressureUomExt has binding name 'ns2__VolumePerPressureUomExt' for type 'ns2:VolumePerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerPressureUomExt
#define SOAP_TYPE_ns2__VolumePerPressureUomExt (240)
#endif

/* ns2__VolumePerMassUomExt has binding name 'ns2__VolumePerMassUomExt' for type 'ns2:VolumePerMassUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerMassUomExt
#define SOAP_TYPE_ns2__VolumePerMassUomExt (239)
#endif

/* ns2__VolumePerLengthUomExt has binding name 'ns2__VolumePerLengthUomExt' for type 'ns2:VolumePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerLengthUomExt
#define SOAP_TYPE_ns2__VolumePerLengthUomExt (238)
#endif

/* ns2__VolumePerAreaUomExt has binding name 'ns2__VolumePerAreaUomExt' for type 'ns2:VolumePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUomExt
#define SOAP_TYPE_ns2__VolumePerAreaUomExt (237)
#endif

/* ns2__VolumeFlowRatePerVolumeFlowRateUomExt has binding name 'ns2__VolumeFlowRatePerVolumeFlowRateUomExt' for type 'ns2:VolumeFlowRatePerVolumeFlowRateUomExt' */
#ifndef SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUomExt
#define SOAP_TYPE_ns2__VolumeFlowRatePerVolumeFlowRateUomExt (236)
#endif

/* ns2__VerticalCoordinateUomExt has binding name 'ns2__VerticalCoordinateUomExt' for type 'ns2:VerticalCoordinateUomExt' */
#ifndef SOAP_TYPE_ns2__VerticalCoordinateUomExt
#define SOAP_TYPE_ns2__VerticalCoordinateUomExt (235)
#endif

/* ns2__TimeUomExt has binding name 'ns2__TimeUomExt' for type 'ns2:TimeUomExt' */
#ifndef SOAP_TYPE_ns2__TimeUomExt
#define SOAP_TYPE_ns2__TimeUomExt (234)
#endif

/* ns2__TimePerVolumeUomExt has binding name 'ns2__TimePerVolumeUomExt' for type 'ns2:TimePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__TimePerVolumeUomExt
#define SOAP_TYPE_ns2__TimePerVolumeUomExt (233)
#endif

/* ns2__TimePerTimeUomExt has binding name 'ns2__TimePerTimeUomExt' for type 'ns2:TimePerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__TimePerTimeUomExt
#define SOAP_TYPE_ns2__TimePerTimeUomExt (232)
#endif

/* ns2__TimePerMassUomExt has binding name 'ns2__TimePerMassUomExt' for type 'ns2:TimePerMassUomExt' */
#ifndef SOAP_TYPE_ns2__TimePerMassUomExt
#define SOAP_TYPE_ns2__TimePerMassUomExt (231)
#endif

/* ns2__TimePerLengthUomExt has binding name 'ns2__TimePerLengthUomExt' for type 'ns2:TimePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__TimePerLengthUomExt
#define SOAP_TYPE_ns2__TimePerLengthUomExt (230)
#endif

/* ns2__ThermodynamicTemperatureUomExt has binding name 'ns2__ThermodynamicTemperatureUomExt' for type 'ns2:ThermodynamicTemperatureUomExt' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperatureUomExt
#define SOAP_TYPE_ns2__ThermodynamicTemperatureUomExt (229)
#endif

/* ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt has binding name 'ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt' for type 'ns2:ThermodynamicTemperaturePerThermodynamicTemperatureUomExt' */
#ifndef SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt
#define SOAP_TYPE_ns2__ThermodynamicTemperaturePerThermodynamicTemperatureUomExt (228)
#endif

/* ns2__ThermalResistanceUomExt has binding name 'ns2__ThermalResistanceUomExt' for type 'ns2:ThermalResistanceUomExt' */
#ifndef SOAP_TYPE_ns2__ThermalResistanceUomExt
#define SOAP_TYPE_ns2__ThermalResistanceUomExt (227)
#endif

/* ns2__ThermalInsulanceUomExt has binding name 'ns2__ThermalInsulanceUomExt' for type 'ns2:ThermalInsulanceUomExt' */
#ifndef SOAP_TYPE_ns2__ThermalInsulanceUomExt
#define SOAP_TYPE_ns2__ThermalInsulanceUomExt (226)
#endif

/* ns2__ThermalDiffusivityUomExt has binding name 'ns2__ThermalDiffusivityUomExt' for type 'ns2:ThermalDiffusivityUomExt' */
#ifndef SOAP_TYPE_ns2__ThermalDiffusivityUomExt
#define SOAP_TYPE_ns2__ThermalDiffusivityUomExt (225)
#endif

/* ns2__ThermalConductivityUomExt has binding name 'ns2__ThermalConductivityUomExt' for type 'ns2:ThermalConductivityUomExt' */
#ifndef SOAP_TYPE_ns2__ThermalConductivityUomExt
#define SOAP_TYPE_ns2__ThermalConductivityUomExt (224)
#endif

/* ns2__ThermalConductanceUomExt has binding name 'ns2__ThermalConductanceUomExt' for type 'ns2:ThermalConductanceUomExt' */
#ifndef SOAP_TYPE_ns2__ThermalConductanceUomExt
#define SOAP_TYPE_ns2__ThermalConductanceUomExt (223)
#endif

/* ns2__TemperatureIntervalUomExt has binding name 'ns2__TemperatureIntervalUomExt' for type 'ns2:TemperatureIntervalUomExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalUomExt (222)
#endif

/* ns2__TemperatureIntervalPerTimeUomExt has binding name 'ns2__TemperatureIntervalPerTimeUomExt' for type 'ns2:TemperatureIntervalPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerTimeUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerTimeUomExt (221)
#endif

/* ns2__TemperatureIntervalPerPressureUomExt has binding name 'ns2__TemperatureIntervalPerPressureUomExt' for type 'ns2:TemperatureIntervalPerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerPressureUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerPressureUomExt (220)
#endif

/* ns2__TemperatureIntervalPerLengthUomExt has binding name 'ns2__TemperatureIntervalPerLengthUomExt' for type 'ns2:TemperatureIntervalPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__TemperatureIntervalPerLengthUomExt
#define SOAP_TYPE_ns2__TemperatureIntervalPerLengthUomExt (219)
#endif

/* ns2__SpecificHeatCapacityUomExt has binding name 'ns2__SpecificHeatCapacityUomExt' for type 'ns2:SpecificHeatCapacityUomExt' */
#ifndef SOAP_TYPE_ns2__SpecificHeatCapacityUomExt
#define SOAP_TYPE_ns2__SpecificHeatCapacityUomExt (218)
#endif

/* ns2__SolidAngleUomExt has binding name 'ns2__SolidAngleUomExt' for type 'ns2:SolidAngleUomExt' */
#ifndef SOAP_TYPE_ns2__SolidAngleUomExt
#define SOAP_TYPE_ns2__SolidAngleUomExt (217)
#endif

/* ns2__SignalingEventPerTimeUomExt has binding name 'ns2__SignalingEventPerTimeUomExt' for type 'ns2:SignalingEventPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__SignalingEventPerTimeUomExt
#define SOAP_TYPE_ns2__SignalingEventPerTimeUomExt (216)
#endif

/* ns2__SecondMomentOfAreaUomExt has binding name 'ns2__SecondMomentOfAreaUomExt' for type 'ns2:SecondMomentOfAreaUomExt' */
#ifndef SOAP_TYPE_ns2__SecondMomentOfAreaUomExt
#define SOAP_TYPE_ns2__SecondMomentOfAreaUomExt (215)
#endif

/* ns2__ReluctanceUomExt has binding name 'ns2__ReluctanceUomExt' for type 'ns2:ReluctanceUomExt' */
#ifndef SOAP_TYPE_ns2__ReluctanceUomExt
#define SOAP_TYPE_ns2__ReluctanceUomExt (214)
#endif

/* ns2__ReciprocalVolumeUomExt has binding name 'ns2__ReciprocalVolumeUomExt' for type 'ns2:ReciprocalVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalVolumeUomExt
#define SOAP_TYPE_ns2__ReciprocalVolumeUomExt (213)
#endif

/* ns2__ReciprocalTimeUomExt has binding name 'ns2__ReciprocalTimeUomExt' for type 'ns2:ReciprocalTimeUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalTimeUomExt
#define SOAP_TYPE_ns2__ReciprocalTimeUomExt (212)
#endif

/* ns2__ReciprocalPressureUomExt has binding name 'ns2__ReciprocalPressureUomExt' for type 'ns2:ReciprocalPressureUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalPressureUomExt
#define SOAP_TYPE_ns2__ReciprocalPressureUomExt (211)
#endif

/* ns2__ReciprocalMassUomExt has binding name 'ns2__ReciprocalMassUomExt' for type 'ns2:ReciprocalMassUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassUomExt
#define SOAP_TYPE_ns2__ReciprocalMassUomExt (210)
#endif

/* ns2__ReciprocalMassTimeUomExt has binding name 'ns2__ReciprocalMassTimeUomExt' for type 'ns2:ReciprocalMassTimeUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalMassTimeUomExt
#define SOAP_TYPE_ns2__ReciprocalMassTimeUomExt (209)
#endif

/* ns2__ReciprocalLengthUomExt has binding name 'ns2__ReciprocalLengthUomExt' for type 'ns2:ReciprocalLengthUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalLengthUomExt
#define SOAP_TYPE_ns2__ReciprocalLengthUomExt (208)
#endif

/* ns2__ReciprocalForceUomExt has binding name 'ns2__ReciprocalForceUomExt' for type 'ns2:ReciprocalForceUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalForceUomExt
#define SOAP_TYPE_ns2__ReciprocalForceUomExt (207)
#endif

/* ns2__ReciprocalElectricPotentialDifferenceUomExt has binding name 'ns2__ReciprocalElectricPotentialDifferenceUomExt' for type 'ns2:ReciprocalElectricPotentialDifferenceUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUomExt
#define SOAP_TYPE_ns2__ReciprocalElectricPotentialDifferenceUomExt (206)
#endif

/* ns2__ReciprocalAreaUomExt has binding name 'ns2__ReciprocalAreaUomExt' for type 'ns2:ReciprocalAreaUomExt' */
#ifndef SOAP_TYPE_ns2__ReciprocalAreaUomExt
#define SOAP_TYPE_ns2__ReciprocalAreaUomExt (205)
#endif

/* ns2__RadiantIntensityUomExt has binding name 'ns2__RadiantIntensityUomExt' for type 'ns2:RadiantIntensityUomExt' */
#ifndef SOAP_TYPE_ns2__RadiantIntensityUomExt
#define SOAP_TYPE_ns2__RadiantIntensityUomExt (204)
#endif

/* ns2__RadianceUomExt has binding name 'ns2__RadianceUomExt' for type 'ns2:RadianceUomExt' */
#ifndef SOAP_TYPE_ns2__RadianceUomExt
#define SOAP_TYPE_ns2__RadianceUomExt (203)
#endif

/* ns2__QuantityOfLightUomExt has binding name 'ns2__QuantityOfLightUomExt' for type 'ns2:QuantityOfLightUomExt' */
#ifndef SOAP_TYPE_ns2__QuantityOfLightUomExt
#define SOAP_TYPE_ns2__QuantityOfLightUomExt (202)
#endif

/* ns2__PressureUomExt has binding name 'ns2__PressureUomExt' for type 'ns2:PressureUomExt' */
#ifndef SOAP_TYPE_ns2__PressureUomExt
#define SOAP_TYPE_ns2__PressureUomExt (201)
#endif

/* ns2__PressureTimePerVolumeUomExt has binding name 'ns2__PressureTimePerVolumeUomExt' for type 'ns2:PressureTimePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__PressureTimePerVolumeUomExt
#define SOAP_TYPE_ns2__PressureTimePerVolumeUomExt (200)
#endif

/* ns2__PressureSquaredUomExt has binding name 'ns2__PressureSquaredUomExt' for type 'ns2:PressureSquaredUomExt' */
#ifndef SOAP_TYPE_ns2__PressureSquaredUomExt
#define SOAP_TYPE_ns2__PressureSquaredUomExt (199)
#endif

/* ns2__PressureSquaredPerForceTimePerAreaUomExt has binding name 'ns2__PressureSquaredPerForceTimePerAreaUomExt' for type 'ns2:PressureSquaredPerForceTimePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUomExt
#define SOAP_TYPE_ns2__PressureSquaredPerForceTimePerAreaUomExt (198)
#endif

/* ns2__PressurePerVolumeUomExt has binding name 'ns2__PressurePerVolumeUomExt' for type 'ns2:PressurePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUomExt
#define SOAP_TYPE_ns2__PressurePerVolumeUomExt (197)
#endif

/* ns2__PressurePerTimeUomExt has binding name 'ns2__PressurePerTimeUomExt' for type 'ns2:PressurePerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__PressurePerTimeUomExt
#define SOAP_TYPE_ns2__PressurePerTimeUomExt (196)
#endif

/* ns2__PressurePerPressureUomExt has binding name 'ns2__PressurePerPressureUomExt' for type 'ns2:PressurePerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__PressurePerPressureUomExt
#define SOAP_TYPE_ns2__PressurePerPressureUomExt (195)
#endif

/* ns2__PressurePerFlowrateUomExt has binding name 'ns2__PressurePerFlowrateUomExt' for type 'ns2:PressurePerFlowrateUomExt' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateUomExt
#define SOAP_TYPE_ns2__PressurePerFlowrateUomExt (194)
#endif

/* ns2__PressurePerFlowrateSquaredUomExt has binding name 'ns2__PressurePerFlowrateSquaredUomExt' for type 'ns2:PressurePerFlowrateSquaredUomExt' */
#ifndef SOAP_TYPE_ns2__PressurePerFlowrateSquaredUomExt
#define SOAP_TYPE_ns2__PressurePerFlowrateSquaredUomExt (193)
#endif

/* ns2__PowerUomExt has binding name 'ns2__PowerUomExt' for type 'ns2:PowerUomExt' */
#ifndef SOAP_TYPE_ns2__PowerUomExt
#define SOAP_TYPE_ns2__PowerUomExt (192)
#endif

/* ns2__PowerPerVolumeUomExt has binding name 'ns2__PowerPerVolumeUomExt' for type 'ns2:PowerPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__PowerPerVolumeUomExt
#define SOAP_TYPE_ns2__PowerPerVolumeUomExt (191)
#endif

/* ns2__PowerPerPowerUomExt has binding name 'ns2__PowerPerPowerUomExt' for type 'ns2:PowerPerPowerUomExt' */
#ifndef SOAP_TYPE_ns2__PowerPerPowerUomExt
#define SOAP_TYPE_ns2__PowerPerPowerUomExt (190)
#endif

/* ns2__PowerPerAreaUomExt has binding name 'ns2__PowerPerAreaUomExt' for type 'ns2:PowerPerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__PowerPerAreaUomExt
#define SOAP_TYPE_ns2__PowerPerAreaUomExt (189)
#endif

/* ns2__PotentialDifferencePerPowerDropUomExt has binding name 'ns2__PotentialDifferencePerPowerDropUomExt' for type 'ns2:PotentialDifferencePerPowerDropUomExt' */
#ifndef SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUomExt
#define SOAP_TYPE_ns2__PotentialDifferencePerPowerDropUomExt (188)
#endif

/* ns2__PlaneAngleUomExt has binding name 'ns2__PlaneAngleUomExt' for type 'ns2:PlaneAngleUomExt' */
#ifndef SOAP_TYPE_ns2__PlaneAngleUomExt
#define SOAP_TYPE_ns2__PlaneAngleUomExt (187)
#endif

/* ns2__PermittivityUomExt has binding name 'ns2__PermittivityUomExt' for type 'ns2:PermittivityUomExt' */
#ifndef SOAP_TYPE_ns2__PermittivityUomExt
#define SOAP_TYPE_ns2__PermittivityUomExt (186)
#endif

/* ns2__PermeabilityRockUomExt has binding name 'ns2__PermeabilityRockUomExt' for type 'ns2:PermeabilityRockUomExt' */
#ifndef SOAP_TYPE_ns2__PermeabilityRockUomExt
#define SOAP_TYPE_ns2__PermeabilityRockUomExt (185)
#endif

/* ns2__PermeabilityLengthUomExt has binding name 'ns2__PermeabilityLengthUomExt' for type 'ns2:PermeabilityLengthUomExt' */
#ifndef SOAP_TYPE_ns2__PermeabilityLengthUomExt
#define SOAP_TYPE_ns2__PermeabilityLengthUomExt (184)
#endif

/* ns2__NormalizedPowerUomExt has binding name 'ns2__NormalizedPowerUomExt' for type 'ns2:NormalizedPowerUomExt' */
#ifndef SOAP_TYPE_ns2__NormalizedPowerUomExt
#define SOAP_TYPE_ns2__NormalizedPowerUomExt (183)
#endif

/* ns2__MomentumUomExt has binding name 'ns2__MomentumUomExt' for type 'ns2:MomentumUomExt' */
#ifndef SOAP_TYPE_ns2__MomentumUomExt
#define SOAP_TYPE_ns2__MomentumUomExt (182)
#endif

/* ns2__MomentOfInertiaUomExt has binding name 'ns2__MomentOfInertiaUomExt' for type 'ns2:MomentOfInertiaUomExt' */
#ifndef SOAP_TYPE_ns2__MomentOfInertiaUomExt
#define SOAP_TYPE_ns2__MomentOfInertiaUomExt (181)
#endif

/* ns2__MomentOfForceUomExt has binding name 'ns2__MomentOfForceUomExt' for type 'ns2:MomentOfForceUomExt' */
#ifndef SOAP_TYPE_ns2__MomentOfForceUomExt
#define SOAP_TYPE_ns2__MomentOfForceUomExt (180)
#endif

/* ns2__MolecularWeightUomExt has binding name 'ns2__MolecularWeightUomExt' for type 'ns2:MolecularWeightUomExt' */
#ifndef SOAP_TYPE_ns2__MolecularWeightUomExt
#define SOAP_TYPE_ns2__MolecularWeightUomExt (179)
#endif

/* ns2__MolarVolumeUomExt has binding name 'ns2__MolarVolumeUomExt' for type 'ns2:MolarVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__MolarVolumeUomExt
#define SOAP_TYPE_ns2__MolarVolumeUomExt (178)
#endif

/* ns2__MolarHeatCapacityUomExt has binding name 'ns2__MolarHeatCapacityUomExt' for type 'ns2:MolarHeatCapacityUomExt' */
#ifndef SOAP_TYPE_ns2__MolarHeatCapacityUomExt
#define SOAP_TYPE_ns2__MolarHeatCapacityUomExt (177)
#endif

/* ns2__MolarEnergyUomExt has binding name 'ns2__MolarEnergyUomExt' for type 'ns2:MolarEnergyUomExt' */
#ifndef SOAP_TYPE_ns2__MolarEnergyUomExt
#define SOAP_TYPE_ns2__MolarEnergyUomExt (176)
#endif

/* ns2__MobilityUomExt has binding name 'ns2__MobilityUomExt' for type 'ns2:MobilityUomExt' */
#ifndef SOAP_TYPE_ns2__MobilityUomExt
#define SOAP_TYPE_ns2__MobilityUomExt (175)
#endif

/* ns2__MassUomExt has binding name 'ns2__MassUomExt' for type 'ns2:MassUomExt' */
#ifndef SOAP_TYPE_ns2__MassUomExt
#define SOAP_TYPE_ns2__MassUomExt (174)
#endif

/* ns2__MassPerVolumeUomExt has binding name 'ns2__MassPerVolumeUomExt' for type 'ns2:MassPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUomExt
#define SOAP_TYPE_ns2__MassPerVolumeUomExt (173)
#endif

/* ns2__MassPerVolumePerTemperatureUomExt has binding name 'ns2__MassPerVolumePerTemperatureUomExt' for type 'ns2:MassPerVolumePerTemperatureUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerTemperatureUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerTemperatureUomExt (172)
#endif

/* ns2__MassPerVolumePerPressureUomExt has binding name 'ns2__MassPerVolumePerPressureUomExt' for type 'ns2:MassPerVolumePerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerPressureUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerPressureUomExt (171)
#endif

/* ns2__MassPerVolumePerLengthUomExt has binding name 'ns2__MassPerVolumePerLengthUomExt' for type 'ns2:MassPerVolumePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerVolumePerLengthUomExt
#define SOAP_TYPE_ns2__MassPerVolumePerLengthUomExt (170)
#endif

/* ns2__MassPerTimeUomExt has binding name 'ns2__MassPerTimeUomExt' for type 'ns2:MassPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimeUomExt
#define SOAP_TYPE_ns2__MassPerTimeUomExt (169)
#endif

/* ns2__MassPerTimePerLengthUomExt has binding name 'ns2__MassPerTimePerLengthUomExt' for type 'ns2:MassPerTimePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerLengthUomExt
#define SOAP_TYPE_ns2__MassPerTimePerLengthUomExt (168)
#endif

/* ns2__MassPerTimePerAreaUomExt has binding name 'ns2__MassPerTimePerAreaUomExt' for type 'ns2:MassPerTimePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerTimePerAreaUomExt
#define SOAP_TYPE_ns2__MassPerTimePerAreaUomExt (167)
#endif

/* ns2__MassPerMassUomExt has binding name 'ns2__MassPerMassUomExt' for type 'ns2:MassPerMassUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerMassUomExt
#define SOAP_TYPE_ns2__MassPerMassUomExt (166)
#endif

/* ns2__MassPerLengthUomExt has binding name 'ns2__MassPerLengthUomExt' for type 'ns2:MassPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerLengthUomExt
#define SOAP_TYPE_ns2__MassPerLengthUomExt (165)
#endif

/* ns2__MassPerEnergyUomExt has binding name 'ns2__MassPerEnergyUomExt' for type 'ns2:MassPerEnergyUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerEnergyUomExt
#define SOAP_TYPE_ns2__MassPerEnergyUomExt (164)
#endif

/* ns2__MassPerAreaUomExt has binding name 'ns2__MassPerAreaUomExt' for type 'ns2:MassPerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__MassPerAreaUomExt
#define SOAP_TYPE_ns2__MassPerAreaUomExt (163)
#endif

/* ns2__MassLengthUomExt has binding name 'ns2__MassLengthUomExt' for type 'ns2:MassLengthUomExt' */
#ifndef SOAP_TYPE_ns2__MassLengthUomExt
#define SOAP_TYPE_ns2__MassLengthUomExt (162)
#endif

/* ns2__MagneticVectorPotentialUomExt has binding name 'ns2__MagneticVectorPotentialUomExt' for type 'ns2:MagneticVectorPotentialUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticVectorPotentialUomExt
#define SOAP_TYPE_ns2__MagneticVectorPotentialUomExt (161)
#endif

/* ns2__MagneticPermeabilityUomExt has binding name 'ns2__MagneticPermeabilityUomExt' for type 'ns2:MagneticPermeabilityUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticPermeabilityUomExt
#define SOAP_TYPE_ns2__MagneticPermeabilityUomExt (160)
#endif

/* ns2__MagneticFluxUomExt has binding name 'ns2__MagneticFluxUomExt' for type 'ns2:MagneticFluxUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxUomExt
#define SOAP_TYPE_ns2__MagneticFluxUomExt (159)
#endif

/* ns2__MagneticFluxDensityUomExt has binding name 'ns2__MagneticFluxDensityUomExt' for type 'ns2:MagneticFluxDensityUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityUomExt
#define SOAP_TYPE_ns2__MagneticFluxDensityUomExt (158)
#endif

/* ns2__MagneticFluxDensityPerLengthUomExt has binding name 'ns2__MagneticFluxDensityPerLengthUomExt' for type 'ns2:MagneticFluxDensityPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUomExt
#define SOAP_TYPE_ns2__MagneticFluxDensityPerLengthUomExt (157)
#endif

/* ns2__MagneticFieldStrengthUomExt has binding name 'ns2__MagneticFieldStrengthUomExt' for type 'ns2:MagneticFieldStrengthUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticFieldStrengthUomExt
#define SOAP_TYPE_ns2__MagneticFieldStrengthUomExt (156)
#endif

/* ns2__MagneticDipoleMomentUomExt has binding name 'ns2__MagneticDipoleMomentUomExt' for type 'ns2:MagneticDipoleMomentUomExt' */
#ifndef SOAP_TYPE_ns2__MagneticDipoleMomentUomExt
#define SOAP_TYPE_ns2__MagneticDipoleMomentUomExt (155)
#endif

/* ns2__LuminousIntensityUomExt has binding name 'ns2__LuminousIntensityUomExt' for type 'ns2:LuminousIntensityUomExt' */
#ifndef SOAP_TYPE_ns2__LuminousIntensityUomExt
#define SOAP_TYPE_ns2__LuminousIntensityUomExt (154)
#endif

/* ns2__LuminousFluxUomExt has binding name 'ns2__LuminousFluxUomExt' for type 'ns2:LuminousFluxUomExt' */
#ifndef SOAP_TYPE_ns2__LuminousFluxUomExt
#define SOAP_TYPE_ns2__LuminousFluxUomExt (153)
#endif

/* ns2__LuminousEfficacyUomExt has binding name 'ns2__LuminousEfficacyUomExt' for type 'ns2:LuminousEfficacyUomExt' */
#ifndef SOAP_TYPE_ns2__LuminousEfficacyUomExt
#define SOAP_TYPE_ns2__LuminousEfficacyUomExt (152)
#endif

/* ns2__LuminanceUomExt has binding name 'ns2__LuminanceUomExt' for type 'ns2:LuminanceUomExt' */
#ifndef SOAP_TYPE_ns2__LuminanceUomExt
#define SOAP_TYPE_ns2__LuminanceUomExt (151)
#endif

/* ns2__LogarithmicPowerRatioUomExt has binding name 'ns2__LogarithmicPowerRatioUomExt' for type 'ns2:LogarithmicPowerRatioUomExt' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioUomExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioUomExt (150)
#endif

/* ns2__LogarithmicPowerRatioPerLengthUomExt has binding name 'ns2__LogarithmicPowerRatioPerLengthUomExt' for type 'ns2:LogarithmicPowerRatioPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUomExt
#define SOAP_TYPE_ns2__LogarithmicPowerRatioPerLengthUomExt (149)
#endif

/* ns2__LinearThermalExpansionUomExt has binding name 'ns2__LinearThermalExpansionUomExt' for type 'ns2:LinearThermalExpansionUomExt' */
#ifndef SOAP_TYPE_ns2__LinearThermalExpansionUomExt
#define SOAP_TYPE_ns2__LinearThermalExpansionUomExt (148)
#endif

/* ns2__LinearAccelerationUomExt has binding name 'ns2__LinearAccelerationUomExt' for type 'ns2:LinearAccelerationUomExt' */
#ifndef SOAP_TYPE_ns2__LinearAccelerationUomExt
#define SOAP_TYPE_ns2__LinearAccelerationUomExt (147)
#endif

/* ns2__LightExposureUomExt has binding name 'ns2__LightExposureUomExt' for type 'ns2:LightExposureUomExt' */
#ifndef SOAP_TYPE_ns2__LightExposureUomExt
#define SOAP_TYPE_ns2__LightExposureUomExt (146)
#endif

/* ns2__LengthUomExt has binding name 'ns2__LengthUomExt' for type 'ns2:LengthUomExt' */
#ifndef SOAP_TYPE_ns2__LengthUomExt
#define SOAP_TYPE_ns2__LengthUomExt (145)
#endif

/* ns2__LengthPerVolumeUomExt has binding name 'ns2__LengthPerVolumeUomExt' for type 'ns2:LengthPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerVolumeUomExt
#define SOAP_TYPE_ns2__LengthPerVolumeUomExt (144)
#endif

/* ns2__LengthPerTimeUomExt has binding name 'ns2__LengthPerTimeUomExt' for type 'ns2:LengthPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerTimeUomExt
#define SOAP_TYPE_ns2__LengthPerTimeUomExt (143)
#endif

/* ns2__LengthPerTemperatureUomExt has binding name 'ns2__LengthPerTemperatureUomExt' for type 'ns2:LengthPerTemperatureUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerTemperatureUomExt
#define SOAP_TYPE_ns2__LengthPerTemperatureUomExt (142)
#endif

/* ns2__LengthPerPressureUomExt has binding name 'ns2__LengthPerPressureUomExt' for type 'ns2:LengthPerPressureUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerPressureUomExt
#define SOAP_TYPE_ns2__LengthPerPressureUomExt (141)
#endif

/* ns2__LengthPerMassUomExt has binding name 'ns2__LengthPerMassUomExt' for type 'ns2:LengthPerMassUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerMassUomExt
#define SOAP_TYPE_ns2__LengthPerMassUomExt (140)
#endif

/* ns2__LengthPerLengthUomExt has binding name 'ns2__LengthPerLengthUomExt' for type 'ns2:LengthPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerLengthUomExt
#define SOAP_TYPE_ns2__LengthPerLengthUomExt (139)
#endif

/* ns2__LengthPerAngleUomExt has binding name 'ns2__LengthPerAngleUomExt' for type 'ns2:LengthPerAngleUomExt' */
#ifndef SOAP_TYPE_ns2__LengthPerAngleUomExt
#define SOAP_TYPE_ns2__LengthPerAngleUomExt (138)
#endif

/* ns2__LengthAndTimeUomExt has binding name 'ns2__LengthAndTimeUomExt' for type 'ns2:LengthAndTimeUomExt' */
#ifndef SOAP_TYPE_ns2__LengthAndTimeUomExt
#define SOAP_TYPE_ns2__LengthAndTimeUomExt (137)
#endif

/* ns2__KinematicViscosityUomExt has binding name 'ns2__KinematicViscosityUomExt' for type 'ns2:KinematicViscosityUomExt' */
#ifndef SOAP_TYPE_ns2__KinematicViscosityUomExt
#define SOAP_TYPE_ns2__KinematicViscosityUomExt (136)
#endif

/* ns2__IsothermalCompressibilityUomExt has binding name 'ns2__IsothermalCompressibilityUomExt' for type 'ns2:IsothermalCompressibilityUomExt' */
#ifndef SOAP_TYPE_ns2__IsothermalCompressibilityUomExt
#define SOAP_TYPE_ns2__IsothermalCompressibilityUomExt (135)
#endif

/* ns2__InductanceUomExt has binding name 'ns2__InductanceUomExt' for type 'ns2:InductanceUomExt' */
#ifndef SOAP_TYPE_ns2__InductanceUomExt
#define SOAP_TYPE_ns2__InductanceUomExt (134)
#endif

/* ns2__IlluminanceUomExt has binding name 'ns2__IlluminanceUomExt' for type 'ns2:IlluminanceUomExt' */
#ifndef SOAP_TYPE_ns2__IlluminanceUomExt
#define SOAP_TYPE_ns2__IlluminanceUomExt (133)
#endif

/* ns2__HeatTransferCoefficientUomExt has binding name 'ns2__HeatTransferCoefficientUomExt' for type 'ns2:HeatTransferCoefficientUomExt' */
#ifndef SOAP_TYPE_ns2__HeatTransferCoefficientUomExt
#define SOAP_TYPE_ns2__HeatTransferCoefficientUomExt (132)
#endif

/* ns2__HeatFlowRateUomExt has binding name 'ns2__HeatFlowRateUomExt' for type 'ns2:HeatFlowRateUomExt' */
#ifndef SOAP_TYPE_ns2__HeatFlowRateUomExt
#define SOAP_TYPE_ns2__HeatFlowRateUomExt (131)
#endif

/* ns2__HeatCapacityUomExt has binding name 'ns2__HeatCapacityUomExt' for type 'ns2:HeatCapacityUomExt' */
#ifndef SOAP_TYPE_ns2__HeatCapacityUomExt
#define SOAP_TYPE_ns2__HeatCapacityUomExt (130)
#endif

/* ns2__FrequencyUomExt has binding name 'ns2__FrequencyUomExt' for type 'ns2:FrequencyUomExt' */
#ifndef SOAP_TYPE_ns2__FrequencyUomExt
#define SOAP_TYPE_ns2__FrequencyUomExt (129)
#endif

/* ns2__FrequencyIntervalUomExt has binding name 'ns2__FrequencyIntervalUomExt' for type 'ns2:FrequencyIntervalUomExt' */
#ifndef SOAP_TYPE_ns2__FrequencyIntervalUomExt
#define SOAP_TYPE_ns2__FrequencyIntervalUomExt (128)
#endif

/* ns2__ForceUomExt has binding name 'ns2__ForceUomExt' for type 'ns2:ForceUomExt' */
#ifndef SOAP_TYPE_ns2__ForceUomExt
#define SOAP_TYPE_ns2__ForceUomExt (127)
#endif

/* ns2__ForcePerVolumeUomExt has binding name 'ns2__ForcePerVolumeUomExt' for type 'ns2:ForcePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__ForcePerVolumeUomExt
#define SOAP_TYPE_ns2__ForcePerVolumeUomExt (126)
#endif

/* ns2__ForcePerLengthUomExt has binding name 'ns2__ForcePerLengthUomExt' for type 'ns2:ForcePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__ForcePerLengthUomExt
#define SOAP_TYPE_ns2__ForcePerLengthUomExt (125)
#endif

/* ns2__ForcePerForceUomExt has binding name 'ns2__ForcePerForceUomExt' for type 'ns2:ForcePerForceUomExt' */
#ifndef SOAP_TYPE_ns2__ForcePerForceUomExt
#define SOAP_TYPE_ns2__ForcePerForceUomExt (124)
#endif

/* ns2__ForceLengthPerLengthUomExt has binding name 'ns2__ForceLengthPerLengthUomExt' for type 'ns2:ForceLengthPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__ForceLengthPerLengthUomExt
#define SOAP_TYPE_ns2__ForceLengthPerLengthUomExt (123)
#endif

/* ns2__ForceAreaUomExt has binding name 'ns2__ForceAreaUomExt' for type 'ns2:ForceAreaUomExt' */
#ifndef SOAP_TYPE_ns2__ForceAreaUomExt
#define SOAP_TYPE_ns2__ForceAreaUomExt (122)
#endif

/* ns2__EnergyUomExt has binding name 'ns2__EnergyUomExt' for type 'ns2:EnergyUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyUomExt
#define SOAP_TYPE_ns2__EnergyUomExt (121)
#endif

/* ns2__EnergyPerVolumeUomExt has binding name 'ns2__EnergyPerVolumeUomExt' for type 'ns2:EnergyPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerVolumeUomExt
#define SOAP_TYPE_ns2__EnergyPerVolumeUomExt (120)
#endif

/* ns2__EnergyPerMassUomExt has binding name 'ns2__EnergyPerMassUomExt' for type 'ns2:EnergyPerMassUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassUomExt
#define SOAP_TYPE_ns2__EnergyPerMassUomExt (119)
#endif

/* ns2__EnergyPerMassPerTimeUomExt has binding name 'ns2__EnergyPerMassPerTimeUomExt' for type 'ns2:EnergyPerMassPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerMassPerTimeUomExt
#define SOAP_TYPE_ns2__EnergyPerMassPerTimeUomExt (118)
#endif

/* ns2__EnergyPerLengthUomExt has binding name 'ns2__EnergyPerLengthUomExt' for type 'ns2:EnergyPerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerLengthUomExt
#define SOAP_TYPE_ns2__EnergyPerLengthUomExt (117)
#endif

/* ns2__EnergyPerAreaUomExt has binding name 'ns2__EnergyPerAreaUomExt' for type 'ns2:EnergyPerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyPerAreaUomExt
#define SOAP_TYPE_ns2__EnergyPerAreaUomExt (116)
#endif

/* ns2__EnergyLengthPerTimeAreaTemperatureUomExt has binding name 'ns2__EnergyLengthPerTimeAreaTemperatureUomExt' for type 'ns2:EnergyLengthPerTimeAreaTemperatureUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUomExt
#define SOAP_TYPE_ns2__EnergyLengthPerTimeAreaTemperatureUomExt (115)
#endif

/* ns2__EnergyLengthPerAreaUomExt has binding name 'ns2__EnergyLengthPerAreaUomExt' for type 'ns2:EnergyLengthPerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__EnergyLengthPerAreaUomExt
#define SOAP_TYPE_ns2__EnergyLengthPerAreaUomExt (114)
#endif

/* ns2__ElectromagneticMomentUomExt has binding name 'ns2__ElectromagneticMomentUomExt' for type 'ns2:ElectromagneticMomentUomExt' */
#ifndef SOAP_TYPE_ns2__ElectromagneticMomentUomExt
#define SOAP_TYPE_ns2__ElectromagneticMomentUomExt (113)
#endif

/* ns2__ElectricResistanceUomExt has binding name 'ns2__ElectricResistanceUomExt' for type 'ns2:ElectricResistanceUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricResistanceUomExt
#define SOAP_TYPE_ns2__ElectricResistanceUomExt (112)
#endif

/* ns2__ElectricResistancePerLengthUomExt has binding name 'ns2__ElectricResistancePerLengthUomExt' for type 'ns2:ElectricResistancePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricResistancePerLengthUomExt
#define SOAP_TYPE_ns2__ElectricResistancePerLengthUomExt (111)
#endif

/* ns2__ElectricPotentialDifferenceUomExt has binding name 'ns2__ElectricPotentialDifferenceUomExt' for type 'ns2:ElectricPotentialDifferenceUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricPotentialDifferenceUomExt
#define SOAP_TYPE_ns2__ElectricPotentialDifferenceUomExt (110)
#endif

/* ns2__ElectricFieldStrengthUomExt has binding name 'ns2__ElectricFieldStrengthUomExt' for type 'ns2:ElectricFieldStrengthUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricFieldStrengthUomExt
#define SOAP_TYPE_ns2__ElectricFieldStrengthUomExt (109)
#endif

/* ns2__ElectricCurrentUomExt has binding name 'ns2__ElectricCurrentUomExt' for type 'ns2:ElectricCurrentUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentUomExt
#define SOAP_TYPE_ns2__ElectricCurrentUomExt (108)
#endif

/* ns2__ElectricCurrentDensityUomExt has binding name 'ns2__ElectricCurrentDensityUomExt' for type 'ns2:ElectricCurrentDensityUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricCurrentDensityUomExt
#define SOAP_TYPE_ns2__ElectricCurrentDensityUomExt (107)
#endif

/* ns2__ElectricConductivityUomExt has binding name 'ns2__ElectricConductivityUomExt' for type 'ns2:ElectricConductivityUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricConductivityUomExt
#define SOAP_TYPE_ns2__ElectricConductivityUomExt (106)
#endif

/* ns2__ElectricConductanceUomExt has binding name 'ns2__ElectricConductanceUomExt' for type 'ns2:ElectricConductanceUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricConductanceUomExt
#define SOAP_TYPE_ns2__ElectricConductanceUomExt (105)
#endif

/* ns2__ElectricChargeUomExt has binding name 'ns2__ElectricChargeUomExt' for type 'ns2:ElectricChargeUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargeUomExt
#define SOAP_TYPE_ns2__ElectricChargeUomExt (104)
#endif

/* ns2__ElectricChargePerVolumeUomExt has binding name 'ns2__ElectricChargePerVolumeUomExt' for type 'ns2:ElectricChargePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerVolumeUomExt
#define SOAP_TYPE_ns2__ElectricChargePerVolumeUomExt (103)
#endif

/* ns2__ElectricChargePerMassUomExt has binding name 'ns2__ElectricChargePerMassUomExt' for type 'ns2:ElectricChargePerMassUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerMassUomExt
#define SOAP_TYPE_ns2__ElectricChargePerMassUomExt (102)
#endif

/* ns2__ElectricChargePerAreaUomExt has binding name 'ns2__ElectricChargePerAreaUomExt' for type 'ns2:ElectricChargePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricChargePerAreaUomExt
#define SOAP_TYPE_ns2__ElectricChargePerAreaUomExt (101)
#endif

/* ns2__ElectricalResistivityUomExt has binding name 'ns2__ElectricalResistivityUomExt' for type 'ns2:ElectricalResistivityUomExt' */
#ifndef SOAP_TYPE_ns2__ElectricalResistivityUomExt
#define SOAP_TYPE_ns2__ElectricalResistivityUomExt (100)
#endif

/* ns2__DynamicViscosityUomExt has binding name 'ns2__DynamicViscosityUomExt' for type 'ns2:DynamicViscosityUomExt' */
#ifndef SOAP_TYPE_ns2__DynamicViscosityUomExt
#define SOAP_TYPE_ns2__DynamicViscosityUomExt (99)
#endif

/* ns2__DoseEquivalentUomExt has binding name 'ns2__DoseEquivalentUomExt' for type 'ns2:DoseEquivalentUomExt' */
#ifndef SOAP_TYPE_ns2__DoseEquivalentUomExt
#define SOAP_TYPE_ns2__DoseEquivalentUomExt (98)
#endif

/* ns2__DipoleMomentUomExt has binding name 'ns2__DipoleMomentUomExt' for type 'ns2:DipoleMomentUomExt' */
#ifndef SOAP_TYPE_ns2__DipoleMomentUomExt
#define SOAP_TYPE_ns2__DipoleMomentUomExt (97)
#endif

/* ns2__DimensionlessUomExt has binding name 'ns2__DimensionlessUomExt' for type 'ns2:DimensionlessUomExt' */
#ifndef SOAP_TYPE_ns2__DimensionlessUomExt
#define SOAP_TYPE_ns2__DimensionlessUomExt (96)
#endif

/* ns2__DigitalStorageUomExt has binding name 'ns2__DigitalStorageUomExt' for type 'ns2:DigitalStorageUomExt' */
#ifndef SOAP_TYPE_ns2__DigitalStorageUomExt
#define SOAP_TYPE_ns2__DigitalStorageUomExt (95)
#endif

/* ns2__DiffusiveTimeOfFlightUomExt has binding name 'ns2__DiffusiveTimeOfFlightUomExt' for type 'ns2:DiffusiveTimeOfFlightUomExt' */
#ifndef SOAP_TYPE_ns2__DiffusiveTimeOfFlightUomExt
#define SOAP_TYPE_ns2__DiffusiveTimeOfFlightUomExt (94)
#endif

/* ns2__DiffusionCoefficientUomExt has binding name 'ns2__DiffusionCoefficientUomExt' for type 'ns2:DiffusionCoefficientUomExt' */
#ifndef SOAP_TYPE_ns2__DiffusionCoefficientUomExt
#define SOAP_TYPE_ns2__DiffusionCoefficientUomExt (93)
#endif

/* ns2__DataTransferSpeedUomExt has binding name 'ns2__DataTransferSpeedUomExt' for type 'ns2:DataTransferSpeedUomExt' */
#ifndef SOAP_TYPE_ns2__DataTransferSpeedUomExt
#define SOAP_TYPE_ns2__DataTransferSpeedUomExt (92)
#endif

/* ns2__CationExchangeCapacityUomExt has binding name 'ns2__CationExchangeCapacityUomExt' for type 'ns2:CationExchangeCapacityUomExt' */
#ifndef SOAP_TYPE_ns2__CationExchangeCapacityUomExt
#define SOAP_TYPE_ns2__CationExchangeCapacityUomExt (91)
#endif

/* ns2__CapacitanceUomExt has binding name 'ns2__CapacitanceUomExt' for type 'ns2:CapacitanceUomExt' */
#ifndef SOAP_TYPE_ns2__CapacitanceUomExt
#define SOAP_TYPE_ns2__CapacitanceUomExt (90)
#endif

/* ns2__AttenuationPerFrequencyIntervalUomExt has binding name 'ns2__AttenuationPerFrequencyIntervalUomExt' for type 'ns2:AttenuationPerFrequencyIntervalUomExt' */
#ifndef SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUomExt
#define SOAP_TYPE_ns2__AttenuationPerFrequencyIntervalUomExt (89)
#endif

/* ns2__AreaUomExt has binding name 'ns2__AreaUomExt' for type 'ns2:AreaUomExt' */
#ifndef SOAP_TYPE_ns2__AreaUomExt
#define SOAP_TYPE_ns2__AreaUomExt (88)
#endif

/* ns2__AreaPerVolumeUomExt has binding name 'ns2__AreaPerVolumeUomExt' for type 'ns2:AreaPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerVolumeUomExt
#define SOAP_TYPE_ns2__AreaPerVolumeUomExt (87)
#endif

/* ns2__AreaPerTimeUomExt has binding name 'ns2__AreaPerTimeUomExt' for type 'ns2:AreaPerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerTimeUomExt
#define SOAP_TYPE_ns2__AreaPerTimeUomExt (86)
#endif

/* ns2__AreaPerMassUomExt has binding name 'ns2__AreaPerMassUomExt' for type 'ns2:AreaPerMassUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerMassUomExt
#define SOAP_TYPE_ns2__AreaPerMassUomExt (85)
#endif

/* ns2__AreaPerCountUomExt has binding name 'ns2__AreaPerCountUomExt' for type 'ns2:AreaPerCountUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerCountUomExt
#define SOAP_TYPE_ns2__AreaPerCountUomExt (84)
#endif

/* ns2__AreaPerAreaUomExt has binding name 'ns2__AreaPerAreaUomExt' for type 'ns2:AreaPerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerAreaUomExt
#define SOAP_TYPE_ns2__AreaPerAreaUomExt (83)
#endif

/* ns2__AreaPerAmountOfSubstanceUomExt has binding name 'ns2__AreaPerAmountOfSubstanceUomExt' for type 'ns2:AreaPerAmountOfSubstanceUomExt' */
#ifndef SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AreaPerAmountOfSubstanceUomExt (82)
#endif

/* ns2__APINeutronUomExt has binding name 'ns2__APINeutronUomExt' for type 'ns2:APINeutronUomExt' */
#ifndef SOAP_TYPE_ns2__APINeutronUomExt
#define SOAP_TYPE_ns2__APINeutronUomExt (81)
#endif

/* ns2__APIGravityUomExt has binding name 'ns2__APIGravityUomExt' for type 'ns2:APIGravityUomExt' */
#ifndef SOAP_TYPE_ns2__APIGravityUomExt
#define SOAP_TYPE_ns2__APIGravityUomExt (80)
#endif

/* ns2__APIGammaRayUomExt has binding name 'ns2__APIGammaRayUomExt' for type 'ns2:APIGammaRayUomExt' */
#ifndef SOAP_TYPE_ns2__APIGammaRayUomExt
#define SOAP_TYPE_ns2__APIGammaRayUomExt (79)
#endif

/* ns2__AngularVelocityUomExt has binding name 'ns2__AngularVelocityUomExt' for type 'ns2:AngularVelocityUomExt' */
#ifndef SOAP_TYPE_ns2__AngularVelocityUomExt
#define SOAP_TYPE_ns2__AngularVelocityUomExt (78)
#endif

/* ns2__AngularAccelerationUomExt has binding name 'ns2__AngularAccelerationUomExt' for type 'ns2:AngularAccelerationUomExt' */
#ifndef SOAP_TYPE_ns2__AngularAccelerationUomExt
#define SOAP_TYPE_ns2__AngularAccelerationUomExt (77)
#endif

/* ns2__AnglePerVolumeUomExt has binding name 'ns2__AnglePerVolumeUomExt' for type 'ns2:AnglePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__AnglePerVolumeUomExt
#define SOAP_TYPE_ns2__AnglePerVolumeUomExt (76)
#endif

/* ns2__AnglePerLengthUomExt has binding name 'ns2__AnglePerLengthUomExt' for type 'ns2:AnglePerLengthUomExt' */
#ifndef SOAP_TYPE_ns2__AnglePerLengthUomExt
#define SOAP_TYPE_ns2__AnglePerLengthUomExt (75)
#endif

/* ns2__AmountOfSubstanceUomExt has binding name 'ns2__AmountOfSubstanceUomExt' for type 'ns2:AmountOfSubstanceUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AmountOfSubstanceUomExt (74)
#endif

/* ns2__AmountOfSubstancePerVolumeUomExt has binding name 'ns2__AmountOfSubstancePerVolumeUomExt' for type 'ns2:AmountOfSubstancePerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerVolumeUomExt (73)
#endif

/* ns2__AmountOfSubstancePerTimeUomExt has binding name 'ns2__AmountOfSubstancePerTimeUomExt' for type 'ns2:AmountOfSubstancePerTimeUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimeUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimeUomExt (72)
#endif

/* ns2__AmountOfSubstancePerTimePerAreaUomExt has binding name 'ns2__AmountOfSubstancePerTimePerAreaUomExt' for type 'ns2:AmountOfSubstancePerTimePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerTimePerAreaUomExt (71)
#endif

/* ns2__AmountOfSubstancePerAreaUomExt has binding name 'ns2__AmountOfSubstancePerAreaUomExt' for type 'ns2:AmountOfSubstancePerAreaUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAreaUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAreaUomExt (70)
#endif

/* ns2__AmountOfSubstancePerAmountOfSubstanceUomExt has binding name 'ns2__AmountOfSubstancePerAmountOfSubstanceUomExt' for type 'ns2:AmountOfSubstancePerAmountOfSubstanceUomExt' */
#ifndef SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUomExt
#define SOAP_TYPE_ns2__AmountOfSubstancePerAmountOfSubstanceUomExt (69)
#endif

/* ns2__ActivityOfRadioactivityUomExt has binding name 'ns2__ActivityOfRadioactivityUomExt' for type 'ns2:ActivityOfRadioactivityUomExt' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityUomExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityUomExt (68)
#endif

/* ns2__ActivityOfRadioactivityPerVolumeUomExt has binding name 'ns2__ActivityOfRadioactivityPerVolumeUomExt' for type 'ns2:ActivityOfRadioactivityPerVolumeUomExt' */
#ifndef SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUomExt
#define SOAP_TYPE_ns2__ActivityOfRadioactivityPerVolumeUomExt (67)
#endif

/* ns2__AbsorbedDoseUomExt has binding name 'ns2__AbsorbedDoseUomExt' for type 'ns2:AbsorbedDoseUomExt' */
#ifndef SOAP_TYPE_ns2__AbsorbedDoseUomExt
#define SOAP_TYPE_ns2__AbsorbedDoseUomExt (66)
#endif

/* ns2__VolumeUomWithLegacy has binding name 'ns2__VolumeUomWithLegacy' for type 'ns2:VolumeUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__VolumeUomWithLegacy
#define SOAP_TYPE_ns2__VolumeUomWithLegacy (65)
#endif

/* ns2__VolumePerVolumeUomWithLegacy has binding name 'ns2__VolumePerVolumeUomWithLegacy' for type 'ns2:VolumePerVolumeUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__VolumePerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerVolumeUomWithLegacy (64)
#endif

/* ns2__VolumePerTimeUomWithLegacy has binding name 'ns2__VolumePerTimeUomWithLegacy' for type 'ns2:VolumePerTimeUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__VolumePerTimeUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerTimeUomWithLegacy (63)
#endif

/* ns2__VolumePerAreaUomWithLegacy has binding name 'ns2__VolumePerAreaUomWithLegacy' for type 'ns2:VolumePerAreaUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__VolumePerAreaUomWithLegacy
#define SOAP_TYPE_ns2__VolumePerAreaUomWithLegacy (62)
#endif

/* ns2__PressureUomWithLegacy has binding name 'ns2__PressureUomWithLegacy' for type 'ns2:PressureUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__PressureUomWithLegacy
#define SOAP_TYPE_ns2__PressureUomWithLegacy (61)
#endif

/* ns2__PressurePerVolumeUomWithLegacy has binding name 'ns2__PressurePerVolumeUomWithLegacy' for type 'ns2:PressurePerVolumeUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__PressurePerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__PressurePerVolumeUomWithLegacy (60)
#endif

/* ns2__MassPerVolumeUomWithLegacy has binding name 'ns2__MassPerVolumeUomWithLegacy' for type 'ns2:MassPerVolumeUomWithLegacy' */
#ifndef SOAP_TYPE_ns2__MassPerVolumeUomWithLegacy
#define SOAP_TYPE_ns2__MassPerVolumeUomWithLegacy (59)
#endif

/* ns2__UnitOfMeasureExt has binding name 'ns2__UnitOfMeasureExt' for type 'ns2:UnitOfMeasureExt' */
#ifndef SOAP_TYPE_ns2__UnitOfMeasureExt
#define SOAP_TYPE_ns2__UnitOfMeasureExt (58)
#endif

/* ns2__ReferenceConditionExt has binding name 'ns2__ReferenceConditionExt' for type 'ns2:ReferenceConditionExt' */
#ifndef SOAP_TYPE_ns2__ReferenceConditionExt
#define SOAP_TYPE_ns2__ReferenceConditionExt (57)
#endif

/* ns2__QuantityClassKindExt has binding name 'ns2__QuantityClassKindExt' for type 'ns2:QuantityClassKindExt' */
#ifndef SOAP_TYPE_ns2__QuantityClassKindExt
#define SOAP_TYPE_ns2__QuantityClassKindExt (56)
#endif

/* ns2__MatrixCementKindExt has binding name 'ns2__MatrixCementKindExt' for type 'ns2:MatrixCementKindExt' */
#ifndef SOAP_TYPE_ns2__MatrixCementKindExt
#define SOAP_TYPE_ns2__MatrixCementKindExt (55)
#endif

/* ns2__LithologyQualifierKindExt has binding name 'ns2__LithologyQualifierKindExt' for type 'ns2:LithologyQualifierKindExt' */
#ifndef SOAP_TYPE_ns2__LithologyQualifierKindExt
#define SOAP_TYPE_ns2__LithologyQualifierKindExt (54)
#endif

/* ns2__LithologyKindExt has binding name 'ns2__LithologyKindExt' for type 'ns2:LithologyKindExt' */
#ifndef SOAP_TYPE_ns2__LithologyKindExt
#define SOAP_TYPE_ns2__LithologyKindExt (53)
#endif

/* ns2__IntegerXmlArrayList has binding name 'ns2__IntegerXmlArrayList' for type 'ns2:IntegerXmlArrayList' */
#ifndef SOAP_TYPE_ns2__IntegerXmlArrayList
#define SOAP_TYPE_ns2__IntegerXmlArrayList (52)
#endif

/* ns2__FloatingPointXmlArrayList has binding name 'ns2__FloatingPointXmlArrayList' for type 'ns2:FloatingPointXmlArrayList' */
#ifndef SOAP_TYPE_ns2__FloatingPointXmlArrayList
#define SOAP_TYPE_ns2__FloatingPointXmlArrayList (51)
#endif

/* ns2__BooleanXmlArrayList has binding name 'ns2__BooleanXmlArrayList' for type 'ns2:BooleanXmlArrayList' */
#ifndef SOAP_TYPE_ns2__BooleanXmlArrayList
#define SOAP_TYPE_ns2__BooleanXmlArrayList (50)
#endif

/* ns2__ReferencePointKindExt has binding name 'ns2__ReferencePointKindExt' for type 'ns2:ReferencePointKindExt' */
#ifndef SOAP_TYPE_ns2__ReferencePointKindExt
#define SOAP_TYPE_ns2__ReferencePointKindExt (49)
#endif

/* ns2__ExistenceKindExt has binding name 'ns2__ExistenceKindExt' for type 'ns2:ExistenceKindExt' */
#ifndef SOAP_TYPE_ns2__ExistenceKindExt
#define SOAP_TYPE_ns2__ExistenceKindExt (48)
#endif

/* ns2__AliasIdentifierKindExt has binding name 'ns2__AliasIdentifierKindExt' for type 'ns2:AliasIdentifierKindExt' */
#ifndef SOAP_TYPE_ns2__AliasIdentifierKindExt
#define SOAP_TYPE_ns2__AliasIdentifierKindExt (47)
#endif

/* ns1__WellborePointOfInterestExt has binding name 'ns1__WellborePointOfInterestExt' for type 'ns1:WellborePointOfInterestExt' */
#ifndef SOAP_TYPE_ns1__WellborePointOfInterestExt
#define SOAP_TYPE_ns1__WellborePointOfInterestExt (46)
#endif

/* ns1__WellboreMarkerKindExt has binding name 'ns1__WellboreMarkerKindExt' for type 'ns1:WellboreMarkerKindExt' */
#ifndef SOAP_TYPE_ns1__WellboreMarkerKindExt
#define SOAP_TYPE_ns1__WellboreMarkerKindExt (45)
#endif

/* ns1__StratigraphyKindQualifierExt has binding name 'ns1__StratigraphyKindQualifierExt' for type 'ns1:StratigraphyKindQualifierExt' */
#ifndef SOAP_TYPE_ns1__StratigraphyKindQualifierExt
#define SOAP_TYPE_ns1__StratigraphyKindQualifierExt (44)
#endif

/* ns1__StratigraphyKindExt has binding name 'ns1__StratigraphyKindExt' for type 'ns1:StratigraphyKindExt' */
#ifndef SOAP_TYPE_ns1__StratigraphyKindExt
#define SOAP_TYPE_ns1__StratigraphyKindExt (43)
#endif

/* ns1__MarkerQualifierExt has binding name 'ns1__MarkerQualifierExt' for type 'ns1:MarkerQualifierExt' */
#ifndef SOAP_TYPE_ns1__MarkerQualifierExt
#define SOAP_TYPE_ns1__MarkerQualifierExt (42)
#endif

/* ns1__PPFGUncertaintyClassExt has binding name 'ns1__PPFGUncertaintyClassExt' for type 'ns1:PPFGUncertaintyClassExt' */
#ifndef SOAP_TYPE_ns1__PPFGUncertaintyClassExt
#define SOAP_TYPE_ns1__PPFGUncertaintyClassExt (41)
#endif

/* ns1__PPFGTransformModelTypeExt has binding name 'ns1__PPFGTransformModelTypeExt' for type 'ns1:PPFGTransformModelTypeExt' */
#ifndef SOAP_TYPE_ns1__PPFGTransformModelTypeExt
#define SOAP_TYPE_ns1__PPFGTransformModelTypeExt (40)
#endif

/* ns1__PPFGTectonicSettingExt has binding name 'ns1__PPFGTectonicSettingExt' for type 'ns1:PPFGTectonicSettingExt' */
#ifndef SOAP_TYPE_ns1__PPFGTectonicSettingExt
#define SOAP_TYPE_ns1__PPFGTectonicSettingExt (39)
#endif

/* ns1__PPFGModeledLithologyExt has binding name 'ns1__PPFGModeledLithologyExt' for type 'ns1:PPFGModeledLithologyExt' */
#ifndef SOAP_TYPE_ns1__PPFGModeledLithologyExt
#define SOAP_TYPE_ns1__PPFGModeledLithologyExt (38)
#endif

/* ns1__PPFGMainFamilyExt has binding name 'ns1__PPFGMainFamilyExt' for type 'ns1:PPFGMainFamilyExt' */
#ifndef SOAP_TYPE_ns1__PPFGMainFamilyExt
#define SOAP_TYPE_ns1__PPFGMainFamilyExt (37)
#endif

/* ns1__PPFGFamilyMnemonicExt has binding name 'ns1__PPFGFamilyMnemonicExt' for type 'ns1:PPFGFamilyMnemonicExt' */
#ifndef SOAP_TYPE_ns1__PPFGFamilyMnemonicExt
#define SOAP_TYPE_ns1__PPFGFamilyMnemonicExt (36)
#endif

/* ns1__PPFGFamilyExt has binding name 'ns1__PPFGFamilyExt' for type 'ns1:PPFGFamilyExt' */
#ifndef SOAP_TYPE_ns1__PPFGFamilyExt
#define SOAP_TYPE_ns1__PPFGFamilyExt (35)
#endif

/* ns1__PPFGDataProcessingExt has binding name 'ns1__PPFGDataProcessingExt' for type 'ns1:PPFGDataProcessingExt' */
#ifndef SOAP_TYPE_ns1__PPFGDataProcessingExt
#define SOAP_TYPE_ns1__PPFGDataProcessingExt (34)
#endif

/* ns1__PPFGDataDerivationExt has binding name 'ns1__PPFGDataDerivationExt' for type 'ns1:PPFGDataDerivationExt' */
#ifndef SOAP_TYPE_ns1__PPFGDataDerivationExt
#define SOAP_TYPE_ns1__PPFGDataDerivationExt (33)
#endif

/* ns1__ToolSubKindExt has binding name 'ns1__ToolSubKindExt' for type 'ns1:ToolSubKindExt' */
#ifndef SOAP_TYPE_ns1__ToolSubKindExt
#define SOAP_TYPE_ns1__ToolSubKindExt (32)
#endif

/* ns1__OperatingConditionExt has binding name 'ns1__OperatingConditionExt' for type 'ns1:OperatingConditionExt' */
#ifndef SOAP_TYPE_ns1__OperatingConditionExt
#define SOAP_TYPE_ns1__OperatingConditionExt (31)
#endif

/* ns1__CorrectionConsideredExt has binding name 'ns1__CorrectionConsideredExt' for type 'ns1:CorrectionConsideredExt' */
#ifndef SOAP_TYPE_ns1__CorrectionConsideredExt
#define SOAP_TYPE_ns1__CorrectionConsideredExt (30)
#endif

/* ns1__TargetScopeExt has binding name 'ns1__TargetScopeExt' for type 'ns1:TargetScopeExt' */
#ifndef SOAP_TYPE_ns1__TargetScopeExt
#define SOAP_TYPE_ns1__TargetScopeExt (29)
#endif

/* ns1__TargetCategoryExt has binding name 'ns1__TargetCategoryExt' for type 'ns1:TargetCategoryExt' */
#ifndef SOAP_TYPE_ns1__TargetCategoryExt
#define SOAP_TYPE_ns1__TargetCategoryExt (28)
#endif

/* ns1__TypeSurveyToolExt has binding name 'ns1__TypeSurveyToolExt' for type 'ns1:TypeSurveyToolExt' */
#ifndef SOAP_TYPE_ns1__TypeSurveyToolExt
#define SOAP_TYPE_ns1__TypeSurveyToolExt (27)
#endif

/* ns1__TrajStnCalcAlgorithmExt has binding name 'ns1__TrajStnCalcAlgorithmExt' for type 'ns1:TrajStnCalcAlgorithmExt' */
#ifndef SOAP_TYPE_ns1__TrajStnCalcAlgorithmExt
#define SOAP_TYPE_ns1__TrajStnCalcAlgorithmExt (26)
#endif

/* ns1__TrajStationTypeExt has binding name 'ns1__TrajStationTypeExt' for type 'ns1:TrajStationTypeExt' */
#ifndef SOAP_TYPE_ns1__TrajStationTypeExt
#define SOAP_TYPE_ns1__TrajStationTypeExt (25)
#endif

/* ns1__EquipmentTypeExt has binding name 'ns1__EquipmentTypeExt' for type 'ns1:EquipmentTypeExt' */
#ifndef SOAP_TYPE_ns1__EquipmentTypeExt
#define SOAP_TYPE_ns1__EquipmentTypeExt (24)
#endif

/* ns1__LoggingToolClassExt has binding name 'ns1__LoggingToolClassExt' for type 'ns1:LoggingToolClassExt' */
#ifndef SOAP_TYPE_ns1__LoggingToolClassExt
#define SOAP_TYPE_ns1__LoggingToolClassExt (23)
#endif

/* ns1__TubularComponentTypeExt has binding name 'ns1__TubularComponentTypeExt' for type 'ns1:TubularComponentTypeExt' */
#ifndef SOAP_TYPE_ns1__TubularComponentTypeExt
#define SOAP_TYPE_ns1__TubularComponentTypeExt (22)
#endif

/* ns1__TubularAssemblyExt has binding name 'ns1__TubularAssemblyExt' for type 'ns1:TubularAssemblyExt' */
#ifndef SOAP_TYPE_ns1__TubularAssemblyExt
#define SOAP_TYPE_ns1__TubularAssemblyExt (21)
#endif

/* ns1__WellInterestExt has binding name 'ns1__WellInterestExt' for type 'ns1:WellInterestExt' */
#ifndef SOAP_TYPE_ns1__WellInterestExt
#define SOAP_TYPE_ns1__WellInterestExt (20)
#endif

/* ns1__OperatingEnvironmentExt has binding name 'ns1__OperatingEnvironmentExt' for type 'ns1:OperatingEnvironmentExt' */
#ifndef SOAP_TYPE_ns1__OperatingEnvironmentExt
#define SOAP_TYPE_ns1__OperatingEnvironmentExt (19)
#endif

/* ns1__MudClassExt has binding name 'ns1__MudClassExt' for type 'ns1:MudClassExt' */
#ifndef SOAP_TYPE_ns1__MudClassExt
#define SOAP_TYPE_ns1__MudClassExt (18)
#endif

/* ns1__BrineClassExt has binding name 'ns1__BrineClassExt' for type 'ns1:BrineClassExt' */
#ifndef SOAP_TYPE_ns1__BrineClassExt
#define SOAP_TYPE_ns1__BrineClassExt (17)
#endif

/* ns1__MudSubClassExt has binding name 'ns1__MudSubClassExt' for type 'ns1:MudSubClassExt' */
#ifndef SOAP_TYPE_ns1__MudSubClassExt
#define SOAP_TYPE_ns1__MudSubClassExt (16)
#endif

/* xsd__nonNegativeInteger has binding name 'xsd__nonNegativeInteger' for type 'xsd:nonNegativeInteger' */
#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (15)
#endif

/* xsd__gYear has binding name 'xsd__gYear' for type 'xsd:gYear' */
#ifndef SOAP_TYPE_xsd__gYear
#define SOAP_TYPE_xsd__gYear (14)
#endif

/* xsd__date has binding name 'xsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (13)
#endif

/* xsd__anyURI has binding name 'xsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (12)
#endif

/* unsigned char * has binding name 'PointerTounsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns21__readWitsmlObject' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns21__readWitsmlObject(struct soap*, struct ns21__witsmlObject *WitsmlObject, char **result);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns21__readWitsmlObject(struct soap*);

#endif

/* End of soapStub.h */
